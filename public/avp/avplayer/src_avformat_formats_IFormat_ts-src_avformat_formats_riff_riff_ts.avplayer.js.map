{"version":3,"file":"src_avformat_formats_IFormat_ts-src_avformat_formats_riff_riff_ts.avplayer.js","mappings":"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MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CAAC,sCAA6B;IAC9C,CAAC,6DAAO,CAAC,MAAM,CAAC,CA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","sources":["webpack://AVPlayer/./src/avformat/formats/IFormat.ts","webpack://AVPlayer/./src/avformat/formats/riff/riff.ts","webpack://AVPlayer/./src/avformat/function/mktagle.ts"],"sourcesContent":["/*\r\n * libmedia abstract format decoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Stream from 'avutil/AVStream'\r\nimport { AVIFormatContext } from '../AVFormatContext'\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport { AVFormat } from 'avutil/avformat'\r\n\r\nexport default abstract class IFormat {\r\n\r\n  public type: AVFormat = AVFormat.UNKNOWN\r\n\r\n  public onStreamAdd: (stream: Stream) => void\r\n\r\n  public abstract init(formatContext: AVIFormatContext): void\r\n\r\n  public async destroy(formatContext: AVIFormatContext): Promise<void> {}\r\n\r\n  public abstract getAnalyzeStreamsCount(): number\r\n  public abstract readHeader(formatContext: AVIFormatContext): Promise<number>\r\n  public abstract readAVPacket(formatContext: AVIFormatContext, avpacket: pointer<AVPacket>): Promise<number>\r\n\r\n  /**\r\n   * seek\r\n   * \r\n   * @param context \r\n   * @param stream \r\n   * @param timestamp 毫秒时间戳\r\n   * @param flags \r\n   * \r\n   * @returns 返回 seek 之前的下一个 avpacket pos（若不知道返回 0n 方便之后可以再 seek 回来）返回负数表示 seek 失败\r\n   */\r\n  public abstract seek(\r\n    formatContext: AVIFormatContext,\r\n    stream: Stream,\r\n    timestamp: int64,\r\n    flags: int32\r\n  ): Promise<int64>\r\n}\r\n","import { AVStreamMetadataKey } from 'avutil/AVStream'\r\nimport mktagle from '../../function/mktagle'\r\nimport { AVCodecID } from 'avutil/codec'\r\n\r\nexport const WavTag2CodecId = {\r\n  0x0001: AVCodecID.AV_CODEC_ID_PCM_U8,\r\n  0x0002: AVCodecID.AV_CODEC_ID_ADPCM_MS,\r\n  0x0003: AVCodecID.AV_CODEC_ID_PCM_F32LE,\r\n  0x0006: AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n  0x0007: AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n  0x000A: AVCodecID.AV_CODEC_ID_WMAVOICE,\r\n  0x0010: AVCodecID.AV_CODEC_ID_ADPCM_IMA_OKI,\r\n  0x0011: AVCodecID.AV_CODEC_ID_ADPCM_IMA_WAV,\r\n  0x0017: AVCodecID.AV_CODEC_ID_ADPCM_IMA_OKI,\r\n  0x0020: AVCodecID.AV_CODEC_ID_ADPCM_YAMAHA,\r\n  0x0022: AVCodecID.AV_CODEC_ID_TRUESPEECH,\r\n  0x0031: AVCodecID.AV_CODEC_ID_GSM_MS,\r\n  0x0032: AVCodecID.AV_CODEC_ID_GSM_MS,\r\n  0x0038: AVCodecID.AV_CODEC_ID_AMR_NB,\r\n  0x0042: AVCodecID.AV_CODEC_ID_G723_1,\r\n  0x0045: AVCodecID.AV_CODEC_ID_ADPCM_G726,\r\n  0x0014: AVCodecID.AV_CODEC_ID_ADPCM_G726,\r\n  0x0040: AVCodecID.AV_CODEC_ID_ADPCM_G726,\r\n  0x0050: AVCodecID.AV_CODEC_ID_MP2,\r\n  0x0055: AVCodecID.AV_CODEC_ID_MP3,\r\n  0x0057: AVCodecID.AV_CODEC_ID_AMR_NB,\r\n  0x0058: AVCodecID.AV_CODEC_ID_AMR_WB,\r\n  0x0061: AVCodecID.AV_CODEC_ID_ADPCM_IMA_DK4,\r\n  0x0062: AVCodecID.AV_CODEC_ID_ADPCM_IMA_DK3,\r\n  0x0064: AVCodecID.AV_CODEC_ID_ADPCM_G726,\r\n  0x0069: AVCodecID.AV_CODEC_ID_ADPCM_IMA_WAV,\r\n  0x0075: AVCodecID.AV_CODEC_ID_METASOUND,\r\n  0x0083: AVCodecID.AV_CODEC_ID_G729,\r\n  0x00ff: AVCodecID.AV_CODEC_ID_AAC,\r\n  0x0111: AVCodecID.AV_CODEC_ID_G723_1,\r\n  0x0130: AVCodecID.AV_CODEC_ID_SIPR,\r\n  0x0135: AVCodecID.AV_CODEC_ID_ACELP_KELVIN,\r\n  0x0160: AVCodecID.AV_CODEC_ID_WMAV1,\r\n  0x0161: AVCodecID.AV_CODEC_ID_WMAV2,\r\n  0x0162: AVCodecID.AV_CODEC_ID_WMAPRO,\r\n  0x0163: AVCodecID.AV_CODEC_ID_WMALOSSLESS,\r\n  0x0165: AVCodecID.AV_CODEC_ID_XMA1,\r\n  0x0166: AVCodecID.AV_CODEC_ID_XMA2,\r\n  0x0180: AVCodecID.AV_CODEC_ID_FTR,\r\n  0x0200: AVCodecID.AV_CODEC_ID_ADPCM_CT,\r\n  0x0215: AVCodecID.AV_CODEC_ID_DVAUDIO,\r\n  0x0216: AVCodecID.AV_CODEC_ID_DVAUDIO,\r\n  0x0270: AVCodecID.AV_CODEC_ID_ATRAC3,\r\n  0x028E: AVCodecID.AV_CODEC_ID_MSNSIREN,\r\n  0x028F: AVCodecID.AV_CODEC_ID_ADPCM_G722,\r\n  0x0350: AVCodecID.AV_CODEC_ID_MISC4,\r\n  0x0401: AVCodecID.AV_CODEC_ID_IMC,\r\n  0x0402: AVCodecID.AV_CODEC_ID_IAC,\r\n  0x0500: AVCodecID.AV_CODEC_ID_ON2AVC,\r\n  0x0501: AVCodecID.AV_CODEC_ID_ON2AVC,\r\n  0x1500: AVCodecID.AV_CODEC_ID_GSM_MS,\r\n  0x1501: AVCodecID.AV_CODEC_ID_TRUESPEECH,\r\n\r\n  // ADTS AAC\r\n  0x1600: AVCodecID.AV_CODEC_ID_AAC,\r\n  0x1602: AVCodecID.AV_CODEC_ID_AAC_LATM,\r\n  0x2000: AVCodecID.AV_CODEC_ID_AC3,\r\n  0x2001: AVCodecID.AV_CODEC_ID_DTS,\r\n  0x2048: AVCodecID.AV_CODEC_ID_SONIC,\r\n  0x2222: AVCodecID.AV_CODEC_ID_G729,\r\n  0x6c75: AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n  0x706d: AVCodecID.AV_CODEC_ID_AAC,\r\n  0x4143: AVCodecID.AV_CODEC_ID_AAC,\r\n  0x4180: AVCodecID.AV_CODEC_ID_FTR,\r\n  0x594a: AVCodecID.AV_CODEC_ID_XAN_DPCM,\r\n  0x729A: AVCodecID.AV_CODEC_ID_G729,\r\n  0x8180: AVCodecID.AV_CODEC_ID_FTR,\r\n  0xA100: AVCodecID.AV_CODEC_ID_G723_1,\r\n  0xA106: AVCodecID.AV_CODEC_ID_AAC,\r\n  0xA109: AVCodecID.AV_CODEC_ID_SPEEX,\r\n  0xF1AC: AVCodecID.AV_CODEC_ID_FLAC,\r\n  0xFFFE: AVCodecID.AV_CODEC_ID_DFPWM,\r\n  0x5346: AVCodecID.AV_CODEC_ID_ADPCM_SWF,\r\n  0x566f: AVCodecID.AV_CODEC_ID_VORBIS\r\n}\r\n\r\nexport const codecBmpTags: Record<int32, AVCodecID> = {\r\n  [mktagle('H261')]: AVCodecID.AV_CODEC_ID_H261,\r\n  [mktagle('H263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('X263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('T263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('L263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('VX1K')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('ZyGo')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('M263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('lsvm')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('I263')]: AVCodecID.AV_CODEC_ID_H263I,\r\n  [mktagle('U263')]: AVCodecID.AV_CODEC_ID_H263,\r\n  [mktagle('VSM4')]: AVCodecID.AV_CODEC_ID_H263,\r\n\r\n  [mktagle('H264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('h264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('X264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('x264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('avc1')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('DAVC')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('SMV2')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('VSSH')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('Q264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('V264')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('GAVC')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('UMSV')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('tshd')]: AVCodecID.AV_CODEC_ID_H264,\r\n  [mktagle('INMC')]: AVCodecID.AV_CODEC_ID_H264,\r\n\r\n  [mktagle('FMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DIVX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DX50')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('XVID')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('MP4S')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('M4S2')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DIVX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [0x04 as int32]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('ZMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DIV1')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('BLZ0')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('mp4v')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('UMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('WV1F')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('SEDG')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('RMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('3IV2')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('WAWV')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('FFDS')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('FVFW')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DCOD')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('MVXM')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('PM4V')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('SMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DXGM')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('VIDM')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('M4T3')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('GEOX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('G264')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('HDX4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DM4V')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DMK2')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DYM4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DIGI')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('EPHV')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('EM4A')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('M4CC')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('SN40')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('VSPX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('ULDX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('GEOV')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('SIPP')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('SM4V')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('XVIX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('DreX')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('QMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('PLV1')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('GLV4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('GMP4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('MNM4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n  [mktagle('GTM4')]: AVCodecID.AV_CODEC_ID_MPEG4,\r\n\r\n  [mktagle('MPG4')]: AVCodecID.AV_CODEC_ID_MSMPEG4V1,\r\n  [mktagle('MP41')]: AVCodecID.AV_CODEC_ID_MSMPEG4V1,\r\n  [mktagle('MP42')]: AVCodecID.AV_CODEC_ID_MSMPEG4V2,\r\n  [mktagle('DIV2')]: AVCodecID.AV_CODEC_ID_MSMPEG4V2,\r\n  [mktagle('MP43')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('DIV3')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('MPG3')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('DIV5')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('DIV6')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('DIV4')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('DVX3')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('AP41')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('COL1')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n  [mktagle('COL0')]: AVCodecID.AV_CODEC_ID_MSMPEG4V3,\r\n\r\n  [mktagle('WMV1')]: AVCodecID.AV_CODEC_ID_WMV1,\r\n  [mktagle('WMV2')]: AVCodecID.AV_CODEC_ID_WMV2,\r\n  [mktagle('GXVE')]: AVCodecID.AV_CODEC_ID_WMV2,\r\n\r\n  [mktagle('dvsd')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvhd')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvh1')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvsl')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dv25')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dv50')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('cdvc')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('CDVH')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('CDV5')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvc ')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvcs')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvh1')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('dvis')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('pdvc')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('SL25')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('SLDV')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n  [mktagle('AVd1')]: AVCodecID.AV_CODEC_ID_DVVIDEO,\r\n\r\n  [mktagle('mpg1')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('mpg2')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('MPEG')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('PIM1')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('PIM2')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('VCR2')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [0x10000001 as uint32]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [0x10000002 as uint32]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [0x10000004 as uint32]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('DVR ')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('MMES')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('LMP2')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('slif')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('EM2V')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('M701')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('M702')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('M703')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('M704')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('M705')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('mpgv')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('BW10')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('XMPG')]: AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  [mktagle('MJPG')]: AVCodecID.AV_CODEC_ID_MJPEG,\r\n\r\n  [mktagle('RV40')]: AVCodecID.AV_CODEC_ID_RV40,\r\n  [mktagle('AV01')]: AVCodecID.AV_CODEC_ID_AV1,\r\n  [mktagle('VP80')]: AVCodecID.AV_CODEC_ID_VP8,\r\n  [mktagle('VP90')]: AVCodecID.AV_CODEC_ID_VP9,\r\n  [mktagle('HEVC')]: AVCodecID.AV_CODEC_ID_HEVC,\r\n  [mktagle('H265')]: AVCodecID.AV_CODEC_ID_HEVC\r\n}\r\n\r\nexport const MEDIASUBTYPE_BASE_GUID = '00001000800000AA00389B71'\r\nexport const AMBISONIC_BASE_GUID = '2107D3118644C8C1CA000000'\r\nexport const BROKEN_BASE_GUID = '0000000000001000800000AA'\r\n\r\nexport const codecBmpGuid: Record<string, AVCodecID> = {\r\n  '2C806DE046DBCF11B4D100805F6CBBEA': AVCodecID.AV_CODEC_ID_AC3,\r\n  'BFAA23E958CB7144A119FFFA01E4CE62': AVCodecID.AV_CODEC_ID_ATRAC3P,\r\n  'D242E147BA368D4D88FC61654F8C836C': AVCodecID.AV_CODEC_ID_ATRAC9,\r\n  'AF87FBA7022DFB42A4D405CD93843BDD': AVCodecID.AV_CODEC_ID_EAC3,\r\n  '2B806DE046DBCF11B4D100805F6CBBEA': AVCodecID.AV_CODEC_ID_MP2,\r\n  '82EC1F6ACADB1945BDE756D3B3EF981D': AVCodecID.AV_CODEC_ID_ADPCM_AGM,\r\n  '3AC1FA38811D4361A40DCE53CA607CD1': AVCodecID.AV_CODEC_ID_DFPWM\r\n}\r\n\r\nexport const RiffInfo: Record<string, string> = {\r\n  'IART': AVStreamMetadataKey.ARTIST,\r\n  'ICMT': AVStreamMetadataKey.COMMENT,\r\n  'ICOP': AVStreamMetadataKey.COPYRIGHT,\r\n  'ICRD': AVStreamMetadataKey.DATE,\r\n  'IGNR': AVStreamMetadataKey.GENRE,\r\n  'ILNG': AVStreamMetadataKey.LANGUAGE,\r\n  'INAM': AVStreamMetadataKey.LANGUAGE,\r\n  'IPRD': AVStreamMetadataKey.ALBUM,\r\n  'IPRT': AVStreamMetadataKey.TRACK,\r\n  'ITRK': AVStreamMetadataKey.TRACK,\r\n  'ISFT': AVStreamMetadataKey.ENCODER,\r\n  'ISMP': AVStreamMetadataKey.TIME_CODE,\r\n  'ITCH': AVStreamMetadataKey.VENDOR\r\n}\r\n","/*\r\n * libmedia string tag to uint32 in litten end\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as logger from 'common/util/logger'\r\n\r\nexport default function mktagle(tag: string): number {\r\n  if (tag.length !== 4) {\r\n    logger.warn(`tag length is not 4, tag: ${tag}`)\r\n  }\r\n\r\n  let value = 0\r\n  for (let i = 3; i >= 0; i--) {\r\n    value = (value << 8) | tag.charCodeAt(i)\r\n  }\r\n\r\n  return value\r\n}\r\n"],"names":[],"sourceRoot":""}