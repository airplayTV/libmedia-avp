{"version":3,"file":"src_avnetwork_ioLoader_HlsIOLoader_ts.avplayer.js","mappings":"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","sources":["webpack://AVPlayer/./src/avnetwork/bsp/AVBSPipe.ts","webpack://AVPlayer/./src/avnetwork/bsp/aes/AESDecryptPipe.ts","webpack://AVPlayer/./src/avnetwork/ioLoader/HlsIOLoader.ts","webpack://AVPlayer/./src/avprotocol/m3u8/parser.ts","webpack://AVPlayer/./src/avprotocol/m3u8/types.ts","webpack://AVPlayer/./src/avprotocol/m3u8/utils.ts","webpack://AVPlayer/./src/avutil/stringEnum.ts","webpack://AVPlayer/./src/common/crypto/aes/AESSoftDecryptor.ts","webpack://AVPlayer/./src/common/crypto/aes/AESWebDecryptor.ts","webpack://AVPlayer/./src/common/function/split.ts","webpack://AVPlayer/./src/common/util/url.ts"],"sourcesContent":["/*\r\n * libmedia AVBSPipe\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\n\r\nexport default abstract class AVBSPipe {\r\n\r\n  public onFlush: (buffer: Uint8Array) => Promise<number>\r\n\r\n  public abstract read(buffer: Uint8ArrayInterface): Promise<number>\r\n\r\n}\r\n","/*\r\n * libmedia AESDecryptPipe\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport AVBSPipe from '../AVBSPipe'\r\nimport AESSoftDecryptor from 'common/crypto/aes/AESSoftDecryptor'\r\nimport AESWebDecryptor from 'common/crypto/aes/AESWebDecryptor'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport { IOError } from 'common/io/error'\r\nimport * as logger from 'common/util/logger'\r\nimport { AesMode } from 'common/crypto/aes/aes'\r\n\r\nconst BLOCK_SIZE = 16\r\nconst REMAINING_LENGTH = BLOCK_SIZE * 2\r\n\r\nlet AESWebDecryptorSupport = true\r\n\r\nconst PaddingBlock = new Uint8Array(BLOCK_SIZE).fill(BLOCK_SIZE)\r\n\r\nexport default class AESDecryptPipe extends AVBSPipe {\r\n\r\n  private buffer: Uint8Array\r\n\r\n  private aesSoftDecryptor: AESSoftDecryptor\r\n  private aesWebDecryptor: AESWebDecryptor\r\n  private aesTargetDecryptor: AESSoftDecryptor | AESWebDecryptor\r\n\r\n  private pointer: number\r\n  private endPointer: number\r\n  private size: number\r\n  private ended: boolean\r\n\r\n  private iv: ArrayBuffer\r\n  private key: ArrayBuffer\r\n  private mode: AesMode\r\n\r\n  private pos: number\r\n\r\n  constructor(mode: AesMode = AesMode.CBC, size: number = 1 * 1024 * 1024) {\r\n    super()\r\n    this.mode = mode\r\n    this.size = size\r\n    this.pointer = 0\r\n    this.endPointer = 0\r\n    this.pos = 0\r\n    this.ended = false\r\n    this.buffer = new Uint8Array(size)\r\n\r\n    this.aesSoftDecryptor = new AESSoftDecryptor(mode)\r\n    if (AESWebDecryptor.isSupport() && AESWebDecryptorSupport) {\r\n      this.aesWebDecryptor = new AESWebDecryptor(mode)\r\n    }\r\n    this.aesTargetDecryptor = this.aesWebDecryptor || this.aesSoftDecryptor\r\n  }\r\n\r\n  public remainingLength() {\r\n    return this.endPointer - this.pointer\r\n  }\r\n\r\n  public async expandKey(key: ArrayBuffer, iv: ArrayBuffer) {\r\n    this.key = key\r\n    this.iv = iv\r\n    if (this.aesWebDecryptor) {\r\n      await this.aesWebDecryptor.expandKey(key)\r\n    }\r\n    if (key.byteLength <= 8) {\r\n      this.aesSoftDecryptor.expandKey(key)\r\n    }\r\n  }\r\n\r\n  private async flush_(buffer: Uint8Array) {\r\n    while (true) {\r\n      const len = await this.onFlush(buffer)\r\n      if (len !== IOError.AGAIN) {\r\n        return len\r\n      }\r\n      await new Sleep(0)\r\n    }\r\n  }\r\n\r\n  private async flush() {\r\n    if (this.size - this.remainingLength() <= 0) {\r\n      return\r\n    }\r\n\r\n    if (this.pointer < this.endPointer) {\r\n      if (this.pointer) {\r\n        this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n        this.endPointer = this.endPointer - this.pointer\r\n      }\r\n    }\r\n    else {\r\n      this.endPointer = 0\r\n    }\r\n\r\n    this.pointer = 0\r\n\r\n    const len = await this.flush_(this.buffer.subarray(this.endPointer))\r\n\r\n    if (len < 0) {\r\n      if (len === IOError.END) {\r\n        this.ended = true\r\n        return\r\n      }\r\n      else {\r\n        logger.fatal(`AESPipe error, flush failed, ret: ${len}`)\r\n      }\r\n    }\r\n    this.endPointer += len\r\n  }\r\n\r\n  private removePadding(array: Uint8Array): Uint8Array {\r\n    const outputBytes = array.length\r\n    const paddingBytes =\r\n      outputBytes && new DataView(array.buffer).getUint8(outputBytes - 1)\r\n    if (paddingBytes) {\r\n      return array.subarray(0, outputBytes - paddingBytes)\r\n    }\r\n    return array\r\n  }\r\n\r\n  private async decryptCBC(length: number): Promise<Uint8Array> {\r\n    let nextBlock: Uint8Array\r\n    let padding: number = 0\r\n    if (this.aesTargetDecryptor === this.aesWebDecryptor && !this.ended) {\r\n      nextBlock = this.buffer.subarray(this.pointer + length, this.pointer + length + BLOCK_SIZE).slice()\r\n      // Web Decryptor 需要每次送入的数据是 padding 的，但这里是流式的，所以需要在每次解密的 buffer 后面追加 16 的 padding 的数据\r\n      // 解密完成之后在设置回原来的数据\r\n      this.buffer.set(\r\n        (await this.aesWebDecryptor.encryptPadding(\r\n          PaddingBlock,\r\n          this.buffer.subarray(this.pointer + length - BLOCK_SIZE, this.pointer + length)\r\n        )).subarray(0, BLOCK_SIZE),\r\n        this.pointer + length\r\n      )\r\n      padding = BLOCK_SIZE\r\n    }\r\n\r\n    try {\r\n      const encryptData = this.buffer.subarray(this.pointer, this.pointer + length + padding)\r\n\r\n      const buffer = await this.aesTargetDecryptor.decrypt(encryptData, this.iv)\r\n\r\n      this.iv = encryptData.slice(encryptData.length - BLOCK_SIZE - padding, encryptData.length - padding).buffer\r\n\r\n      if (nextBlock) {\r\n        this.buffer.set(nextBlock, this.pointer + length)\r\n      }\r\n\r\n      this.pointer += length\r\n      this.pos += length\r\n      return new Uint8Array(buffer)\r\n    }\r\n    catch (error) {\r\n      if (this.aesTargetDecryptor === this.aesWebDecryptor && this.key.byteLength <= 8) {\r\n        logger.warn('web aes decrypt failed, try to use soft decryptor')\r\n\r\n        if (nextBlock) {\r\n          this.buffer.set(nextBlock, this.pointer + length)\r\n        }\r\n        this.aesTargetDecryptor = this.aesSoftDecryptor\r\n        AESWebDecryptorSupport = false\r\n        return this.decryptCBC(length)\r\n      }\r\n      else {\r\n        logger.fatal('aes decrypt failed')\r\n      }\r\n    }\r\n  }\r\n\r\n  private getCTRIv() {\r\n    const result = new Uint8Array(this.iv).slice()\r\n    let carry = Math.floor(this.pos / BLOCK_SIZE)\r\n    for (let i = 15; i >= 0 && carry > 0; i--) {\r\n      const sum = result[i] + (carry & 0xff)\r\n      result[i] = sum & 0xff\r\n      carry = (carry >>> 8) + (sum >> 8)\r\n    }\r\n    return result.buffer\r\n  }\r\n\r\n  private async decryptCTR(length: number): Promise<Uint8Array> {\r\n    try {\r\n      const encryptData = this.buffer.subarray(this.pointer, this.pointer + length)\r\n      const buffer = await this.aesTargetDecryptor.decrypt(encryptData, this.getCTRIv())\r\n      this.pointer += length\r\n      this.pos += length\r\n      return new Uint8Array(buffer)\r\n    }\r\n    catch (error) {\r\n      if (this.aesTargetDecryptor === this.aesWebDecryptor && this.key.byteLength <= 8) {\r\n        logger.warn('web aes decrypt failed, try to use soft decryptor')\r\n        this.aesTargetDecryptor = this.aesSoftDecryptor\r\n        AESWebDecryptorSupport = false\r\n        return this.decryptCTR(length)\r\n      }\r\n      else {\r\n        logger.fatal('aes decrypt failed')\r\n      }\r\n    }\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface): Promise<number> {\r\n\r\n    while (!this.ended && this.remainingLength() < (REMAINING_LENGTH + BLOCK_SIZE)) {\r\n      await this.flush()\r\n    }\r\n\r\n    if (this.remainingLength() === 0) {\r\n      return IOError.END\r\n    }\r\n\r\n    if (this.mode === AesMode.CBC) {\r\n      const length = Math.min(\r\n        Math.floor((this.remainingLength() - (this.ended ? 0 : REMAINING_LENGTH)) / BLOCK_SIZE) * BLOCK_SIZE,\r\n        buffer.length\r\n      )\r\n      let decryptBuffer = await this.decryptCBC(length)\r\n      if (this.ended && this.aesTargetDecryptor === this.aesSoftDecryptor) {\r\n        decryptBuffer = this.removePadding(decryptBuffer)\r\n      }\r\n      buffer.set(decryptBuffer)\r\n      return decryptBuffer.length\r\n    }\r\n    else {\r\n      const length = this.ended ? this.remainingLength() : Math.min(\r\n        Math.floor(this.remainingLength() / BLOCK_SIZE) * BLOCK_SIZE,\r\n        buffer.length\r\n      )\r\n      let decryptBuffer = await this.decryptCTR(length)\r\n      buffer.set(decryptBuffer)\r\n      return decryptBuffer.length\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia hls loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Sleep from 'common/timer/Sleep'\r\nimport IOLoader, { IOLoaderAudioStreamInfo, IOLoaderOptions, IOLoaderStatus, IOLoaderSubtitleStreamInfo, IOLoaderVideoStreamInfo } from './IOLoader'\r\nimport * as object from 'common/util/object'\r\nimport { IOError } from 'common/io/error'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { buildAbsoluteURL } from 'common/util/url'\r\n\r\nimport hlsParser from 'avprotocol/m3u8/parser'\r\nimport { MasterPlaylist, MediaPlaylist, Playlist, Segment } from 'avprotocol/m3u8/types'\r\nimport FetchIOLoader, { FetchInfo } from './FetchIOLoader'\r\nimport getTimestamp from 'common/function/getTimestamp'\r\nimport * as logger from 'common/util/logger'\r\nimport * as urlUtil from 'common/util/url'\r\nimport AESDecryptPipe from '../bsp/aes/AESDecryptPipe'\r\nimport * as is from 'common/util/is'\r\nimport { Data } from 'common/types/type'\r\nimport * as errorType from 'avutil/error'\r\nimport { AVMediaType } from 'avutil/codec'\r\nimport AESWebDecryptor from 'common/crypto/aes/AESWebDecryptor'\r\nimport { AesMode } from 'common/crypto/aes/aes'\r\nimport { Ext2Format } from 'avutil/stringEnum'\r\nimport { AVFormat } from 'avutil/avformat'\r\n\r\nconst FETCHED_HISTORY_LIST_MAX = 10\r\n\r\nfunction getFetchParams(info: FetchInfo, method: string = 'GET') {\r\n  const params: Data = {\r\n    method: 'GET',\r\n    headers: {},\r\n    mode: 'cors',\r\n    cache: 'default',\r\n    referrerPolicy: 'no-referrer-when-downgrade'\r\n  }\r\n  if (info.httpOptions?.headers) {\r\n    object.each(info.httpOptions.headers, (value, key) => {\r\n      params.headers[key] = value\r\n    })\r\n  }\r\n\r\n  if (info.httpOptions?.credentials) {\r\n    params.credentials = info.httpOptions.credentials\r\n  }\r\n\r\n  if (info.httpOptions?.referrerPolicy) {\r\n    params.referrerPolicy = info.httpOptions.referrerPolicy\r\n  }\r\n  return params\r\n}\r\n\r\nasync function fetchMediaPlayList(url: string, info: FetchInfo, options: IOLoaderOptions, signal?: AbortSignal) {\r\n  return new Promise<MediaPlaylist>((resolve, reject) => {\r\n    let retryCount = 0\r\n    async function done() {\r\n      try {\r\n        const res = await fetch(url, {\r\n          ...getFetchParams(info),\r\n          signal\r\n        })\r\n        const text = await res.text()\r\n        const mediaPlayList = hlsParser(text) as MediaPlaylist\r\n\r\n        if (options.isLive && (!mediaPlayList.segments || mediaPlayList.segments.length < 2)) {\r\n          let wait = 5\r\n          if (mediaPlayList.segments?.length) {\r\n            wait = mediaPlayList.segments[0].duration * (2 - mediaPlayList.segments.length)\r\n          }\r\n          logger.warn(`wait for min buffer time, now segments: ${mediaPlayList.segments.length}`)\r\n          await new Sleep(wait)\r\n          retryCount = 0\r\n          done()\r\n        }\r\n        resolve(mediaPlayList)\r\n      }\r\n      catch (error) {\r\n        if (error?.name === 'AbortError') {\r\n          resolve(null)\r\n          return\r\n        }\r\n        if (retryCount < options.retryCount) {\r\n          retryCount++\r\n          logger.error(`failed fetch m3u8 file, retry(${retryCount}/3)`)\r\n          await new Sleep(options.retryInterval)\r\n          return done()\r\n        }\r\n        else {\r\n          logger.error('HLSLoader: exception, fetch slice error')\r\n          reject()\r\n        }\r\n      }\r\n    }\r\n    done()\r\n  })\r\n}\r\n\r\nclass MediaLoader {\r\n\r\n  private options: IOLoaderOptions\r\n  private info: FetchInfo\r\n\r\n  private mediaPlayList: MediaPlaylist\r\n\r\n  private fetchedMap: Map<string, boolean>\r\n\r\n  private fetchedHistoryList: string[]\r\n\r\n  private mediaListUrl: string\r\n\r\n  private segmentIndex: number\r\n  private currentUri: string\r\n\r\n  private loader: FetchIOLoader\r\n\r\n  private keyMap: Map<string, ArrayBuffer>\r\n\r\n  private currentIV: ArrayBuffer\r\n  private currentKey: ArrayBuffer\r\n  private aesDecryptPipe: AESDecryptPipe\r\n\r\n  private initLoaded: boolean\r\n  private isInitLoader: boolean\r\n\r\n  private minBuffer: number\r\n  private pendingBuffer: Uint8Array\r\n  private magicAdded: boolean\r\n\r\n  private sleep: Sleep\r\n  private aborted: boolean\r\n\r\n  private signal: AbortController\r\n\r\n  constructor(options: IOLoaderOptions, info: FetchInfo, mediaListUrl?: string, mediaPlayList?: MediaPlaylist) {\r\n    this.options = options\r\n    this.info = info\r\n\r\n    this.segmentIndex = 0\r\n    this.fetchedMap = new Map()\r\n    this.fetchedHistoryList = []\r\n    this.keyMap = new Map()\r\n    this.aborted = false\r\n\r\n    if (mediaListUrl && mediaPlayList) {\r\n      this.setMediaPlayList(mediaListUrl, mediaPlayList)\r\n    }\r\n  }\r\n\r\n  public setMediaPlayList(mediaListUrl: string, mediaPlayList: MediaPlaylist) {\r\n\r\n    if (this.options.isLive) {\r\n      this.fetchedMap.clear()\r\n      this.fetchedHistoryList.length = 0\r\n      this.segmentIndex = 0\r\n      const currentSegment = mediaPlayList.segments.find((segment) => {\r\n        return segment.uri === this.currentUri\r\n      })\r\n      if (currentSegment) {\r\n        mediaPlayList.segments.forEach((segment, index) => {\r\n          if (segment.mediaSequenceNumber === currentSegment.mediaSequenceNumber + 1) {\r\n            this.segmentIndex = index\r\n          }\r\n          else if (segment.mediaSequenceNumber <= currentSegment.mediaSequenceNumber) {\r\n            this.fetchedMap.set(segment.uri, true)\r\n            this.fetchedHistoryList.push(segment.uri)\r\n          }\r\n        })\r\n        while (this.fetchedHistoryList.length >= FETCHED_HISTORY_LIST_MAX) {\r\n          this.fetchedMap.delete(this.fetchedHistoryList.shift())\r\n        }\r\n      }\r\n    }\r\n\r\n    this.mediaListUrl = mediaListUrl\r\n    this.mediaPlayList = mediaPlayList\r\n    this.minBuffer = this.mediaPlayList.duration || 0\r\n    if (this.mediaPlayList.endlist) {\r\n      this.options.isLive = false\r\n    }\r\n    this.initLoaded = true\r\n    if (this.mediaPlayList.segments.length && this.mediaPlayList.segments[0].map) {\r\n      this.initLoaded = false\r\n    }\r\n\r\n    if (this.mediaPlayList.lowLatencyCompatibility) {\r\n      const buffer = this.mediaPlayList.lowLatencyCompatibility.partHoldBack\r\n        || this.mediaPlayList.lowLatencyCompatibility.holdBack\r\n        || this.minBuffer\r\n\r\n      let cache = 0\r\n      let hasKeyframe = false\r\n      let segIndex = 0\r\n      for (let i = this.mediaPlayList.segments.length - 1; i >= 0; i--) {\r\n        const segment = this.mediaPlayList.segments[i]\r\n        if (segment.parts?.length) {\r\n          if (!segment.uri) {\r\n            continue\r\n          }\r\n          for (let j = segment.parts.length - 1; j >= 0; j--) {\r\n            const part = segment.parts[j]\r\n            if (!part.hint) {\r\n              cache += part.duration\r\n              if (part.independent) {\r\n                hasKeyframe = true\r\n              }\r\n              if (cache >= buffer && hasKeyframe) {\r\n                segIndex = i\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (cache >= buffer && hasKeyframe) {\r\n            break\r\n          }\r\n        }\r\n        else {\r\n          cache += segment.duration\r\n          hasKeyframe = true\r\n          if (cache >= buffer && hasKeyframe) {\r\n            segIndex = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      this.fetchedMap.clear()\r\n      this.fetchedHistoryList.length = 0\r\n      for (let i = 0; i < segIndex; i++) {\r\n        const segment = this.mediaPlayList.segments[i]\r\n        this.fetchedMap.set(segment.uri, true)\r\n        this.fetchedHistoryList.push(segment.uri)\r\n      }\r\n      while (this.fetchedHistoryList.length >= FETCHED_HISTORY_LIST_MAX) {\r\n        this.fetchedMap.delete(this.fetchedHistoryList.shift())\r\n      }\r\n      this.segmentIndex = segIndex\r\n      this.minBuffer = cache\r\n    }\r\n  }\r\n\r\n  public getMediaListUrl() {\r\n    return this.mediaListUrl\r\n  }\r\n\r\n  private async checkNeedDecrypt(key: Segment['key'], uri: string, sequence: number) {\r\n\r\n    if (!key) {\r\n      this.aesDecryptPipe = null\r\n      return\r\n    }\r\n\r\n    if (key.method.toLocaleLowerCase() !== 'aes-128'\r\n      && key.method.toLocaleLowerCase() !== 'aes-128-ctr'\r\n      && (key.method.toLocaleLowerCase() !== 'aes-256'\r\n        && key.method.toLocaleLowerCase() !== 'aes-256-ctr'\r\n        || !AESWebDecryptor.isSupport()\r\n      )\r\n    ) {\r\n      if (uri.split('.').pop() === 'mp4') {\r\n        this.aesDecryptPipe = null\r\n        return\r\n      }\r\n      logger.fatal(`m3u8 ts not support EXT-X-KEY METHOD ${key.method}`)\r\n    }\r\n\r\n    const keyUrl = key.uri\r\n\r\n    if (this.keyMap.has(keyUrl)) {\r\n      this.currentKey = this.keyMap.get(keyUrl)\r\n    }\r\n    else {\r\n      this.currentKey = await (await fetch(buildAbsoluteURL(this.mediaListUrl, keyUrl), getFetchParams(this.info))).arrayBuffer()\r\n      this.keyMap.set(keyUrl, this.currentKey)\r\n    }\r\n\r\n    if (key.iv) {\r\n      this.currentIV = key.iv.buffer\r\n    }\r\n    else {\r\n      const iv = new Uint8Array(16)\r\n      const dataView = new DataView(iv.buffer)\r\n      dataView.setUint32(12, sequence, false)\r\n      this.currentIV = iv.buffer\r\n    }\r\n    this.aesDecryptPipe = new AESDecryptPipe(key.method.toLocaleLowerCase().indexOf('ctr') > 0 ? AesMode.CTR : AesMode.CBC)\r\n    this.aesDecryptPipe.onFlush = async (buffer) => {\r\n      return this.loader.read(buffer)\r\n    }\r\n    await this.aesDecryptPipe.expandKey(this.currentKey, this.currentIV)\r\n  }\r\n\r\n  private handleSlice(len: number, buffer: Uint8ArrayInterface) {\r\n    const ext = this.loader.getUrl().split('.').pop()\r\n    if (ext !== 'mp3') {\r\n      // ID3\r\n      if (!this.magicAdded && buffer[0] === 0x49 && buffer[1] === 0x44 && buffer[2] === 0x33) {\r\n        const format = Ext2Format[ext] ?? AVFormat.UNKNOWN\r\n        if (format === AVFormat.UNKNOWN) {\r\n          return len\r\n        }\r\n        if (len + 6 > buffer.length) {\r\n          this.pendingBuffer = buffer.slice(len - 6)\r\n        }\r\n        buffer.set(buffer.slice(0, len - 6), 6)\r\n        // 拥有 ID3 标签的 aac 等格式添加一个私有的头 LIMA \r\n        buffer[0] = 0x4c\r\n        buffer[1] = 0x49\r\n        buffer[2] = 0x4d\r\n        buffer[3] = 0x41\r\n        buffer[4] = (format >>> 8) & 0xff\r\n        buffer[5] = format & 0xff\r\n        this.magicAdded = true\r\n        return this.pendingBuffer ? len : len + 6\r\n      }\r\n    }\r\n    return len\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface): Promise<number> {\r\n\r\n    if (this.pendingBuffer) {\r\n      let len = this.pendingBuffer.length\r\n      buffer.set(this.pendingBuffer)\r\n      this.pendingBuffer = null\r\n      return len\r\n    }\r\n\r\n    let ret = 0\r\n\r\n    if (this.loader) {\r\n      ret = this.aesDecryptPipe ? (await this.aesDecryptPipe.read(buffer)) : (await this.loader.read(buffer))\r\n      if (ret !== IOError.END) {\r\n        return ret\r\n      }\r\n      else {\r\n        if (!this.isInitLoader) {\r\n          if (this.options.isLive) {\r\n            this.fetchedMap.set(this.currentUri, true)\r\n            if (this.fetchedHistoryList.length === FETCHED_HISTORY_LIST_MAX) {\r\n              this.fetchedMap.delete(this.fetchedHistoryList.shift())\r\n            }\r\n            this.fetchedHistoryList.push(this.currentUri)\r\n            this.segmentIndex++\r\n          }\r\n          else {\r\n            this.segmentIndex++\r\n            if (this.segmentIndex >= this.mediaPlayList.segments.length) {\r\n              return IOError.END\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          this.initLoaded = true\r\n        }\r\n        this.loader = null\r\n      }\r\n    }\r\n\r\n    if (this.options.isLive) {\r\n      const segments = this.mediaPlayList.segments.filter((segment) => {\r\n        return segment.uri && !this.fetchedMap.get(segment.uri)\r\n      })\r\n\r\n      if (!segments.length) {\r\n        if (this.mediaPlayList.endlist) {\r\n          return IOError.END\r\n        }\r\n\r\n        const wait = (this.minBuffer - (getTimestamp() - this.mediaPlayList.timestamp) / 1000) / 2\r\n        if (wait > 0) {\r\n          this.sleep = new Sleep(wait)\r\n          await this.sleep\r\n          this.sleep = null\r\n          if (this.aborted) {\r\n            return IOError.END\r\n          }\r\n        }\r\n        if (typeof AbortController === 'function') {\r\n          this.signal = new AbortController()\r\n        }\r\n        this.mediaPlayList = await fetchMediaPlayList(this.mediaListUrl, this.info, this.options, this.signal?.signal)\r\n        this.signal = null\r\n        if (this.aborted) {\r\n          return IOError.END\r\n        }\r\n        return this.read(buffer)\r\n      }\r\n\r\n      this.isInitLoader = !!(segments[0].map?.uri && !this.initLoaded)\r\n\r\n      this.currentUri = segments[0].uri\r\n\r\n      if (!this.isInitLoader) {\r\n        await this.checkNeedDecrypt(segments[0].key, this.currentUri, this.segmentIndex + (this.mediaPlayList.mediaSequenceBase || 0))\r\n      }\r\n      else if (segments[0].map?.key) {\r\n        await this.checkNeedDecrypt(segments[0].map.key, segments[0].map.uri, this.segmentIndex + (this.mediaPlayList.mediaSequenceBase || 0))\r\n      }\r\n\r\n      this.loader = new FetchIOLoader(object.extend({}, this.options, { disableSegment: true, loop: false }))\r\n\r\n      const url = buildAbsoluteURL(this.mediaListUrl, this.isInitLoader ? segments[0].map.uri : this.currentUri)\r\n      const range = {\r\n        from: 0,\r\n        to: -1\r\n      }\r\n      const byteRange = this.isInitLoader ? segments[0].map.byterange : segments[0].byterange\r\n      if (byteRange) {\r\n        range.from = byteRange.offset\r\n        range.to = byteRange.offset + byteRange.length\r\n      }\r\n\r\n      await this.loader.open(\r\n        object.extend({}, this.info, {\r\n          url,\r\n        }),\r\n        range\r\n      )\r\n      const ret = await (this.aesDecryptPipe ? this.aesDecryptPipe.read(buffer) : this.loader.read(buffer))\r\n      if (ret > 10) {\r\n        return this.handleSlice(ret, buffer)\r\n      }\r\n      return ret\r\n    }\r\n    else {\r\n      this.loader = new FetchIOLoader(object.extend({}, this.options, { disableSegment: true, loop: false }))\r\n\r\n      let segment = this.mediaPlayList.segments[this.segmentIndex]\r\n      while (segment && !segment.uri) {\r\n        segment = this.mediaPlayList.segments[++this.segmentIndex]\r\n      }\r\n\r\n      this.isInitLoader = !!(segment.map?.uri && !this.initLoaded)\r\n\r\n      if (!this.isInitLoader) {\r\n        await this.checkNeedDecrypt(segment.key, segment.uri, this.segmentIndex + (this.mediaPlayList.mediaSequenceBase || 0))\r\n      }\r\n      else if (segment.map?.key) {\r\n        await this.checkNeedDecrypt(segment.map.key, segment.map.uri, this.segmentIndex + (this.mediaPlayList.mediaSequenceBase || 0))\r\n      }\r\n\r\n      const url = buildAbsoluteURL(this.mediaListUrl, this.isInitLoader ? segment.map.uri : segment.uri)\r\n      const range = {\r\n        from: 0,\r\n        to: -1\r\n      }\r\n      const byteRange = this.isInitLoader ? segment.map.byterange : segment.byterange\r\n      if (byteRange) {\r\n        range.from = byteRange.offset\r\n        range.to = byteRange.offset + byteRange.length\r\n      }\r\n\r\n      await this.loader.open(\r\n        object.extend({}, this.info, {\r\n          url,\r\n        }),\r\n        range\r\n      )\r\n      const ret = await (this.aesDecryptPipe ? this.aesDecryptPipe.read(buffer) : this.loader.read(buffer))\r\n      if (ret > 10) {\r\n        return this.handleSlice(ret, buffer)\r\n      }\r\n      return ret\r\n    }\r\n  }\r\n\r\n  public async seek(timestamp: int64) {\r\n    if (this.loader) {\r\n      await this.loader.abort()\r\n      this.loader = null\r\n    }\r\n\r\n    let duration = 0\r\n    let seekTime = Number(timestamp)\r\n    let index = 0\r\n\r\n    for (let i = 0; i < this.mediaPlayList.segments.length; i++) {\r\n      if (is.number(this.mediaPlayList.segments[i].duration)) {\r\n        duration += this.mediaPlayList.segments[i].duration\r\n        if (duration * 1000 >= seekTime) {\r\n          index = i\r\n          break\r\n        }\r\n      }\r\n    }\r\n    this.segmentIndex = index\r\n    this.aborted = false\r\n    return 0\r\n  }\r\n\r\n  public abortSleep() {\r\n    this.aborted = true\r\n    if (this.loader) {\r\n      this.loader.abortSleep()\r\n    }\r\n    if (this.sleep) {\r\n      this.sleep.stop()\r\n      this.sleep = null\r\n    }\r\n  }\r\n\r\n  public async abort() {\r\n    this.abortSleep()\r\n    if (this.signal) {\r\n      this.signal.abort()\r\n      this.signal = null\r\n    }\r\n    if (this.loader) {\r\n      await this.loader.abort()\r\n      this.loader = null\r\n    }\r\n  }\r\n\r\n  public getMinBuffer() {\r\n    return this.minBuffer\r\n  }\r\n\r\n  public getDuration() {\r\n    return this.mediaPlayList.duration\r\n  }\r\n}\r\n\r\nexport default class HlsIOLoader extends IOLoader {\r\n\r\n  private info: FetchInfo\r\n\r\n  private masterPlaylist: MasterPlaylist\r\n\r\n  private mediaPlayListIndex: number\r\n\r\n  private mainLoader: MediaLoader\r\n  private loaders: Map<AVMediaType, MediaLoader>\r\n\r\n  private audioSelectedIndex: number\r\n  private subtitleSelectedIndex: number\r\n\r\n  private sleep: Sleep\r\n  private aborted: boolean\r\n\r\n  private async fetchMasterPlayList() {\r\n    try {\r\n      const res = await fetch(this.info.url, getFetchParams(this.info))\r\n      const text = await res.text()\r\n\r\n      const playList: Playlist = hlsParser(text)\r\n\r\n      if (playList.isMasterPlaylist) {\r\n        this.masterPlaylist = playList as MasterPlaylist\r\n      }\r\n      else {\r\n        const mediaPlayList = playList as MediaPlaylist\r\n\r\n        if (this.options.isLive && (!mediaPlayList.segments || mediaPlayList.segments.length < 2)) {\r\n          let wait = 5\r\n          if (mediaPlayList.segments?.length) {\r\n            wait = mediaPlayList.segments[0].duration * (2 - mediaPlayList.segments.length)\r\n          }\r\n          logger.warn(`wait for min buffer time, now segments: ${mediaPlayList.segments.length}`)\r\n          await new Sleep(wait)\r\n          return this.fetchMasterPlayList()\r\n        }\r\n        this.mainLoader = new MediaLoader(\r\n          this.options,\r\n          this.info,\r\n          this.info.url,\r\n          mediaPlayList\r\n        )\r\n        this.loaders.set(AVMediaType.AVMEDIA_TYPE_VIDEO, this.mainLoader)\r\n      }\r\n      return playList\r\n    }\r\n    catch (error) {\r\n      if (this.retryCount < this.options.retryCount) {\r\n        this.retryCount++\r\n        logger.error(`failed fetch m3u8 file, retry(${this.retryCount}/3)`)\r\n        this.sleep = new Sleep(3)\r\n        await this.sleep\r\n        this.sleep = null\r\n        if (this.aborted) {\r\n          logger.fatal('HLSLoader: exception, fetch abort')\r\n        }\r\n        return this.fetchMasterPlayList()\r\n      }\r\n      else {\r\n        this.status = IOLoaderStatus.ERROR\r\n        logger.fatal('HLSLoader: exception, fetch slice error')\r\n      }\r\n    }\r\n  }\r\n\r\n  private buildUrl(url: string) {\r\n    if (!/^https?/.test(url)) {\r\n      url = urlUtil.buildAbsoluteURL(this.info.url, url)\r\n    }\r\n    return url\r\n  }\r\n\r\n  private async createLoader() {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      if (!currentVariant) {\r\n        logger.fatal('no media playlist')\r\n      }\r\n      if (currentVariant.audio.length) {\r\n        const mediaUrl = this.buildUrl(currentVariant.audio[this.audioSelectedIndex].uri)\r\n        this.loaders.set(AVMediaType.AVMEDIA_TYPE_AUDIO, new MediaLoader(\r\n          this.options,\r\n          this.info,\r\n          mediaUrl,\r\n          await fetchMediaPlayList(\r\n            mediaUrl,\r\n            this.info,\r\n            this.options\r\n          )\r\n        ))\r\n      }\r\n      if (currentVariant.subtitles.length) {\r\n        const mediaUrl = this.buildUrl(currentVariant.subtitles[this.subtitleSelectedIndex].uri)\r\n        this.loaders.set(AVMediaType.AVMEDIA_TYPE_SUBTITLE, new MediaLoader(\r\n          this.options,\r\n          this.info,\r\n          mediaUrl,\r\n          await fetchMediaPlayList(\r\n            mediaUrl,\r\n            this.info,\r\n            this.options\r\n          )\r\n        ))\r\n      }\r\n\r\n      const mediaUrl = this.buildUrl(currentVariant.uri)\r\n\r\n      this.mainLoader = new MediaLoader(\r\n        this.options,\r\n        this.info,\r\n        mediaUrl,\r\n        await fetchMediaPlayList(\r\n          mediaUrl,\r\n          this.info,\r\n          this.options\r\n        )\r\n      )\r\n      this.loaders.set(AVMediaType.AVMEDIA_TYPE_VIDEO, this.mainLoader)\r\n    }\r\n  }\r\n\r\n  public async open(info: FetchInfo) {\r\n\r\n    if (this.status === IOLoaderStatus.BUFFERING) {\r\n      return 0\r\n    }\r\n\r\n    if (this.status !== IOLoaderStatus.IDLE) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n\r\n    this.info = info\r\n\r\n    this.mediaPlayListIndex = 0\r\n    this.audioSelectedIndex = 0\r\n    this.subtitleSelectedIndex = 0\r\n    this.loaders = new Map()\r\n\r\n    this.status = IOLoaderStatus.CONNECTING\r\n    this.retryCount = 0\r\n    this.aborted = false\r\n\r\n    await this.fetchMasterPlayList()\r\n\r\n    if (!this.loaders.size && this.masterPlaylist) {\r\n      await this.createLoader()\r\n    }\r\n\r\n    this.status = IOLoaderStatus.BUFFERING\r\n\r\n    return 0\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface, options: {\r\n    mediaType: AVMediaType\r\n  }): Promise<number> {\r\n    if (!options) {\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n    const ret = await this.loaders.get(options.mediaType).read(buffer)\r\n    if (ret < 0 && ret !== IOError.AGAIN) {\r\n      this.status = ret === IOError.END ? IOLoaderStatus.COMPLETE : IOLoaderStatus.ERROR\r\n    }\r\n    return ret\r\n  }\r\n\r\n  public async seek(timestamp: int64, options: {\r\n    mediaType: AVMediaType\r\n  }) {\r\n\r\n    if (!options) {\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n\r\n    await this.loaders.get(options.mediaType).seek(timestamp)\r\n\r\n    if (this.status === IOLoaderStatus.COMPLETE) {\r\n      this.status = IOLoaderStatus.BUFFERING\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async size() {\r\n    return 0n\r\n  }\r\n\r\n  public async abort() {\r\n    for (let loader of this.loaders) {\r\n      await loader[1].abort()\r\n    }\r\n    this.aborted = true\r\n    if (this.sleep) {\r\n      this.sleep.stop()\r\n      this.sleep = null\r\n    }\r\n  }\r\n\r\n  public async stop() {\r\n    await this.abort()\r\n    this.status = IOLoaderStatus.IDLE\r\n  }\r\n\r\n  public getDuration() {\r\n    return this.mainLoader?.getDuration() ?? 0\r\n  }\r\n\r\n  public hasVideo() {\r\n    if (this.masterPlaylist) {\r\n      return this.masterPlaylist.variants.length > 0\r\n    }\r\n    return !!this.mainLoader\r\n  }\r\n\r\n  public hasAudio() {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      return currentVariant.audio.length > 0\r\n    }\r\n  }\r\n\r\n  public hasSubtitle() {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      return currentVariant.subtitles.length > 0\r\n    }\r\n  }\r\n\r\n  public getVideoList(): IOLoaderVideoStreamInfo {\r\n    return {\r\n      list: this.masterPlaylist?.variants.map((variant) => {\r\n        return {\r\n          width: variant.resolution?.width ?? 0,\r\n          height: variant.resolution?.height ?? 0,\r\n          frameRate: variant.frameRate ?? 0,\r\n          codec: variant.codecs,\r\n          bandwidth: variant.bandwidth\r\n        }\r\n      }) ?? [],\r\n      selectedIndex: this.mediaPlayListIndex || 0\r\n    }\r\n  }\r\n\r\n  public getAudioList(): IOLoaderAudioStreamInfo {\r\n    if (this.masterPlaylist && this.hasAudio()) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      return {\r\n        list: currentVariant.audio.map((item) => {\r\n          return {\r\n            lang: item.language,\r\n            codec: item.name\r\n          }\r\n        }),\r\n        selectedIndex: this.audioSelectedIndex\r\n      }\r\n    }\r\n    return {\r\n      list: [],\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  public getSubtitleList(): IOLoaderSubtitleStreamInfo {\r\n    if (this.masterPlaylist && this.hasSubtitle()) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      return {\r\n        list: currentVariant.subtitles.map((item) => {\r\n          return {\r\n            lang: item.language,\r\n            codec: item.name\r\n          }\r\n        }),\r\n        selectedIndex: this.subtitleSelectedIndex\r\n      }\r\n    }\r\n    return {\r\n      list: [],\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  public selectVideo(index: number) {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[index]\r\n      if (currentVariant) {\r\n        const mediaUrl = this.buildUrl(currentVariant.uri)\r\n        fetchMediaPlayList(\r\n          mediaUrl,\r\n          this.info,\r\n          this.options\r\n        ).then((list) => {\r\n          this.loaders.get(AVMediaType.AVMEDIA_TYPE_VIDEO).setMediaPlayList(mediaUrl, list)\r\n          this.mediaPlayListIndex = index\r\n        })\r\n\r\n        if (currentVariant.audio.length === 1\r\n          && this.loaders.has(AVMediaType.AVMEDIA_TYPE_AUDIO)\r\n          && this.buildUrl(currentVariant.audio[0].uri) !== this.loaders.get(AVMediaType.AVMEDIA_TYPE_AUDIO).getMediaListUrl()\r\n        ) {\r\n          const mediaUrl = this.buildUrl(currentVariant.audio[0].uri)\r\n          fetchMediaPlayList(\r\n            mediaUrl,\r\n            this.info,\r\n            this.options\r\n          ).then((list) => {\r\n            this.loaders.get(AVMediaType.AVMEDIA_TYPE_AUDIO).setMediaPlayList(mediaUrl, list)\r\n          })\r\n        }\r\n\r\n        if (currentVariant.subtitles.length === 1\r\n          && this.loaders.has(AVMediaType.AVMEDIA_TYPE_SUBTITLE)\r\n          && this.buildUrl(currentVariant.subtitles[0].uri) !== this.loaders.get(AVMediaType.AVMEDIA_TYPE_SUBTITLE).getMediaListUrl()\r\n        ) {\r\n          const mediaUrl = this.buildUrl(currentVariant.subtitles[0].uri)\r\n          fetchMediaPlayList(\r\n            mediaUrl,\r\n            this.info,\r\n            this.options\r\n          ).then((list) => {\r\n            this.loaders.get(AVMediaType.AVMEDIA_TYPE_SUBTITLE).setMediaPlayList(mediaUrl, list)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectAudio(index: number) {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      if (currentVariant?.audio[index]) {\r\n        const mediaUrl = this.buildUrl(currentVariant.audio[index].uri)\r\n        fetchMediaPlayList(\r\n          mediaUrl,\r\n          this.info,\r\n          this.options\r\n        ).then((list) => {\r\n          this.loaders.get(AVMediaType.AVMEDIA_TYPE_AUDIO).setMediaPlayList(mediaUrl, list)\r\n          this.audioSelectedIndex = index\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectSubtitle(index: number) {\r\n    if (this.masterPlaylist) {\r\n      const currentVariant = this.masterPlaylist.variants[this.mediaPlayListIndex]\r\n      if (currentVariant?.subtitles[index]) {\r\n        const mediaUrl = this.buildUrl(currentVariant.subtitles[index].uri)\r\n        fetchMediaPlayList(\r\n          mediaUrl,\r\n          this.info,\r\n          this.options\r\n        ).then((list) => {\r\n          this.loaders.get(AVMediaType.AVMEDIA_TYPE_SUBTITLE).setMediaPlayList(mediaUrl, list)\r\n          this.subtitleSelectedIndex = index\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  public getMinBuffer() {\r\n    return this.mainLoader?.getMinBuffer() ?? 0\r\n  }\r\n}\r\n","/**\r\n * from https://github.com/kuu/hls-parser/blob/master/parse.ts\r\n * MIT license \r\n * \r\n */\r\n\r\nimport * as utils from './utils'\r\nimport {\r\n  Rendition,\r\n  Variant,\r\n  SessionData,\r\n  Key,\r\n  MediaInitializationSection,\r\n  Byterange,\r\n  DateRange,\r\n  SpliceInfo,\r\n  MasterPlaylist,\r\n  MediaPlaylist,\r\n  Segment,\r\n  PartialSegment,\r\n  PrefetchSegment,\r\n  RenditionReport\r\n} from './types'\r\nimport { Data } from 'common/types/type'\r\n\r\nimport * as logger from 'common/util/logger'\r\n\r\nfunction unquote(str: string | undefined) {\r\n  return utils.trim(str, '\"')\r\n}\r\n\r\ntype TagCategory = 'Basic' | 'Segment' | 'MasterPlaylist' | 'MediaPlaylist' | 'MediaorMasterPlaylist' | 'Unknown'\r\n\r\nfunction getTagCategory(tagName: string): TagCategory {\r\n  switch (tagName) {\r\n    case 'EXTM3U':\r\n    case 'EXT-X-VERSION':\r\n      return 'Basic'\r\n    case 'EXTINF':\r\n    case 'EXT-X-BYTERANGE':\r\n    case 'EXT-X-DISCONTINUITY':\r\n    case 'EXT-X-PREFETCH-DISCONTINUITY':\r\n    case 'EXT-X-KEY':\r\n    case 'EXT-X-MAP':\r\n    case 'EXT-X-PROGRAM-DATE-TIME':\r\n    case 'EXT-X-DATERANGE':\r\n    case 'EXT-X-CUE-OUT':\r\n    case 'EXT-X-CUE-IN':\r\n    case 'EXT-X-CUE-OUT-CONT':\r\n    case 'EXT-X-CUE':\r\n    case 'EXT-OATCLS-SCTE35':\r\n    case 'EXT-X-ASSET':\r\n    case 'EXT-X-SCTE35':\r\n    case 'EXT-X-PART':\r\n    case 'EXT-X-PRELOAD-HINT':\r\n      return 'Segment'\r\n    case 'EXT-X-TARGETDURATION':\r\n    case 'EXT-X-MEDIA-SEQUENCE':\r\n    case 'EXT-X-DISCONTINUITY-SEQUENCE':\r\n    case 'EXT-X-ENDLIST':\r\n    case 'EXT-X-PLAYLIST-TYPE':\r\n    case 'EXT-X-I-FRAMES-ONLY':\r\n    case 'EXT-X-SERVER-CONTROL':\r\n    case 'EXT-X-PART-INF':\r\n    case 'EXT-X-PREFETCH':\r\n    case 'EXT-X-RENDITION-REPORT':\r\n    case 'EXT-X-SKIP':\r\n      return 'MediaPlaylist'\r\n    case 'EXT-X-MEDIA':\r\n    case 'EXT-X-STREAM-INF':\r\n    case 'EXT-X-I-FRAME-STREAM-INF':\r\n    case 'EXT-X-SESSION-DATA':\r\n    case 'EXT-X-SESSION-KEY':\r\n      return 'MasterPlaylist'\r\n    case 'EXT-X-INDEPENDENT-SEGMENTS':\r\n    case 'EXT-X-START':\r\n      return 'MediaorMasterPlaylist'\r\n    default:\r\n      return 'Unknown'\r\n  }\r\n}\r\n\r\nfunction parseEXTINF(param: string) {\r\n  const pair = utils.splitAt(param, ',') as [string, string]\r\n  return {duration: utils.toNumber(pair[0]), title: decodeURIComponent(escape(pair[1]))}\r\n}\r\n\r\nfunction parseBYTERANGE(param: string): Byterange {\r\n  const pair = utils.splitAt(param, '@')\r\n  return {length: utils.toNumber(pair[0]), offset: pair[1] ? utils.toNumber(pair[1]) : -1}\r\n}\r\n\r\nfunction parseResolution(str: string) {\r\n  const pair = utils.splitAt(str, 'x') as [string, string]\r\n  return {width: utils.toNumber(pair[0]), height: utils.toNumber(pair[1])}\r\n}\r\n\r\nfunction parseAllowedCpc(str: string) {\r\n  const message = 'ALLOWED-CPC: Each entry must consit of KEYFORMAT and Content Protection Configuration'\r\n  const list = str.split(',')\r\n  if (list.length === 0) {\r\n    logger.error(message)\r\n  }\r\n  const allowedCpcList: {format: string, cpcList: string[]}[] = []\r\n  for (const item of list) {\r\n    const [format, cpcText] = utils.splitAt(item, ':')\r\n    if (!format || !cpcText) {\r\n      logger.error(message)\r\n      continue\r\n    }\r\n    allowedCpcList.push({format, cpcList: cpcText.split('/')})\r\n  }\r\n  return allowedCpcList\r\n}\r\n\r\nfunction parseIV(str: string): Uint8Array {\r\n  const iv = utils.hexToByteSequence(str)\r\n  if (iv.length !== 16) {\r\n    logger.error('IV must be a 128-bit unsigned integer')\r\n  }\r\n  return iv\r\n}\r\n\r\nfunction parseUserAttribute(str: string) {\r\n  if (str.startsWith('\"')) {\r\n    return unquote(str)\r\n  }\r\n  if (str.startsWith('0x') || str.startsWith('0X')) {\r\n    return utils.hexToByteSequence(str)\r\n  }\r\n  return utils.toNumber(str)\r\n}\r\n\r\nfunction setCompatibleVersionOfKey(params: Record<string, any>, attributes: Record<string, any>) {\r\n  if (attributes['IV'] && params.compatibleVersion < 2) {\r\n    params.compatibleVersion = 2\r\n  }\r\n  if ((attributes['KEYFORMAT'] || attributes['KEYFORMATVERSIONS']) && params.compatibleVersion < 5) {\r\n    params.compatibleVersion = 5\r\n  }\r\n}\r\n\r\nfunction parseAttributeList(param: string) {\r\n  const attributes = {}\r\n  for (const item of utils.splitByCommaWithPreservingQuotes(param)) {\r\n    const [key, value] = utils.splitAt(item, '=')\r\n    const val = unquote(value)!\r\n    switch (key) {\r\n      case 'URI':\r\n        attributes[key] = val\r\n        break\r\n      case 'START-DATE':\r\n      case 'END-DATE':\r\n        attributes[key] = new Date(val)\r\n        break\r\n      case 'IV':\r\n        attributes[key] = parseIV(val)\r\n        break\r\n      case 'BYTERANGE':\r\n        attributes[key] = parseBYTERANGE(val)\r\n        break\r\n      case 'RESOLUTION':\r\n        attributes[key] = parseResolution(val)\r\n        break\r\n      case 'ALLOWED-CPC':\r\n        attributes[key] = parseAllowedCpc(val)\r\n        break\r\n      case 'END-ON-NEXT':\r\n      case 'DEFAULT':\r\n      case 'AUTOSELECT':\r\n      case 'FORCED':\r\n      case 'PRECISE':\r\n      case 'CAN-BLOCK-RELOAD':\r\n      case 'INDEPENDENT':\r\n      case 'GAP':\r\n        attributes[key] = val === 'YES'\r\n        break\r\n      case 'DURATION':\r\n      case 'PLANNED-DURATION':\r\n      case 'BANDWIDTH':\r\n      case 'AVERAGE-BANDWIDTH':\r\n      case 'FRAME-RATE':\r\n      case 'TIME-OFFSET':\r\n      case 'CAN-SKIP-UNTIL':\r\n      case 'HOLD-BACK':\r\n      case 'PART-HOLD-BACK':\r\n      case 'PART-TARGET':\r\n      case 'BYTERANGE-START':\r\n      case 'BYTERANGE-LENGTH':\r\n      case 'LAST-MSN':\r\n      case 'LAST-PART':\r\n      case 'SKIPPED-SEGMENTS':\r\n      case 'SCORE':\r\n      case 'PROGRAM-ID':\r\n        attributes[key] = utils.toNumber(val)\r\n        break\r\n      default:\r\n        if (key.startsWith('SCTE35-')) {\r\n          attributes[key] = utils.hexToByteSequence(val)\r\n        }\r\n        else if (key.startsWith('X-')) {\r\n          attributes[key] = parseUserAttribute(value!)\r\n        }\r\n        else {\r\n          if (key === 'VIDEO-RANGE' && val !== 'SDR' && val !== 'HLG' && val !== 'PQ') {\r\n            logger.fatal(`VIDEO-RANGE: unknown value \"${val}\"`)\r\n          }\r\n          attributes[key] = val\r\n        }\r\n    }\r\n  }\r\n  return attributes\r\n}\r\n\r\nfunction parseTagParam(name: string, param: string) {\r\n  switch (name) {\r\n    case 'EXTM3U':\r\n    case 'EXT-X-DISCONTINUITY':\r\n    case 'EXT-X-ENDLIST':\r\n    case 'EXT-X-I-FRAMES-ONLY':\r\n    case 'EXT-X-INDEPENDENT-SEGMENTS':\r\n    case 'EXT-X-CUE-IN':\r\n      return [null, null]\r\n    case 'EXT-X-VERSION':\r\n    case 'EXT-X-TARGETDURATION':\r\n    case 'EXT-X-MEDIA-SEQUENCE':\r\n    case 'EXT-X-DISCONTINUITY-SEQUENCE':\r\n      return [utils.toNumber(param), null]\r\n    case 'EXT-X-CUE-OUT':\r\n      // For backwards compatibility: attributes list is optional,\r\n      // if only a number is found, use it as the duration\r\n      if (!Number.isNaN(Number(param))) {\r\n        return [utils.toNumber(param), null]\r\n      }\r\n      // If attributes are found, parse them out (i.e. DURATION)\r\n      return [null, parseAttributeList(param)]\r\n    case 'EXT-X-KEY':\r\n    case 'EXT-X-MAP':\r\n    case 'EXT-X-DATERANGE':\r\n    case 'EXT-X-MEDIA':\r\n    case 'EXT-X-STREAM-INF':\r\n    case 'EXT-X-I-FRAME-STREAM-INF':\r\n    case 'EXT-X-SESSION-DATA':\r\n    case 'EXT-X-SESSION-KEY':\r\n    case 'EXT-X-START':\r\n    case 'EXT-X-SERVER-CONTROL':\r\n    case 'EXT-X-PART-INF':\r\n    case 'EXT-X-PART':\r\n    case 'EXT-X-PRELOAD-HINT':\r\n    case 'EXT-X-RENDITION-REPORT':\r\n    case 'EXT-X-SKIP':\r\n      return [null, parseAttributeList(param)]\r\n    case 'EXTINF':\r\n      return [parseEXTINF(param), null]\r\n    case 'EXT-X-BYTERANGE':\r\n      return [parseBYTERANGE(param), null]\r\n    case 'EXT-X-PROGRAM-DATE-TIME':\r\n      return [new Date(param), null]\r\n    case 'EXT-X-PLAYLIST-TYPE':\r\n      // <EVENT|VOD>\r\n      return [param, null]\r\n    default:\r\n      // Unknown tag\r\n      return [param, null]\r\n  }\r\n}\r\n\r\nfunction splitTag(line: string): [string, string | null] {\r\n  const index = line.indexOf(':')\r\n  if (index === -1) {\r\n    return [line.slice(1).trim(), null]\r\n  }\r\n  return [line.slice(1, index).trim(), line.slice(index + 1).trim()]\r\n}\r\n\r\nfunction parseRendition({attributes}: Tag): Rendition {\r\n  const rendition = new Rendition({\r\n    type: attributes['TYPE'],\r\n    uri: attributes['URI'],\r\n    groupId: attributes['GROUP-ID'],\r\n    language: attributes['LANGUAGE'],\r\n    assocLanguage: attributes['ASSOC-LANGUAGE'],\r\n    name: attributes['NAME'],\r\n    isDefault: attributes['DEFAULT'],\r\n    autoselect: attributes['AUTOSELECT'],\r\n    forced: attributes['FORCED'],\r\n    instreamId: attributes['INSTREAM-ID'],\r\n    characteristics: attributes['CHARACTERISTICS'],\r\n    channels: attributes['CHANNELS']\r\n  })\r\n  return rendition\r\n}\r\n\r\nfunction checkRedundantRendition(renditions, rendition) {\r\n  let defaultFound = false\r\n  for (const item of renditions) {\r\n    if (item.name === rendition.name) {\r\n      return 'All EXT-X-MEDIA tags in the same Group MUST have different NAME attributes.'\r\n    }\r\n    if (item.isDefault) {\r\n      defaultFound = true\r\n    }\r\n  }\r\n  if (defaultFound && rendition.isDefault) {\r\n    return 'EXT-X-MEDIA A Group MUST NOT have more than one member with a DEFAULT attribute of YES.'\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction addRendition(variant: Data, line: Tag, type: string) {\r\n  const rendition = parseRendition(line)\r\n  const renditions = variant[utils.camelify(type)]\r\n  const errorMessage = checkRedundantRendition(renditions, rendition)\r\n  if (errorMessage) {\r\n    logger.fatal(errorMessage)\r\n  }\r\n  renditions.push(rendition)\r\n  if (rendition.isDefault) {\r\n    variant.currentRenditions[utils.camelify(type)] = renditions.length - 1\r\n  }\r\n}\r\n\r\nfunction matchTypes(attrs: Data, variant: Data, params: Data) {\r\n  for (const type of ['AUDIO', 'VIDEO', 'SUBTITLES', 'CLOSED-CAPTIONS']) {\r\n    if (type === 'CLOSED-CAPTIONS' && attrs[type] === 'NONE') {\r\n      params.isClosedCaptionsNone = true\r\n      variant.closedCaptions = []\r\n    }\r\n    else if (attrs[type] && !variant[utils.camelify(type)].some((item) => item.groupId === attrs[type])) {\r\n      logger.fatal(`${type} attribute MUST match the value of the GROUP-ID attribute of an EXT-X-MEDIA tag whose TYPE attribute is ${type}.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseVariant(lines: Tag[], variantAttrs: Data, uri: Tag, iFrameOnly: boolean, params: Data) {\r\n  const variant = new Variant({\r\n    uri,\r\n    bandwidth: variantAttrs['BANDWIDTH'],\r\n    averageBandwidth: variantAttrs['AVERAGE-BANDWIDTH'],\r\n    score: variantAttrs['SCORE'],\r\n    codecs: variantAttrs['CODECS'],\r\n    resolution: variantAttrs['RESOLUTION'],\r\n    frameRate: variantAttrs['FRAME-RATE'],\r\n    hdcpLevel: variantAttrs['HDCP-LEVEL'],\r\n    allowedCpc: variantAttrs['ALLOWED-CPC'],\r\n    videoRange: variantAttrs['VIDEO-RANGE'],\r\n    stableVariantId: variantAttrs['STABLE-VARIANT-ID'],\r\n    programId: variantAttrs['PROGRAM-ID']\r\n  })\r\n  for (const line of lines) {\r\n    if (line.name === 'EXT-X-MEDIA') {\r\n      const renditionAttrs = line.attributes\r\n      const renditionType = renditionAttrs['TYPE']\r\n      if (!renditionType || !renditionAttrs['GROUP-ID']) {\r\n        logger.fatal('EXT-X-MEDIA TYPE attribute is REQUIRED.')\r\n      }\r\n      if (variantAttrs[renditionType] === renditionAttrs['GROUP-ID']) {\r\n        addRendition(variant, line, renditionType)\r\n        if (renditionType === 'CLOSED-CAPTIONS') {\r\n          for (const {instreamId} of variant.closedCaptions) {\r\n            if (instreamId && instreamId.startsWith('SERVICE') && params.compatibleVersion < 7) {\r\n              params.compatibleVersion = 7\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  matchTypes(variantAttrs, variant, params)\r\n  variant.isIFrameOnly = iFrameOnly\r\n  return variant\r\n}\r\n\r\nfunction sameKey(key1: Key, key2: Key) {\r\n  if (key1.method !== key2.method) {\r\n    return false\r\n  }\r\n  if (key1.uri !== key2.uri) {\r\n    return false\r\n  }\r\n  if (key1.iv) {\r\n    if (!key2.iv) {\r\n      return false\r\n    }\r\n    if (key1.iv.length !== key2.iv.length) {\r\n      return false\r\n    }\r\n    for (let i = 0; i < key1.iv.length; i++) {\r\n      if (key1.iv[i] !== key2.iv[i]) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  else if (key2.iv) {\r\n    return false\r\n  }\r\n  if (key1.format !== key2.format) {\r\n    return false\r\n  }\r\n  if (key1.formatVersion !== key2.formatVersion) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nfunction parseMasterPlaylist(lines: Line[], params: Record<string, any>): MasterPlaylist {\r\n  const playlist = new MasterPlaylist()\r\n  let variantIsScored = false\r\n  for (const [index, {name, value, attributes}] of (lines as Tag[]).entries()) {\r\n    if (name === 'EXT-X-VERSION') {\r\n      playlist.version = value\r\n    }\r\n    else if (name === 'EXT-X-STREAM-INF') {\r\n      const uri = lines[index + 1]\r\n      if (typeof uri !== 'string' || uri.startsWith('#EXT')) {\r\n        logger.fatal('EXT-X-STREAM-INF must be followed by a URI line')\r\n      }\r\n      const variant = parseVariant(lines as Tag[], attributes, uri as Tag, false, params)\r\n      if (variant) {\r\n        if (typeof variant.score === 'number') {\r\n          variantIsScored = true\r\n          if (variant.score < 0) {\r\n            logger.fatal('SCORE attribute on EXT-X-STREAM-INF must be positive decimal-floating-point number.')\r\n          }\r\n        }\r\n        playlist.variants.push(variant)\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-I-FRAME-STREAM-INF') {\r\n      const variant = parseVariant(lines as Tag[], attributes, attributes.URI, true, params)\r\n      if (variant) {\r\n        playlist.variants.push(variant)\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-SESSION-DATA') {\r\n      const sessionData = new SessionData({\r\n        id: attributes['DATA-ID'],\r\n        value: attributes['VALUE'],\r\n        uri: attributes['URI'],\r\n        language: attributes['LANGUAGE']\r\n      })\r\n      if (playlist.sessionDataList.some((item) => item.id === sessionData.id && item.language === sessionData.language)) {\r\n        logger.fatal('A Playlist MUST NOT contain more than one EXT-X-SESSION-DATA tag with the same DATA-ID attribute and the same LANGUAGE attribute.')\r\n      }\r\n      playlist.sessionDataList.push(sessionData)\r\n    }\r\n    else if (name === 'EXT-X-SESSION-KEY') {\r\n      if (attributes['METHOD'] === 'NONE') {\r\n        logger.fatal('EXT-X-SESSION-KEY: The value of the METHOD attribute MUST NOT be NONE')\r\n      }\r\n      const sessionKey = new Key({\r\n        method: attributes['METHOD'],\r\n        uri: attributes['URI'],\r\n        iv: attributes['IV'],\r\n        format: attributes['KEYFORMAT'],\r\n        formatVersion: attributes['KEYFORMATVERSIONS']\r\n      })\r\n      if (playlist.sessionKeyList.some((item) => sameKey(item, sessionKey))) {\r\n        logger.fatal('A Master Playlist MUST NOT contain more than one EXT-X-SESSION-KEY tag with the same METHOD, URI, IV, KEYFORMAT, and KEYFORMATVERSIONS attribute values.')\r\n      }\r\n      setCompatibleVersionOfKey(params, attributes)\r\n      playlist.sessionKeyList.push(sessionKey)\r\n    }\r\n    else if (name === 'EXT-X-INDEPENDENT-SEGMENTS') {\r\n      if (playlist.independentSegments) {\r\n        logger.fatal('EXT-X-INDEPENDENT-SEGMENTS tag MUST NOT appear more than once in a Playlist')\r\n      }\r\n      playlist.independentSegments = true\r\n    }\r\n    else if (name === 'EXT-X-START') {\r\n      if (playlist.start) {\r\n        logger.fatal('EXT-X-START tag MUST NOT appear more than once in a Playlist')\r\n      }\r\n      if (typeof attributes['TIME-OFFSET'] !== 'number') {\r\n        logger.fatal('EXT-X-START: TIME-OFFSET attribute is REQUIRED')\r\n      }\r\n      playlist.start = {offset: attributes['TIME-OFFSET'], precise: attributes['PRECISE'] || false}\r\n    }\r\n  }\r\n  if (variantIsScored) {\r\n    for (const variant of playlist.variants) {\r\n      if (typeof variant.score !== 'number') {\r\n        logger.fatal('If any Variant Stream contains the SCORE attribute, then all Variant Streams in the Master Playlist SHOULD have a SCORE attribute')\r\n      }\r\n    }\r\n  }\r\n  if (params.isClosedCaptionsNone) {\r\n    for (const variant of playlist.variants) {\r\n      if (variant.closedCaptions.length > 0) {\r\n        logger.fatal('If there is a variant with CLOSED-CAPTIONS attribute of NONE, all EXT-X-STREAM-INF tags MUST have this attribute with a value of NONE')\r\n      }\r\n    }\r\n  }\r\n  return playlist\r\n}\r\n\r\nfunction parseSegment(\r\n  lines: Line[],\r\n  uri: string,\r\n  start: number,\r\n  end: number,\r\n  mediaSequenceNumber: number,\r\n  discontinuitySequence: number,\r\n  params: Record<string, any>\r\n) {\r\n  const segment = new Segment({uri, mediaSequenceNumber, discontinuitySequence})\r\n  let mapHint = false\r\n  let partHint = false\r\n  for (let i = start; i <= end; i++) {\r\n    const {name, value, attributes} = lines[i] as Tag\r\n    if (name === 'EXTINF') {\r\n      if (!Number.isInteger(value.duration) && params.compatibleVersion < 3) {\r\n        params.compatibleVersion = 3\r\n      }\r\n      if (Math.round(value.duration) > params.targetDuration) {\r\n        logger.fatal('EXTINF duration, when rounded to the nearest integer, MUST be less than or equal to the target duration')\r\n      }\r\n      segment.duration = value.duration\r\n      segment.title = value.title\r\n    }\r\n    else if (name === 'EXT-X-BYTERANGE') {\r\n      if (params.compatibleVersion < 4) {\r\n        params.compatibleVersion = 4\r\n      }\r\n      segment.byterange = value\r\n    }\r\n    else if (name === 'EXT-X-DISCONTINUITY') {\r\n      if (segment.parts.length > 0) {\r\n        logger.fatal('EXT-X-DISCONTINUITY must appear before the first EXT-X-PART tag of the Parent Segment.')\r\n      }\r\n      segment.discontinuity = true\r\n    }\r\n    else if (name === 'EXT-X-KEY') {\r\n      if (segment.parts.length > 0) {\r\n        logger.fatal('EXT-X-KEY must appear before the first EXT-X-PART tag of the Parent Segment.')\r\n      }\r\n\r\n      if (attributes['METHOD'] !== 'NONE') {\r\n        setCompatibleVersionOfKey(params, attributes)\r\n        segment.key = new Key({\r\n          method: attributes['METHOD'],\r\n          uri: attributes['URI'],\r\n          iv: attributes['IV'],\r\n          format: attributes['KEYFORMAT'],\r\n          formatVersion: attributes['KEYFORMATVERSIONS']\r\n        })\r\n      }\r\n      else {\r\n        segment.key = null\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-MAP') {\r\n      if (segment.parts.length > 0) {\r\n        logger.fatal('EXT-X-MAP must appear before the first EXT-X-PART tag of the Parent Segment.')\r\n      }\r\n      if (params.compatibleVersion < 5) {\r\n        params.compatibleVersion = 5\r\n      }\r\n      params.hasMap = true\r\n      segment.map = new MediaInitializationSection({\r\n        uri: attributes['URI'],\r\n        byterange: attributes['BYTERANGE'],\r\n        key: segment.key\r\n      })\r\n    }\r\n    else if (name === 'EXT-X-PROGRAM-DATE-TIME') {\r\n      segment.programDateTime = value\r\n    }\r\n    else if (name === 'EXT-X-DATERANGE') {\r\n      const attrs: Record<string, any> = {}\r\n      for (const key of Object.keys(attributes)) {\r\n        if (key.startsWith('SCTE35-') || key.startsWith('X-')) {\r\n          attrs[key] = attributes[key]\r\n        }\r\n      }\r\n      segment.dateRange = new DateRange({\r\n        id: attributes['ID'],\r\n        classId: attributes['CLASS'],\r\n        start: attributes['START-DATE'],\r\n        end: attributes['END-DATE'],\r\n        duration: attributes['DURATION'],\r\n        plannedDuration: attributes['PLANNED-DURATION'],\r\n        endOnNext: attributes['END-ON-NEXT'],\r\n        attributes: attrs\r\n      })\r\n    }\r\n    else if (name === 'EXT-X-CUE-OUT') {\r\n      segment.markers.push(new SpliceInfo({\r\n        type: 'OUT',\r\n        duration: (attributes && attributes.DURATION) || value\r\n      }))\r\n    }\r\n    else if (name === 'EXT-X-CUE-IN') {\r\n      segment.markers.push(new SpliceInfo({\r\n        type: 'IN'\r\n      }))\r\n    }\r\n    else if (\r\n      name === 'EXT-X-CUE-OUT-CONT' ||\r\n      name === 'EXT-X-CUE' ||\r\n      name === 'EXT-OATCLS-SCTE35' ||\r\n      name === 'EXT-X-ASSET' ||\r\n      name === 'EXT-X-SCTE35'\r\n    ) {\r\n      segment.markers.push(new SpliceInfo({\r\n        type: 'RAW',\r\n        tagName: name,\r\n        value\r\n      }))\r\n    }\r\n    else if (name === 'EXT-X-PRELOAD-HINT' && !attributes['TYPE']) {\r\n      logger.fatal('EXT-X-PRELOAD-HINT: TYPE attribute is mandatory')\r\n    }\r\n    else if (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'PART' && partHint) {\r\n      logger.fatal('Servers should not add more than one EXT-X-PRELOAD-HINT tag with the same TYPE attribute to a Playlist.')\r\n    }\r\n    else if ((name === 'EXT-X-PART' || name === 'EXT-X-PRELOAD-HINT') && !attributes['URI']) {\r\n      logger.fatal('EXT-X-PART / EXT-X-PRELOAD-HINT: URI attribute is mandatory')\r\n    }\r\n    else if (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'MAP') {\r\n      if (mapHint) {\r\n        logger.fatal('Servers should not add more than one EXT-X-PRELOAD-HINT tag with the same TYPE attribute to a Playlist.')\r\n      }\r\n      mapHint = true\r\n      params.hasMap = true\r\n      segment.map = new MediaInitializationSection({\r\n        hint: true,\r\n        uri: attributes['URI'],\r\n        byterange: {length: attributes['BYTERANGE-LENGTH'], offset: attributes['BYTERANGE-START'] || 0}\r\n      })\r\n    }\r\n    else if (name === 'EXT-X-PART' || (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'PART')) {\r\n      if (name === 'EXT-X-PART' && !attributes['DURATION']) {\r\n        logger.fatal('EXT-X-PART: DURATION attribute is mandatory')\r\n      }\r\n      if (name === 'EXT-X-PRELOAD-HINT') {\r\n        partHint = true\r\n      }\r\n      const partialSegment = new PartialSegment({\r\n        hint: (name === 'EXT-X-PRELOAD-HINT'),\r\n        uri: attributes['URI'],\r\n        byterange: (name === 'EXT-X-PART' ? attributes['BYTERANGE'] : {length: attributes['BYTERANGE-LENGTH'], offset: attributes['BYTERANGE-START'] || 0}),\r\n        duration: attributes['DURATION'],\r\n        independent: attributes['INDEPENDENT'],\r\n        gap: attributes['GAP']\r\n      })\r\n      segment.parts.push(partialSegment)\r\n    }\r\n  }\r\n  return segment\r\n}\r\n\r\nfunction parsePrefetchSegment(\r\n  lines: Line[],\r\n  uri: any,\r\n  start: number,\r\n  end: number,\r\n  mediaSequenceNumber: number,\r\n  discontinuitySequence: number,\r\n  params: Record<string, any>\r\n) {\r\n  const segment = new PrefetchSegment({uri, mediaSequenceNumber, discontinuitySequence})\r\n  for (let i = start; i <= end; i++) {\r\n    const {name, attributes} = lines[i] as Tag\r\n    if (name === 'EXTINF') {\r\n      logger.fatal('A prefetch segment must not be advertised with an EXTINF tag.')\r\n    }\r\n    else if (name === 'EXT-X-DISCONTINUITY') {\r\n      logger.fatal('A prefetch segment must not be advertised with an EXT-X-DISCONTINUITY tag.')\r\n    }\r\n    else if (name === 'EXT-X-PREFETCH-DISCONTINUITY') {\r\n      segment.discontinuity = true\r\n    }\r\n    else if (name === 'EXT-X-KEY') {\r\n      if (attributes['METHOD'] !== 'NONE') {\r\n        setCompatibleVersionOfKey(params, attributes)\r\n        segment.key = new Key({\r\n          method: attributes['METHOD'],\r\n          uri: attributes['URI'],\r\n          iv: attributes['IV'],\r\n          format: attributes['KEYFORMAT'],\r\n          formatVersion: attributes['KEYFORMATVERSIONS']\r\n        })\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-MAP') {\r\n      logger.fatal('Prefetch segments must not be advertised with an EXT-X-MAP tag.')\r\n    }\r\n  }\r\n  return segment\r\n}\r\n\r\nfunction parseMediaPlaylist(lines: Line[], params: Record<string, any>) {\r\n  const playlist = new MediaPlaylist()\r\n  let segmentStart = -1\r\n  let mediaSequence = 0\r\n  let discontinuityFound = false\r\n  let prefetchFound = false\r\n  let discontinuitySequence = 0\r\n  let currentKey: Key | null = null\r\n  let currentMap: MediaInitializationSection | null = null\r\n  let containsParts = false\r\n  for (const [index, line] of lines.entries()) {\r\n    const {name, value, attributes, category} = line as Tag\r\n    if (category === 'Segment') {\r\n      if (segmentStart === -1) {\r\n        segmentStart = index\r\n      }\r\n      if (name === 'EXT-X-DISCONTINUITY') {\r\n        discontinuityFound = true\r\n      }\r\n      continue\r\n    }\r\n    if (name === 'EXT-X-VERSION') {\r\n      if (playlist.version === undefined) {\r\n        playlist.version = value\r\n      }\r\n      else {\r\n        logger.fatal('A Playlist file MUST NOT contain more than one EXT-X-VERSION tag.')\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-TARGETDURATION') {\r\n      playlist.targetDuration = params.targetDuration = value\r\n    }\r\n    else if (name === 'EXT-X-MEDIA-SEQUENCE') {\r\n      if (playlist.segments.length > 0) {\r\n        logger.fatal('The EXT-X-MEDIA-SEQUENCE tag MUST appear before the first Media Segment in the Playlist.')\r\n      }\r\n      playlist.mediaSequenceBase = mediaSequence = value\r\n    }\r\n    else if (name === 'EXT-X-DISCONTINUITY-SEQUENCE') {\r\n      if (playlist.segments.length > 0) {\r\n        logger.fatal('The EXT-X-DISCONTINUITY-SEQUENCE tag MUST appear before the first Media Segment in the Playlist.')\r\n      }\r\n      if (discontinuityFound) {\r\n        logger.fatal('The EXT-X-DISCONTINUITY-SEQUENCE tag MUST appear before any EXT-X-DISCONTINUITY tag.')\r\n      }\r\n      playlist.discontinuitySequenceBase = discontinuitySequence = value\r\n    }\r\n    else if (name === 'EXT-X-ENDLIST') {\r\n      playlist.endlist = true\r\n    }\r\n    else if (name === 'EXT-X-PLAYLIST-TYPE') {\r\n      playlist.playlistType = value\r\n    }\r\n    else if (name === 'EXT-X-I-FRAMES-ONLY') {\r\n      if (params.compatibleVersion < 4) {\r\n        params.compatibleVersion = 4\r\n      }\r\n      playlist.isIFrame = true\r\n    }\r\n    else if (name === 'EXT-X-INDEPENDENT-SEGMENTS') {\r\n      if (playlist.independentSegments) {\r\n        logger.fatal('EXT-X-INDEPENDENT-SEGMENTS tag MUST NOT appear more than once in a Playlist')\r\n      }\r\n      playlist.independentSegments = true\r\n    }\r\n    else if (name === 'EXT-X-START') {\r\n      if (playlist.start) {\r\n        logger.fatal('EXT-X-START tag MUST NOT appear more than once in a Playlist')\r\n      }\r\n      if (typeof attributes['TIME-OFFSET'] !== 'number') {\r\n        logger.fatal('EXT-X-START: TIME-OFFSET attribute is REQUIRED')\r\n      }\r\n      playlist.start = {offset: attributes['TIME-OFFSET'], precise: attributes['PRECISE'] || false}\r\n    }\r\n    else if (name === 'EXT-X-SERVER-CONTROL') {\r\n      if (!attributes['CAN-BLOCK-RELOAD']) {\r\n        logger.fatal('EXT-X-SERVER-CONTROL: CAN-BLOCK-RELOAD=YES is mandatory for Low-Latency HLS')\r\n      }\r\n      playlist.lowLatencyCompatibility = {\r\n        canBlockReload: attributes['CAN-BLOCK-RELOAD'],\r\n        canSkipUntil: attributes['CAN-SKIP-UNTIL'],\r\n        holdBack: attributes['HOLD-BACK'],\r\n        partHoldBack: attributes['PART-HOLD-BACK']\r\n      }\r\n    }\r\n    else if (name === 'EXT-X-PART-INF') {\r\n      if (!attributes['PART-TARGET']) {\r\n        logger.fatal('EXT-X-PART-INF: PART-TARGET attribute is mandatory')\r\n      }\r\n      playlist.partTargetDuration = attributes['PART-TARGET']\r\n    }\r\n    else if (name === 'EXT-X-RENDITION-REPORT') {\r\n      if (!attributes['URI']) {\r\n        logger.fatal('EXT-X-RENDITION-REPORT: URI attribute is mandatory')\r\n      }\r\n      if (attributes['URI'].search(/^[a-z]+:/) === 0) {\r\n        logger.fatal('EXT-X-RENDITION-REPORT: URI must be relative to the playlist uri')\r\n      }\r\n      playlist.renditionReports.push(new RenditionReport({\r\n        uri: attributes['URI'],\r\n        lastMSN: attributes['LAST-MSN'],\r\n        lastPart: attributes['LAST-PART']\r\n      }))\r\n    }\r\n    else if (name === 'EXT-X-SKIP') {\r\n      if (!attributes['SKIPPED-SEGMENTS']) {\r\n        logger.fatal('EXT-X-SKIP: SKIPPED-SEGMENTS attribute is mandatory')\r\n      }\r\n      if (params.compatibleVersion < 9) {\r\n        params.compatibleVersion = 9\r\n      }\r\n      playlist.skip = attributes['SKIPPED-SEGMENTS']\r\n      mediaSequence += playlist.skip\r\n    }\r\n    else if (name === 'EXT-X-PREFETCH') {\r\n      const segment = parsePrefetchSegment(\r\n        lines,\r\n        value,\r\n        segmentStart === -1 ? index : segmentStart,\r\n        index - 1,\r\n        mediaSequence++,\r\n        discontinuitySequence,\r\n        params\r\n      )\r\n      if (segment) {\r\n        if (segment.discontinuity) {\r\n          segment.discontinuitySequence++\r\n          discontinuitySequence = segment.discontinuitySequence\r\n        }\r\n        if (segment.key) {\r\n          currentKey = segment.key\r\n        }\r\n        else if (segment.key === null) {\r\n          currentKey = undefined\r\n        }\r\n        else {\r\n          segment.key = currentKey\r\n        }\r\n        playlist.prefetchSegments.push(segment)\r\n      }\r\n      prefetchFound = true\r\n      segmentStart = -1\r\n    }\r\n    else if (typeof line === 'string') {\r\n      // uri\r\n      if (segmentStart === -1) {\r\n        logger.fatal('A URI line is not preceded by any segment tags')\r\n      }\r\n      if (!playlist.targetDuration) {\r\n        logger.fatal('The EXT-X-TARGETDURATION tag is REQUIRED')\r\n      }\r\n      if (prefetchFound) {\r\n        logger.fatal('These segments must appear after all complete segments.')\r\n      }\r\n      const segment = parseSegment(lines, line, segmentStart, index - 1, mediaSequence++, discontinuitySequence, params)\r\n      if (segment) {\r\n        if (segment.key === null) {\r\n          currentKey = undefined\r\n        }\r\n        [discontinuitySequence, currentKey, currentMap] = addSegment(playlist, segment, discontinuitySequence, currentKey!, currentMap!)\r\n        if (!containsParts && segment.parts.length > 0) {\r\n          containsParts = true\r\n        }\r\n      }\r\n      segmentStart = -1\r\n    }\r\n  }\r\n  if (segmentStart !== -1) {\r\n    const segment = parseSegment(lines, '', segmentStart, lines.length - 1, mediaSequence++, discontinuitySequence, params)\r\n    if (segment) {\r\n      if (segment.key === null) {\r\n        currentKey = undefined\r\n      }\r\n      const {parts} = segment\r\n      if (parts.length > 0 && !playlist.endlist && !parts[parts.length - 1]?.hint) {\r\n        logger.fatal('If the Playlist contains EXT-X-PART tags and does not contain an EXT-X-ENDLIST tag, the Playlist must contain an EXT-X-PRELOAD-HINT tag with a TYPE=PART attribute')\r\n      }\r\n      addSegment(playlist, segment, discontinuitySequence, currentKey, currentMap)\r\n      if (!containsParts && segment.parts.length > 0) {\r\n        containsParts = true\r\n      }\r\n    }\r\n  }\r\n  checkDateRange(playlist.segments)\r\n  if (playlist.lowLatencyCompatibility) {\r\n    checkLowLatencyCompatibility(playlist, containsParts)\r\n  }\r\n  playlist.duration = playlist.segments.reduce((total, segment) => {\r\n    return typeof segment.duration === 'number' ? total + segment.duration : total\r\n  }, 0)\r\n  return playlist\r\n}\r\n\r\nfunction addSegment(\r\n  playlist: MediaPlaylist,\r\n  segment: Segment,\r\n  discontinuitySequence: number,\r\n  currentKey?: Key,\r\n  currentMap?: MediaInitializationSection\r\n): [number, Key, MediaInitializationSection] {\r\n  const {discontinuity, key, map, byterange, uri} = segment\r\n  if (discontinuity) {\r\n    segment.discontinuitySequence = discontinuitySequence + 1\r\n  }\r\n  if (!key) {\r\n    segment.key = currentKey\r\n  }\r\n  if (!map) {\r\n    segment.map = currentMap!\r\n  }\r\n  if (byterange && byterange.offset === -1) {\r\n    const {segments} = playlist\r\n    if (segments.length > 0) {\r\n      const prevSegment = segments[segments.length - 1]!\r\n      if (prevSegment.byterange && prevSegment.uri === uri) {\r\n        byterange.offset = prevSegment.byterange.offset + prevSegment.byterange.length\r\n      }\r\n      else {\r\n        logger.fatal('If offset of EXT-X-BYTERANGE is not present, a previous Media Segment MUST be a sub-range of the same media resource')\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('If offset of EXT-X-BYTERANGE is not present, a previous Media Segment MUST appear in the Playlist file')\r\n    }\r\n  }\r\n  playlist.segments.push(segment)\r\n  return [segment.discontinuitySequence, segment.key!, segment.map]\r\n}\r\n\r\nfunction checkDateRange(segments: Segment[]) {\r\n  const earliestDates = new Map()\r\n  const rangeList = new Map()\r\n  let hasDateRange = false\r\n  let hasProgramDateTime = false\r\n  for (let i = segments.length - 1; i >= 0; i--) {\r\n    const {programDateTime, dateRange} = segments[i]\r\n    if (programDateTime) {\r\n      hasProgramDateTime = true\r\n    }\r\n    if (dateRange && dateRange.start) {\r\n      hasDateRange = true\r\n      if (dateRange.endOnNext && (dateRange.end || dateRange.duration)) {\r\n        logger.fatal('An EXT-X-DATERANGE tag with an END-ON-NEXT=YES attribute MUST NOT contain DURATION or END-DATE attributes.')\r\n      }\r\n      const start = dateRange.start.getTime()\r\n      const duration = dateRange.duration || 0\r\n      if (dateRange.end && dateRange.duration) {\r\n        if ((start + duration * 1000) !== dateRange.end.getTime()) {\r\n          logger.fatal('END-DATE MUST be equal to the value of the START-DATE attribute plus the value of the DURATION')\r\n        }\r\n      }\r\n      if (dateRange.endOnNext) {\r\n        dateRange.end = earliestDates.get(dateRange.classId)\r\n      }\r\n      earliestDates.set(dateRange.classId, dateRange.start)\r\n      const end = dateRange.end ? dateRange.end.getTime() : dateRange.start.getTime() + (dateRange.duration || 0) * 1000\r\n      const range = rangeList.get(dateRange.classId)\r\n      if (range) {\r\n        for (const entry of range) {\r\n          if ((entry.start <= start && entry.end > start) || (entry.start >= start && entry.start < end)) {\r\n            logger.fatal('DATERANGE tags with the same CLASS should not overlap')\r\n          }\r\n        }\r\n        range.push({start, end})\r\n      }\r\n      else if (dateRange.classId) {\r\n        rangeList.set(dateRange.classId, [{start, end}])\r\n      }\r\n    }\r\n  }\r\n  if (hasDateRange && !hasProgramDateTime) {\r\n    logger.fatal('If a Playlist contains an EXT-X-DATERANGE tag, it MUST also contain at least one EXT-X-PROGRAM-DATE-TIME tag.')\r\n  }\r\n}\r\n\r\nfunction checkLowLatencyCompatibility({lowLatencyCompatibility, targetDuration, partTargetDuration, segments, renditionReports}: any, containsParts) {\r\n  const {canSkipUntil, holdBack, partHoldBack} = lowLatencyCompatibility\r\n  if (canSkipUntil < targetDuration * 6) {\r\n    logger.fatal('The Skip Boundary must be at least six times the EXT-X-TARGETDURATION.')\r\n  }\r\n  // Its value is a floating-point number of seconds and .\r\n  if (holdBack < targetDuration * 3) {\r\n    logger.fatal('HOLD-BACK must be at least three times the EXT-X-TARGETDURATION.')\r\n  }\r\n  if (containsParts) {\r\n    if (partTargetDuration === undefined) {\r\n      logger.fatal('EXT-X-PART-INF is required if a Playlist contains one or more EXT-X-PART tags')\r\n    }\r\n    if (partHoldBack === undefined) {\r\n      logger.fatal('EXT-X-PART: PART-HOLD-BACK attribute is mandatory')\r\n    }\r\n    if (partHoldBack < partTargetDuration) {\r\n      logger.fatal('PART-HOLD-BACK must be at least PART-TARGET')\r\n    }\r\n    for (const [segmentIndex, {parts}] of segments.entries()) {\r\n      // if (parts.length > 0 && segmentIndex < segments.length - 3) {\r\n      //   logger.fatal('Remove EXT-X-PART tags from the Playlist after they are greater than three target durations from the end of the Playlist.')\r\n      // }\r\n      for (const [partIndex, {duration}] of parts.entries()) {\r\n        if (duration === undefined) {\r\n          continue\r\n        }\r\n        if (duration > partTargetDuration) {\r\n          logger.fatal('PART-TARGET is the maximum duration of any Partial Segment')\r\n        }\r\n        if (partIndex < parts.length - 1 && duration < partTargetDuration * 0.85) {\r\n          logger.fatal('All Partial Segments except the last part of a segment must have a duration of at least 85% of PART-TARGET')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (const report of renditionReports) {\r\n    const lastSegment = segments[segments.length - 1]\r\n    if (report.lastMSN === null || report.lastMSN === undefined) {\r\n      report.lastMSN = lastSegment.mediaSequenceNumber\r\n    }\r\n    if ((report.lastPart === null || report.lastPart === undefined) && lastSegment.parts.length > 0) {\r\n      report.lastPart = lastSegment.parts.length - 1\r\n    }\r\n  }\r\n}\r\n\r\nfunction CHECKTAGCATEGORY(category: TagCategory, params: Record<string, any>) {\r\n  if (category === 'Segment' || category === 'MediaPlaylist') {\r\n    if (params.isMasterPlaylist === undefined) {\r\n      params.isMasterPlaylist = false\r\n      return\r\n    }\r\n    if (params.isMasterPlaylist) {\r\n      logger.fatal('The file contains both media and master playlist tags.')\r\n    }\r\n    return\r\n  }\r\n  if (category === 'MasterPlaylist') {\r\n    if (params.isMasterPlaylist === undefined) {\r\n      params.isMasterPlaylist = true\r\n      return\r\n    }\r\n    if (params.isMasterPlaylist === false) {\r\n      logger.fatal('The file contains both media and master playlist tags.')\r\n    }\r\n  }\r\n}\r\n\r\ntype Tag = {\r\n  name: string\r\n  category: TagCategory\r\n  value: any\r\n  attributes: any\r\n}\r\n\r\nfunction parseTag(line: string, params: Record<string, any>): Tag | null {\r\n  const [name, param] = splitTag(line)\r\n  const category = getTagCategory(name)\r\n  CHECKTAGCATEGORY(category, params)\r\n  if (category === 'Unknown') {\r\n    return null\r\n  }\r\n  if (category === 'MediaPlaylist' && name !== 'EXT-X-RENDITION-REPORT' && name !== 'EXT-X-PREFETCH') {\r\n    if (params.hash[name]) {\r\n      logger.fatal('There MUST NOT be more than one Media Playlist tag of each type in any Media Playlist')\r\n    }\r\n    params.hash[name] = true\r\n  }\r\n  const [value, attributes] = parseTagParam(name, param)\r\n  return {name, category, value, attributes}\r\n}\r\n\r\ntype Line = string | Tag\r\n\r\nfunction lexicalParse(text: string, params: Record<string, any>) {\r\n  const lines: Line[] = []\r\n  for (const l of text.split('\\n')) {\r\n    const line = l.trim()\r\n    if (!line) {\r\n      continue\r\n    }\r\n    if (line.startsWith('#')) {\r\n      if (line.startsWith('#EXT')) {\r\n        // tag\r\n        const tag = parseTag(line, params)\r\n        if (tag) {\r\n          lines.push(tag)\r\n        }\r\n      }\r\n      // comment\r\n      continue\r\n    }\r\n    // uri\r\n    lines.push(line)\r\n  }\r\n  if (lines.length === 0 || (lines[0] as Tag).name !== 'EXTM3U') {\r\n    logger.fatal('The EXTM3U tag MUST be the first line.')\r\n  }\r\n  return lines\r\n}\r\n\r\nfunction semanticParse(lines: Line[], params: Record<string, any>) {\r\n  let playlist: MasterPlaylist | MediaPlaylist\r\n  if (params.isMasterPlaylist) {\r\n    playlist = parseMasterPlaylist(lines, params)\r\n  }\r\n  else {\r\n    playlist = parseMediaPlaylist(lines, params)\r\n    if (!playlist.isIFrame && params.hasMap && params.compatibleVersion < 6) {\r\n      params.compatibleVersion = 6\r\n    }\r\n  }\r\n  if (params.compatibleVersion > 1) {\r\n    if (!playlist.version || playlist.version < params.compatibleVersion) {\r\n      logger.fatal(`EXT-X-VERSION needs to be ${params.compatibleVersion} or higher.`)\r\n    }\r\n  }\r\n  return playlist\r\n}\r\n\r\nexport default function parse(text: string): MasterPlaylist | MediaPlaylist {\r\n  const params: Record<string, any> = {\r\n    version: undefined,\r\n    isMasterPlaylist: undefined,\r\n    hasMap: false,\r\n    targetDuration: 0,\r\n    compatibleVersion: 1,\r\n    isClosedCaptionsNone: false,\r\n    hash: {}\r\n  }\r\n\r\n  const lines = lexicalParse(text, params)\r\n  const playlist = semanticParse(lines, params)\r\n  playlist.source = text\r\n\r\n  return playlist\r\n}\r\n","/**\r\n * from https://github.com/kuu/hls-parser/blob/master/types.ts\r\n * MIT license \r\n */\r\n\r\nimport getTimestamp from 'common/function/getTimestamp'\r\n\r\ntype RenditionType = 'AUDIO' | 'VIDEO' | 'SUBTITLES' | 'CLOSED-CAPTIONS'\r\n\r\nclass Rendition {\r\n  type: RenditionType\r\n  uri?: string\r\n  groupId: string\r\n  language?: string\r\n  assocLanguage?: string\r\n  name: string\r\n  isDefault: boolean\r\n  autoselect: boolean\r\n  forced: boolean\r\n  instreamId?: string\r\n  characteristics?: string\r\n  channels?: string\r\n\r\n  constructor({\r\n    // required\r\n    type,\r\n    // required if type='SUBTITLES'\r\n    uri,\r\n    // required\r\n    groupId,\r\n    language,\r\n    assocLanguage,\r\n    // required\r\n    name,\r\n    isDefault,\r\n    autoselect,\r\n    forced,\r\n    // required if type=CLOSED-CAPTIONS\r\n    instreamId,\r\n    characteristics,\r\n    channels\r\n  }: Rendition) {\r\n    this.type = type\r\n    this.uri = uri\r\n    this.groupId = groupId\r\n    this.language = language\r\n    this.assocLanguage = assocLanguage\r\n    this.name = name\r\n    this.isDefault = isDefault\r\n    this.autoselect = autoselect\r\n    this.forced = forced\r\n    this.instreamId = instreamId\r\n    this.characteristics = characteristics\r\n    this.channels = channels\r\n  }\r\n}\r\n\r\nclass Variant {\r\n  uri: string\r\n  isIFrameOnly?: boolean\r\n  bandwidth: number\r\n  averageBandwidth?: number\r\n  score: number\r\n  codecs?: string\r\n  resolution?: { width: number, height: number }\r\n  frameRate?: number\r\n  hdcpLevel?: string\r\n  allowedCpc: { format: string, cpcList: string[] }[]\r\n  videoRange: 'SDR' | 'HLG' | 'PQ'\r\n  stableVariantId: string\r\n  programId: any\r\n  audio: Rendition[]\r\n  video: Rendition[]\r\n  subtitles: Rendition[]\r\n  closedCaptions: Rendition[]\r\n  currentRenditions: { audio: number, video: number, subtitles: number, closedCaptions: number }\r\n\r\n  constructor({\r\n    // required\r\n    uri,\r\n    isIFrameOnly = false,\r\n    // required\r\n    bandwidth,\r\n    averageBandwidth,\r\n    score,\r\n    // required?\r\n    codecs,\r\n    resolution,\r\n    frameRate,\r\n    hdcpLevel,\r\n    allowedCpc,\r\n    videoRange,\r\n    stableVariantId,\r\n    programId,\r\n    audio = [],\r\n    video = [],\r\n    subtitles = [],\r\n    closedCaptions = [],\r\n    currentRenditions = {audio: 0, video: 0, subtitles: 0, closedCaptions: 0}\r\n  }: any) {\r\n    this.uri = uri\r\n    this.isIFrameOnly = isIFrameOnly\r\n    this.bandwidth = bandwidth\r\n    this.averageBandwidth = averageBandwidth\r\n    this.score = score\r\n    this.codecs = codecs\r\n    this.resolution = resolution\r\n    this.frameRate = frameRate\r\n    this.hdcpLevel = hdcpLevel\r\n    this.allowedCpc = allowedCpc\r\n    this.videoRange = videoRange\r\n    this.stableVariantId = stableVariantId\r\n    this.programId = programId\r\n    this.audio = audio\r\n    this.video = video\r\n    this.subtitles = subtitles\r\n    this.closedCaptions = closedCaptions\r\n    this.currentRenditions = currentRenditions\r\n  }\r\n}\r\n\r\nclass SessionData {\r\n  id: string\r\n  value?: string\r\n  uri?: string\r\n  language?: string\r\n\r\n  constructor({\r\n    // required\r\n    id,\r\n    value,\r\n    uri,\r\n    language\r\n  }: SessionData) {\r\n    this.id = id\r\n    this.value = value\r\n    this.uri = uri\r\n    this.language = language\r\n  }\r\n}\r\n\r\nclass Key {\r\n  method: string\r\n  uri?: string\r\n  iv?: Uint8Array<ArrayBuffer>\r\n  format?: string\r\n  formatVersion?: string\r\n\r\n  constructor({\r\n    // required\r\n    method,\r\n    // required unless method=NONE\r\n    uri,\r\n    iv,\r\n    format,\r\n    formatVersion\r\n  }: Key) {\r\n    this.method = method\r\n    this.uri = uri\r\n    this.iv = iv\r\n    this.format = format\r\n    this.formatVersion = formatVersion\r\n  }\r\n}\r\n\r\nexport type Byterange = {\r\n  length: number\r\n  offset: number\r\n}\r\n\r\nclass MediaInitializationSection {\r\n  hint: boolean\r\n  uri: string\r\n  mimeType?: string\r\n  byterange?: Byterange\r\n  key?: Key\r\n\r\n  constructor({\r\n    hint = false,\r\n    // required\r\n    uri,\r\n    mimeType,\r\n    byterange,\r\n    key\r\n  }: Partial<MediaInitializationSection> & {uri: string}) {\r\n    this.hint = hint\r\n    this.uri = uri\r\n    this.mimeType = mimeType\r\n    this.byterange = byterange\r\n    this.key = key\r\n  }\r\n}\r\n\r\nclass DateRange {\r\n  id: string\r\n  classId?: string\r\n  start?: Date\r\n  end?: Date\r\n  duration?: number\r\n  plannedDuration?: number\r\n  endOnNext?: boolean\r\n  attributes: Record<string, any>\r\n\r\n  constructor({\r\n    // required\r\n    id,\r\n    // required if endOnNext is true\r\n    classId,\r\n    start,\r\n    end,\r\n    duration,\r\n    plannedDuration,\r\n    endOnNext,\r\n    attributes = {}\r\n  }: DateRange) {\r\n    this.id = id\r\n    this.classId = classId\r\n    this.start = start\r\n    this.end = end\r\n    this.duration = duration\r\n    this.plannedDuration = plannedDuration\r\n    this.endOnNext = endOnNext\r\n    this.attributes = attributes\r\n  }\r\n}\r\n\r\nclass SpliceInfo {\r\n  type: string\r\n  duration?: number\r\n  tagName?: string\r\n  value?: any\r\n\r\n  constructor({\r\n    // required\r\n    type,\r\n    // required if the type is 'OUT'\r\n    duration,\r\n    // required if the type is 'RAW'\r\n    tagName,\r\n    value\r\n  }: SpliceInfo) {\r\n    this.type = type\r\n    this.duration = duration\r\n    this.tagName = tagName\r\n    this.value = value\r\n  }\r\n}\r\n\r\ntype DataType = 'part' | 'playlist' | 'prefetch' | 'segment'\r\n\r\nclass Data {\r\n  type: DataType\r\n\r\n  constructor(type: DataType) {\r\n    this.type = type\r\n  }\r\n}\r\n\r\nclass Playlist extends Data {\r\n  isMasterPlaylist: boolean\r\n  uri?: string\r\n  version?: number\r\n  independentSegments: boolean\r\n  start?: { offset: number, precise: boolean }\r\n  source?: string\r\n\r\n  constructor({\r\n    // required\r\n    isMasterPlaylist,\r\n    uri,\r\n    version,\r\n    independentSegments = false,\r\n    start,\r\n    source\r\n  }: Partial<Playlist> & { isMasterPlaylist: boolean }) {\r\n    super('playlist')\r\n    this.isMasterPlaylist = isMasterPlaylist\r\n    this.uri = uri\r\n    this.version = version\r\n    this.independentSegments = independentSegments\r\n    this.start = start\r\n    this.source = source\r\n  }\r\n}\r\n\r\nclass MasterPlaylist extends Playlist {\r\n  variants: Variant[]\r\n  currentVariant?: number\r\n  sessionDataList: SessionData[]\r\n  sessionKeyList: Key[]\r\n\r\n  constructor(params: Partial<MasterPlaylist> = {}) {\r\n    super({...params, isMasterPlaylist: true})\r\n    const {\r\n      variants = [],\r\n      currentVariant,\r\n      sessionDataList = [],\r\n      sessionKeyList = []\r\n    } = params\r\n    this.variants = variants\r\n    this.currentVariant = currentVariant\r\n    this.sessionDataList = sessionDataList\r\n    this.sessionKeyList = sessionKeyList\r\n  }\r\n}\r\n\r\ntype LowLatencyCompatibility = {\r\n  canBlockReload: boolean,\r\n  canSkipUntil: number,\r\n  holdBack: number,\r\n  partHoldBack: number,\r\n}\r\n\r\nclass MediaPlaylist extends Playlist {\r\n  targetDuration: number\r\n  mediaSequenceBase?: number\r\n  discontinuitySequenceBase?: number\r\n  endlist: boolean\r\n  playlistType?: 'EVENT' | 'VOD'\r\n  isIFrame?: boolean\r\n  segments: Segment[]\r\n  prefetchSegments: PrefetchSegment[]\r\n  lowLatencyCompatibility?: LowLatencyCompatibility\r\n  partTargetDuration?: number\r\n  renditionReports: RenditionReport[]\r\n  skip: number\r\n  hash?: Record<string, any>\r\n  duration: number\r\n  timestamp: number\r\n\r\n  constructor(params: Partial<MediaPlaylist> = {}) {\r\n    super({...params, isMasterPlaylist: false})\r\n    const {\r\n      targetDuration,\r\n      mediaSequenceBase = 0,\r\n      discontinuitySequenceBase = 0,\r\n      endlist = false,\r\n      playlistType,\r\n      isIFrame,\r\n      segments = [],\r\n      prefetchSegments = [],\r\n      lowLatencyCompatibility,\r\n      partTargetDuration,\r\n      renditionReports = [],\r\n      skip = 0,\r\n      hash,\r\n      duration = 0\r\n    } = params\r\n    this.targetDuration = targetDuration!\r\n    this.mediaSequenceBase = mediaSequenceBase\r\n    this.discontinuitySequenceBase = discontinuitySequenceBase\r\n    this.endlist = endlist\r\n    this.playlistType = playlistType\r\n    this.isIFrame = isIFrame\r\n    this.segments = segments\r\n    this.prefetchSegments = prefetchSegments\r\n    this.lowLatencyCompatibility = lowLatencyCompatibility\r\n    this.partTargetDuration = partTargetDuration\r\n    this.renditionReports = renditionReports\r\n    this.skip = skip\r\n    this.hash = hash\r\n    this.duration = duration\r\n    this.timestamp = getTimestamp()\r\n  }\r\n}\r\n\r\nclass Segment extends Data {\r\n  uri: string\r\n  mimeType: string\r\n  data: any\r\n  duration: number\r\n  title?: string\r\n  byterange: Byterange\r\n  discontinuity?: boolean\r\n  mediaSequenceNumber: number\r\n  discontinuitySequence: number\r\n  key?: Key\r\n  map: MediaInitializationSection\r\n  programDateTime?: Date\r\n  dateRange: DateRange\r\n  markers: SpliceInfo[]\r\n  parts: PartialSegment[]\r\n\r\n  constructor({\r\n    uri,\r\n    mimeType,\r\n    data,\r\n    duration,\r\n    title,\r\n    byterange,\r\n    discontinuity,\r\n    mediaSequenceNumber = 0,\r\n    discontinuitySequence = 0,\r\n    key,\r\n    map,\r\n    programDateTime,\r\n    dateRange,\r\n    markers = [],\r\n    parts = []\r\n  }: any) {\r\n    super('segment')\r\n    this.uri = uri\r\n    this.mimeType = mimeType\r\n    this.data = data\r\n    this.duration = duration\r\n    this.title = title\r\n    this.byterange = byterange\r\n    this.discontinuity = discontinuity\r\n    this.mediaSequenceNumber = mediaSequenceNumber\r\n    this.discontinuitySequence = discontinuitySequence\r\n    this.key = key\r\n    this.map = map\r\n    this.programDateTime = programDateTime\r\n    this.dateRange = dateRange\r\n    this.markers = markers\r\n    this.parts = parts\r\n  }\r\n}\r\n\r\nclass PartialSegment extends Data {\r\n  hint: boolean\r\n  uri: string\r\n  duration?: number\r\n  independent?: boolean\r\n  byterange?: Byterange\r\n  gap?: boolean\r\n\r\n  constructor({\r\n    hint = false,\r\n    // required\r\n    uri,\r\n    duration,\r\n    independent,\r\n    byterange,\r\n    gap\r\n  }: Omit<PartialSegment, 'type'>) {\r\n    super('part')\r\n    this.hint = hint\r\n    this.uri = uri\r\n    this.duration = duration\r\n    this.independent = independent\r\n    this.duration = duration\r\n    this.byterange = byterange\r\n    this.gap = gap\r\n  }\r\n}\r\n\r\nclass PrefetchSegment extends Data {\r\n  uri: string\r\n  discontinuity?: boolean\r\n  mediaSequenceNumber: number\r\n  discontinuitySequence: number\r\n  key?: Key | null\r\n\r\n  constructor({\r\n    // required\r\n    uri,\r\n    discontinuity,\r\n    mediaSequenceNumber = 0,\r\n    discontinuitySequence = 0,\r\n    key\r\n  }: Omit<PrefetchSegment, 'type'>) {\r\n    super('prefetch')\r\n    this.uri = uri\r\n    this.discontinuity = discontinuity\r\n    this.mediaSequenceNumber = mediaSequenceNumber\r\n    this.discontinuitySequence = discontinuitySequence\r\n    this.key = key\r\n  }\r\n}\r\n\r\nclass RenditionReport {\r\n  uri: string\r\n  lastMSN?: number\r\n  lastPart: number\r\n\r\n  constructor({\r\n    // required\r\n    uri,\r\n    lastMSN,\r\n    lastPart\r\n  }: RenditionReport) {\r\n    this.uri = uri\r\n    this.lastMSN = lastMSN\r\n    this.lastPart = lastPart\r\n  }\r\n}\r\n\r\nexport {\r\n  Rendition,\r\n  Variant,\r\n  SessionData,\r\n  Key,\r\n  MediaInitializationSection,\r\n  DateRange,\r\n  SpliceInfo,\r\n  Playlist,\r\n  MasterPlaylist,\r\n  MediaPlaylist,\r\n  Segment,\r\n  PartialSegment,\r\n  PrefetchSegment,\r\n  RenditionReport\r\n}\r\n","/**\r\n * from https://github.com/kuu/hls-parser/blob/master/utils.ts\r\n * MIT license \r\n */\r\n\r\nfunction toNumber(str: string, radix = 10) {\r\n  if (typeof str === 'number') {\r\n    return str\r\n  }\r\n  const num = radix === 10 ? Number.parseFloat(str) : Number.parseInt(str, radix)\r\n  if (Number.isNaN(num)) {\r\n    return 0\r\n  }\r\n  return num\r\n}\r\n\r\nfunction hexToByteSequence(str: string): Uint8Array {\r\n  if (str.startsWith('0x') || str.startsWith('0X')) {\r\n    str = str.slice(2)\r\n  }\r\n  const numArray: number[] = []\r\n  for (let i = 0; i < str.length; i += 2) {\r\n    numArray.push(toNumber(str.slice(i, i + 2), 16))\r\n  }\r\n  return new Uint8Array(numArray)\r\n}\r\n\r\nfunction splitAt(str: string, delimiter: string, index = 0): [string] | [string, string] {\r\n  let lastDelimiterPos = -1\r\n  for (let i = 0, j = 0; i < str.length; i++) {\r\n    if (str[i] === delimiter) {\r\n      if (j++ === index) {\r\n        return [str.slice(0, i), str.slice(i + 1)]\r\n      }\r\n      lastDelimiterPos = i\r\n    }\r\n  }\r\n  if (lastDelimiterPos !== -1) {\r\n    return [str.slice(0, lastDelimiterPos), str.slice(lastDelimiterPos + 1)]\r\n  }\r\n  return [str]\r\n}\r\n\r\nfunction trim(str: string | undefined, char = ' ') {\r\n  if (!str) {\r\n    return str\r\n  }\r\n  str = str.trim()\r\n  if (char === ' ') {\r\n    return str\r\n  }\r\n  if (str.startsWith(char)) {\r\n    str = str.slice(1)\r\n  }\r\n  if (str.endsWith(char)) {\r\n    str = str.slice(0, -1)\r\n  }\r\n  return str\r\n}\r\n\r\nfunction splitByCommaWithPreservingQuotes(str: string) {\r\n  const list: string[] = []\r\n  let doParse = true\r\n  let start = 0\r\n  const prevQuotes: string[] = []\r\n  for (let i = 0; i < str.length; i++) {\r\n    const curr = str[i]\r\n    if (doParse && curr === ',') {\r\n      list.push(str.slice(start, i).trim())\r\n      start = i + 1\r\n      continue\r\n    }\r\n    if (curr === '\"' || curr === '\\'') {\r\n      if (doParse) {\r\n        prevQuotes.push(curr)\r\n        doParse = false\r\n      }\r\n      else if (curr === prevQuotes[prevQuotes.length - 1]) {\r\n        prevQuotes.pop()\r\n        doParse = true\r\n      }\r\n      else {\r\n        prevQuotes.push(curr)\r\n      }\r\n    }\r\n  }\r\n  list.push(str.slice(start).trim())\r\n  return list\r\n}\r\n\r\nfunction camelify(str: string) {\r\n  const array: string[] = []\r\n  let nextUpper = false\r\n  for (const ch of str) {\r\n    if (ch === '-' || ch === '_') {\r\n      nextUpper = true\r\n      continue\r\n    }\r\n    if (nextUpper) {\r\n      array.push(ch.toUpperCase())\r\n      nextUpper = false\r\n      continue\r\n    }\r\n    array.push(ch.toLowerCase())\r\n  }\r\n  return array.join('')\r\n}\r\n\r\nexport {\r\n  toNumber,\r\n  hexToByteSequence,\r\n  splitAt,\r\n  trim,\r\n  splitByCommaWithPreservingQuotes,\r\n  camelify\r\n}\r\n","import { AVFormat, IOType } from './avformat'\r\nimport { AVCodecID, AVMediaType } from './codec'\r\nimport { AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVPixelFormat } from './pixfmt'\r\nimport { AVChannelLayout, AVSampleFormat } from './audiosamplefmt'\r\nimport { AVDisposition } from './AVStream'\r\n\r\nexport const CodecId2MimeType = {\r\n  [AVCodecID.AV_CODEC_ID_MP3]: 'mp3',\r\n  [AVCodecID.AV_CODEC_ID_AAC]: 'mp4a.40',\r\n  [AVCodecID.AV_CODEC_ID_VORBIS]: 'vorbis',\r\n  [AVCodecID.AV_CODEC_ID_FLAC]: 'flac',\r\n  [AVCodecID.AV_CODEC_ID_OPUS]: 'opus',\r\n  [AVCodecID.AV_CODEC_ID_PCM_MULAW]: 'ulaw',\r\n  [AVCodecID.AV_CODEC_ID_PCM_ALAW]: 'alaw',\r\n  [AVCodecID.AV_CODEC_ID_AC3]: 'ac-3',\r\n  [AVCodecID.AV_CODEC_ID_EAC3]: 'ec-3',\r\n  [AVCodecID.AV_CODEC_ID_DTS]: 'dtsc',\r\n\r\n  [AVCodecID.AV_CODEC_ID_AV1]: 'av01',\r\n  [AVCodecID.AV_CODEC_ID_H264]: 'avc1',\r\n  [AVCodecID.AV_CODEC_ID_HEVC]: 'hev1',\r\n  [AVCodecID.AV_CODEC_ID_VVC]: 'vvc1',\r\n  [AVCodecID.AV_CODEC_ID_VP8]: 'vp8',\r\n  [AVCodecID.AV_CODEC_ID_VP9]: 'vp09',\r\n  [AVCodecID.AV_CODEC_ID_MPEG4]: 'mp4v'\r\n}\r\n\r\nexport const Ext2Format: Record<string, AVFormat> = {\r\n  'flv': AVFormat.FLV,\r\n  'mp4': AVFormat.MOV,\r\n  'm4s': AVFormat.MOV,\r\n  'mov': AVFormat.MOV,\r\n  'ts': AVFormat.MPEGTS,\r\n  'mts': AVFormat.MPEGTS,\r\n  'm2ts': AVFormat.MPEGTS,\r\n  'ivf': AVFormat.IVF,\r\n  'opus': AVFormat.OGG,\r\n  'oggs': AVFormat.OGG,\r\n  'ogg': AVFormat.OGG,\r\n  'm3u8': AVFormat.MPEGTS,\r\n  'm3u': AVFormat.MPEGTS,\r\n  'mpd': AVFormat.MOV,\r\n  'mp3': AVFormat.MP3,\r\n  'mkv': AVFormat.MATROSKA,\r\n  'mka': AVFormat.MATROSKA,\r\n  'webm': AVFormat.WEBM,\r\n  'aac': AVFormat.AAC,\r\n  'flac': AVFormat.FLAC,\r\n  'wav': AVFormat.WAV,\r\n  'srt': AVFormat.SUBRIP,\r\n  'vtt': AVFormat.WEBVTT,\r\n  'ssa': AVFormat.ASS,\r\n  'ass': AVFormat.ASS,\r\n  'xml': AVFormat.TTML,\r\n  'ttml': AVFormat.TTML,\r\n  'h264': AVFormat.H264,\r\n  '264': AVFormat.H264,\r\n  'avc': AVFormat.H264,\r\n  'h265': AVFormat.HEVC,\r\n  '265': AVFormat.HEVC,\r\n  'hevc': AVFormat.HEVC,\r\n  'h266': AVFormat.VVC,\r\n  '266': AVFormat.VVC,\r\n  'vvc': AVFormat.VVC,\r\n  'mpeg': AVFormat.MPEGPS,\r\n  'mpg': AVFormat.MPEGPS,\r\n  'rtsp': AVFormat.RTSP,\r\n  'rtmp': AVFormat.RTMP,\r\n  'avi': AVFormat.AVI\r\n}\r\n\r\nexport const Ext2IOLoader: Record<string, IOType> = {\r\n  'm3u8': IOType.HLS,\r\n  'm3u': IOType.HLS,\r\n  'mpd': IOType.DASH\r\n}\r\n\r\nexport const VideoCodecString2CodecId = {\r\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\r\n  'h264': AVCodecID.AV_CODEC_ID_H264,\r\n  'h261': AVCodecID.AV_CODEC_ID_H261,\r\n  'h263': AVCodecID.AV_CODEC_ID_H263,\r\n  'h263i': AVCodecID.AV_CODEC_ID_H263I,\r\n  'h263p': AVCodecID.AV_CODEC_ID_H263P,\r\n  'mjpeg': AVCodecID.AV_CODEC_ID_MJPEG,\r\n  'wmv1': AVCodecID.AV_CODEC_ID_WMV1,\r\n  'wmv2': AVCodecID.AV_CODEC_ID_WMV2,\r\n  'wmv3': AVCodecID.AV_CODEC_ID_WMV3,\r\n  'avc': AVCodecID.AV_CODEC_ID_H264,\r\n  'hevc': AVCodecID.AV_CODEC_ID_HEVC,\r\n  'h265': AVCodecID.AV_CODEC_ID_HEVC,\r\n  'vvc': AVCodecID.AV_CODEC_ID_VVC,\r\n  'h266': AVCodecID.AV_CODEC_ID_VVC,\r\n  'av1': AVCodecID.AV_CODEC_ID_AV1,\r\n  'vp9': AVCodecID.AV_CODEC_ID_VP9,\r\n  'vp8': AVCodecID.AV_CODEC_ID_VP8,\r\n  'mpeg4': AVCodecID.AV_CODEC_ID_MPEG4,\r\n  'theora': AVCodecID.AV_CODEC_ID_THEORA,\r\n  'mpeg2video': AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  'rv10': AVCodecID.AV_CODEC_ID_RV10,\r\n  'rv20': AVCodecID.AV_CODEC_ID_RV20,\r\n  'rv30': AVCodecID.AV_CODEC_ID_RV30,\r\n  'rv40': AVCodecID.AV_CODEC_ID_RV40\r\n}\r\n\r\nexport const AudioCodecString2CodecId = {\r\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\r\n  'aac': AVCodecID.AV_CODEC_ID_AAC,\r\n  'ac3': AVCodecID.AV_CODEC_ID_AC3,\r\n  'eac3': AVCodecID.AV_CODEC_ID_EAC3,\r\n  'dts': AVCodecID.AV_CODEC_ID_DTS,\r\n  'mp3': AVCodecID.AV_CODEC_ID_MP3,\r\n  'opus': AVCodecID.AV_CODEC_ID_OPUS,\r\n  'flac': AVCodecID.AV_CODEC_ID_FLAC,\r\n  'speex': AVCodecID.AV_CODEC_ID_SPEEX,\r\n  'vorbis': AVCodecID.AV_CODEC_ID_VORBIS,\r\n  'pcm_alaw': AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n  'pcm_mulaw': AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n  'wmav1': AVCodecID.AV_CODEC_ID_WMAV1,\r\n  'wmav2': AVCodecID.AV_CODEC_ID_WMAV2,\r\n  'cook': AVCodecID.AV_CODEC_ID_COOK,\r\n  'sipr': AVCodecID.AV_CODEC_ID_SIPR,\r\n  'ralf': AVCodecID.AV_CODEC_ID_RALF,\r\n  'pcm_u8': AVCodecID.AV_CODEC_ID_PCM_U8,\r\n  'pcm_s16le': AVCodecID.AV_CODEC_ID_PCM_S16LE,\r\n  'pcm_s24le': AVCodecID.AV_CODEC_ID_PCM_S24LE,\r\n  'pcm_s32le': AVCodecID.AV_CODEC_ID_PCM_S32LE,\r\n  'pcm_s64le': AVCodecID.AV_CODEC_ID_PCM_S64LE,\r\n  'pcm_f32le': AVCodecID.AV_CODEC_ID_PCM_F32LE,\r\n  'pcm_f64le': AVCodecID.AV_CODEC_ID_PCM_F64LE\r\n}\r\n\r\nexport const SubtitleCodecString2CodecId = {\r\n  'webvtt': AVCodecID.AV_CODEC_ID_WEBVTT,\r\n  'subrip': AVCodecID.AV_CODEC_ID_SUBRIP,\r\n  'ass': AVCodecID.AV_CODEC_ID_ASS,\r\n  'ttml': AVCodecID.AV_CODEC_ID_TTML,\r\n  'mov_text': AVCodecID.AV_CODEC_ID_MOV_TEXT,\r\n  'hdmv_pgs': AVCodecID.AV_CODEC_ID_HDMV_PGS_SUBTITLE,\r\n  'hdmv_text': AVCodecID.AV_CODEC_ID_HDMV_TEXT_SUBTITLE,\r\n  'dvd': AVCodecID.AV_CODEC_ID_DVD_SUBTITLE,\r\n  'dvb': AVCodecID.AV_CODEC_ID_DVB_SUBTITLE,\r\n  'eia_608': AVCodecID.AV_CODEC_ID_EIA_608\r\n}\r\n\r\nexport const PixfmtString2AVPixelFormat = {\r\n  'yuv420p': AVPixelFormat.AV_PIX_FMT_YUV420P,\r\n  'yuv422p': AVPixelFormat.AV_PIX_FMT_YUV422P,\r\n  'yuv444p': AVPixelFormat.AV_PIX_FMT_YUV444P,\r\n  'yuva420p': AVPixelFormat.AV_PIX_FMT_YUVA420P,\r\n  'yuva422p': AVPixelFormat.AV_PIX_FMT_YUVA422P,\r\n  'yuva444p': AVPixelFormat.AV_PIX_FMT_YUVA444P,\r\n  'yuvj420p': AVPixelFormat.AV_PIX_FMT_YUVJ420P,\r\n  'yuvj422p': AVPixelFormat.AV_PIX_FMT_YUVJ422P,\r\n  'yuvj444p': AVPixelFormat.AV_PIX_FMT_YUVJ444P,\r\n\r\n  'yuv420p10le': AVPixelFormat.AV_PIX_FMT_YUV420P10LE,\r\n  'yuv422p10le': AVPixelFormat.AV_PIX_FMT_YUV422P10LE,\r\n  'yuv444p10le': AVPixelFormat.AV_PIX_FMT_YUV444P10LE,\r\n  'yuva420p10le': AVPixelFormat.AV_PIX_FMT_YUVA420P10LE,\r\n  'yuva422p10le': AVPixelFormat.AV_PIX_FMT_YUVA422P10LE,\r\n  'yuva444p10le': AVPixelFormat.AV_PIX_FMT_YUVA444P10LE,\r\n\r\n  'yuv420p10be': AVPixelFormat.AV_PIX_FMT_YUV420P10BE,\r\n  'yuv422p10be': AVPixelFormat.AV_PIX_FMT_YUV422P10BE,\r\n  'yuv444p10be': AVPixelFormat.AV_PIX_FMT_YUV444P10BE,\r\n  'yuva420p10be': AVPixelFormat.AV_PIX_FMT_YUVA420P10BE,\r\n  'yuva422p10be': AVPixelFormat.AV_PIX_FMT_YUVA422P10BE,\r\n  'yuva444p10be': AVPixelFormat.AV_PIX_FMT_YUVA444P10BE,\r\n}\r\n\r\nexport const SampleFmtString2SampleFormat = {\r\n  'u8': AVSampleFormat.AV_SAMPLE_FMT_U8,\r\n  'u8-planar': AVSampleFormat.AV_SAMPLE_FMT_U8P,\r\n  's16': AVSampleFormat.AV_SAMPLE_FMT_S16,\r\n  's16-planar': AVSampleFormat.AV_SAMPLE_FMT_S16P,\r\n  's32': AVSampleFormat.AV_SAMPLE_FMT_S32,\r\n  's32-planar': AVSampleFormat.AV_SAMPLE_FMT_S32P,\r\n  's64': AVSampleFormat.AV_SAMPLE_FMT_S64,\r\n  's64-planar': AVSampleFormat.AV_SAMPLE_FMT_S64P,\r\n  'float': AVSampleFormat.AV_SAMPLE_FMT_FLT,\r\n  'float-planar': AVSampleFormat.AV_SAMPLE_FMT_FLTP,\r\n  'double': AVSampleFormat.AV_SAMPLE_FMT_DBL,\r\n  'double-planar': AVSampleFormat.AV_SAMPLE_FMT_DBLP,\r\n}\r\n\r\nexport const Format2AVFormat: Record<string, AVFormat> = {\r\n  'flv': AVFormat.FLV,\r\n  'mp4': AVFormat.MOV,\r\n  'mov': AVFormat.MOV,\r\n  'ts': AVFormat.MPEGTS,\r\n  'mpegts': AVFormat.MPEGTS,\r\n  'mpeg': AVFormat.MPEGPS,\r\n  'ivf': AVFormat.IVF,\r\n  'ogg': AVFormat.OGG,\r\n  'opus': AVFormat.OGG,\r\n  'm3u8': AVFormat.MPEGTS,\r\n  'm3u': AVFormat.MPEGTS,\r\n  'mpd': AVFormat.MOV,\r\n  'mp3': AVFormat.MP3,\r\n  'mkv': AVFormat.MATROSKA,\r\n  'matroska': AVFormat.MATROSKA,\r\n  'mka': AVFormat.MATROSKA,\r\n  'webm': AVFormat.WEBM,\r\n  'aac': AVFormat.AAC,\r\n  'flac': AVFormat.FLAC,\r\n  'wav': AVFormat.WAV,\r\n  'raw_h264': AVFormat.H264,\r\n  'raw_h265': AVFormat.HEVC,\r\n  'raw_vvc': AVFormat.VVC,\r\n  'rtsp': AVFormat.RTSP,\r\n  'rtmp': AVFormat.RTMP,\r\n  'avi': AVFormat.AVI\r\n}\r\n\r\nexport const colorRange2AVColorRange: Record<string, AVColorRange> = {\r\n  'tv': AVColorRange.AVCOL_RANGE_MPEG,\r\n  'pc': AVColorRange.AVCOL_RANGE_JPEG\r\n}\r\n\r\nexport const colorSpace2AVColorSpace: Record<string, AVColorSpace> = {\r\n  'bt709': AVColorSpace.AVCOL_SPC_BT709,\r\n  'fcc': AVColorSpace.AVCOL_SPC_FCC,\r\n  'bt470bg': AVColorSpace.AVCOL_SPC_BT470BG,\r\n  'smpte170m': AVColorSpace.AVCOL_SPC_SMPTE170M,\r\n  'smpte240m': AVColorSpace.AVCOL_SPC_SMPTE240M,\r\n  'ycgco': AVColorSpace.AVCOL_SPC_YCGCO,\r\n  'gbr': AVColorSpace.AVCOL_SPC_RGB,\r\n  'bt2020nc': AVColorSpace.AVCOL_SPC_BT2020_NCL\r\n}\r\n\r\nexport const colorPrimaries2AVColorPrimaries: Record<string, AVColorPrimaries> = {\r\n  'bt709': AVColorPrimaries.AVCOL_PRI_BT709,\r\n  'bt470m': AVColorPrimaries.AVCOL_PRI_BT470M,\r\n  'bt470bg': AVColorPrimaries.AVCOL_PRI_BT470BG,\r\n  'smpte170m': AVColorPrimaries.AVCOL_PRI_SMPTE170M,\r\n  'smpte240m': AVColorPrimaries.AVCOL_PRI_SMPTE240M,\r\n  'smpte428': AVColorPrimaries.AVCOL_PRI_SMPTE428,\r\n  'film': AVColorPrimaries.AVCOL_PRI_FILM,\r\n  'smpte431': AVColorPrimaries.AVCOL_PRI_SMPTE431,\r\n  'smpte432': AVColorPrimaries.AVCOL_PRI_SMPTE432,\r\n  'bt2020': AVColorPrimaries.AVCOL_PRI_BT2020,\r\n  'jedec-p22': AVColorPrimaries.AVCOL_PRI_JEDEC_P22,\r\n  'ebu3213': AVColorPrimaries.AVCOL_PRI_EBU3213\r\n}\r\n\r\nexport const colorTrc2AVColorTransferCharacteristic: Record<string, AVColorTransferCharacteristic> = {\r\n  'bt709': AVColorTransferCharacteristic.AVCOL_TRC_BT709,\r\n  'gamma22': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA22,\r\n  'gamma28': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA28,\r\n  'smpte170m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE170M,\r\n  'smpte240m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE240M,\r\n  'srgb': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_1,\r\n  'xvycc': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_4,\r\n  'bt2020-10': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_10,\r\n  'bt2020-12': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_12,\r\n  'smpte2084': AVColorTransferCharacteristic.AVCOL_TRC_SMPTEST2084,\r\n  'arib-std-b67': AVColorTransferCharacteristic.AVCOL_TRC_ARIB_STD_B67\r\n}\r\n\r\nexport const mediaType2AVMediaType: Record<string, AVMediaType> = {\r\n  'Audio': AVMediaType.AVMEDIA_TYPE_AUDIO,\r\n  'Video': AVMediaType.AVMEDIA_TYPE_VIDEO,\r\n  'Subtitle': AVMediaType.AVMEDIA_TYPE_SUBTITLE,\r\n  'Attachment': AVMediaType.AVMEDIA_TYPE_ATTACHMENT,\r\n  'Data': AVMediaType.AVMEDIA_TYPE_DATA\r\n}\r\n\r\nexport const disposition2AVDisposition: Record<string, AVDisposition> = {\r\n  'default': AVDisposition.DEFAULT,\r\n  'dub': AVDisposition.DUB,\r\n  'original': AVDisposition.ORIGINAL,\r\n  'comment': AVDisposition.COMMENT,\r\n  'lyrics': AVDisposition.LYRICS,\r\n  'karaoke': AVDisposition.KARAOKE,\r\n  'forced': AVDisposition.FORCED,\r\n  'hearing impaired': AVDisposition.HEARING_IMPAIRED,\r\n  'visual impaired': AVDisposition.VISUAL_IMPAIRED,\r\n  'clean effects': AVDisposition.CLEAN_EFFECTS,\r\n  'attached pic': AVDisposition.ATTACHED_PIC,\r\n  'timed thumbnails': AVDisposition.TIMED_THUMBNAILS,\r\n  'captions': AVDisposition.CAPTIONS,\r\n  'descriptions': AVDisposition.DESCRIPTIONS,\r\n  'metadata': AVDisposition.METADATA,\r\n  'dependent': AVDisposition.DEPENDENT,\r\n  'still image': AVDisposition.STILL_IMAGE\r\n}\r\n\r\nexport const layoutName2AVChannelLayout: Record<string, AVChannelLayout> = {\r\n  'mono': AVChannelLayout.AV_CHANNEL_LAYOUT_MONO,\r\n  'stereo': AVChannelLayout.AV_CHANNEL_LAYOUT_STEREO,\r\n  '2.1': AVChannelLayout.AV_CHANNEL_LAYOUT_2POINT1,\r\n  '3.0': AVChannelLayout.AV_CHANNEL_LAYOUT_SURROUND,\r\n  '3.0(back)': AVChannelLayout.AV_CHANNEL_LAYOUT_2_1,\r\n  '4.0': AVChannelLayout.AV_CHANNEL_LAYOUT_4POINT0,\r\n  'quad': AVChannelLayout.AV_CHANNEL_LAYOUT_QUAD,\r\n  'quad(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_2_2,\r\n  '3.1': AVChannelLayout.AV_CHANNEL_LAYOUT_3POINT1,\r\n  '5.0': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT0_BACK,\r\n  '5.0(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT0,\r\n  '4.1': AVChannelLayout.AV_CHANNEL_LAYOUT_4POINT1,\r\n  '5.1': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1_BACK,\r\n  '5.1(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1,\r\n  '6.0': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT0,\r\n  '6.0(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT0_FRONT,\r\n  '3.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_3POINT1POINT2,\r\n  'hexagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_HEXAGONAL,\r\n  '6.1': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1,\r\n  '6.1(back)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1_BACK,\r\n  '6.1(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1_FRONT,\r\n  '7.0': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT0,\r\n  '7.0(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT0_FRONT,\r\n  '7.1': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1,\r\n  '7.1(wide)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1_WIDE_BACK,\r\n  '7.1(wide-side)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1_WIDE,\r\n  '5.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1POINT2_BACK,\r\n  'octagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_OCTAGONAL,\r\n  'cube': AVChannelLayout.AV_CHANNEL_LAYOUT_CUBE,\r\n  '5.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1POINT4_BACK,\r\n  '7.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1POINT2,\r\n  '7.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1POINT4_BACK,\r\n  '7.2.3': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT2POINT3,\r\n  '9.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_9POINT1POINT4_BACK,\r\n  'hexadecagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_HEXADECAGONAL,\r\n  'downmix': AVChannelLayout.AV_CHANNEL_LAYOUT_STEREO_DOWNMIX,\r\n  '22.2': AVChannelLayout.AV_CHANNEL_LAYOUT_22POINT2\r\n}\r\n","// from https://github.com/video-dev/hls.js/blob/master/src/crypt/aes-decryptor.ts\r\n// Apache License\r\n\r\nimport { AesMode } from './aes'\r\n\r\nexport default class AESSoftDecryptor {\r\n  private rcon: Array<number> = [\r\n    0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36,\r\n  ]\r\n  private subMix: Array<Uint32Array> = [\r\n    new Uint32Array(256),\r\n    new Uint32Array(256),\r\n    new Uint32Array(256),\r\n    new Uint32Array(256)\r\n  ]\r\n  private invSubMix: Array<Uint32Array> = [\r\n    new Uint32Array(256),\r\n    new Uint32Array(256),\r\n    new Uint32Array(256),\r\n    new Uint32Array(256)\r\n  ]\r\n  private sBox: Uint32Array = new Uint32Array(256)\r\n  private invSBox: Uint32Array = new Uint32Array(256)\r\n  private key: Uint32Array = new Uint32Array(0)\r\n\r\n  private ksRows: number = 0\r\n  private keySize: number = 0\r\n  private keySchedule!: Uint32Array\r\n  private invKeySchedule!: Uint32Array\r\n\r\n  constructor(mode: AesMode = AesMode.CBC) {\r\n    this.initTable()\r\n  }\r\n\r\n  // Using view.getUint32() also swaps the byte order.\r\n  private uint8ArrayToUint32Array_(arrayBuffer: ArrayBuffer) {\r\n    const view = new DataView(arrayBuffer)\r\n    const newArray = new Uint32Array(4)\r\n    for (let i = 0; i < 4; i++) {\r\n      newArray[i] = view.getUint32(i * 4)\r\n    }\r\n\r\n    return newArray\r\n  }\r\n\r\n  private initTable() {\r\n    const sBox = this.sBox\r\n    const invSBox = this.invSBox\r\n    const subMix = this.subMix\r\n    const subMix0 = subMix[0]\r\n    const subMix1 = subMix[1]\r\n    const subMix2 = subMix[2]\r\n    const subMix3 = subMix[3]\r\n    const invSubMix = this.invSubMix\r\n    const invSubMix0 = invSubMix[0]\r\n    const invSubMix1 = invSubMix[1]\r\n    const invSubMix2 = invSubMix[2]\r\n    const invSubMix3 = invSubMix[3]\r\n\r\n    const d = new Uint32Array(256)\r\n    let x = 0\r\n    let xi = 0\r\n    let i = 0\r\n    for (i = 0; i < 256; i++) {\r\n      if (i < 128) {\r\n        d[i] = i << 1\r\n      }\r\n      else {\r\n        d[i] = (i << 1) ^ 0x11b\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < 256; i++) {\r\n      let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\r\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\r\n      sBox[x] = sx\r\n      invSBox[sx] = x\r\n\r\n      // Compute multiplication\r\n      const x2 = d[x]\r\n      const x4 = d[x2]\r\n      const x8 = d[x4]\r\n\r\n      // Compute sub/invSub bytes, mix columns tables\r\n      let t = (d[sx] * 0x101) ^ (sx * 0x1010100)\r\n      subMix0[x] = (t << 24) | (t >>> 8)\r\n      subMix1[x] = (t << 16) | (t >>> 16)\r\n      subMix2[x] = (t << 8) | (t >>> 24)\r\n      subMix3[x] = t\r\n\r\n      // Compute inv sub bytes, inv mix columns tables\r\n      t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\r\n      invSubMix0[sx] = (t << 24) | (t >>> 8)\r\n      invSubMix1[sx] = (t << 16) | (t >>> 16)\r\n      invSubMix2[sx] = (t << 8) | (t >>> 24)\r\n      invSubMix3[sx] = t\r\n\r\n      // Compute next counter\r\n      if (!x) {\r\n        x = xi = 1\r\n      }\r\n      else {\r\n        x = x2 ^ d[d[d[x8 ^ x2]]]\r\n        xi ^= d[d[xi]]\r\n      }\r\n    }\r\n  }\r\n\r\n  public async expandKey(keyBuffer: ArrayBuffer) {\r\n    const key = this.uint8ArrayToUint32Array_(keyBuffer)\r\n\r\n    if (this.key) {\r\n      let sameKey = true\r\n      let offset = 0\r\n\r\n      while (offset < key.length && sameKey) {\r\n        sameKey = key[offset] === this.key[offset]\r\n        offset++\r\n      }\r\n\r\n      if (sameKey) {\r\n        return\r\n      }\r\n    }\r\n\r\n    this.key = key\r\n    const keySize = (this.keySize = this.key.length)\r\n\r\n    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\r\n      throw new Error('Invalid aes key size=' + keySize)\r\n    }\r\n\r\n    const ksRows = (this.ksRows = (keySize + 6 + 1) * 4)\r\n    let ksRow: number\r\n    let invKsRow: number\r\n\r\n    const keySchedule = (this.keySchedule = new Uint32Array(ksRows))\r\n    const invKeySchedule = (this.invKeySchedule = new Uint32Array(ksRows))\r\n    const sbox = this.sBox\r\n    const rcon = this.rcon\r\n\r\n    const invSubMix = this.invSubMix\r\n    const invSubMix0 = invSubMix[0]\r\n    const invSubMix1 = invSubMix[1]\r\n    const invSubMix2 = invSubMix[2]\r\n    const invSubMix3 = invSubMix[3]\r\n\r\n    let prev: number\r\n    let t: number\r\n\r\n    for (ksRow = 0; ksRow < ksRows; ksRow++) {\r\n      if (ksRow < keySize) {\r\n        prev = keySchedule[ksRow] = key[ksRow]\r\n        continue\r\n      }\r\n      t = prev\r\n\r\n      if (ksRow % keySize === 0) {\r\n        // Rot word\r\n        t = (t << 8) | (t >>> 24)\r\n\r\n        // Sub word\r\n        t =\r\n          (sbox[t >>> 24] << 24) |\r\n          (sbox[(t >>> 16) & 0xff] << 16) |\r\n          (sbox[(t >>> 8) & 0xff] << 8) |\r\n          sbox[t & 0xff]\r\n\r\n        // Mix Rcon\r\n        t ^= rcon[(ksRow / keySize) | 0] << 24\r\n      }\r\n      else if (keySize > 6 && ksRow % keySize === 4) {\r\n        // Sub word\r\n        t =\r\n          (sbox[t >>> 24] << 24) |\r\n          (sbox[(t >>> 16) & 0xff] << 16) |\r\n          (sbox[(t >>> 8) & 0xff] << 8) |\r\n          sbox[t & 0xff]\r\n      }\r\n\r\n      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0\r\n    }\r\n\r\n    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\r\n      ksRow = ksRows - invKsRow\r\n      if (invKsRow & 3) {\r\n        t = keySchedule[ksRow]\r\n      }\r\n      else {\r\n        t = keySchedule[ksRow - 4]\r\n      }\r\n\r\n      if (invKsRow < 4 || ksRow <= 4) {\r\n        invKeySchedule[invKsRow] = t\r\n      }\r\n      else {\r\n        invKeySchedule[invKsRow] =\r\n          invSubMix0[sbox[t >>> 24]] ^\r\n          invSubMix1[sbox[(t >>> 16) & 0xff]] ^\r\n          invSubMix2[sbox[(t >>> 8) & 0xff]] ^\r\n          invSubMix3[sbox[t & 0xff]]\r\n      }\r\n\r\n      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0\r\n    }\r\n  }\r\n\r\n  // Adding this as a method greatly improves performance.\r\n  private networkToHostOrderSwap(word: number) {\r\n    return (\r\n      (word << 24) |\r\n      ((word & 0xff00) << 8) |\r\n      ((word & 0xff0000) >> 8) |\r\n      (word >>> 24)\r\n    )\r\n  }\r\n\r\n  public async decrypt(inputArrayBuffer: Uint8Array, aesIV: ArrayBuffer) {\r\n    const nRounds = this.keySize + 6\r\n    const invKeySchedule = this.invKeySchedule\r\n    const invSBOX = this.invSBox\r\n\r\n    const invSubMix = this.invSubMix\r\n    const invSubMix0 = invSubMix[0]\r\n    const invSubMix1 = invSubMix[1]\r\n    const invSubMix2 = invSubMix[2]\r\n    const invSubMix3 = invSubMix[3]\r\n\r\n    const initVector = this.uint8ArrayToUint32Array_(aesIV)\r\n    let initVector0 = initVector[0]\r\n    let initVector1 = initVector[1]\r\n    let initVector2 = initVector[2]\r\n    let initVector3 = initVector[3]\r\n\r\n    const inputInt32 = new Int32Array(inputArrayBuffer.buffer)\r\n      .subarray(inputArrayBuffer.byteOffset >>> 2, (inputArrayBuffer.byteOffset >>> 2) + (inputArrayBuffer.length >>> 2))\r\n    const outputInt32 = new Int32Array(inputInt32.length)\r\n\r\n    let t0: number, t1: number, t2: number, t3: number\r\n    let s0: number, s1: number, s2: number, s3: number\r\n    let inputWords0: number, inputWords1: number, inputWords2: number, inputWords3: number\r\n\r\n    let ksRow: number, i: number\r\n    const swapWord = this.networkToHostOrderSwap\r\n\r\n    let offset = 0\r\n\r\n    while (offset < inputInt32.length) {\r\n      inputWords0 = swapWord(inputInt32[offset])\r\n      inputWords1 = swapWord(inputInt32[offset + 1])\r\n      inputWords2 = swapWord(inputInt32[offset + 2])\r\n      inputWords3 = swapWord(inputInt32[offset + 3])\r\n\r\n      s0 = inputWords0 ^ invKeySchedule[0]\r\n      s1 = inputWords3 ^ invKeySchedule[1]\r\n      s2 = inputWords2 ^ invKeySchedule[2]\r\n      s3 = inputWords1 ^ invKeySchedule[3]\r\n\r\n      ksRow = 4\r\n\r\n      // Iterate through the rounds of decryption\r\n      for (i = 1; i < nRounds; i++) {\r\n        t0 =\r\n          invSubMix0[s0 >>> 24] ^\r\n          invSubMix1[(s1 >> 16) & 0xff] ^\r\n          invSubMix2[(s2 >> 8) & 0xff] ^\r\n          invSubMix3[s3 & 0xff] ^\r\n          invKeySchedule[ksRow]\r\n        t1 =\r\n          invSubMix0[s1 >>> 24] ^\r\n          invSubMix1[(s2 >> 16) & 0xff] ^\r\n          invSubMix2[(s3 >> 8) & 0xff] ^\r\n          invSubMix3[s0 & 0xff] ^\r\n          invKeySchedule[ksRow + 1]\r\n        t2 =\r\n          invSubMix0[s2 >>> 24] ^\r\n          invSubMix1[(s3 >> 16) & 0xff] ^\r\n          invSubMix2[(s0 >> 8) & 0xff] ^\r\n          invSubMix3[s1 & 0xff] ^\r\n          invKeySchedule[ksRow + 2]\r\n        t3 =\r\n          invSubMix0[s3 >>> 24] ^\r\n          invSubMix1[(s0 >> 16) & 0xff] ^\r\n          invSubMix2[(s1 >> 8) & 0xff] ^\r\n          invSubMix3[s2 & 0xff] ^\r\n          invKeySchedule[ksRow + 3]\r\n        // Update state\r\n        s0 = t0\r\n        s1 = t1\r\n        s2 = t2\r\n        s3 = t3\r\n\r\n        ksRow = ksRow + 4\r\n      }\r\n\r\n      // Shift rows, sub bytes, add round key\r\n      t0 =\r\n        (invSBOX[s0 >>> 24] << 24) ^\r\n        (invSBOX[(s1 >> 16) & 0xff] << 16) ^\r\n        (invSBOX[(s2 >> 8) & 0xff] << 8) ^\r\n        invSBOX[s3 & 0xff] ^\r\n        invKeySchedule[ksRow]\r\n      t1 =\r\n        (invSBOX[s1 >>> 24] << 24) ^\r\n        (invSBOX[(s2 >> 16) & 0xff] << 16) ^\r\n        (invSBOX[(s3 >> 8) & 0xff] << 8) ^\r\n        invSBOX[s0 & 0xff] ^\r\n        invKeySchedule[ksRow + 1]\r\n      t2 =\r\n        (invSBOX[s2 >>> 24] << 24) ^\r\n        (invSBOX[(s3 >> 16) & 0xff] << 16) ^\r\n        (invSBOX[(s0 >> 8) & 0xff] << 8) ^\r\n        invSBOX[s1 & 0xff] ^\r\n        invKeySchedule[ksRow + 2]\r\n      t3 =\r\n        (invSBOX[s3 >>> 24] << 24) ^\r\n        (invSBOX[(s0 >> 16) & 0xff] << 16) ^\r\n        (invSBOX[(s1 >> 8) & 0xff] << 8) ^\r\n        invSBOX[s2 & 0xff] ^\r\n        invKeySchedule[ksRow + 3]\r\n\r\n      // Write\r\n      outputInt32[offset] = swapWord(t0 ^ initVector0)\r\n      outputInt32[offset + 1] = swapWord(t3 ^ initVector1)\r\n      outputInt32[offset + 2] = swapWord(t2 ^ initVector2)\r\n      outputInt32[offset + 3] = swapWord(t1 ^ initVector3)\r\n\r\n      // reset initVector to last 4 unsigned int\r\n      initVector0 = inputWords0\r\n      initVector1 = inputWords1\r\n      initVector2 = inputWords2\r\n      initVector3 = inputWords3\r\n\r\n      offset = offset + 4\r\n    }\r\n\r\n    return outputInt32.buffer\r\n  }\r\n}\r\n","import { AesMode } from './aes'\r\n\r\nexport default class AESSoftDecryptor {\r\n\r\n  private subtle: SubtleCrypto\r\n\r\n  private key: CryptoKey\r\n\r\n  private mode: AesMode\r\n\r\n  private keyBuffer: Uint8Array\r\n\r\n  constructor(mode: AesMode = AesMode.CBC) {\r\n    this.mode = mode\r\n    this.subtle = crypto.subtle || (crypto as any).webkitSubtle\r\n  }\r\n\r\n  private getSubtleAlgoName() {\r\n    switch (this.mode) {\r\n      case AesMode.CBC:\r\n        return 'AES-CBC'\r\n      case AesMode.CTR:\r\n        return 'AES-CTR'\r\n    }\r\n  }\r\n\r\n  public async expandKey(key: ArrayBuffer) {\r\n    let keyBuffer = new Uint8Array(key)\r\n\r\n    if (this.keyBuffer) {\r\n      let sameKey = true\r\n      let offset = 0\r\n\r\n      while (offset < keyBuffer.length && sameKey) {\r\n        sameKey = keyBuffer[offset] === this.keyBuffer[offset]\r\n        offset++\r\n      }\r\n\r\n      if (sameKey) {\r\n        return\r\n      }\r\n    }\r\n\r\n    this.keyBuffer = keyBuffer\r\n\r\n    this.key = await this.subtle.importKey(\r\n      'raw',\r\n      key,\r\n      {\r\n        name: this.getSubtleAlgoName()\r\n      },\r\n      false,\r\n      ['encrypt', 'decrypt']\r\n    )\r\n  }\r\n\r\n  public async encryptPadding(padding: Uint8Array, iv: BufferSource) {\r\n    return new Uint8Array(await crypto.subtle.encrypt(\r\n      {\r\n        name: 'AES-CBC',\r\n        iv,\r\n      },\r\n      this.key,\r\n      padding\r\n    ))\r\n  }\r\n\r\n  public async decrypt(input: Uint8Array, iv: ArrayBuffer) {\r\n    switch (this.mode) {\r\n      case AesMode.CBC:\r\n        return this.subtle.decrypt(\r\n          {\r\n            name: 'AES-CBC',\r\n            iv\r\n          },\r\n          this.key,\r\n          input,\r\n        )\r\n      case AesMode.CTR:\r\n        return this.subtle.decrypt(\r\n          {\r\n            name: 'AES-CTR',\r\n            counter: iv,\r\n            length: 64\r\n          },\r\n          this.key,\r\n          input\r\n        )\r\n    }\r\n  }\r\n\r\n  static isSupport() {\r\n    const subtle = crypto.subtle || (crypto as any).webkitSubtle\r\n    return typeof subtle === 'object'\r\n  }\r\n}\r\n","/**\r\n * @file 拆解字符串，并 trim 每个部分\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as array from '../util/array'\r\n\r\n/**\r\n * 拆解字符串，并 trim 每个部分\r\n * \r\n * @param str 字符串\r\n * @param sep 分隔符\r\n */\r\nexport default function split(str: string | number, sep: string): string[] {\r\n\r\n  const result = []\r\n\r\n  if (is.number(str)) {\r\n    str = str + ''\r\n  }\r\n\r\n  if (str && is.string(str)) {\r\n    array.each(str.split(sep), (part, index) => {\r\n      part = part.trim()\r\n      if (part) {\r\n        result.push(part)\r\n      }\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n","/**\r\n * @file url 操作\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport split from '../function/split'\r\nimport * as array from '../util/array'\r\nimport * as object from '../util/object'\r\n\r\n/**\r\n * 把查询字符串解析成对象\r\n * @param queryStr \r\n */\r\nexport function parseQuery(queryStr: string, separator: string = '&'): Record<string, string> {\r\n  const result = {}\r\n  if (is.string(queryStr) && queryStr.indexOf('=') >= 0) {\r\n    let firstChar = queryStr.charAt(0)\r\n    let startIndex = (firstChar === '?' || firstChar === '#') ? 1 : 0\r\n    if (startIndex > 0) {\r\n      queryStr = queryStr.substr(startIndex)\r\n    }\r\n    array.each(split(queryStr, separator), (item) => {\r\n      let terms = item.split('=')\r\n      if (terms.length === 2) {\r\n        let key = terms[0]?.trim()\r\n        if (key) {\r\n          result[key] = decodeURIComponent(terms[1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * 把对象序列化成查询字符串\r\n *\r\n * @param query\r\n * @return\r\n */\r\nexport function stringifyQuery(query: Record<string, string | number | boolean>, separator: string = '&'): string {\r\n  const result = []\r\n  if (is.isPlainObject(query)) {\r\n    object.each<Record<string, string | number | boolean>>(query, (value, key) => {\r\n      result.push(key + '=' + encodeURIComponent(is.object(value) ? JSON.stringify(value) : value))\r\n    })\r\n  }\r\n  return result.join(separator)\r\n}\r\n\r\n/**\r\n * 解析 url，返回格式遵循 location 属性的命名\r\n * \r\n * @param url 如果不传，使用当前地址\r\n */\r\nexport function parse(url: string) {\r\n\r\n  const source = url\r\n\r\n  const key = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor']\r\n  const parser = /^(?:(?![^:@\\/]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@\\/]*)(?::([^:@\\/]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\r\n  const ipv6Reg = /:\\/\\/([^\\/@]*@?)\\[(\\S+)\\]/\r\n  let ipv6Host = ''\r\n  if (ipv6Reg.test(url)) {\r\n    url = url.replace(ipv6Reg, (s0, s1, s2) => {\r\n      ipv6Host = s2\r\n      return `://${s1 || ''}a.b`\r\n    })\r\n  }\r\n\r\n  const result: Partial<any> = {}\r\n  const m = parser.exec(url)\r\n  let i = 14\r\n\r\n  while (i--) {\r\n    result[key[i]] = m[i] ?? ''\r\n  }\r\n  if (ipv6Host) {\r\n    result.host = ipv6Host\r\n    result.source = source\r\n    result.authority = ipv6Host + (result.port ? (':' + result.port) : '')\r\n  }\r\n  return {\r\n    protocol: result.protocol as string,\r\n    file: result.file as string,\r\n    host: result.host as string,\r\n    port: result.port as string,\r\n    user: result.user as string,\r\n    password: result.password as string,\r\n    origin: `${result.protocol}://${result.authority}`,\r\n    pathname: result.path as string,\r\n    search: `?${result.query}`,\r\n    hash: result.anchor ? `#${result.anchor}` : ''\r\n  }\r\n}\r\n\r\n/**\r\n * 把参数混入一个 url\r\n * \r\n * @param query \r\n * @param url \r\n * @param applyHash \r\n */\r\nexport function mixin(query: Record<string, any>, applyHash: boolean, url?: string): string {\r\n  if (url == null) {\r\n    url = document.URL\r\n  }\r\n\r\n  let scheme = parse(url)\r\n  let params = parseQuery(applyHash ? scheme.hash : scheme.search)\r\n  object.extend(params, query)\r\n  let paramStr = object.param(params)\r\n\r\n  url = scheme.origin + scheme.pathname\r\n\r\n  if (applyHash) {\r\n    url += scheme.search\r\n  }\r\n  else if (paramStr) {\r\n    url += '?' + paramStr\r\n  }\r\n\r\n  if (!applyHash) {\r\n    url += scheme.hash\r\n  }\r\n  else if (paramStr) {\r\n    url += '#' + paramStr\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nconst SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g\r\nconst SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g\r\nconst FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/\r\nconst URL_REGEX = /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/\r\n\r\nfunction buildURLFromParts(parts: {\r\n  scheme: string\r\n  netLoc: string\r\n  path: string\r\n  params: string\r\n  query: string\r\n  fragment: string\r\n}) {\r\n  return (\r\n    parts.scheme +\r\n    parts.netLoc +\r\n    parts.path +\r\n    parts.params +\r\n    parts.query +\r\n    parts.fragment\r\n  )\r\n}\r\n\r\nfunction parseURL(url: string) {\r\n  const parts = URL_REGEX.exec(url)\r\n  if (!parts) {\r\n    return null\r\n  }\r\n  return {\r\n    scheme: parts[1] || '',\r\n    netLoc: parts[2] || '',\r\n    path: parts[3] || '',\r\n    params: parts[4] || '',\r\n    query: parts[5] || '',\r\n    fragment: parts[6] || ''\r\n  }\r\n}\r\n\r\nexport function normalizePath(path: string) {\r\n  // The following operations are\r\n  // then applied, in order, to the new path:\r\n  // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n  // segment, are removed.\r\n  // 6b) If the path ends with \".\" as a complete path segment,\r\n  // that \".\" is removed.\r\n  path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '')\r\n  // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n  // complete path segment not equal to \"..\", are removed.\r\n  // Removal of these path segments is performed iteratively,\r\n  // removing the leftmost matching pattern on each iteration,\r\n  // until no matching pattern remains.\r\n  // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n  // complete path segment not equal to \"..\", that\r\n  // \"<segment>/..\" is removed.\r\n  while (\r\n    path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\r\n  ) {}\r\n  return path.split('').reverse().join('')\r\n}\r\n\r\n/**\r\n * from https://github.com/tjenkinson/url-toolkit\r\n * \r\n */\r\nexport function buildAbsoluteURL(baseURL: string, relativeURL: string, opts?: {\r\n  alwaysNormalize?: boolean\r\n}) {\r\n  opts = opts || {}\r\n  // remove any remaining space and CRLF\r\n  baseURL = baseURL.trim()\r\n  relativeURL = relativeURL.trim()\r\n  if (!relativeURL) {\r\n    // 2a) If the embedded URL is entirely empty, it inherits the\r\n    // entire base URL (i.e., is set equal to the base URL)\r\n    // and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return baseURL\r\n    }\r\n    let basePartsForNormalize = parseURL(baseURL)\r\n    if (!basePartsForNormalize) {\r\n      throw new Error('Error trying to parse base URL.')\r\n    }\r\n    basePartsForNormalize.path = normalizePath(basePartsForNormalize.path)\r\n    return buildURLFromParts(basePartsForNormalize)\r\n  }\r\n  let relativeParts = parseURL(relativeURL)\r\n  if (!relativeParts) {\r\n    throw new Error('Error trying to parse relative URL.')\r\n  }\r\n  if (relativeParts.scheme) {\r\n    // 2b) If the embedded URL starts with a scheme name, it is\r\n    // interpreted as an absolute URL and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return relativeURL\r\n    }\r\n    relativeParts.path = normalizePath(relativeParts.path)\r\n    return buildURLFromParts(relativeParts)\r\n  }\r\n  let baseParts = parseURL(baseURL)\r\n  if (!baseParts) {\r\n    throw new Error('Error trying to parse base URL.')\r\n  }\r\n  if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n    // If netLoc missing and path doesn't start with '/', assume everything before the first '/' is the netLoc\r\n    // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n    let pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path)\r\n    baseParts.netLoc = pathParts[1]\r\n    baseParts.path = pathParts[2]\r\n  }\r\n  if (baseParts.netLoc && !baseParts.path) {\r\n    baseParts.path = '/'\r\n  }\r\n  const builtParts = {\r\n    // 2c) Otherwise, the embedded URL inherits the scheme of\r\n    // the base URL.\r\n    scheme: baseParts.scheme,\r\n    netLoc: relativeParts.netLoc,\r\n    path: null,\r\n    params: relativeParts.params,\r\n    query: relativeParts.query,\r\n    fragment: relativeParts.fragment,\r\n  }\r\n  if (!relativeParts.netLoc) {\r\n    // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n    // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n    // (if any) of the base URL.\r\n    builtParts.netLoc = baseParts.netLoc\r\n    // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n    // path is not relative and we skip to Step 7.\r\n    if (relativeParts.path[0] !== '/') {\r\n      if (!relativeParts.path) {\r\n        // 5) If the embedded URL path is empty (and not preceded by a\r\n        // slash), then the embedded URL inherits the base URL path\r\n        builtParts.path = baseParts.path\r\n        // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n        // step 7; otherwise, it inherits the <params> of the base\r\n        // URL (if any) and\r\n        if (!relativeParts.params) {\r\n          builtParts.params = baseParts.params\r\n          // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n          // step 7; otherwise, it inherits the <query> of the base\r\n          // URL (if any) and we skip to step 7.\r\n          if (!relativeParts.query) {\r\n            builtParts.query = baseParts.query\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // 6) The last segment of the base URL's path (anything\r\n        // following the rightmost slash \"/\", or the entire path if no\r\n        // slash is present) is removed and the embedded URL's path is\r\n        // appended in its place.\r\n        let baseURLPath = baseParts.path\r\n        let newPath =\r\n          baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\r\n          relativeParts.path\r\n        builtParts.path = normalizePath(newPath)\r\n      }\r\n    }\r\n  }\r\n  if (builtParts.path === null) {\r\n    builtParts.path = opts.alwaysNormalize\r\n      ? normalizePath(relativeParts.path)\r\n      : relativeParts.path\r\n  }\r\n  return buildURLFromParts(builtParts)\r\n}\r\n"],"names":[],"sourceRoot":""}