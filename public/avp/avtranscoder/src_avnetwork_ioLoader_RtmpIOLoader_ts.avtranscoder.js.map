{"version":3,"file":"src_avnetwork_ioLoader_RtmpIOLoader_ts.avtranscoder.js","mappings":"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","sources":["webpack://AVTranscoder/./src/avformat/formats/flv/FlvHeader.ts","webpack://AVTranscoder/./src/avformat/formats/flv/FlvScriptTag.ts","webpack://AVTranscoder/./src/avformat/formats/flv/flv.ts","webpack://AVTranscoder/./src/avformat/formats/flv/oflv.ts","webpack://AVTranscoder/./src/avformat/function/mktag.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/RtmpIOLoader.ts","webpack://AVTranscoder/./src/avprotocol/rtmp/RtmpPacket.ts","webpack://AVTranscoder/./src/avprotocol/rtmp/RtmpSession.ts","webpack://AVTranscoder/./src/avprotocol/rtmp/rtmp.ts","webpack://AVTranscoder/./src/avprotocol/rtmp/util.ts","webpack://AVTranscoder/./src/avutil/constant.ts","webpack://AVTranscoder/./src/avutil/struct/rational.ts","webpack://AVTranscoder/./src/avutil/util/amf.ts","webpack://AVTranscoder/./src/avutil/util/crypto.ts","webpack://AVTranscoder/./src/avutil/util/rational.ts","webpack://AVTranscoder/./src/cheap/thread/sync.ts","webpack://AVTranscoder/./src/common/function/split.ts","webpack://AVTranscoder/./src/common/io/IOReader.ts","webpack://AVTranscoder/./src/common/io/IOWriter.ts","webpack://AVTranscoder/./src/common/io/IOWriterSync.ts","webpack://AVTranscoder/./src/common/math/gcd.ts","webpack://AVTranscoder/./src/common/util/url.ts"],"sourcesContent":["/*\r\n * libmedia flv header format\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriterSync'\r\n\r\nexport default class FlvHeader {\r\n  /**\r\n   * 3 bytes 签名\r\n   */\r\n  public signature: string\r\n\r\n  /**\r\n   * 1 bytes 版本，比如 0x01 表示 FLV 版本 1\r\n   */\r\n  public version: number\r\n\r\n  /**\r\n   * 1 bytes 第一位标记是否有视频，第 4 位标记是否有音频，其余位保留\r\n   */\r\n  public flags: number\r\n\r\n  /**\r\n   * 4 bytes FLV header 的大小，单位是字节，目前是 9\r\n   */\r\n  public dataOffset: number\r\n\r\n  /**\r\n   * 是否有视频\r\n   */\r\n  public hasVideo: boolean\r\n\r\n  /**\r\n   * 是否有音频\r\n   */\r\n  public hasAudio: boolean\r\n\r\n  constructor() {\r\n\r\n    this.signature = 'FLV'\r\n    this.version = 1\r\n    this.flags = 0\r\n    this.dataOffset = 9\r\n\r\n    this.hasAudio = false\r\n    this.hasVideo = false\r\n  }\r\n\r\n  public async read(ioReader: IOReader) {\r\n    this.signature = await ioReader.readString(3)\r\n    this.version = await ioReader.readUint8()\r\n    this.flags = await ioReader.readUint8()\r\n    this.dataOffset = await ioReader.readUint32()\r\n\r\n    this.hasAudio = !!(this.flags & 0x04)\r\n    this.hasVideo = !!(this.flags & 0x01)\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    this.flags = 0\r\n    if (this.hasAudio) {\r\n      this.flags |= 0x04\r\n    }\r\n    if (this.hasVideo) {\r\n      this.flags |= 0x01\r\n    }\r\n\r\n    ioWriter.writeString(this.signature)\r\n    ioWriter.writeUint8(this.version)\r\n    ioWriter.writeUint8(this.flags)\r\n    ioWriter.writeUint32(this.dataOffset)\r\n  }\r\n}\r\n","/*\r\n * libmedia flv script tag format\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\n\r\nimport concatTypeArray from 'common/function/concatTypeArray'\r\nimport * as logger from 'common/util/logger'\r\nimport { FlvMetaData } from './type'\r\nimport { FlvTag } from './flv'\r\n\r\nimport * as flv from './oflv'\r\nimport * as errorType from 'avutil/error'\r\nimport { parseValue, writeValue } from 'avutil/util/amf'\r\n\r\nexport default class FlvScriptTag {\r\n\r\n  public onMetaData: Partial<FlvMetaData>\r\n\r\n  constructor() {\r\n    this.onMetaData = {\r\n      canSeekToEnd: false\r\n    }\r\n  }\r\n\r\n  public async read(ioReader: IOReader, size: number) {\r\n    const now = ioReader.getPos()\r\n    const endPos = now + static_cast<int64>(size)\r\n    const key = await parseValue(ioReader, endPos)\r\n    const value = await parseValue(ioReader, endPos)\r\n    this[key] = value\r\n\r\n    if (endPos > ioReader.getPos()) {\r\n      await ioReader.skip(static_cast<int32>(endPos - ioReader.getPos()))\r\n    }\r\n\r\n    const tagSize = Number(ioReader.getPos() - now)\r\n    const prev = await ioReader.readUint32()\r\n\r\n    if (tagSize + 11 !== prev) {\r\n      logger.warn(`script size not match, size: ${tagSize + 11}, previousTagSize: ${prev}`)\r\n\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public computeSize() {\r\n    const cache = []\r\n    const cacheWriter = new IOWriterSync()\r\n    cacheWriter.onFlush = (data) => {\r\n      cache.push(data.slice())\r\n      return 0\r\n    }\r\n    writeValue(cacheWriter, 'onMetaData')\r\n    writeValue(cacheWriter, this.onMetaData)\r\n\r\n    cacheWriter.flush()\r\n\r\n    const buffer = concatTypeArray(Uint8Array, cache)\r\n\r\n    return buffer.length\r\n  }\r\n\r\n  public write(ioWriter: IOWriterSync) {\r\n    if (this.onMetaData) {\r\n      const cache = []\r\n      const cacheWriter = new IOWriterSync()\r\n      cacheWriter.onFlush = (data) => {\r\n        cache.push(data.slice())\r\n        return 0\r\n      }\r\n\r\n      writeValue(cacheWriter, 'onMetaData')\r\n      writeValue(cacheWriter, this.onMetaData)\r\n\r\n      cacheWriter.flush()\r\n\r\n      const buffer = concatTypeArray(Uint8Array, cache)\r\n      flv.writeTag(ioWriter, FlvTag.SCRIPT, 0n, undefined, buffer)\r\n    }\r\n  }\r\n\r\n  public dts2Position(dts: number) {\r\n    if (this.canSeek()) {\r\n      let index = -1\r\n      const times = this.onMetaData.keyframes.times\r\n      const position = this.onMetaData.keyframes.filepositions\r\n\r\n      let i: number\r\n      for (i = 0; i < times.length; i++) {\r\n        if (times[i] === dts) {\r\n          index = i\r\n          break\r\n        }\r\n        else if (times[i] > dts) {\r\n          index = Math.max(i - 1, 0)\r\n          break\r\n        }\r\n      }\r\n      if (i && i === times.length) {\r\n        index = times.length - 1\r\n      }\r\n      return {\r\n        pos: position[index],\r\n        dts: times[index]\r\n      }\r\n    }\r\n\r\n    return {\r\n      pos: -1,\r\n      dts: -1\r\n    }\r\n  }\r\n\r\n  public position2DTS(pos: number) {\r\n    if (this.canSeek()) {\r\n      let index = -1\r\n      const times = this.onMetaData.keyframes.times\r\n      const position = this.onMetaData.keyframes.filepositions\r\n      let i = 0\r\n      for (i = 0; i < position.length; i++) {\r\n        if (position[i] > pos) {\r\n          index = i\r\n          break\r\n        }\r\n      }\r\n      if (i === position.length) {\r\n        return this.onMetaData.duration ?? times[times.length - 1]\r\n      }\r\n      return times[index]\r\n    }\r\n    return -1\r\n  }\r\n\r\n  public canSeek(): boolean {\r\n    return !!(this.onMetaData.keyframes\r\n      && this.onMetaData.keyframes.filepositions\r\n      && this.onMetaData.keyframes.filepositions.length)\r\n  }\r\n}\r\n","/*\r\n * libmedia flv defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID } from 'avutil/codec'\r\n\r\nexport const enum FlvTag {\r\n  AUDIO = 8,\r\n  VIDEO = 9,\r\n  SCRIPT = 18,\r\n  SCRIPT_AMF3 = 15\r\n}\r\n\r\nexport const enum VideoFrameType {\r\n  // a seekable frame\r\n  KeyFrame = 1,\r\n  // a non - seekable frame\r\n  InterFrame = 2,\r\n  // H.263 only\r\n  DisposableInterFrame = 3,\r\n  // reserved for server use only\r\n  GeneratedKeyFrame = 4,\r\n  // If videoFrameType is not ignored and is set to VideoFrameType.Command,\r\n  // the payload will not contain video data. Instead, (Ex)VideoTagHeader\r\n  // will be followed by a UI8, representing the following meanings:\r\n  //\r\n  // 0 = Start of client-side seeking video frame sequence\r\n  // 1 = End of client-side seeking video frame sequence\r\n  //\r\n  // frameType is ignored if videoPacketType is VideoPacketType.MetaData\r\n  Command = 5\r\n}\r\n\r\nexport const enum VideoCommand {\r\n  StartSeek = 0,\r\n  EndSeek = 1\r\n}\r\n\r\nexport const enum VideoPacketType {\r\n  SequenceStart = 0,\r\n  CodedFrames = 1,\r\n  SequenceEnd = 2,\r\n  // CompositionTime Offset is implicitly set to zero. This optimization\r\n  // avoids transmitting an SI24 composition time value of zero over the wire.\r\n  // See the ExVideoTagBody section below for corresponding pseudocode.\r\n  CodedFramesX = 3,\r\n  // ExVideoTagBody does not contain video data. Instead, it contains\r\n  // an AMF-encoded metadata. Refer to the Metadata Frame section for\r\n  // an illustration of its usage. For example, the metadata might include\r\n  // HDR information. This also enables future possibilities for expressing\r\n  // additional metadata meant for subsequent video sequences.\r\n  //\r\n  // If VideoPacketType.Metadata is present, the FrameType flags\r\n  // at the top of this table should be ignored.\r\n  Metadata = 4,\r\n  // Carriage of bitstream in MPEG-2 TS format\r\n  //\r\n  // PacketTypeSequenceStart and PacketTypeMPEG2TSSequenceStart\r\n  // are mutually exclusive\r\n  MPEG2TSSequenceStart = 5,\r\n  // Turns on video multiTrack mode\r\n  MultiTrack = 6,\r\n  // ModEx is a special signal within the VideoPacketType enum that\r\n  // serves to both modify and extend the behavior of the current packet.\r\n  // When this signal is encountered, it indicates the presence of\r\n  // additional modifiers or extensions, requiring further processing to\r\n  // adjust or augment the packet's functionality. ModEx can be used to\r\n  // introduce new capabilities or modify existing ones, such as\r\n  // enabling support for high-precision timestamps or other advanced\r\n  // features that enhance the base packet structure.\r\n  ModEx = 7\r\n}\r\n\r\nexport const enum AudioPacketType {\r\n  SequenceStart = 0,\r\n  CodedFrames = 1,\r\n  SequenceEnd = 2,\r\n  MultichannelConfig = 4,\r\n  MultiTrack = 5,\r\n  ModEx = 7\r\n}\r\n\r\nexport const enum VideoPacketModExType {\r\n  TimestampOffsetNano = 0\r\n}\r\n\r\nexport const enum AudioPacketModExType {\r\n  TimestampOffsetNano = 0\r\n}\r\n\r\nexport const enum AVMultiTrackType {\r\n  OneTrack = 0,\r\n  ManyTracks,\r\n  ManyTracksManyCodecs\r\n}\r\n\r\nexport const enum AVCPacketType {\r\n  AVC_SEQUENCE_HEADER,\r\n  AVC_NALU,\r\n  AVC_END_OF_ENQUENCE\r\n}\r\n\r\nexport const enum AACPacketType {\r\n  AAC_SEQUENCE_HEADER,\r\n  AAC_RAW\r\n}\r\n\r\nexport const enum AudioChannelOrder {\r\n  Unspecified = 0,\r\n  Native = 1,\r\n  Custom = 2\r\n}\r\n\r\nexport const AVCodecID2FlvCodecType = {\r\n  [AVCodecID.AV_CODEC_ID_PCM_U8]: 0,\r\n  [AVCodecID.AV_CODEC_ID_PCM_S16LE]: 3,\r\n  [AVCodecID.AV_CODEC_ID_AAC]: 10,\r\n  [AVCodecID.AV_CODEC_ID_MP3]: 2,\r\n  [AVCodecID.AV_CODEC_ID_SPEEX]: 11,\r\n  [AVCodecID.AV_CODEC_ID_ADPCM_SWF]: 1,\r\n  [AVCodecID.AV_CODEC_ID_NELLYMOSER]: 6,\r\n  [AVCodecID.AV_CODEC_ID_PCM_ALAW]: 7,\r\n  [AVCodecID.AV_CODEC_ID_PCM_MULAW]: 8,\r\n\r\n  [AVCodecID.AV_CODEC_ID_H264]: 7,\r\n  [AVCodecID.AV_CODEC_ID_HEVC]: 12,\r\n  // [AVCodecID.AV_CODEC_ID_VVC]: 13,\r\n  [AVCodecID.AV_CODEC_ID_MPEG4]: 9,\r\n  [AVCodecID.AV_CODEC_ID_H263]: 2,\r\n  [AVCodecID.AV_CODEC_ID_FLASHSV]: 3,\r\n  [AVCodecID.AV_CODEC_ID_VP6F]: 4,\r\n  [AVCodecID.AV_CODEC_ID_VP6A]: 5,\r\n  [AVCodecID.AV_CODEC_ID_FLASHSV2]: 6\r\n}\r\n\r\nexport const FlvAudioCodecType2AVCodecID = {\r\n  10: AVCodecID.AV_CODEC_ID_AAC,\r\n  2: AVCodecID.AV_CODEC_ID_MP3,\r\n  11: AVCodecID.AV_CODEC_ID_SPEEX,\r\n\r\n  1: AVCodecID.AV_CODEC_ID_ADPCM_SWF,\r\n  4: AVCodecID.AV_CODEC_ID_NELLYMOSER,\r\n  5: AVCodecID.AV_CODEC_ID_NELLYMOSER,\r\n  6: AVCodecID.AV_CODEC_ID_NELLYMOSER,\r\n  7: AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n  8: AVCodecID.AV_CODEC_ID_PCM_MULAW\r\n}\r\n\r\nexport const FlvVideoCodecType2AVCodecID = {\r\n  7: AVCodecID.AV_CODEC_ID_H264,\r\n  12: AVCodecID.AV_CODEC_ID_HEVC,\r\n  // 13: AVCodecID.AV_CODEC_ID_VVC,\r\n  9: AVCodecID.AV_CODEC_ID_MPEG4,\r\n\r\n  2: AVCodecID.AV_CODEC_ID_H263,\r\n  3: AVCodecID.AV_CODEC_ID_FLASHSV,\r\n  4: AVCodecID.AV_CODEC_ID_VP6F,\r\n  5: AVCodecID.AV_CODEC_ID_VP6A,\r\n  6: AVCodecID.AV_CODEC_ID_FLASHSV2\r\n}\r\n\r\nexport const AVCodecID2FlvCodecTag = {\r\n  [AVCodecID.AV_CODEC_ID_H264]: 'avc1',\r\n  [AVCodecID.AV_CODEC_ID_HEVC]: 'hvc1',\r\n  [AVCodecID.AV_CODEC_ID_VVC]: 'vvc1',\r\n  [AVCodecID.AV_CODEC_ID_VP8]: 'vp08',\r\n  [AVCodecID.AV_CODEC_ID_VP9]: 'vp09',\r\n  [AVCodecID.AV_CODEC_ID_AV1]: 'av01',\r\n\r\n  [AVCodecID.AV_CODEC_ID_AC3]: 'ac-3',\r\n  [AVCodecID.AV_CODEC_ID_EAC3]: 'ec-3',\r\n  [AVCodecID.AV_CODEC_ID_OPUS]: 'Opus',\r\n  [AVCodecID.AV_CODEC_ID_FLAC]: 'fLaC',\r\n  [AVCodecID.AV_CODEC_ID_MP3]: '.mp3',\r\n  [AVCodecID.AV_CODEC_ID_AAC]: 'mp4a'\r\n}\r\n","/*\r\n * libmedia flv encode\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID } from 'avutil/codec'\r\nimport { AVPacketFlags } from 'avutil/struct/avpacket'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport { AudioPacketModExType, AudioPacketType, AVCodecID2FlvCodecTag, AVCodecID2FlvCodecType, AVMultiTrackType, FlvTag, VideoFrameType, VideoPacketModExType, VideoPacketType } from './flv'\r\nimport { FlvContext, FlvStreamContext } from './type'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\nimport { AV_MILLI_TIME_BASE_Q, AV_NANO_TIME_BASE_Q } from 'avutil/constant'\r\nimport mktag from '../../function/mktag'\r\nimport * as is from 'common/util/is'\r\nimport AVStream from 'avutil/AVStream'\r\n\r\nexport function updateSize(ioWriter: IOWriterSync, pos: int64, size: int32) {\r\n  const now = ioWriter.getPos()\r\n  const pointer = ioWriter.getPointer()\r\n  const minPos = now - static_cast<int64>(pointer)\r\n  if (pos < now && pos >= minPos) {\r\n    ioWriter.seekInline(pointer + Number(pos - now))\r\n    ioWriter.writeUint24(size)\r\n    ioWriter.seekInline(pointer)\r\n  }\r\n  else {\r\n    ioWriter.seek(pos)\r\n    ioWriter.writeUint24(size)\r\n    ioWriter.seek(now)\r\n  }\r\n}\r\n\r\nexport function writeTag(\r\n  ioWriter: IOWriterSync,\r\n  type: FlvTag,\r\n  timestamp: int64,\r\n  dataHeader?: (ioWriter: IOWriterSync) => void,\r\n  data?: Uint8Array | ((ioWriter: IOWriterSync) => void),\r\n  previousTagSizeCallback?: (previousTagSize: int32) => void\r\n) {\r\n  ioWriter.flush()\r\n  // tagType\r\n  ioWriter.writeUint8(type)\r\n  const sizePos = ioWriter.getPos()\r\n  // size\r\n  ioWriter.writeUint24(0)\r\n  // timestamp\r\n  ioWriter.writeUint24(Number(timestamp & 0xffffffn))\r\n  // timestampExtended\r\n  ioWriter.writeUint8(Number((timestamp >> 24n) & 0xffn))\r\n  // streamId always 0\r\n  ioWriter.writeUint24(0)\r\n\r\n  const dataPos = ioWriter.getPos()\r\n  if (dataHeader) {\r\n    dataHeader(ioWriter)\r\n  }\r\n  if (is.func(data)) {\r\n    data(ioWriter)\r\n    updateSize(ioWriter, sizePos, Number(ioWriter.getPos() - dataPos))\r\n  }\r\n  else if (data) {\r\n    updateSize(ioWriter, sizePos, data.length + Number(ioWriter.getPos() - dataPos))\r\n    ioWriter.writeBuffer(data)\r\n  }\r\n  const previousTagSize = Number(ioWriter.getPos() - sizePos) + 1\r\n  if (previousTagSizeCallback) {\r\n    previousTagSizeCallback(previousTagSize)\r\n  }\r\n  ioWriter.writeUint32(previousTagSize)\r\n}\r\n\r\nexport function isEnhancedCodecId(codecId: AVCodecID) {\r\n  if (codecId === AVCodecID.AV_CODEC_ID_AAC\r\n    || codecId === AVCodecID.AV_CODEC_ID_H264\r\n    || codecId === AVCodecID.AV_CODEC_ID_MP3\r\n    || codecId === AVCodecID.AV_CODEC_ID_MPEG4\r\n  ) {\r\n    return false\r\n  }\r\n  return !!AVCodecID2FlvCodecTag[codecId]\r\n}\r\n\r\nexport function writeVideoHeader(\r\n  ioWriter: IOWriterSync,\r\n  stream: AVStream,\r\n  context: FlvContext,\r\n  enhanced: boolean,\r\n  type: uint8,\r\n  flags: AVPacketFlags,\r\n  timestamp: int64,\r\n  timeBase: pointer<Rational>,\r\n  ct: int32 = 0\r\n) {\r\n\r\n  const streamContext = stream.privData as FlvStreamContext\r\n\r\n  let header = enhanced ? 0x80 : 0\r\n  header |= ((flags & AVPacketFlags.AV_PKT_FLAG_KEY) ? VideoFrameType.KeyFrame : VideoFrameType.InterFrame) << 4\r\n\r\n  if (enhanced) {\r\n    if (context.enableNanoTimestamp && timeBase) {\r\n      const nano = avRescaleQ2(timestamp, timeBase, AV_NANO_TIME_BASE_Q)\r\n      const mill = avRescaleQ2(timestamp, timeBase, AV_MILLI_TIME_BASE_Q)\r\n      const offset = nano - mill * 1000000n\r\n      if (offset) {\r\n        header |= VideoPacketType.ModEx\r\n        ioWriter.writeUint8(header)\r\n        // modExSize - 1\r\n        ioWriter.writeUint8(2)\r\n        ioWriter.writeUint24(static_cast<int32>(offset))\r\n        header = VideoPacketModExType.TimestampOffsetNano << 4\r\n      }\r\n    }\r\n    if (context.multiVideoTracks) {\r\n      header |= VideoPacketType.MultiTrack\r\n      ioWriter.writeUint8(header)\r\n      header = AVMultiTrackType.OneTrack << 4\r\n    }\r\n    header |= type\r\n    ioWriter.writeUint8(header)\r\n    ioWriter.writeUint32(mktag(AVCodecID2FlvCodecTag[stream.codecpar.codecId]))\r\n    if (context.multiVideoTracks) {\r\n      ioWriter.writeUint8(streamContext.trackId)\r\n    }\r\n    if (type === VideoPacketType.CodedFrames) {\r\n      ioWriter.writeInt24(ct)\r\n    }\r\n  }\r\n  else {\r\n    header |= AVCodecID2FlvCodecType[stream.codecpar.codecId] & 0x0f\r\n    ioWriter.writeUint8(header)\r\n    if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MPEG4\r\n    ) {\r\n      ioWriter.writeUint8(type)\r\n      ioWriter.writeInt24(ct)\r\n    }\r\n  }\r\n}\r\n\r\nexport function writeAudioHeader(\r\n  ioWriter: IOWriterSync,\r\n  stream: AVStream,\r\n  context: FlvContext,\r\n  enhanced: boolean,\r\n  type: uint8,\r\n  timestamp: int64,\r\n  timeBase: pointer<Rational>\r\n) {\r\n  const streamContext = stream.privData as FlvStreamContext\r\n\r\n  let header = (enhanced ? 9 : (AVCodecID2FlvCodecType[stream.codecpar.codecId] & 0x0f)) << 4\r\n\r\n  if (enhanced) {\r\n    if (context.enableNanoTimestamp) {\r\n      const nano = avRescaleQ2(timestamp, timeBase, AV_NANO_TIME_BASE_Q)\r\n      const mill = avRescaleQ2(timestamp, timeBase, AV_MILLI_TIME_BASE_Q)\r\n      const offset = nano - mill * 1000000n\r\n      if (offset) {\r\n        header |= AudioPacketType.ModEx\r\n        ioWriter.writeUint8(header)\r\n        // modExSize - 1\r\n        ioWriter.writeUint8(2)\r\n        ioWriter.writeUint24(static_cast<int32>(offset))\r\n        header = AudioPacketModExType.TimestampOffsetNano << 4\r\n      }\r\n    }\r\n    if (context.multiVideoTracks) {\r\n      header |= AudioPacketType.MultiTrack\r\n      ioWriter.writeUint8(header)\r\n      header = AVMultiTrackType.OneTrack << 4\r\n    }\r\n    header |= type\r\n    ioWriter.writeUint8(header)\r\n    ioWriter.writeUint32(mktag(AVCodecID2FlvCodecTag[stream.codecpar.codecId]))\r\n    if (context.multiVideoTracks) {\r\n      ioWriter.writeUint8(streamContext.trackId)\r\n    }\r\n  }\r\n  else {\r\n    /**\r\n     * SoundType 声道类型，对 Nellymoser 来说，永远是单声道；对 AAC 来说，永远是双声道\r\n     * - 0 sndMono 单声道\r\n     * - 1 sndStereo 双声道\r\n     */\r\n    if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC || stream.codecpar.chLayout.nbChannels > 1) {\r\n      header |= 0x01\r\n    }\r\n    /**\r\n     * SoundSize 采样精度，对于压缩过的音频，永远是 16 位\r\n     * - 0 snd8Bit\r\n     * - 1 snd16Bit\r\n     */\r\n    if (stream.codecpar.codecId !== AVCodecID.AV_CODEC_ID_PCM_U8) {\r\n      header |= 0x02\r\n    }\r\n    /**\r\n     * SoundRate 采样率，对 AAC 来说，永远等于 3\r\n     * - 0 5.5-kHz\r\n     * - 1 1-kHz\r\n     * - 2 22-kHz\r\n     * - 3 44-kHz\r\n     */\r\n    if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC || stream.codecpar.sampleRate >= 44000) {\r\n      header |= 0x0c\r\n    }\r\n    else if (stream.codecpar.sampleRate >= 22000) {\r\n      header |= 0x08\r\n    }\r\n    else if (stream.codecpar.sampleRate >= 11000) {\r\n      header |= 0x04\r\n    }\r\n    ioWriter.writeUint8(header)\r\n    if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC) {\r\n      ioWriter.writeUint8(type)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia string tag to uint32 in big end\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as logger from 'common/util/logger'\r\n\r\nexport default function mktag(tag: string): number {\r\n  if (tag.length !== 4) {\r\n    logger.warn(`tag length is not 4, tag: ${tag}`)\r\n  }\r\n\r\n  let value = 0\r\n  for (let i = 0; i < 4; i++) {\r\n    value = (value << 8) | tag.charCodeAt(i)\r\n  }\r\n\r\n  return value\r\n}\r\n","/*\r\n * libmedia rtmp loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { IOLoaderStatus } from './IOLoader'\r\nimport { IOError } from 'common/io/error'\r\nimport SocketIOLoader from './SocketIOLoader'\r\nimport WebSocketIOLoader from './WebSocketIOLoader'\r\nimport WebTransportIOLoader from './WebTransportIOLoader'\r\nimport RtmpSession from 'avprotocol/rtmp/RtmpSession'\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport * as url from 'common/util/url'\r\nimport { RtmpPacket } from 'avprotocol/rtmp/RtmpPacket'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport FlvHeader from 'avformat/formats/flv/FlvHeader'\r\nimport { RtmpPacketType } from 'avprotocol/rtmp/rtmp'\r\nimport FlvScriptTag from 'avformat/formats/flv/FlvScriptTag'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport * as amf from 'avutil/util/amf'\r\nimport isDef from 'common/function/isDef'\r\nimport { IOType } from 'avutil/avformat'\r\n\r\nexport interface RtmpIOInfo {\r\n  url: string\r\n  uri: string\r\n  subProtocol: IOType\r\n  webtransportOptions?: WebTransportOptions\r\n}\r\n\r\nexport default class RtmpIOLoader extends SocketIOLoader {\r\n\r\n  private info: RtmpIOInfo\r\n\r\n  private socket: WebSocketIOLoader | WebTransportIOLoader\r\n\r\n  private session: RtmpSession\r\n  private ioReader: IOReader\r\n  private ioWriter: IOWriter\r\n  private flvWriter: IOWriterSync\r\n\r\n  private flvHeader: FlvHeader\r\n  private packetQueue: RtmpPacket[]\r\n  private flvHeaderWrote: boolean\r\n  private hasMetadata: boolean\r\n  private bufferReader: BufferReader\r\n\r\n  private writeFlvData(packet: RtmpPacket) {\r\n    this.flvWriter.writeUint8(packet.type)\r\n    this.flvWriter.writeUint24(packet.payload.length)\r\n    this.flvWriter.writeUint24(packet.timestamp)\r\n    this.flvWriter.writeUint8(packet.timestamp >> 24)\r\n    this.flvWriter.writeUint24(0)\r\n    this.flvWriter.writeBuffer(packet.payload)\r\n    this.flvWriter.writeUint32(packet.payload.length + 11)\r\n    this.flvWriter.flush()\r\n  }\r\n\r\n  private async handleRtmpPacket(packet: RtmpPacket) {\r\n    if (this.flvHeaderWrote) {\r\n      this.writeFlvData(packet)\r\n    }\r\n    else {\r\n      this.packetQueue.push(packet)\r\n      if (packet.type === RtmpPacketType.PT_AUDIO) {\r\n        this.flvHeader.hasAudio = true\r\n      }\r\n      else if (packet.type === RtmpPacketType.PT_VIDEO) {\r\n        this.flvHeader.hasVideo = true\r\n      }\r\n      else if (packet.type === RtmpPacketType.PT_NOTIFY) {\r\n        if (!this.bufferReader) {\r\n          this.bufferReader = new BufferReader(packet.payload)\r\n        }\r\n        else {\r\n          this.bufferReader.resetBuffer(packet.payload)\r\n        }\r\n        const command = await amf.parseValue(this.bufferReader, BigInt(packet.payload.length)) as string\r\n        if (command === 'onMetaData') {\r\n          this.hasMetadata = true\r\n          const metadata = await amf.parseValue(this.bufferReader, BigInt(packet.payload.length))\r\n          this.flvHeader.hasAudio = isDef(metadata.audiocodecid)\r\n          this.flvHeader.hasVideo = isDef(metadata.videocodecid)\r\n        }\r\n      }\r\n      if (this.packetQueue.length > 10 || this.hasMetadata) {\r\n        this.flvHeader.write(this.flvWriter)\r\n        this.flvWriter.writeUint32(0)\r\n\r\n        if (!this.hasMetadata && this.session.getDuration()) {\r\n          const script = new FlvScriptTag()\r\n          script.onMetaData = {\r\n            duration: this.session.getDuration()\r\n          }\r\n          script.write(this.flvWriter)\r\n        }\r\n\r\n        this.packetQueue.forEach((p) => {\r\n          this.writeFlvData(p)\r\n        })\r\n        this.packetQueue.length = 0\r\n        this.flvHeaderWrote = true\r\n      }\r\n    }\r\n  }\r\n\r\n  public async send(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    if (this.socket) {\r\n      await this.socket.send(buffer)\r\n      return 0\r\n    }\r\n    return IOError.INVALID_OPERATION\r\n  }\r\n\r\n  public async open(info: RtmpIOInfo): Promise<int32> {\r\n    this.info = info\r\n    this.status = IOLoaderStatus.CONNECTING\r\n    if (info.subProtocol === IOType.WEBTRANSPORT) {\r\n      this.socket = new WebTransportIOLoader(this.options)\r\n      await this.socket.open({\r\n        url: info.url,\r\n        webtransportOptions: info.webtransportOptions\r\n      })\r\n    }\r\n    else {\r\n      this.socket = new WebSocketIOLoader(this.options)\r\n      await this.socket.open({\r\n        url: info.url\r\n      })\r\n    }\r\n\r\n    this.ioReader = new IOReader()\r\n    this.ioReader.onFlush = async (buffer) => {\r\n      return this.socket.read(buffer)\r\n    }\r\n    this.ioReader.onSeek = async (pos) => {\r\n      return this.socket.seek(pos)\r\n    }\r\n    this.ioReader.onSize = async () => {\r\n      return this.socket.size()\r\n    }\r\n\r\n    this.ioWriter = new IOWriter()\r\n    this.ioWriter.onFlush = async (buffer) => {\r\n      return this.socket.write(buffer)\r\n    }\r\n    this.ioWriter.onSeek = async (pos) => {\r\n      return this.socket.seek(pos)\r\n    }\r\n\r\n    this.flvWriter = new IOWriterSync()\r\n    this.flvWriter.onFlush = (buffer) => {\r\n      this.readQueue.push(buffer.slice())\r\n      if (this.consume) {\r\n        this.consume()\r\n      }\r\n      return 0\r\n    }\r\n    this.flvHeader = new FlvHeader()\r\n    this.packetQueue = []\r\n    this.flvHeaderWrote = false\r\n    this.hasMetadata = false\r\n\r\n    this.session = new RtmpSession(this.ioReader, this.ioWriter, {\r\n      isLive: this.options.isLive,\r\n      isPull: true\r\n    })\r\n    this.session.onMediaPacket = async (packet, streamName) => {\r\n      return this.handleRtmpPacket(packet)\r\n    }\r\n    this.session.onError = () => {\r\n      this.status = IOLoaderStatus.ERROR\r\n      if (this.consume) {\r\n        this.consume()\r\n      }\r\n    }\r\n\r\n    await this.session.handshake()\r\n\r\n    const result = url.parse(this.info.uri)\r\n    const paths = result.pathname.split('/')\r\n    await this.session.connect(paths[1], `rtmp://${result.host}${result.port ? (':' + result.port) : ''}/${paths[1]}`)\r\n    const streamName = paths.slice(2)\r\n    this.session.play((streamName.length > 1 ? streamName.join('/') : streamName[0]) || '')\r\n    return 0\r\n  }\r\n  public async seek(pos: int64): Promise<int32> {\r\n    await this.session.seek(Number(pos))\r\n    return 0\r\n  }\r\n  public async size(): Promise<int64> {\r\n    return 0n\r\n  }\r\n  public async stop() {\r\n    if (this.socket) {\r\n      await this.socket.stop()\r\n      this.socket = null\r\n    }\r\n    this.status = IOLoaderStatus.COMPLETE\r\n  }\r\n}\r\n","/*\r\n * libmedia rtmp packet\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { RtmpPacketType } from './rtmp'\r\n\r\nexport class RtmpPacket {\r\n  /**\r\n   * RTMP channel ID (nothing to do with audio/video channels though\r\n   */\r\n  channelId: int32\r\n  /**\r\n   * packet payload type\r\n   */\r\n  type: RtmpPacketType\r\n  /**\r\n   * packet full timestamp\r\n   */\r\n  timestamp: uint32\r\n  /**\r\n   * 24-bit timestamp or increment to the previous one, in milliseconds (latter only for media packets).\r\n   * Clipped to a maximum of 0xFFFFFF, indicating an extended timestamp field.\r\n   */\r\n  tsField: uint32 = 0\r\n  /**\r\n   * probably an additional channel ID used during streaming data\r\n   */\r\n  extra: uint32 = 0\r\n  /**\r\n   * packet payload\r\n   */\r\n  payload: Uint8Array\r\n\r\n  constructor(channelId: int32, type: RtmpPacketType, timestamp: uint32, size: int32 | Uint8Array) {\r\n    this.channelId = channelId\r\n    this.type = type\r\n    this.timestamp = timestamp\r\n    this.payload = size instanceof Uint8Array ? size : new Uint8Array(size)\r\n  }\r\n}\r\n\r\nexport class RtmpChunk {\r\n  /**\r\n * RTMP channel ID (nothing to do with audio/video channels though\r\n */\r\n  channelId: int32\r\n  /**\r\n  * packet payload type\r\n  */\r\n  type: RtmpPacketType\r\n  /**\r\n  * packet full timestamp\r\n  */\r\n  timestamp: uint32\r\n  /**\r\n  * 24-bit timestamp or increment to the previous one, in milliseconds (latter only for media packets).\r\n  * Clipped to a maximum of 0xFFFFFF, indicating an extended timestamp field.\r\n  */\r\n  tsField: uint32 = 0\r\n  /**\r\n  * probably an additional channel ID used during streaming data\r\n  */\r\n  extra: uint32 = 0\r\n  /**\r\n   * packet payload\r\n   */\r\n  payload: Uint8Array\r\n}\r\n\r\n","/*\r\n * libmedia rtmp session\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport { RtmpPacket } from './RtmpPacket'\r\nimport * as crypto from 'avutil/util/crypto'\r\nimport getTimestamp from 'common/function/getTimestamp'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport { APP_MAX_LENGTH, RtmpChannel, RtmpPacketType } from './rtmp'\r\nimport * as amf from 'avutil/util/amf'\r\nimport { Data } from 'common/types/type'\r\nimport { readRtmpPacket, sendRtmpPacket } from './util'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport * as logger from 'common/util/logger'\r\nimport * as array from 'common/util/array'\r\nimport * as is from 'common/util/is'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport { Sync, lock, unlock } from 'cheap/thread/sync'\r\n\r\nconst enum ClientState {\r\n  /**\r\n   * client has not done anything yet\r\n   */\r\n  START,\r\n  /**\r\n   * client has performed handshake\r\n   */\r\n  HANDSHAKED,\r\n  /**\r\n   * client FCPublishing stream (for output)\r\n   */\r\n  FCPUBLISH,\r\n  /**\r\n   * client has started receiving multimedia data from server\r\n   */\r\n  PLAYING,\r\n  /**\r\n   * client has started the seek operation. Back on STATE_PLAYING when the time comes\r\n   */\r\n  SEEKING,\r\n  /**\r\n   * client has started sending multimedia data to server (for output)\r\n   */\r\n  PUBLISHING,\r\n  /**\r\n   * received a publish command (for input)\r\n   */\r\n  RECEIVING,\r\n  /**\r\n   * received a play command (for output)\r\n   */\r\n  SENDING,\r\n  /**\r\n   * the broadcast has been stopped\r\n   */\r\n  STOPPED,\r\n}\r\n\r\nexport interface RtmpSessionOptions {\r\n  isPull: boolean\r\n  isLive: boolean\r\n  clientBufferTime?: int32\r\n}\r\n\r\nexport default class RtmpSession {\r\n  private ioReader: IOReader\r\n  private ioWriter: IOWriter\r\n\r\n  private prevReadPacket: Map<int32, RtmpPacket>\r\n  private prevWritePacket: Map<int32, RtmpPacket>\r\n  private inChunkSize: int32\r\n  private outChunkSize: int32\r\n  private seq: int32\r\n  private bufferWriter: BufferWriter\r\n  private bufferReader: BufferReader\r\n\r\n  private requestMap: Map<int32, { resolve: (result: Data) => void, reject: (error: Data) => void }>\r\n\r\n  private state: ClientState\r\n  private maxSentUnacked: uint32\r\n  private receiveReportSize: uint32\r\n  private duration: double\r\n  private options: RtmpSessionOptions\r\n  private streamIdMap: Map<uint32, string>\r\n  private sendAsync: Sync\r\n\r\n  public onMediaPacket: (packet: RtmpPacket, streamName: string) => Promise<void> | void\r\n  public onError: () => void\r\n\r\n  constructor(ioReader: IOReader, ioWriter: IOWriter, options: RtmpSessionOptions) {\r\n    this.ioReader = ioReader\r\n    this.ioWriter = ioWriter\r\n    this.options = options\r\n\r\n    this.prevReadPacket = new Map()\r\n    this.prevWritePacket = new Map()\r\n    this.requestMap = new Map()\r\n    this.streamIdMap = new Map()\r\n\r\n    this.inChunkSize = 128\r\n    this.outChunkSize = 128\r\n    this.seq = 0\r\n    this.maxSentUnacked = 2500000\r\n    this.receiveReportSize = 1048576\r\n    this.sendAsync = new Sync()\r\n\r\n    this.bufferWriter = new BufferWriter(new Uint8Array(1))\r\n    this.bufferReader = new BufferReader(new Uint8Array(1))\r\n\r\n    this.state = ClientState.START\r\n  }\r\n\r\n  public async handshake() {\r\n\r\n    const startTime = getTimestamp()\r\n\r\n    // c0\r\n    await this.ioWriter.writeUint8(0x03)\r\n    // c1\r\n    // time\r\n    await this.ioWriter.writeUint32(0)\r\n    // zero\r\n    await this.ioWriter.writeUint32(0)\r\n    // random\r\n    const random = new Uint8Array(1528)\r\n    crypto.random(random)\r\n    await this.ioWriter.writeBuffer(random)\r\n    await this.ioWriter.flush()\r\n\r\n    // s0\r\n    await this.ioReader.readUint8()\r\n    // s1\r\n    const s1Time = await this.ioReader.readUint32()\r\n    await this.ioReader.skip(4)\r\n    const s1Random = await this.ioReader.readBuffer(1528)\r\n\r\n    // c2\r\n    await this.ioWriter.writeUint32(s1Time)\r\n    await this.ioWriter.writeUint32(getTimestamp() - startTime)\r\n    await this.ioWriter.writeBuffer(s1Random)\r\n    await this.ioWriter.flush()\r\n\r\n    // s2\r\n    await this.ioReader.skip(1536)\r\n\r\n    this.readRtmpPacket()\r\n  }\r\n\r\n  private async sendPacket(packet: RtmpPacket) {\r\n    await lock(this.sendAsync)\r\n    await sendRtmpPacket(this.ioWriter, this.outChunkSize, packet, this.prevWritePacket.get(packet.channelId))\r\n    this.prevWritePacket.set(packet.channelId, packet)\r\n    unlock(this.sendAsync)\r\n  }\r\n\r\n  private async readPacket() {\r\n    const packet = await readRtmpPacket(this.ioReader, this.inChunkSize, this.prevReadPacket)\r\n    this.prevReadPacket.set(packet.channelId, packet)\r\n    return packet\r\n  }\r\n\r\n  private handleChunkSize(packet: RtmpPacket) {\r\n    if (packet.payload.length >= 4) {\r\n      this.bufferReader.resetBuffer(packet.payload)\r\n      this.inChunkSize = this.bufferReader.readUint32()\r\n    }\r\n  }\r\n  private handleUserControl(packet: RtmpPacket) {\r\n    if (packet.payload.length >= 2) {\r\n      this.bufferReader.resetBuffer(packet.payload)\r\n      const type = this.bufferReader.readUint16()\r\n      // PingRequest\r\n      if (type === 6) {\r\n        this.sendPong(packet, this.bufferReader.readUint32())\r\n      }\r\n    }\r\n  }\r\n  private handleSetPeerBW(packet: RtmpPacket) {\r\n    if (packet.payload.length >= 4) {\r\n      this.bufferReader.resetBuffer(packet.payload)\r\n      this.maxSentUnacked = this.bufferReader.readUint32()\r\n      logger.debug(`Max sent, unacked = ${this.maxSentUnacked}`)\r\n    }\r\n  }\r\n  private handleWindowSizeACK(packet: RtmpPacket) {\r\n    if (packet.payload.length >= 4) {\r\n      this.bufferReader.resetBuffer(packet.payload)\r\n      this.receiveReportSize = this.bufferReader.readUint32()\r\n      logger.debug(`Window acknowledgement size = ${this.receiveReportSize}`)\r\n      // Send an Acknowledgement packet after receiving half the maximum\r\n      // size, to make sure the peer can keep on sending without waiting\r\n      // for acknowledgements.\r\n      this.receiveReportSize >>= 1\r\n    }\r\n  }\r\n  private async handleInvoke(packet: RtmpPacket) {\r\n    this.bufferReader.resetBuffer(packet.payload)\r\n    const endPos = BigInt(packet.payload.length)\r\n    const key = await amf.parseValue(this.bufferReader, endPos)\r\n    const seq: number = await amf.parseValue(this.bufferReader, endPos)\r\n\r\n    if (key === '_result' || key === '_error') {\r\n      if (this.requestMap.has(seq)) {\r\n        const options = await amf.parseValue(this.bufferReader, endPos)\r\n        const info = await amf.parseValue(this.bufferReader, endPos)\r\n        if (key === '_result') {\r\n          this.requestMap.get(seq).resolve({\r\n            options,\r\n            info\r\n          })\r\n        }\r\n        else {\r\n          this.requestMap.get(seq).reject({\r\n            options,\r\n            info\r\n          })\r\n        }\r\n        this.requestMap.delete(seq)\r\n      }\r\n    }\r\n    else if (key === 'onStatus') {\r\n      const options = await amf.parseValue(this.bufferReader, endPos)\r\n      let info: Data = await amf.parseValue(this.bufferReader, endPos)\r\n      if (info.level === 'error') {\r\n        logger.error(`Server error: ${info.description}, ${info.code}`)\r\n        if (this.requestMap.has(seq)) {\r\n          this.requestMap.get(seq).reject({\r\n            options,\r\n            info\r\n          })\r\n          this.requestMap.delete(seq)\r\n        }\r\n        else if (this.onError) {\r\n          this.onError()\r\n        }\r\n      }\r\n      else {\r\n        switch (info.code) {\r\n          case 'NetStream.Play.Start':\r\n            this.state = ClientState.PLAYING\r\n            break\r\n          case 'NetStream.Play.Stop':\r\n            this.state = ClientState.STOPPED\r\n            break\r\n          case 'NetStream.Play.UnpublishNotify':\r\n            this.state = ClientState.STOPPED\r\n            break\r\n          case 'NetStream.Publish.Start':\r\n            this.state = ClientState.PUBLISHING\r\n            break\r\n          case 'NetStream.Seek.Notify':\r\n            this.state = ClientState.PLAYING\r\n            break\r\n        }\r\n        if (this.requestMap.has(seq)) {\r\n          this.requestMap.get(seq).resolve({\r\n            options,\r\n            info\r\n          })\r\n          this.requestMap.delete(seq)\r\n        }\r\n      }\r\n    }\r\n    else if (key === 'onBWDone') {\r\n      await this.sendCheckBW()\r\n    }\r\n  }\r\n  private async handleNotify(packet: RtmpPacket) {\r\n    this.bufferReader.resetBuffer(packet.payload)\r\n    const command = await amf.parseValue(this.bufferReader, BigInt(packet.payload.length))\r\n\r\n    if (command === '@setDataFrame') {\r\n      packet.payload = packet.payload.subarray(Number(this.bufferReader.getPos()))\r\n    }\r\n\r\n    if (packet.payload.length && this.onMediaPacket) {\r\n      await this.onMediaPacket(packet, this.streamIdMap.get(packet.extra))\r\n    }\r\n  }\r\n\r\n  private async readRtmpPacket() {\r\n    while (true) {\r\n      try {\r\n        const packet = await this.readPacket()\r\n        switch (packet.type) {\r\n          case RtmpPacketType.PT_BYTES_READ:\r\n            break\r\n          case RtmpPacketType.PT_CHUNK_SIZE:\r\n            this.handleChunkSize(packet)\r\n            break\r\n          case RtmpPacketType.PT_USER_CONTROL:\r\n            this.handleUserControl(packet)\r\n            break\r\n          case RtmpPacketType.PT_SET_PEER_BW:\r\n            this.handleSetPeerBW(packet)\r\n            break\r\n          case RtmpPacketType.PT_WINDOW_ACK_SIZE:\r\n            this.handleWindowSizeACK(packet)\r\n            break\r\n          case RtmpPacketType.PT_INVOKE:\r\n            await this.handleInvoke(packet)\r\n            break\r\n          case RtmpPacketType.PT_NOTIFY:\r\n            await this.handleNotify(packet)\r\n            break\r\n          case RtmpPacketType.PT_METADATA:\r\n          case RtmpPacketType.PT_AUDIO:\r\n          case RtmpPacketType.PT_VIDEO:\r\n            if (this.onMediaPacket) {\r\n              await this.onMediaPacket(packet, this.streamIdMap.get(packet.extra))\r\n            }\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      }\r\n      catch (error) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  private async sendPong(packet: RtmpPacket, value: uint32) {\r\n    if (packet.payload.length < 6) {\r\n      logger.warn(`Too short ping packet (${packet.payload.length})`)\r\n      return\r\n    }\r\n    const p = new RtmpPacket(RtmpChannel.NETWORK_CHANNEL, RtmpPacketType.PT_USER_CONTROL, packet.timestamp + 1, 6)\r\n    this.bufferWriter.resetBuffer(p.payload)\r\n    this.bufferWriter.writeUint16(7)\r\n    this.bufferWriter.writeUint32(value)\r\n    this.sendPacket(p)\r\n  }\r\n\r\n  private async sendWindowAckSize() {\r\n    const p = new RtmpPacket(RtmpChannel.NETWORK_CHANNEL, RtmpPacketType.PT_WINDOW_ACK_SIZE, 0, 4)\r\n    this.bufferWriter.resetBuffer(p.payload)\r\n    this.bufferWriter.writeUint32(this.maxSentUnacked)\r\n    await this.sendPacket(p)\r\n  }\r\n\r\n  private async sendBufferTime(streamId: uint32) {\r\n    const p = new RtmpPacket(RtmpChannel.NETWORK_CHANNEL, RtmpPacketType.PT_USER_CONTROL, 1, 10)\r\n    this.bufferWriter.resetBuffer(p.payload)\r\n    // SetBuffer Length\r\n    this.bufferWriter.writeUint16(3)\r\n    this.bufferWriter.writeUint32(streamId)\r\n    this.bufferWriter.writeUint32(this.options.clientBufferTime || 3000)\r\n    await this.sendPacket(p)\r\n  }\r\n\r\n  private async sendFCSubscribe(subscribe: string) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 27 + subscribe.length)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n\r\n    amf.writeValue(this.bufferWriter, 'FCSubscribe')\r\n    amf.writeValue(this.bufferWriter, ++this.seq)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    amf.writeValue(this.bufferWriter, subscribe)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  private async sendFCPublish(publish: string) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 25 + publish.length)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n\r\n    amf.writeValue(this.bufferWriter, 'FCPublish')\r\n    amf.writeValue(this.bufferWriter, ++this.seq)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    amf.writeValue(this.bufferWriter, publish)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  private async sendReleaseStream(streamName: string) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 29 + streamName.length)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n\r\n    amf.writeValue(this.bufferWriter, 'releaseStream')\r\n    amf.writeValue(this.bufferWriter, ++this.seq)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    amf.writeValue(this.bufferWriter, streamName)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  private async sendCheckBW() {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 21)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n\r\n    amf.writeValue(this.bufferWriter, '_checkbw')\r\n    amf.writeValue(this.bufferWriter, ++this.seq)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  private async request(method: string, data: any[]) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 4096 + APP_MAX_LENGTH)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n\r\n    amf.writeValue(this.bufferWriter, method)\r\n    amf.writeValue(this.bufferWriter, ++this.seq)\r\n\r\n    array.each(data, (value) => {\r\n      amf.writeValue(this.bufferWriter, value)\r\n    })\r\n    packet.payload = packet.payload.subarray(0, this.bufferWriter.getPos())\r\n\r\n    return new Promise<Data>((resolve, reject) => {\r\n      this.requestMap.set(this.seq, {\r\n        resolve,\r\n        reject\r\n      })\r\n      this.sendPacket(packet)\r\n    })\r\n  }\r\n\r\n  public async connect(appName: string, url: string) {\r\n    await this.request('connect', [{\r\n      app: appName,\r\n      fourCcList: ['hvc1', 'av01', 'vp09'],\r\n      flashVer: 'LNX 9,0,124,2',\r\n      tcUrl: url,\r\n      fpad: 0,\r\n      capabilities: 15.0,\r\n      /* Tell the server we support all the audio codecs except\r\n       * SUPPORT_SND_INTEL (0x0008) and SUPPORT_SND_UNUSED (0x0010)\r\n       * which are unused in the RTMP protocol implementation.\r\n       */\r\n      audioCodecs: 4071.0,\r\n      videoCodecs: 252.0,\r\n      videoFunction: 1.0\r\n    }])\r\n    if (this.options.isPull) {\r\n      await this.sendWindowAckSize()\r\n    }\r\n  }\r\n\r\n  private async createStream() {\r\n    const result = await this.request('createStream', [null])\r\n    return result.info as uint32\r\n  }\r\n\r\n  public async play(streamName: string) {\r\n\r\n    const streamId = await this.createStream()\r\n\r\n    this.streamIdMap.set(streamId, streamName)\r\n\r\n    if (!this.options.isLive) {\r\n      const result = await Promise.race([\r\n        this.request('getStreamLength', [null, streamName]),\r\n        new Sleep(1)\r\n      ])\r\n      if (!is.number(result)) {\r\n        this.duration = result.info as double\r\n      }\r\n    }\r\n    await this.sendFCSubscribe(streamName)\r\n\r\n    this.request('play', [null, streamName, -1, -1, true])\r\n    await this.sendBufferTime(streamId)\r\n  }\r\n\r\n  public async publish(streamName: string) {\r\n    await this.sendReleaseStream(streamName)\r\n    await this.sendFCPublish(streamName)\r\n    const streamId = await this.createStream()\r\n    this.streamIdMap.set(streamId, streamName)\r\n    await this.request('publish', [null, streamName, 'live'])\r\n  }\r\n\r\n  public async sendStreamPacket(packet: RtmpPacket, streamName: string) {\r\n    let streamId = 0\r\n    this.streamIdMap.forEach((v, k) => {\r\n      if (v === streamName) {\r\n        streamId = k\r\n      }\r\n    })\r\n    packet.extra = streamId\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  public async seek(timestamp: number) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 26)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n    amf.writeValue(this.bufferWriter, 'seek')\r\n    amf.writeValue(this.bufferWriter, 0)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    amf.writeValue(this.bufferWriter, timestamp)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  public async pause(paused: boolean, timestamp: number) {\r\n    const packet = new RtmpPacket(RtmpChannel.SYSTEM_CHANNEL, RtmpPacketType.PT_INVOKE, 0, 29)\r\n    this.bufferWriter.resetBuffer(packet.payload)\r\n    amf.writeValue(this.bufferWriter, 'pause')\r\n    amf.writeValue(this.bufferWriter, 0)\r\n    amf.writeValue(this.bufferWriter, null)\r\n    amf.writeValue(this.bufferWriter, paused)\r\n    amf.writeValue(this.bufferWriter, timestamp)\r\n    await this.sendPacket(packet)\r\n  }\r\n\r\n  public getDuration() {\r\n    return this.duration\r\n  }\r\n}\r\n","/*\r\n * libmedia rtmp\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n/**\r\n * maximum possible number of different RTMP channels\r\n */\r\nexport const RTMP_CHANNELS = 65599\r\n\r\nexport const APP_MAX_LENGTH = 1024\r\n\r\nexport const TCURL_MAX_LENGTH = 1024\r\n\r\nexport const FLASHVER_MAX_LENGTH = 64\r\n\r\nexport const RTMP_PKTDATA_DEFAULT_SIZE = 4096\r\n\r\nexport const RTMP_HEADER = 11\r\n\r\n/**\r\n * channels used to for RTMP packets with different purposes (i.e. data, network\r\n * control, remote procedure calls, etc.)\r\n */\r\nexport const enum RtmpChannel {\r\n  /**\r\n   * channel for network-related messages (bandwidth report, ping, etc)\r\n   */\r\n  NETWORK_CHANNEL = 2,\r\n  /**\r\n   * channel for sending server control messages\r\n   */\r\n  SYSTEM_CHANNEL,\r\n  /**\r\n   * channel for audio data\r\n   */\r\n  AUDIO_CHANNEL,\r\n  /**\r\n   * channel for video data\r\n   */\r\n  VIDEO_CHANNEL   = 6,\r\n  /**\r\n   * channel for a/v invokes\r\n   */\r\n  SOURCE_CHANNEL  = 8,\r\n}\r\n\r\n/**\r\n * known RTMP packet types\r\n */\r\nexport const enum RtmpPacketType {\r\n  /**\r\n   * chunk size change\r\n   */\r\n  PT_CHUNK_SIZE = 1,\r\n  /**\r\n   * number of bytes read\r\n   */\r\n  PT_BYTES_READ = 3,\r\n  /**\r\n   * user control\r\n   */\r\n  PT_USER_CONTROL,\r\n  /**\r\n   * window acknowledgement size\r\n   */\r\n  PT_WINDOW_ACK_SIZE,\r\n  /**\r\n   * peer bandwidth\r\n   */\r\n  PT_SET_PEER_BW,\r\n  /**\r\n   * audio packet\r\n   */\r\n  PT_AUDIO = 8,\r\n  /**\r\n   * video packet\r\n   */\r\n  PT_VIDEO,\r\n  /**\r\n   * Flex shared stream\r\n   */\r\n  PT_FLEX_STREAM = 15,\r\n  /**\r\n   * Flex shared object\r\n   */\r\n  PT_FLEX_OBJECT,\r\n  /**\r\n   * Flex shared message\r\n   */\r\n  PT_FLEX_MESSAGE,\r\n  /**\r\n   * some notification\r\n   */\r\n  PT_NOTIFY,\r\n  /**\r\n   * shared object\r\n   */\r\n  PT_SHARED_OBJ,\r\n  /**\r\n   * invoke some stream action\r\n   */\r\n  PT_INVOKE,\r\n  /**\r\n   * FLV metadata\r\n   */\r\n  PT_METADATA = 22\r\n}\r\n\r\n/**\r\n * possible RTMP packet header sizes\r\n */\r\nexport const enum RtmpPacketHeaderSize {\r\n  /**\r\n   * packet has 12-byte header\r\n   */\r\n  PS_TWELVE_BYTES = 0,\r\n  /**\r\n   * packet has 8-byte header\r\n   */\r\n  PS_EIGHT_BYTES,\r\n  /**\r\n   * packet has 4-byte header\r\n   */\r\n  PS_FOUR_BYTES,\r\n  /**\r\n   * packet is really a next chunk of a packet\r\n   */\r\n  PS_ONE_BYTE\r\n}\r\n","/*\r\n * libmedia rtmp util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport { RtmpPacket } from './RtmpPacket'\r\nimport { RtmpPacketHeaderSize } from './rtmp'\r\nimport IOReader from 'common/io/IOReader'\r\nimport concatTypeArray from 'common/function/concatTypeArray'\r\nimport * as logger from 'common/util/logger'\r\n\r\nasync function writeChannelId(ioWriter: IOWriter, channelId: int32, mode: int32) {\r\n  if (channelId < 64) {\r\n    await ioWriter.writeUint8(channelId | (mode << 6))\r\n  }\r\n  else if (channelId < 64 + 256) {\r\n    await ioWriter.writeUint8(0 | (mode << 6))\r\n    await ioWriter.writeUint8(channelId - 64)\r\n  }\r\n  else {\r\n    await ioWriter.writeUint8(1 | (mode << 6))\r\n    const id = channelId - 64\r\n    await ioWriter.writeUint8(id & 0xff)\r\n    await ioWriter.writeUint8(id >>> 8)\r\n  }\r\n}\r\n\r\nexport async function sendRtmpPacket(ioWriter: IOWriter, chunkSize: int32, packet: RtmpPacket, prevPacket: RtmpPacket) {\r\n  const useDelta = prevPacket\r\n    && prevPacket.extra === packet.extra\r\n    && packet.timestamp >= prevPacket.timestamp\r\n\r\n  let timestamp = packet.timestamp\r\n  if (useDelta) {\r\n    timestamp -= prevPacket.timestamp\r\n  }\r\n  if (timestamp > 0xFFFFFF) {\r\n    packet.tsField = 0xFFFFFF\r\n  }\r\n  else {\r\n    packet.tsField = timestamp\r\n  }\r\n\r\n  let mode = RtmpPacketHeaderSize.PS_TWELVE_BYTES\r\n  if (useDelta) {\r\n    if (packet.type === prevPacket.type\r\n      && packet.payload.length === prevPacket.payload.length\r\n    ) {\r\n      mode = RtmpPacketHeaderSize.PS_FOUR_BYTES\r\n\r\n      if (packet.tsField === prevPacket.tsField) {\r\n        mode = RtmpPacketHeaderSize.PS_ONE_BYTE\r\n      }\r\n    }\r\n    else {\r\n      mode = RtmpPacketHeaderSize.PS_EIGHT_BYTES\r\n    }\r\n  }\r\n\r\n  await writeChannelId(ioWriter, packet.channelId, mode)\r\n\r\n  if (mode !== RtmpPacketHeaderSize.PS_ONE_BYTE) {\r\n    await ioWriter.writeUint24(packet.tsField)\r\n    if (mode !== RtmpPacketHeaderSize.PS_FOUR_BYTES) {\r\n      await ioWriter.writeUint24(packet.payload.length)\r\n      await ioWriter.writeUint8(packet.type)\r\n      if (mode === RtmpPacketHeaderSize.PS_TWELVE_BYTES) {\r\n        await ioWriter.writeUint8(packet.extra)\r\n        await ioWriter.writeUint8(packet.extra >> 8)\r\n        await ioWriter.writeUint8(packet.extra >> 16)\r\n        await ioWriter.writeUint8(packet.extra >> 24)\r\n      }\r\n    }\r\n  }\r\n  if (packet.tsField === 0xFFFFFF) {\r\n    await ioWriter.writeUint32(timestamp)\r\n  }\r\n\r\n  let offset = 0\r\n  while (offset < packet.payload.length) {\r\n    const len = Math.min(chunkSize, packet.payload.length - offset)\r\n    await ioWriter.writeBuffer(packet.payload.subarray(offset, offset + len))\r\n\r\n    offset += len\r\n\r\n    if (offset < packet.payload.length) {\r\n      await writeChannelId(ioWriter, packet.channelId, RtmpPacketHeaderSize.PS_ONE_BYTE)\r\n      if (packet.tsField === 0xFFFFFF) {\r\n        await ioWriter.writeUint32(timestamp)\r\n      }\r\n    }\r\n  }\r\n  await ioWriter.flush()\r\n}\r\n\r\nexport async function readRtmpPacket(ioReader: IOReader, chunkSize: int32, prevPacketMap: Map<int32, RtmpPacket>) {\r\n  const buffers: Uint8Array[] = []\r\n  const header = await ioReader.readUint8()\r\n  let channelId = header & 0x3F\r\n\r\n  // special case for channel number >= 64\r\n  if (channelId < 2) {\r\n    const total = await ioReader.readUint8()\r\n    if (total === 0) {\r\n      channelId = (await ioReader.readUint8()) + 64\r\n    }\r\n    else {\r\n      channelId = ((await ioReader.readUint8()) | ((await ioReader.readUint8()) << 8)) + 64\r\n    }\r\n  }\r\n  const mode = header >>> 6\r\n\r\n  const prevPacket = prevPacketMap.get(channelId)\r\n\r\n  let size = prevPacket ? prevPacket.payload.length : 0\r\n  let type = prevPacket ? prevPacket.type : 0\r\n  let extra = prevPacket ? prevPacket.extra : 0\r\n  let tsField = 0\r\n  let timestamp = 0\r\n\r\n  if (mode === RtmpPacketHeaderSize.PS_ONE_BYTE) {\r\n    tsField = prevPacket.tsField\r\n  }\r\n  else {\r\n    tsField = await ioReader.readUint24()\r\n    if (mode !== RtmpPacketHeaderSize.PS_FOUR_BYTES) {\r\n      size = await ioReader.readUint24()\r\n      type = await ioReader.readUint8()\r\n\r\n      if (mode === RtmpPacketHeaderSize.PS_TWELVE_BYTES) {\r\n        extra = await ioReader.readUint8()\r\n        extra |= (await ioReader.readUint8()) << 8\r\n        extra |= (await ioReader.readUint8()) << 16\r\n        extra |= (await ioReader.readUint8()) << 24\r\n      }\r\n    }\r\n  }\r\n\r\n  if (tsField === 0xFFFFFF) {\r\n    timestamp = await ioReader.readUint32()\r\n  }\r\n  else {\r\n    timestamp = tsField\r\n  }\r\n  if (mode !== RtmpPacketHeaderSize.PS_TWELVE_BYTES) {\r\n    if (prevPacket) {\r\n      timestamp += prevPacket.timestamp\r\n    }\r\n    else {\r\n      logger.warn(`got invalid message fmt, channel id ${channelId} can not find prev message with fmt ${mode}`)\r\n    }\r\n  }\r\n  if (size < chunkSize) {\r\n    buffers.push(await ioReader.readBuffer(size))\r\n  }\r\n  else {\r\n    let total = size\r\n    while (total) {\r\n      const len = Math.min(chunkSize, total)\r\n      buffers.push(await ioReader.readBuffer(len))\r\n      total -= len\r\n      if (total) {\r\n        const next = (await ioReader.readUint8()) & 0x3F\r\n        if (next < 2) {\r\n          await ioReader.skip(next + 1)\r\n        }\r\n        if (tsField === 0xFFFFFF) {\r\n          await ioReader.skip(4)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const packet = new RtmpPacket(channelId, type, timestamp, concatTypeArray(Uint8Array, buffers))\r\n  packet.tsField = tsField\r\n  packet.extra = extra\r\n\r\n  return packet\r\n}\r\n","/*\r\n * libmedia constant\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Rational } from './struct/rational'\r\n\r\nexport const NOPTS_VALUE_BIGINT: int64 = -1n\r\n\r\nexport const NOPTS_VALUE: int32 = -1\r\n\r\nexport const AV_TIME_BASE: int32 = 1000000\r\n\r\nexport const AV_MILLI_TIME_BASE: int32 = 1000\r\n\r\nexport const AV_NANO_TIME_BASE: int32 = 1000000000\r\n\r\nexport const NTP_OFFSET = 2208988800n\r\nexport const NTP_OFFSET_US = (NTP_OFFSET * 1000000n)\r\n\r\n/**\r\n * 微秒时间基\r\n */\r\nexport const AV_TIME_BASE_Q = new Rational({den: AV_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 毫秒时间基\r\n */\r\nexport const AV_MILLI_TIME_BASE_Q = new Rational({den: AV_MILLI_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 纳秒时间基\r\n */\r\nexport const AV_NANO_TIME_BASE_Q = new Rational({den: AV_NANO_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 秒时间基\r\n */\r\nexport const AV_TIME_BASE1_Q = new Rational({den: 1, num: 1})\r\n\r\nexport const INT8_MAX: int8 = 127\r\nexport const INT16_MAX: int16 = 32767\r\nexport const INT32_MAX: int32 = 2147483647\r\nexport const INT64_MAX: int64 = 9223372036854775807n\r\n\r\nexport const INT8_MIN: int8  = -128\r\nexport const INT16_MIN: int16 = -32768\r\nexport const INT32_MIN: int32 = -INT32_MAX - 1\r\n\r\nexport const UINT8_MAX: uint8 = 255\r\nexport const UINT16_MAX: uint16 = 65535\r\nexport const UINT32_MAX: uint32 = 4294967295\r\nexport const UINT64_MAX: uint64 = 18446744073709551615n\r\n","/*\r\n * libmedia Rational defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n@struct\r\nexport class Rational {\r\n  /**\r\n   * 分子\r\n   */\r\n  num: int32 = 1\r\n  /**\r\n   * 分母\r\n   */\r\n  den: int32 = 1\r\n\r\n  constructor(init?: {den: number, num: number}) {\r\n    if (init) {\r\n      this.den = init.den\r\n      this.num = init.num\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia flv amf\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport IOReader from 'common/io/IOReader'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport * as is from 'common/util/is'\r\nimport * as array from 'common/util/array'\r\nimport * as object from 'common/util/object'\r\n\r\nexport async function parseObject(ioReader: IOReader | BufferReader, endPos: bigint) {\r\n  const key = await ioReader.readString(await ioReader.readUint16())\r\n  const value = await parseValue(ioReader, endPos)\r\n  return {\r\n    key,\r\n    value\r\n  }\r\n}\r\n\r\nexport async function parseValue(ioReader: IOReader | BufferReader, endPos: bigint) {\r\n  const type = await ioReader.readUint8()\r\n  let value: any\r\n\r\n  switch (type) {\r\n    // double\r\n    case 0:\r\n      value = await ioReader.readDouble()\r\n      break\r\n      // boolean\r\n    case 1:\r\n      value = await ioReader.readUint8() ? true : false\r\n      break\r\n      // string\r\n    case 2:\r\n      value = await ioReader.readString(await ioReader.readUint16())\r\n      break\r\n      // object\r\n    case 3:\r\n      value = {}\r\n      while (ioReader.getPos() < endPos) {\r\n        const { key, value: val } = await parseObject(ioReader, endPos)\r\n        value[key] = val\r\n        if (((await ioReader.peekUint24()) & 0x00FFFFFF) === 9) {\r\n          await ioReader.skip(3)\r\n          break\r\n        }\r\n      }\r\n      break\r\n      // ECMA array type (Mixed array)\r\n    case 8:\r\n      value = {}\r\n      // skip ECMAArrayLength(UI32)\r\n      await ioReader.skip(4)\r\n      while (ioReader.getPos() < endPos) {\r\n        const { key, value: val } = await parseObject(ioReader, endPos)\r\n        value[key] = val\r\n        if (((await ioReader.peekUint24()) & 0x00FFFFFF) === 9) {\r\n          await ioReader.skip(3)\r\n          break\r\n        }\r\n      }\r\n      break\r\n      // ScriptDataObjectEnd\r\n    case 9:\r\n    case 5:\r\n      value = null\r\n      break\r\n    // Strict array type\r\n    case 10:\r\n      value = []\r\n      const length = await ioReader.readUint32()\r\n      for (let i = 0; i < length; i++) {\r\n        value.push(await parseValue(ioReader, endPos))\r\n      }\r\n      break\r\n    // Date\r\n    case 11:\r\n      const timestamp = await ioReader.readDouble()\r\n      const localTimeOffset = await ioReader.readInt16()\r\n      value = new Date(timestamp + localTimeOffset * 60 * 1000)\r\n      break\r\n    // Long string type\r\n    case 12:\r\n      value = await ioReader.readString(await ioReader.readUint32())\r\n      break\r\n    default:\r\n\r\n  }\r\n\r\n  return value\r\n}\r\n\r\nexport function writeValue(ioWriter: IOWriterSync | BufferWriter, value: any) {\r\n  // double\r\n  if (is.number(value)) {\r\n    ioWriter.writeUint8(0)\r\n    ioWriter.writeDouble(value)\r\n  }\r\n  else if (is.bigint(value)) {\r\n    ioWriter.writeUint8(0)\r\n    ioWriter.writeDouble(Number(value))\r\n  }\r\n  // boolean\r\n  else if (is.boolean(value)) {\r\n    ioWriter.writeUint8(1)\r\n    ioWriter.writeUint8(value ? 1 : 0)\r\n  }\r\n  // string\r\n  else if (is.string(value)) {\r\n    // long string\r\n    if (value.length >= 65536) {\r\n      ioWriter.writeUint8(12)\r\n      ioWriter.writeUint32(value.length)\r\n      ioWriter.writeString(value)\r\n    }\r\n    // string\r\n    else {\r\n      ioWriter.writeUint8(2)\r\n      ioWriter.writeUint16(value.length)\r\n      ioWriter.writeString(value)\r\n    }\r\n  }\r\n  // array type\r\n  else if (is.array(value)) {\r\n    ioWriter.writeUint8(10)\r\n    ioWriter.writeUint32(value.length)\r\n    array.each(value, (value) => {\r\n      writeValue(ioWriter, value)\r\n    })\r\n  }\r\n  // object\r\n  else if (is.object(value)) {\r\n    ioWriter.writeUint8(3)\r\n    object.each(value, (item, key) => {\r\n      ioWriter.writeUint16(key.length)\r\n      ioWriter.writeString(key)\r\n      writeValue(ioWriter, item)\r\n    })\r\n    // object end flag\r\n    ioWriter.writeUint24(9)\r\n  }\r\n  else if (value instanceof Date) {\r\n    ioWriter.writeUint8(11)\r\n    ioWriter.writeDouble(value.getTime())\r\n    ioWriter.writeInt16(0)\r\n  }\r\n  else if (value == null) {\r\n    ioWriter.writeUint8(5)\r\n  }\r\n}\r\n","/*\r\n * libmedia crypto util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport function random(buffer: Uint8Array) {\r\n  if (defined(ENV_NODE)) {\r\n    const crypto = require('crypto')\r\n    crypto.randomFillSync(buffer)\r\n  }\r\n  else {\r\n    crypto.getRandomValues(buffer)\r\n  }\r\n}\r\n","/*\r\n * libmedia rational util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { INT32_MAX } from '../constant'\r\nimport { Rational } from '../struct/rational'\r\nimport gcd from 'common/math/gcd'\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ(a: int64, bq: Rational, cq: Rational) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ2(a: int64, bq: pointer<Rational>, cq: Rational) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ3(a: int64, bq: Rational, cq: pointer<Rational>) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ4(a: int64, bq: pointer<Rational>, cq: pointer<Rational>) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间基转换成 double\r\n * \r\n * @param a \r\n */\r\nexport function avQ2D(a: Rational) {\r\n  return a.num / a.den\r\n}\r\n\r\n/**\r\n * 将一个时间基转换成 double\r\n * \r\n * @param a \r\n */\r\nexport function avQ2D2(a: pointer<Rational>) {\r\n  return a.num / a.den\r\n}\r\n\r\nexport function avD2Q(d: double, max: int32): Rational {\r\n  if (isNaN(double)) {\r\n    return {\r\n      den: 0,\r\n      num: 0\r\n    }\r\n  }\r\n  if (Math.abs(d) > INT32_MAX + 3) {\r\n    return {\r\n      den: 0,\r\n      num: d < 0 ? -1 : 1\r\n    }\r\n  }\r\n  const q = d > 1\r\n    ? {\r\n      den: Math.floor(max / d + 0.5),\r\n      num: max\r\n    }\r\n    : {\r\n      den: max,\r\n      num: Math.floor(d * max + 0.5)\r\n    }\r\n  avReduce(q)\r\n  return q\r\n}\r\n\r\n/**\r\n * 化简 Rational\r\n * \r\n * @param a \r\n */\r\nexport function avReduce(a: Rational) {\r\n  const gcdValue = gcd(a.num, a.den)\r\n  if (gcdValue <= 1) {\r\n    return\r\n  }\r\n  a.den /= gcdValue\r\n  a.num /= gcdValue\r\n}\r\n\r\n/**\r\n * 化简 Rational\r\n * \r\n * @param a \r\n */\r\nexport function avReduce2(a: pointer<Rational>) {\r\n  const gcdValue = gcd(a.num, a.den)\r\n  if (gcdValue <= 1) {\r\n    return\r\n  }\r\n  a.den /= gcdValue\r\n  a.num /= gcdValue\r\n}\r\n","/**\r\n * 同一个线程内异步方法串行执行\r\n */\r\n\r\nexport class Sync {\r\n  list: (() => void)[] = []\r\n}\r\n\r\nexport async function lock(sync: Sync) {\r\n  return new Promise<void>((resolve) => {\r\n    sync.list.push(resolve)\r\n    if (sync.list.length === 1) {\r\n      resolve()\r\n    }\r\n  })\r\n}\r\n\r\nexport function unlock(sync: Sync) {\r\n  sync.list.shift()\r\n  if (sync.list.length) {\r\n    sync.list[0]()\r\n  }\r\n}\r\n","/**\r\n * @file 拆解字符串，并 trim 每个部分\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as array from '../util/array'\r\n\r\n/**\r\n * 拆解字符串，并 trim 每个部分\r\n * \r\n * @param str 字符串\r\n * @param sep 分隔符\r\n */\r\nexport default function split(str: string | number, sep: string): string[] {\r\n\r\n  const result = []\r\n\r\n  if (is.number(str)) {\r\n    str = str + ''\r\n  }\r\n\r\n  if (str && is.string(str)) {\r\n    array.each(str.split(sep), (part, index) => {\r\n      part = part.trim()\r\n      if (part) {\r\n        result.push(part)\r\n      }\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n","/**\r\n * 读字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as logger from '../util/logger'\r\nimport IOWriter from './IOWriter'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesReader } from './interface'\r\nimport Sleep from '../timer/Sleep'\r\n\r\nexport default class IOReader implements BytesReader {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private endPointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  private fileSize_: bigint\r\n\r\n  public error: number\r\n\r\n  public onFlush: (buffer: Uint8Array) => Promise<number> | number\r\n\r\n  public onSeek: (seek: bigint) => Promise<number> | number\r\n\r\n  public onSize: () => Promise<bigint> | bigint\r\n\r\n  public flags: number\r\n\r\n  private flushResolve: (ret: number) => void\r\n\r\n  /**\r\n   * @param data 待读取的字节\r\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pos = 0n\r\n    this.pointer = 0\r\n    this.error = 0\r\n\r\n    this.endPointer = 0\r\n    this.littleEndian = !bigEndian\r\n    this.flags = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.size = Math.max(size, 100 * 1024)\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    const value = this.data.getUint8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    return this.data.getUint8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    const value = this.data.getUint16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    return this.data.getUint16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush(3)\r\n    }\r\n    const high = await this.readUint16()\r\n    const low = await this.readUint8()\r\n    return this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n  }\r\n  /**\r\n   * 读取 24 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush(3)\r\n    }\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    const high = await this.readUint16()\r\n    const low = await this.readUint8()\r\n    const value = this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getUint32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getUint32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    const value = this.data.getBigUint64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getBigUint64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    const value = this.data.getInt8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    return this.data.getInt8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    const value = this.data.getInt16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    return this.data.getInt16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt24() {\r\n    const value = await this.readUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n  /**\r\n   * 读取 24 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt24() {\r\n    const value = await this.peekUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getInt32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getInt32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n\r\n    const value = this.data.getBigInt64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getBigInt64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getFloat32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取单精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getFloat32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取双精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    const value = this.data.getFloat64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取双精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getFloat64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async readHex(length: number = 1) {\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = (await this.readUint8()).toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n    return hexStr\r\n  }\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回（不会移动读取指针位置）\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async peekHex(length: number = 1) {\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekHex, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      await this.flush(length)\r\n    }\r\n\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = (await this.readUint8()).toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return hexStr\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的二进制数据，不够抛错\r\n   * \r\n   * 第二个参数可传入预先分配的 buffer\r\n   * \r\n   * 返回读取的 Uint8Array\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async readBuffer(length: number): Promise<Uint8Array>\r\n  public async readBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): Promise<T>\r\n  public async readBuffer(length: number, buffer?: Uint8ArrayInterface): Promise<Uint8ArrayInterface> {\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        await this.flush()\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n\r\n    return buffer\r\n  }\r\n  /**\r\n   * 读取指定长度的二进制 buffer 数据（不会移动读取指针位置）\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async peekBuffer(length: number): Promise<Uint8Array >\r\n  public async peekBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): Promise<T>\r\n  public async peekBuffer(length: number, buffer?: Uint8ArrayInterface): Promise<Uint8ArrayInterface> {\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekBuffer, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      await this.flush(length)\r\n    }\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n\r\n    return buffer\r\n  }\r\n\r\n  /**\r\n   * 读取最多 length 字节的数据到指定 buffer，返回已写入的字节长度\r\n   * \r\n   * @param length \r\n   * @param buffer \r\n   * @returns \r\n   */\r\n  public async readToBuffer(length: number, buffer: Uint8ArrayInterface): Promise<number> {\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        try {\r\n          await this.flush()\r\n        }\r\n        catch (error) {\r\n          if (this.error === IOError.END && index) {\r\n            return index\r\n          }\r\n          else {\r\n            throw error\r\n          }\r\n        }\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n      return index\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n      return length\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字符串\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async readString(length: number = 1) {\r\n    const buffer = await this.readBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n  /**\r\n   * 读取指定长度的字符串（不会移动读取指针位置）\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async peekString(length: number = 1) {\r\n    const buffer = await this.peekBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n\r\n  /**\r\n   * 读取一行字符\r\n   */\r\n  public async readLine() {\r\n    let str = ''\r\n\r\n    while (true) {\r\n      let got = false\r\n      for (let i = this.pointer; i < this.endPointer; i++) {\r\n        if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n          if (i !== this.pointer) {\r\n            str += await this.readString(i - this.pointer)\r\n          }\r\n          got = true\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!got) {\r\n        str += await this.readString(this.remainingLength())\r\n        await this.flush()\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n\r\n    let next = await this.peekUint8()\r\n    if (next === 0x0a || next === 0x0d) {\r\n      this.pointer++\r\n      if (next === 0x0d) {\r\n        next = await this.peekUint8()\r\n        // \\r\\n\r\n        if (next === 0x0a) {\r\n          this.pointer++\r\n        }\r\n      }\r\n    }\r\n\r\n    return str\r\n  }\r\n  /**\r\n   * 读取一行字符（不会移动读取指针位置）\r\n   */\r\n  public async peekLine() {\r\n    if (this.remainingLength() < this.size) {\r\n      try {\r\n        await this.flush()\r\n      }\r\n      catch (error) {\r\n        if (this.error !== IOError.END) {\r\n          throw error\r\n        }\r\n      }\r\n    }\r\n\r\n    let str = ''\r\n\r\n    let got = false\r\n    for (let i = this.pointer; i < this.endPointer; i++) {\r\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n        str += await this.peekString(i - this.pointer)\r\n        got = true\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!got) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekLine, out of buffer')\r\n    }\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 获取当前读取指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  /**\r\n   * 获取已读字节偏移\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 跳过指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public async skip(length: number) {\r\n\r\n    const backup = length\r\n\r\n    while (this.remainingLength() < length) {\r\n      length -= this.remainingLength()\r\n      this.pointer = this.endPointer\r\n      await this.flush()\r\n    }\r\n\r\n    if (this.remainingLength() >= length) {\r\n      this.pointer += length\r\n    }\r\n\r\n    this.pos += BigInt(backup)\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可读字节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.endPointer - this.pointer\r\n  }\r\n\r\n  private async flush_(buffer: Uint8Array) {\r\n    return new Promise<number>(async (resolve) => {\r\n      this.flushResolve = resolve\r\n      while (true) {\r\n        const len = await this.onFlush(buffer)\r\n        if (len !== IOError.AGAIN) {\r\n          this.flushResolve = null\r\n          resolve(len)\r\n          break\r\n        }\r\n        await new Sleep(0)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 重新填充剩余缓冲区\r\n   * \r\n   * @param need \r\n   * @returns \r\n   */\r\n  public async flush(need: number = 0) {\r\n\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.size - this.remainingLength() <= 0) {\r\n      return\r\n    }\r\n\r\n    need = Math.min(need, this.size)\r\n\r\n    if (this.pointer < this.endPointer) {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n    }\r\n    else {\r\n      this.endPointer = 0\r\n    }\r\n\r\n    this.pointer = 0\r\n\r\n    if (need) {\r\n      while (this.remainingLength() < need) {\r\n        const len = await this.flush_(this.buffer.subarray(this.endPointer))\r\n        if (len < 0) {\r\n          this.error = len\r\n          throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n        }\r\n        this.endPointer += len\r\n      }\r\n    }\r\n    else {\r\n      const len = await this.flush_(this.buffer.subarray(this.endPointer))\r\n      if (len < 0) {\r\n        this.error = len\r\n        throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n      }\r\n      this.endPointer += len\r\n    }\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * \r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   * @param force false 时可以在目前的缓冲区内 seek，否则丢弃缓冲区内容重新填充指定位置的数据，默认 false\r\n   * @param flush 指定 seek 之后是否马上填充数据，否则只 seek 到目标位置，默认 true\r\n   * @returns \r\n   */\r\n  public async seek(pos: bigint, force: boolean = false, flush: boolean = true) {\r\n    if (!force) {\r\n      const len = Number(pos - this.pos)\r\n      // 可以往回 seek\r\n      if (len < 0 && Math.abs(len) < this.pointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      // 可以直接往后 seek\r\n      else if (len > 0 && this.pointer + len < this.endPointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      else if (len === 0) {\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, seek failed because of no seek callback')\r\n    }\r\n\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = pos\r\n    const ret = await this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      logger.fatal('IOReader error, seek failed')\r\n    }\r\n    if (flush) {\r\n      await this.flush()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   */\r\n  public getBuffer() {\r\n    return this.buffer\r\n  }\r\n\r\n  /**\r\n   * 写入数据到缓冲区\r\n   * \r\n   * @param buffer \r\n   */\r\n  public appendBuffer(buffer: Uint8Array) {\r\n    if (this.size - this.endPointer >= buffer.length) {\r\n      this.buffer.set(buffer, this.endPointer)\r\n      this.endPointer += buffer.length\r\n    }\r\n    else {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n      this.pointer = 0\r\n\r\n      if (this.size - this.endPointer >= buffer.length) {\r\n        this.buffer.set(buffer, this.endPointer)\r\n        this.endPointer += buffer.length\r\n      }\r\n      else {\r\n        const len = Math.min(this.size - this.endPointer, buffer.length)\r\n        this.buffer.set(buffer.subarray(0, len), this.endPointer)\r\n        this.endPointer += len\r\n\r\n        logger.warn('IOReader, call appendBuffer but the buffer\\'s size is lagger then the remaining size')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置 reader\r\n   */\r\n  public reset() {\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 当前读取模式是否是大端\r\n   * \r\n   * @returns \r\n   */\r\n  public isBigEndian() {\r\n    return !this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * 获取源总字节长度\r\n   * \r\n   * @returns \r\n   */\r\n  public async fileSize() {\r\n    if (this.fileSize_) {\r\n      return this.fileSize_\r\n    }\r\n    if (!this.onSize) {\r\n      logger.warn('IOReader error, fileSize failed because of no onSize callback')\r\n      return 0n\r\n    }\r\n    try {\r\n      this.fileSize_ = await this.onSize()\r\n    }\r\n    catch (error) {\r\n      logger.warn(`IOReader error, call fileSize failed: ${error}`)\r\n      this.fileSize_ = 0n\r\n    }\r\n    return this.fileSize_\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n\r\n  /**\r\n   * 连接到 ioWriter\r\n   * \r\n   * @param ioWriter \r\n   * @param length \r\n   */\r\n  public async pipe(ioWriter: IOWriter, length?: number) {\r\n    if (length) {\r\n      if (this.remainingLength() < length) {\r\n        if (this.remainingLength() > 0) {\r\n          const len = this.remainingLength()\r\n          await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n\r\n        while (length > 0) {\r\n          await this.flush()\r\n          const len = Math.min(this.remainingLength(), length)\r\n          await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n      }\r\n      else {\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + length))\r\n        this.pointer += length\r\n        this.pos += BigInt(length)\r\n      }\r\n    }\r\n    else {\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n\r\n      while (await this.flush_(this.buffer.subarray(0)) > 0) {\r\n        const len = this.remainingLength()\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 中断 flush 操作\r\n   */\r\n  public abort() {\r\n    this.error = IOError.ABORT\r\n    if (this.flushResolve) {\r\n      this.flushResolve(IOError.ABORT)\r\n      this.flushResolve = null\r\n    }\r\n  }\r\n}\r\n","/**\r\n * 写字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesWriter } from './interface'\r\n\r\nexport default class IOWriter implements BytesWriter {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array, pos?: bigint) => Promise<number>\r\n  public onSeek: (seek: bigint) =>  Promise<number>\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.size = size\r\n    this.littleEndian = !bigEndian\r\n    this.error = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 8 位无符号整数\r\n   */\r\n  public async writeUint8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   */\r\n  public async writeUint16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位无符号整数\r\n   */\r\n  public async writeUint24(value: number) {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush()\r\n    }\r\n    const high = (value & 0xff0000) >> 16\r\n    const middle = (value & 0x00ff00) >> 8\r\n    const low = value & 0x0000ff\r\n    if (this.littleEndian) {\r\n      await this.writeUint8(low)\r\n      await this.writeUint8(middle)\r\n      await this.writeUint8(high)\r\n    }\r\n    else {\r\n      await this.writeUint8(high)\r\n      await this.writeUint8(middle)\r\n      await this.writeUint8(low)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 32 位无符号整数\r\n   */\r\n  public async writeUint32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位无符号整数\r\n   */\r\n  public async writeUint64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setBigUint64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async writeInt8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 写 16 位有符号整数\r\n   */\r\n  public async writeInt16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位有符号整数\r\n   */\r\n  public async writeInt24(value: number) {\r\n    await this.writeUint24(value < 0 ? (value + 0x1000000) : value)\r\n  }\r\n\r\n  /**\r\n   * 写 32 位有符号整数\r\n   */\r\n  public async writeInt32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位有符号整数\r\n   */\r\n  public async writeInt64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setBigInt64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async writeFloat(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setFloat32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写双精度浮点数\r\n   */\r\n  public async writeDouble(value: number) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setFloat64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.size - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 写指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async writeBuffer(buffer: Uint8ArrayInterface) {\r\n\r\n    if (!buffer.length) {\r\n      return\r\n    }\r\n\r\n    let length = buffer.length\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n      while (length > 0) {\r\n        await this.flush()\r\n        const len = Math.min(this.size, length)\r\n        this.buffer.set(buffer.subarray(index, index + len), this.pointer)\r\n\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        index += len\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      this.buffer.set(buffer, this.pointer)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写一个字符串\r\n   */\r\n  public async writeString(str: string) {\r\n    const buffer = text.encode(str)\r\n    await this.writeBuffer(buffer)\r\n    return buffer.length\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出\r\n   */\r\n  public async flush() {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.pointer) {\r\n      const ret = await this.onFlush(this.buffer.subarray(0, this.pointer))\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public async flushToPos(pos: bigint) {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n    if (this.pointer) {\r\n      const ret = await this.onFlush(this.buffer.subarray(0, this.pointer), pos)\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public async seek(pos: bigint) {\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, seek failed because of no seek callback')\r\n    }\r\n\r\n    await this.flush()\r\n\r\n    const ret = await this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      throw Error('IOWriter error, seek failed')\r\n    }\r\n\r\n    this.pos = pos\r\n  }\r\n\r\n  /**\r\n   * 在当前缓冲区映射区间内 seek\r\n   * \r\n   * @param pos \r\n   */\r\n  public seekInline(pos: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, Math.min(this.size, pos))\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.min(this.size, this.pointer + length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 回退指定长度，不能大于 pointer 大小\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, this.pointer - length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer.subarray(0, this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 重置 writer\r\n   */\r\n  public reset() {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n}\r\n","/**\r\n * 写字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesWriterSync } from './interface'\r\n\r\nexport default class IOWriterSync implements BytesWriterSync {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array, pos?: bigint) => number\r\n  public onSeek: (seek: bigint) => number\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.size = size\r\n    this.littleEndian = !bigEndian\r\n    this.error = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 8 位无符号整数\r\n   */\r\n  public writeUint8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   */\r\n  public writeUint16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位无符号整数\r\n   */\r\n  public writeUint24(value: number) {\r\n    if (this.remainingLength() < 3) {\r\n      this.flush()\r\n    }\r\n    const high = (value & 0xff0000) >> 16\r\n    const middle = (value & 0x00ff00) >> 8\r\n    const low = value & 0x0000ff\r\n    if (this.littleEndian) {\r\n      this.writeUint8(low)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(high)\r\n    }\r\n    else {\r\n      this.writeUint8(high)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(low)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 32 位无符号整数\r\n   */\r\n  public writeUint32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位无符号整数\r\n   */\r\n  public writeUint64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setBigUint64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeInt8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 写 16 位有符号整数\r\n   */\r\n  public writeInt16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位有符号整数\r\n   */\r\n  public writeInt24(value: number) {\r\n    this.writeUint24(value < 0 ? (value + 0x1000000) : value)\r\n  }\r\n\r\n  /**\r\n   * 写 32 位有符号整数\r\n   */\r\n  public writeInt32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位有符号整数\r\n   */\r\n  public writeInt64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setBigInt64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeFloat(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setFloat32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写双精度浮点数\r\n   */\r\n  public writeDouble(value: number) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setFloat64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.size - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 写指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public writeBuffer(buffer: Uint8ArrayInterface) {\r\n\r\n    if (!buffer.length) {\r\n      return\r\n    }\r\n\r\n    let length = buffer.length\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n      while (length > 0) {\r\n        this.flush()\r\n        const len = Math.min(this.size, length)\r\n        this.buffer.set(buffer.subarray(index, index + len), this.pointer)\r\n\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        index += len\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      this.buffer.set(buffer, this.pointer)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写一个字符串\r\n   */\r\n  public writeString(str: string) {\r\n    const buffer = text.encode(str)\r\n    this.writeBuffer(buffer)\r\n    return buffer.length\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出\r\n   */\r\n  public flush() {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.pointer) {\r\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer))\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public flushToPos(pos: bigint) {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n    if (this.pointer) {\r\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer), pos)\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public seek(pos: bigint) {\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, seek failed because of no seek callback')\r\n    }\r\n\r\n    this.flush()\r\n\r\n    const ret = this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      throw Error('IOWriter error, seek failed')\r\n    }\r\n\r\n    this.pos = pos\r\n  }\r\n\r\n  /**\r\n   * 在当前缓冲区映射区间内 seek\r\n   * \r\n   * @param pos \r\n   */\r\n  public seekInline(pos: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, Math.min(this.size, pos))\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.min(this.size, this.pointer + length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 回退指定长度，不能大于 pointer 大小\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, this.pointer - length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer.subarray(0, this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 重置 writer\r\n   */\r\n  public reset() {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n}\r\n","/**\r\n * 计算最大公约数（GCD）\r\n * \r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport default function gcd(a: number, b: number) {\r\n  while (b !== 0) {\r\n    [a, b] = [b, a % b]\r\n  }\r\n  return a\r\n}\r\n","/**\r\n * @file url 操作\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport split from '../function/split'\r\nimport * as array from '../util/array'\r\nimport * as object from '../util/object'\r\n\r\n/**\r\n * 把查询字符串解析成对象\r\n * @param queryStr \r\n */\r\nexport function parseQuery(queryStr: string, separator: string = '&'): Record<string, string> {\r\n  const result = {}\r\n  if (is.string(queryStr) && queryStr.indexOf('=') >= 0) {\r\n    let firstChar = queryStr.charAt(0)\r\n    let startIndex = (firstChar === '?' || firstChar === '#') ? 1 : 0\r\n    if (startIndex > 0) {\r\n      queryStr = queryStr.substr(startIndex)\r\n    }\r\n    array.each(split(queryStr, separator), (item) => {\r\n      let terms = item.split('=')\r\n      if (terms.length === 2) {\r\n        let key = terms[0]?.trim()\r\n        if (key) {\r\n          result[key] = decodeURIComponent(terms[1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * 把对象序列化成查询字符串\r\n *\r\n * @param query\r\n * @return\r\n */\r\nexport function stringifyQuery(query: Record<string, string | number | boolean>, separator: string = '&'): string {\r\n  const result = []\r\n  if (is.isPlainObject(query)) {\r\n    object.each<Record<string, string | number | boolean>>(query, (value, key) => {\r\n      result.push(key + '=' + encodeURIComponent(is.object(value) ? JSON.stringify(value) : value))\r\n    })\r\n  }\r\n  return result.join(separator)\r\n}\r\n\r\n/**\r\n * 解析 url，返回格式遵循 location 属性的命名\r\n * \r\n * @param url 如果不传，使用当前地址\r\n */\r\nexport function parse(url: string) {\r\n\r\n  const source = url\r\n\r\n  const key = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor']\r\n  const parser = /^(?:(?![^:@\\/]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@\\/]*)(?::([^:@\\/]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\r\n  const ipv6Reg = /:\\/\\/([^\\/@]*@?)\\[(\\S+)\\]/\r\n  let ipv6Host = ''\r\n  if (ipv6Reg.test(url)) {\r\n    url = url.replace(ipv6Reg, (s0, s1, s2) => {\r\n      ipv6Host = s2\r\n      return `://${s1 || ''}a.b`\r\n    })\r\n  }\r\n\r\n  const result: Partial<any> = {}\r\n  const m = parser.exec(url)\r\n  let i = 14\r\n\r\n  while (i--) {\r\n    result[key[i]] = m[i] ?? ''\r\n  }\r\n  if (ipv6Host) {\r\n    result.host = ipv6Host\r\n    result.source = source\r\n    result.authority = ipv6Host + (result.port ? (':' + result.port) : '')\r\n  }\r\n  return {\r\n    protocol: result.protocol as string,\r\n    file: result.file as string,\r\n    host: result.host as string,\r\n    port: result.port as string,\r\n    user: result.user as string,\r\n    password: result.password as string,\r\n    origin: `${result.protocol}://${result.authority}`,\r\n    pathname: result.path as string,\r\n    search: `?${result.query}`,\r\n    hash: result.anchor ? `#${result.anchor}` : ''\r\n  }\r\n}\r\n\r\n/**\r\n * 把参数混入一个 url\r\n * \r\n * @param query \r\n * @param url \r\n * @param applyHash \r\n */\r\nexport function mixin(query: Record<string, any>, applyHash: boolean, url?: string): string {\r\n  if (url == null) {\r\n    url = document.URL\r\n  }\r\n\r\n  let scheme = parse(url)\r\n  let params = parseQuery(applyHash ? scheme.hash : scheme.search)\r\n  object.extend(params, query)\r\n  let paramStr = object.param(params)\r\n\r\n  url = scheme.origin + scheme.pathname\r\n\r\n  if (applyHash) {\r\n    url += scheme.search\r\n  }\r\n  else if (paramStr) {\r\n    url += '?' + paramStr\r\n  }\r\n\r\n  if (!applyHash) {\r\n    url += scheme.hash\r\n  }\r\n  else if (paramStr) {\r\n    url += '#' + paramStr\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nconst SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g\r\nconst SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g\r\nconst FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/\r\nconst URL_REGEX = /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/\r\n\r\nfunction buildURLFromParts(parts: {\r\n  scheme: string\r\n  netLoc: string\r\n  path: string\r\n  params: string\r\n  query: string\r\n  fragment: string\r\n}) {\r\n  return (\r\n    parts.scheme +\r\n    parts.netLoc +\r\n    parts.path +\r\n    parts.params +\r\n    parts.query +\r\n    parts.fragment\r\n  )\r\n}\r\n\r\nfunction parseURL(url: string) {\r\n  const parts = URL_REGEX.exec(url)\r\n  if (!parts) {\r\n    return null\r\n  }\r\n  return {\r\n    scheme: parts[1] || '',\r\n    netLoc: parts[2] || '',\r\n    path: parts[3] || '',\r\n    params: parts[4] || '',\r\n    query: parts[5] || '',\r\n    fragment: parts[6] || ''\r\n  }\r\n}\r\n\r\nexport function normalizePath(path: string) {\r\n  // The following operations are\r\n  // then applied, in order, to the new path:\r\n  // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n  // segment, are removed.\r\n  // 6b) If the path ends with \".\" as a complete path segment,\r\n  // that \".\" is removed.\r\n  path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '')\r\n  // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n  // complete path segment not equal to \"..\", are removed.\r\n  // Removal of these path segments is performed iteratively,\r\n  // removing the leftmost matching pattern on each iteration,\r\n  // until no matching pattern remains.\r\n  // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n  // complete path segment not equal to \"..\", that\r\n  // \"<segment>/..\" is removed.\r\n  while (\r\n    path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\r\n  ) {}\r\n  return path.split('').reverse().join('')\r\n}\r\n\r\n/**\r\n * from https://github.com/tjenkinson/url-toolkit\r\n * \r\n */\r\nexport function buildAbsoluteURL(baseURL: string, relativeURL: string, opts?: {\r\n  alwaysNormalize?: boolean\r\n}) {\r\n  opts = opts || {}\r\n  // remove any remaining space and CRLF\r\n  baseURL = baseURL.trim()\r\n  relativeURL = relativeURL.trim()\r\n  if (!relativeURL) {\r\n    // 2a) If the embedded URL is entirely empty, it inherits the\r\n    // entire base URL (i.e., is set equal to the base URL)\r\n    // and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return baseURL\r\n    }\r\n    let basePartsForNormalize = parseURL(baseURL)\r\n    if (!basePartsForNormalize) {\r\n      throw new Error('Error trying to parse base URL.')\r\n    }\r\n    basePartsForNormalize.path = normalizePath(basePartsForNormalize.path)\r\n    return buildURLFromParts(basePartsForNormalize)\r\n  }\r\n  let relativeParts = parseURL(relativeURL)\r\n  if (!relativeParts) {\r\n    throw new Error('Error trying to parse relative URL.')\r\n  }\r\n  if (relativeParts.scheme) {\r\n    // 2b) If the embedded URL starts with a scheme name, it is\r\n    // interpreted as an absolute URL and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return relativeURL\r\n    }\r\n    relativeParts.path = normalizePath(relativeParts.path)\r\n    return buildURLFromParts(relativeParts)\r\n  }\r\n  let baseParts = parseURL(baseURL)\r\n  if (!baseParts) {\r\n    throw new Error('Error trying to parse base URL.')\r\n  }\r\n  if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n    // If netLoc missing and path doesn't start with '/', assume everything before the first '/' is the netLoc\r\n    // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n    let pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path)\r\n    baseParts.netLoc = pathParts[1]\r\n    baseParts.path = pathParts[2]\r\n  }\r\n  if (baseParts.netLoc && !baseParts.path) {\r\n    baseParts.path = '/'\r\n  }\r\n  const builtParts = {\r\n    // 2c) Otherwise, the embedded URL inherits the scheme of\r\n    // the base URL.\r\n    scheme: baseParts.scheme,\r\n    netLoc: relativeParts.netLoc,\r\n    path: null,\r\n    params: relativeParts.params,\r\n    query: relativeParts.query,\r\n    fragment: relativeParts.fragment,\r\n  }\r\n  if (!relativeParts.netLoc) {\r\n    // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n    // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n    // (if any) of the base URL.\r\n    builtParts.netLoc = baseParts.netLoc\r\n    // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n    // path is not relative and we skip to Step 7.\r\n    if (relativeParts.path[0] !== '/') {\r\n      if (!relativeParts.path) {\r\n        // 5) If the embedded URL path is empty (and not preceded by a\r\n        // slash), then the embedded URL inherits the base URL path\r\n        builtParts.path = baseParts.path\r\n        // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n        // step 7; otherwise, it inherits the <params> of the base\r\n        // URL (if any) and\r\n        if (!relativeParts.params) {\r\n          builtParts.params = baseParts.params\r\n          // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n          // step 7; otherwise, it inherits the <query> of the base\r\n          // URL (if any) and we skip to step 7.\r\n          if (!relativeParts.query) {\r\n            builtParts.query = baseParts.query\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // 6) The last segment of the base URL's path (anything\r\n        // following the rightmost slash \"/\", or the entire path if no\r\n        // slash is present) is removed and the embedded URL's path is\r\n        // appended in its place.\r\n        let baseURLPath = baseParts.path\r\n        let newPath =\r\n          baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\r\n          relativeParts.path\r\n        builtParts.path = normalizePath(newPath)\r\n      }\r\n    }\r\n  }\r\n  if (builtParts.path === null) {\r\n    builtParts.path = opts.alwaysNormalize\r\n      ? normalizePath(relativeParts.path)\r\n      : relativeParts.path\r\n  }\r\n  return buildURLFromParts(builtParts)\r\n}\r\n"],"names":[],"sourceRoot":""}