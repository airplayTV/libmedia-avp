{"version":3,"file":"avtranscoder.js","mappings":"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,EACb,MAAM,CAAC,MAAM,CACd;QAED,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAQ,YAAY,EAAE,SAAS,CAAC;QAC5D,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;YACZ,qDAAY,CAAC,4BAA4B,GAAG,EAAE,0BAAC;YAC/C,OAAO,4DAA4B;QACrC,CAAC;QACD,OAAO,CAAC;IACV,CAAC;IAEM,KAAK,CAAC,GAAqB,EAAE,GAAqB;QACvD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAQ,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC;IAC7D,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACvB,CAAC;IAEM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,eAAe;IAC7B,CAAC;IAEM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,gBAAgB;IAC9B,CAAC;CACF;;;;;;;UClHD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;UErFA;UACA;UACA;UACA","sources":["webpack://AVTranscoder/webpack/universalModuleDefinition","webpack://AVTranscoder/./src/audioresample/Resampler.ts","webpack://AVTranscoder/./src/avcodec/wasmcodec/AudioDecoder.ts","webpack://AVTranscoder/./src/avcodec/wasmcodec/AudioEncoder.ts","webpack://AVTranscoder/./src/avcodec/wasmcodec/VideoDecoder.ts","webpack://AVTranscoder/./src/avcodec/wasmcodec/VideoEncoder.ts","webpack://AVTranscoder/./src/avcodec/webcodec/AudioDecoder.ts","webpack://AVTranscoder/./src/avcodec/webcodec/AudioEncoder.ts","webpack://AVTranscoder/./src/avcodec/webcodec/VideoDecoder.ts","webpack://AVTranscoder/./src/avcodec/webcodec/VideoEncoder.ts","webpack://AVTranscoder/./src/avfilter/AVFilterNode.ts","webpack://AVTranscoder/./src/avfilter/AVInputNode.ts","webpack://AVTranscoder/./src/avfilter/AVOutputNode.ts","webpack://AVTranscoder/./src/avfilter/RangeFilterNode.ts","webpack://AVTranscoder/./src/avfilter/audio/ResampleFilterNode.ts","webpack://AVTranscoder/./src/avfilter/graph.ts","webpack://AVTranscoder/./src/avfilter/video/FramerateFilterNode.ts","webpack://AVTranscoder/./src/avfilter/video/ScaleFilterNode.ts","webpack://AVTranscoder/./src/avformat/AVFormatContext.ts","webpack://AVTranscoder/./src/avformat/bsf/AVBSFilter.ts","webpack://AVTranscoder/./src/avformat/bsf/h2645/Annexb2AvccFilter.ts","webpack://AVTranscoder/./src/avformat/config.ts","webpack://AVTranscoder/./src/avformat/demux.ts","webpack://AVTranscoder/./src/avformat/dump.ts","webpack://AVTranscoder/./src/avformat/formats/OFormat.ts","webpack://AVTranscoder/./src/avformat/function/checkStreamParameters.ts","webpack://AVTranscoder/./src/avformat/function/guessDelayFromPts.ts","webpack://AVTranscoder/./src/avformat/function/guessDtsFromPts.ts","webpack://AVTranscoder/./src/avformat/function/roundStandardFramerate.ts","webpack://AVTranscoder/./src/avformat/mux.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/CustomIOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/FetchIOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/FileIOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/IOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/SocketIOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/WebSocketIOLoader.ts","webpack://AVTranscoder/./src/avnetwork/ioLoader/WebTransportIOLoader.ts","webpack://AVTranscoder/./src/avpipeline/AudioDecodePipeline.ts","webpack://AVTranscoder/./src/avpipeline/AudioEncodePipeline.ts","webpack://AVTranscoder/./src/avpipeline/DemuxPipeline.ts","webpack://AVTranscoder/./src/avpipeline/IOPipeline.ts","webpack://AVTranscoder/./src/avpipeline/MuxPipeline.ts","webpack://AVTranscoder/./src/avpipeline/Pipeline.ts","webpack://AVTranscoder/./src/avpipeline/VideoDecodePipeline.ts","webpack://AVTranscoder/./src/avpipeline/VideoEncodePipeline.ts","webpack://AVTranscoder/./src/avpipeline/struct/stats.ts","webpack://AVTranscoder/./src/avtranscoder/AVTranscoder.ts","webpack://AVTranscoder/./src/avtranscoder/Controller.ts","webpack://AVTranscoder/./src/avtranscoder/eventType.ts","webpack://AVTranscoder/./src/avtranscoder/filter/AVFilterPipeline.ts","webpack://AVTranscoder/./src/avtranscoder/function/createMessageChannel.ts","webpack://AVTranscoder/./src/avutil/AVStream.ts","webpack://AVTranscoder/./src/avutil/codecs/aac.ts","webpack://AVTranscoder/./src/avutil/codecs/av1.ts","webpack://AVTranscoder/./src/avutil/codecs/h264.ts","webpack://AVTranscoder/./src/avutil/codecs/hevc.ts","webpack://AVTranscoder/./src/avutil/codecs/mp3.ts","webpack://AVTranscoder/./src/avutil/codecs/opus.ts","webpack://AVTranscoder/./src/avutil/codecs/vp8.ts","webpack://AVTranscoder/./src/avutil/codecs/vp9.ts","webpack://AVTranscoder/./src/avutil/codecs/vvc.ts","webpack://AVTranscoder/./src/avutil/constant.ts","webpack://AVTranscoder/./src/avutil/error.ts","webpack://AVTranscoder/./src/avutil/function/analyzeAVFormat.ts","webpack://AVTranscoder/./src/avutil/function/analyzeUrlIOLoader.ts","webpack://AVTranscoder/./src/avutil/function/audioData2AVFrame.ts","webpack://AVTranscoder/./src/avutil/function/avframe2AudioData.ts","webpack://AVTranscoder/./src/avutil/function/avframe2VideoFrame.ts","webpack://AVTranscoder/./src/avutil/function/avpacket2EncodedAudioChunk.ts","webpack://AVTranscoder/./src/avutil/function/avpacket2EncodedVideoChunk.ts","webpack://AVTranscoder/./src/avutil/function/compileResource.ts","webpack://AVTranscoder/./src/avutil/function/encodedAudioChunk2AVPacket.ts","webpack://AVTranscoder/./src/avutil/function/encodedVideoChunk2AVPacket.ts","webpack://AVTranscoder/./src/avutil/function/getAudioCodec.ts","webpack://AVTranscoder/./src/avutil/function/getHardwarePreference.ts","webpack://AVTranscoder/./src/avutil/function/getVideoCodec.ts","webpack://AVTranscoder/./src/avutil/function/getWasmUrl.ts","webpack://AVTranscoder/./src/avutil/function/hasAlphaChannel.ts","webpack://AVTranscoder/./src/avutil/function/isHdr.ts","webpack://AVTranscoder/./src/avutil/function/videoFrame2AVFrame.ts","webpack://AVTranscoder/./src/avutil/implement/AVFramePoolImpl.ts","webpack://AVTranscoder/./src/avutil/implement/AVPacketPoolImpl.ts","webpack://AVTranscoder/./src/avutil/pixelFormatDescriptor.ts","webpack://AVTranscoder/./src/avutil/sampleFormatDescriptor.ts","webpack://AVTranscoder/./src/avutil/stringEnum.ts","webpack://AVTranscoder/./src/avutil/struct/audiosample.ts","webpack://AVTranscoder/./src/avutil/struct/avbuffer.ts","webpack://AVTranscoder/./src/avutil/struct/avcodecparameters.ts","webpack://AVTranscoder/./src/avutil/struct/avdict.ts","webpack://AVTranscoder/./src/avutil/struct/avframe.ts","webpack://AVTranscoder/./src/avutil/struct/avpacket.ts","webpack://AVTranscoder/./src/avutil/struct/avpcmbuffer.ts","webpack://AVTranscoder/./src/avutil/struct/rational.ts","webpack://AVTranscoder/./src/avutil/util/av1syntax.ts","webpack://AVTranscoder/./src/avutil/util/avbuffer.ts","webpack://AVTranscoder/./src/avutil/util/avdict.ts","webpack://AVTranscoder/./src/avutil/util/avframe.ts","webpack://AVTranscoder/./src/avutil/util/avpacket.ts","webpack://AVTranscoder/./src/avutil/util/channel.ts","webpack://AVTranscoder/./src/avutil/util/codecparameters.ts","webpack://AVTranscoder/./src/avutil/util/common.ts","webpack://AVTranscoder/./src/avutil/util/expgolomb.ts","webpack://AVTranscoder/./src/avutil/util/intread.ts","webpack://AVTranscoder/./src/avutil/util/intwrite.ts","webpack://AVTranscoder/./src/avutil/util/mem.ts","webpack://AVTranscoder/./src/avutil/util/nalu.ts","webpack://AVTranscoder/./src/avutil/util/pixel.ts","webpack://AVTranscoder/./src/avutil/util/rational.ts","webpack://AVTranscoder/./src/avutil/util/sample.ts","webpack://AVTranscoder/./src/avutil/util/serialize.ts","webpack://AVTranscoder/./src/cheap/allocator/AllocatorJS.ts","webpack://AVTranscoder/./src/cheap/allocator/AllocatorJS64.ts","webpack://AVTranscoder/./src/cheap/allocator/Table.ts","webpack://AVTranscoder/./src/cheap/asm/memory.asm.ts","webpack://AVTranscoder/./src/cheap/asm/memory.ts","webpack://AVTranscoder/./src/cheap/asm/memory64.asm.ts","webpack://AVTranscoder/./src/cheap/config.ts","webpack://AVTranscoder/./src/cheap/ctypeEnumImpl.ts","webpack://AVTranscoder/./src/cheap/ctypeEnumRead.ts","webpack://AVTranscoder/./src/cheap/ctypeEnumWrite.ts","webpack://AVTranscoder/./src/cheap/definedStruct.ts","webpack://AVTranscoder/./src/cheap/function/definedMetaProperty.ts","webpack://AVTranscoder/./src/cheap/heap.ts","webpack://AVTranscoder/./src/cheap/proxyStruct.ts","webpack://AVTranscoder/./src/cheap/stack.ts","webpack://AVTranscoder/./src/cheap/staticData.ts","webpack://AVTranscoder/./src/cheap/std/buffer/SafeUint8Array.ts","webpack://AVTranscoder/./src/cheap/std/collection/List.ts","webpack://AVTranscoder/./src/cheap/std/function/isPointer.ts","webpack://AVTranscoder/./src/cheap/std/make.ts","webpack://AVTranscoder/./src/cheap/std/memory.ts","webpack://AVTranscoder/./src/cheap/std/sizeof.ts","webpack://AVTranscoder/./src/cheap/std/structAccess.ts","webpack://AVTranscoder/./src/cheap/std/unmake.ts","webpack://AVTranscoder/./src/cheap/symbol.ts","webpack://AVTranscoder/./src/cheap/thread/asm/atomics.asm.ts","webpack://AVTranscoder/./src/cheap/thread/asm/atomics.ts","webpack://AVTranscoder/./src/cheap/thread/asm/atomics64.asm.ts","webpack://AVTranscoder/./src/cheap/thread/atomics.ts","webpack://AVTranscoder/./src/cheap/thread/atomicsImpl.ts","webpack://AVTranscoder/./src/cheap/thread/cond.ts","webpack://AVTranscoder/./src/cheap/thread/initClass.ts","webpack://AVTranscoder/./src/cheap/thread/initFunction.ts","webpack://AVTranscoder/./src/cheap/thread/initModule.ts","webpack://AVTranscoder/./src/cheap/thread/mutex.ts","webpack://AVTranscoder/./src/cheap/thread/semaphore.ts","webpack://AVTranscoder/./src/cheap/thread/thread.ts","webpack://AVTranscoder/./src/cheap/typedef.ts","webpack://AVTranscoder/./src/cheap/webassembly/ThreadPool.ts","webpack://AVTranscoder/./src/cheap/webassembly/WebAssemblyRunner.ts","webpack://AVTranscoder/./src/cheap/webassembly/compiler.ts","webpack://AVTranscoder/./src/cheap/webassembly/runThread.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/libc.asm.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/libc.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/libc64.asm.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/thread.asm.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/thread.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/asm/thread64.asm.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/atomic.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/clib.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/pthread.ts","webpack://AVTranscoder/./src/cheap/webassembly/runtime/semaphore.ts","webpack://AVTranscoder/./src/cheap/webassembly/thread.ts","webpack://AVTranscoder/./src/common/event/CustomEvent.ts","webpack://AVTranscoder/./src/common/event/Emitter.ts","webpack://AVTranscoder/./src/common/function/checkVersion.ts","webpack://AVTranscoder/./src/common/function/concatTypeArray.ts","webpack://AVTranscoder/./src/common/function/debounce.ts","webpack://AVTranscoder/./src/common/function/execute.ts","webpack://AVTranscoder/./src/common/function/generateUUID.ts","webpack://AVTranscoder/./src/common/function/getTimestamp.ts","webpack://AVTranscoder/./src/common/function/isAudioWorklet.ts","webpack://AVTranscoder/./src/common/function/isDef.ts","webpack://AVTranscoder/./src/common/function/isLittleEndian.ts","webpack://AVTranscoder/./src/common/function/isNative.ts","webpack://AVTranscoder/./src/common/function/isWorker.ts","webpack://AVTranscoder/./src/common/function/nextTick.ts","webpack://AVTranscoder/./src/common/function/sourceLoad.ts","webpack://AVTranscoder/./src/common/function/split.ts","webpack://AVTranscoder/./src/common/function/toNumber.ts","webpack://AVTranscoder/./src/common/function/toString.ts","webpack://AVTranscoder/./src/common/helper/CommandQueue.ts","webpack://AVTranscoder/./src/common/interface/ArrayLike.ts","webpack://AVTranscoder/./src/common/io/BitReader.ts","webpack://AVTranscoder/./src/common/io/BitWriter.ts","webpack://AVTranscoder/./src/common/io/BufferReader.ts","webpack://AVTranscoder/./src/common/io/BufferWriter.ts","webpack://AVTranscoder/./src/common/io/FileIO.ts","webpack://AVTranscoder/./src/common/io/IOReader.ts","webpack://AVTranscoder/./src/common/io/IOWriter.ts","webpack://AVTranscoder/./src/common/io/IOWriterSync.ts","webpack://AVTranscoder/./src/common/io/SafeFileIO.ts","webpack://AVTranscoder/./src/common/math/align.ts","webpack://AVTranscoder/./src/common/math/gcd.ts","webpack://AVTranscoder/./src/common/math/nearestPowerOf2.ts","webpack://AVTranscoder/./src/common/network/FakeMessageChannel.ts","webpack://AVTranscoder/./src/common/network/IPCPort.ts","webpack://AVTranscoder/./src/common/network/NodeIPCPort.ts","webpack://AVTranscoder/./src/common/timer/Clock.ts","webpack://AVTranscoder/./src/common/timer/LoopTask.ts","webpack://AVTranscoder/./src/common/timer/Sleep.ts","webpack://AVTranscoder/./src/common/timer/Timer.ts","webpack://AVTranscoder/./src/common/timer/WorkerSetTimeout.ts","webpack://AVTranscoder/./src/common/util/array.ts","webpack://AVTranscoder/./src/common/util/base32.ts","webpack://AVTranscoder/./src/common/util/base64.ts","webpack://AVTranscoder/./src/common/util/bigint.ts","webpack://AVTranscoder/./src/common/util/browser.ts","webpack://AVTranscoder/./src/common/util/constant.ts","webpack://AVTranscoder/./src/common/util/is.ts","webpack://AVTranscoder/./src/common/util/keypath.ts","webpack://AVTranscoder/./src/common/util/logger.ts","webpack://AVTranscoder/./src/common/util/object.ts","webpack://AVTranscoder/./src/common/util/os.ts","webpack://AVTranscoder/./src/common/util/string.ts","webpack://AVTranscoder/./src/common/util/support.ts","webpack://AVTranscoder/./src/common/util/text.ts","webpack://AVTranscoder/./src/common/util/url.ts","webpack://AVTranscoder/./src/common/util/wasm.ts","webpack://AVTranscoder/./src/videoscale/VideoScaler.ts","webpack://AVTranscoder/webpack/bootstrap","webpack://AVTranscoder/webpack/runtime/define property getters","webpack://AVTranscoder/webpack/runtime/ensure chunk","webpack://AVTranscoder/webpack/runtime/get javascript chunk filename","webpack://AVTranscoder/webpack/runtime/global","webpack://AVTranscoder/webpack/runtime/hasOwnProperty shorthand","webpack://AVTranscoder/webpack/runtime/load script","webpack://AVTranscoder/webpack/runtime/make namespace object","webpack://AVTranscoder/webpack/runtime/publicPath","webpack://AVTranscoder/webpack/runtime/jsonp chunk loading","webpack://AVTranscoder/webpack/before-startup","webpack://AVTranscoder/webpack/startup","webpack://AVTranscoder/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AVTranscoder\"] = factory();\n\telse\n\t\troot[\"AVTranscoder\"] = factory();\n})(self, () => {\nreturn ","/*\r\n * libmedia audio resampler\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVSampleFormat } from 'avutil/audiosamplefmt'\r\nimport { AVChannelLayout } from 'avutil/struct/audiosample'\r\nimport AVPCMBuffer from 'avutil/struct/avpcmbuffer'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport interface PCMParameters {\r\n  channels: int32\r\n  sampleRate: int32\r\n  format: AVSampleFormat\r\n  layout?: pointer<AVChannelLayout>\r\n}\r\n\r\nexport type ResamplerOptions = {\r\n  resource: WebAssemblyResource\r\n}\r\n\r\nexport default class Resampler {\r\n\r\n  private resampler: WebAssemblyRunner\r\n\r\n  private options: ResamplerOptions\r\n\r\n  private inputParameters: PCMParameters | undefined\r\n  private outputParameters: PCMParameters | undefined\r\n\r\n  constructor(options: ResamplerOptions) {\r\n    this.options = options\r\n\r\n    this.resampler = new WebAssemblyRunner(this.options.resource)\r\n\r\n  }\r\n\r\n  public async open(input: PCMParameters, output: PCMParameters): Promise<int32> {\r\n\r\n    this.inputParameters = input\r\n    this.outputParameters = output\r\n\r\n    await this.resampler.run()\r\n\r\n    this.resampler.invoke(\r\n      'resample_set_input_parameters',\r\n      input.sampleRate,\r\n      input.channels,\r\n      input.format,\r\n      input.layout || nullptr\r\n    )\r\n    this.resampler.invoke(\r\n      'resample_set_output_parameters',\r\n      output.sampleRate,\r\n      output.channels,\r\n      output.format,\r\n      output.layout || nullptr\r\n    )\r\n\r\n    let ret = this.resampler.invoke<int32>('resample_init')\r\n    if (ret < 0) {\r\n      logger.error(`open resampler failed, ret: ${ret}`)\r\n      return errorType.INVALID_PARAMETERS\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public resample(input: pointer<pointer<uint8>>, output: pointer<AVPCMBuffer>, numberOfFrames: int32) {\r\n    return this.resampler.invoke<int32>('resample_process', input, output, numberOfFrames)\r\n  }\r\n\r\n  public getOutputSampleCount(numberOfFrames: int32) {\r\n    return this.resampler.invoke<int32>('resample_nb_sample', numberOfFrames)\r\n  }\r\n\r\n  public close() {\r\n    this.resampler.invoke('resample_destroy')\r\n    this.resampler.destroy()\r\n  }\r\n\r\n  public getInputPCMParameters() {\r\n    return this.inputParameters\r\n  }\r\n\r\n  public getOutputPCMParameters() {\r\n    return this.outputParameters\r\n  }\r\n}\r\n","/*\r\n * libmedia wasm audio decoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport AVFrame, { AVFramePool, AVFrameRef } from 'avutil/struct/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport { createAVFrame, destroyAVFrame } from 'avutil/util/avframe'\r\nimport * as logger from 'common/util/logger'\r\nimport support from 'common/util/support'\r\nimport { AVDictionary } from 'avutil/struct/avdict'\r\nimport { Data } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\nimport * as dict from 'avutil/util/avdict'\r\nimport * as is from 'common/util/is'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport type WasmAudioDecoderOptions = {\r\n  resource: WebAssemblyResource\r\n  onReceiveAVFrame: (frame: pointer<AVFrame>) => void\r\n  avframePool?: AVFramePool\r\n}\r\n\r\nexport default class WasmAudioDecoder {\r\n\r\n  private options: WasmAudioDecoderOptions\r\n\r\n  private decoder: WebAssemblyRunner\r\n\r\n  private frame: pointer<AVFrame> = nullptr\r\n\r\n  private decoderOptions: pointer<AVDictionary> = nullptr\r\n\r\n  private timeBase: Rational | undefined\r\n\r\n  constructor(options: WasmAudioDecoderOptions) {\r\n    this.options = options\r\n    this.decoder = new WebAssemblyRunner(options.resource)\r\n  }\r\n\r\n  private getAVFrame() {\r\n    if (this.frame) {\r\n      return this.frame\r\n    }\r\n    return this.frame = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n  }\r\n\r\n  private outputAVFrame() {\r\n    if (this.frame) {\r\n      if (this.options.onReceiveAVFrame) {\r\n        this.frame.timeBase.den = this.timeBase!.den\r\n        this.frame.timeBase.num = this.timeBase!.num\r\n        this.options.onReceiveAVFrame(this.frame)\r\n      }\r\n      else {\r\n        this.options.avframePool ? this.options.avframePool.release(this.frame as pointer<AVFrameRef>) : destroyAVFrame(this.frame)\r\n      }\r\n\r\n      this.frame = nullptr\r\n    }\r\n  }\r\n\r\n  private receiveAVFrame() {\r\n    return this.decoder.invoke<int32>('decoder_receive', this.getAVFrame())\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, opts: Data = {}): Promise<int32> {\r\n    await this.decoder.run()\r\n\r\n    const optsP = reinterpret_cast<pointer<pointer<AVDictionary>>>(malloc(sizeof(pointer)))\r\n\r\n    accessof(optsP) <- nullptr\r\n\r\n    if (object.keys(opts).length) {\r\n      if (this.decoderOptions) {\r\n        dict.freeAVDict2(this.decoderOptions)\r\n        free(this.decoderOptions)\r\n        this.decoderOptions = nullptr\r\n      }\r\n      this.decoderOptions = reinterpret_cast<pointer<AVDictionary>>(avMallocz(sizeof(AVDictionary)))\r\n      object.each(opts, (value, key) => {\r\n        if (is.string(value) || is.string(key)) {\r\n          dict.avDictSet(this.decoderOptions, key, value)\r\n        }\r\n      })\r\n      accessof(optsP) <- this.decoderOptions\r\n    }\r\n\r\n    let ret = 0\r\n    if (support.jspi) {\r\n      ret = await this.decoder.invokeAsync<int32>('decoder_open', parameters, nullptr, 1, optsP)\r\n    }\r\n    else {\r\n      ret = this.decoder.invoke<int32>('decoder_open', parameters, nullptr, 1, optsP)\r\n      await this.decoder.childThreadsReady()\r\n    }\r\n\r\n    this.decoderOptions = accessof(optsP)\r\n\r\n    free(optsP)\r\n\r\n    if (ret < 0) {\r\n      logger.error(`open audio decoder failed, ret: ${ret}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.timeBase = undefined\r\n\r\n    return 0\r\n  }\r\n\r\n  public decode(avpacket: pointer<AVPacket>): int32 {\r\n\r\n    if (!this.timeBase) {\r\n      this.timeBase = {\r\n        den: avpacket.timeBase.den,\r\n        num: avpacket.timeBase.num\r\n      }\r\n    }\r\n\r\n    let ret = this.decoder.invoke<int32>('decoder_decode', avpacket)\r\n\r\n    if (ret) {\r\n      return ret\r\n    }\r\n\r\n    while (true) {\r\n      ret = this.receiveAVFrame()\r\n      if (ret === 1) {\r\n        this.outputAVFrame()\r\n      }\r\n      else if (ret < 0) {\r\n        return ret\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    this.decoder.invoke('decoder_flush')\r\n    while (1) {\r\n      const ret = this.receiveAVFrame()\r\n      if (ret < 1) {\r\n        return ret\r\n      }\r\n      this.outputAVFrame()\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public close() {\r\n    this.decoder.invoke('decoder_close')\r\n    this.decoder.destroy()\r\n\r\n    if (this.frame) {\r\n      this.options.avframePool ? this.options.avframePool.release(this.frame as pointer<AVFrameRef>) : destroyAVFrame(this.frame)\r\n      this.frame = nullptr\r\n    }\r\n    if (this.decoderOptions) {\r\n      dict.freeAVDict2(this.decoderOptions)\r\n      free(this.decoderOptions)\r\n      this.decoderOptions = nullptr\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia wasm audio encoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVFrame from 'avutil/struct/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport AVPacket, { AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport { createAVPacket, destroyAVPacket } from 'avutil/util/avpacket'\r\nimport * as logger from 'common/util/logger'\r\nimport { audioData2AVFrame } from 'avutil/function/audioData2AVFrame'\r\nimport { createAVFrame, destroyAVFrame, getAudioBuffer, refAVFrame, unrefAVFrame } from 'avutil/util/avframe'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport { getBytesPerSample, sampleFormatIsPlanar, sampleSetSilence } from 'avutil/util/sample'\r\nimport { AVSampleFormat } from 'avutil/audiosamplefmt'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\nimport support from 'common/util/support'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { AVDictionary } from 'avutil/struct/avdict'\r\nimport { Data } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\nimport * as dict from 'avutil/util/avdict'\r\nimport * as is from 'common/util/is'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport * as errorType from 'avutil/error'\r\nimport { NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\n\r\nexport type WasmAudioEncoderOptions = {\r\n  resource: WebAssemblyResource\r\n  onReceiveAVPacket: (avpacket: pointer<AVPacket>) => void\r\n  avpacketPool?: AVPacketPool\r\n}\r\n\r\nclass AudioFrameResizer {\r\n\r\n  private parameters: pointer<AVCodecParameters>\r\n\r\n  private data: Uint8Array[]\r\n\r\n  private planes: int32\r\n\r\n  private pos: int32\r\n  private posEnd: int32\r\n\r\n  private bufferLength: int32\r\n  private bytesPerSample: int32\r\n  private planar: boolean\r\n  private channels: int32\r\n  private frameSize: int32\r\n\r\n  private pts: int64\r\n\r\n  constructor(parameters: pointer<AVCodecParameters>, frameSize: int32) {\r\n    this.parameters = parameters\r\n    this.frameSize = frameSize\r\n\r\n    this.planar = sampleFormatIsPlanar(parameters.format as AVSampleFormat)\r\n    this.planes = this.planar ? parameters.chLayout.nbChannels : 1\r\n    this.channels = parameters.chLayout.nbChannels\r\n\r\n    this.bufferLength = 500 * 1024\r\n    this.data = []\r\n    for (let i = 0; i < this.planes; i++) {\r\n      this.data[i] = new Uint8Array(this.bufferLength)\r\n    }\r\n    this.pos = 0\r\n    this.posEnd = 0\r\n    this.bytesPerSample = getBytesPerSample(parameters.format as AVSampleFormat)\r\n    this.pts = 0n\r\n  }\r\n\r\n  public sendAVFrame(avframe: pointer<AVFrame>) {\r\n\r\n    if (avframe.pts !== NOPTS_VALUE_BIGINT\r\n      && avframe.timeBase.den !== 0\r\n      && avframe.timeBase.num !== 0\r\n      && (this.posEnd - this.pos) === 0\r\n    ) {\r\n      this.pts = avRescaleQ2(avframe.pts, addressof(avframe.timeBase), { num: 1, den: this.parameters.sampleRate})\r\n    }\r\n\r\n    const size = avframe.nbSamples * this.bytesPerSample * (this.planar ? 1 : this.channels)\r\n    if (this.posEnd + size >= this.bufferLength) {\r\n      const len = this.posEnd - this.pos\r\n      for (let i = 0; i < this.planes; i++) {\r\n        this.data[i].set(this.data[i].subarray(this.pos, this.posEnd), 0)\r\n      }\r\n      this.pos = 0\r\n      this.posEnd = len\r\n    }\r\n\r\n    for (let i = 0; i < this.planes; i++) {\r\n      this.data[i].set(mapUint8Array(avframe.data[i], size), this.posEnd)\r\n    }\r\n\r\n    this.posEnd += size\r\n  }\r\n\r\n  public remainFrameSize() {\r\n    const step = this.bytesPerSample * (this.planar ? 1 : this.channels)\r\n    return (this.posEnd - this.pos) / step\r\n  }\r\n\r\n  private handleData(avframe: pointer<AVFrame>, size: int32) {\r\n    unrefAVFrame(avframe)\r\n\r\n    avframe.sampleRate = this.parameters.sampleRate\r\n    avframe.nbSamples = this.frameSize\r\n    avframe.chLayout.nbChannels = this.parameters.chLayout.nbChannels\r\n    avframe.format = this.parameters.format\r\n    avframe.pts = this.pts\r\n    avframe.timeBase.den = this.parameters.sampleRate\r\n    avframe.timeBase.num = 1\r\n\r\n    getAudioBuffer(avframe)\r\n\r\n    for (let i = 0; i < this.planes; i++) {\r\n      memcpyFromUint8Array(avframe.data[i], reinterpret_cast<size>(avframe.linesize[0]), this.data[i].subarray(this.pos, this.pos + size))\r\n    }\r\n\r\n    this.pos += size\r\n    this.pts += static_cast<int64>(this.frameSize)\r\n  }\r\n\r\n  public receiveAVFrame(avframe: pointer<AVFrame>) {\r\n    const size = this.frameSize * this.bytesPerSample * (this.planar ? 1 : this.channels)\r\n    const remainingSize = (this.posEnd - this.pos)\r\n    if (remainingSize < size) {\r\n      return -1\r\n    }\r\n    this.handleData(avframe, size)\r\n    return 0\r\n  }\r\n\r\n  public flush(avframe: pointer<AVFrame>) {\r\n    const size = this.posEnd - this.pos\r\n    const frameSize = size / (this.bytesPerSample * (this.planar ? 1 : this.channels))\r\n    this.handleData(avframe, size)\r\n    sampleSetSilence(\r\n      addressof(avframe.data),\r\n      frameSize,\r\n      this.parameters.format as AVSampleFormat,\r\n      this.frameSize - frameSize,\r\n      this.parameters.chLayout.nbChannels\r\n    )\r\n    return 0\r\n  }\r\n}\r\n\r\nexport default class WasmAudioEncoder {\r\n\r\n  private options: WasmAudioEncoderOptions\r\n\r\n  private encoder: WebAssemblyRunner\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n  private timeBase: Rational | undefined\r\n\r\n  private avpacket: pointer<AVPacket> = nullptr\r\n\r\n  private avframe: pointer<AVFrame> = nullptr\r\n\r\n  private pts: int64 = 0n\r\n  private frameSize: int32 = 0\r\n  private audioFrameResizer: AudioFrameResizer | undefined\r\n\r\n  private encoderOptions: pointer<AVDictionary> = nullptr\r\n  private ptsQueue: int64[] = []\r\n\r\n  constructor(options: WasmAudioEncoderOptions) {\r\n    this.options = options\r\n    this.encoder = new WebAssemblyRunner(this.options.resource)\r\n  }\r\n\r\n  private getAVPacket() {\r\n    if (this.avpacket) {\r\n      return this.avpacket\r\n    }\r\n    return this.avpacket = this.options.avpacketPool ? this.options.avpacketPool.alloc() : createAVPacket()\r\n  }\r\n\r\n  private outputAVPacket() {\r\n    if (this.avpacket) {\r\n      let pts = this.ptsQueue.shift()!\r\n      if (pts === undefined || pts === NOPTS_VALUE_BIGINT) {\r\n        pts = this.pts\r\n      }\r\n      this.avpacket.pts = pts\r\n      this.avpacket.dts = pts\r\n      this.pts = pts + this.avpacket.duration\r\n      this.avpacket.timeBase.den = this.timeBase!.den\r\n      this.avpacket.timeBase.num = this.timeBase!.num\r\n      this.options.onReceiveAVPacket(this.avpacket)\r\n      this.avpacket = nullptr\r\n    }\r\n  }\r\n\r\n  private receiveAVPacket() {\r\n    return this.encoder.invoke<int32>('encoder_receive', this.getAVPacket())\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, timeBase: Rational, opts: Data = {}): Promise<int32> {\r\n    await this.encoder.run()\r\n\r\n    const timeBaseP = reinterpret_cast<pointer<Rational>>(malloc(sizeof(Rational)))\r\n    const optsP = reinterpret_cast<pointer<pointer<AVDictionary>>>(malloc(sizeof(pointer)))\r\n\r\n    timeBaseP.num = timeBase.num\r\n    timeBaseP.den = timeBase.den\r\n    accessof(optsP) <- nullptr\r\n\r\n    this.encoder.invoke('encoder_set_flags', 1 << 22)\r\n\r\n    if (object.keys(opts).length) {\r\n      if (this.encoderOptions) {\r\n        dict.freeAVDict2(this.encoderOptions)\r\n        free(this.encoderOptions)\r\n        this.encoderOptions = nullptr\r\n      }\r\n      this.encoderOptions = reinterpret_cast<pointer<AVDictionary>>(avMallocz(sizeof(AVDictionary)))\r\n      object.each(opts, (value, key) => {\r\n        if (is.string(value) || is.string(key)) {\r\n          dict.avDictSet(this.encoderOptions, key, value)\r\n        }\r\n      })\r\n      accessof(optsP) <- this.encoderOptions\r\n    }\r\n\r\n    let ret = 0\r\n\r\n    if (support.jspi) {\r\n      ret = await this.encoder.invokeAsync<int32>('encoder_open', parameters, timeBaseP, 1, optsP)\r\n    }\r\n    else {\r\n      ret = this.encoder.invoke<int32>('encoder_open', parameters, timeBaseP, 1, optsP)\r\n      await this.encoder.childThreadsReady()\r\n    }\r\n\r\n    this.frameSize = this.encoder.invoke<int32>('encoder_get_framesize_size')\r\n\r\n    this.encoderOptions = accessof(optsP)\r\n\r\n    free(optsP)\r\n    free(timeBaseP)\r\n\r\n    if (ret < 0) {\r\n      logger.error(`open audio encoder failed, ret: ${ret}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.parameters = parameters\r\n    this.timeBase = timeBase\r\n\r\n    this.pts = 0n\r\n    this.ptsQueue = []\r\n\r\n    return 0\r\n  }\r\n\r\n  private encode_(avframe: pointer<AVFrame>) {\r\n    let ret = this.encoder.invoke<int32>('encoder_encode', avframe)\r\n    if (ret) {\r\n      return ret\r\n    }\r\n    if (avframe.pts === NOPTS_VALUE_BIGINT || avframe.timeBase.den === 0 || avframe.timeBase.num === 0) {\r\n      this.ptsQueue.push(NOPTS_VALUE_BIGINT)\r\n    }\r\n    else {\r\n      this.ptsQueue.push(avRescaleQ2(avframe.pts, addressof(avframe.timeBase), this.timeBase!))\r\n    }\r\n    while (true) {\r\n      ret = this.receiveAVPacket()\r\n      if (ret === 1) {\r\n        this.outputAVPacket()\r\n      }\r\n      else if (ret < 0) {\r\n        return ret\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public encode(avframe: pointer<AVFrame> | AudioData): int32 {\r\n    if (this.avframe) {\r\n      unrefAVFrame(this.avframe)\r\n    }\r\n    else {\r\n      this.avframe = createAVFrame()\r\n    }\r\n\r\n    if (!isPointer(avframe)) {\r\n      avframe = audioData2AVFrame(avframe, this.avframe)\r\n    }\r\n    else {\r\n      refAVFrame(this.avframe, avframe)\r\n      avframe = this.avframe\r\n    }\r\n\r\n    if (this.frameSize > 0 && avframe.nbSamples !== this.frameSize || this.audioFrameResizer) {\r\n      if (!this.audioFrameResizer) {\r\n        this.audioFrameResizer = new AudioFrameResizer(this.parameters, this.frameSize)\r\n      }\r\n      this.audioFrameResizer.sendAVFrame(avframe)\r\n      while (true) {\r\n        let ret = this.audioFrameResizer.receiveAVFrame(avframe)\r\n        if (ret < 0) {\r\n          return 0\r\n        }\r\n        ret = this.encode_(avframe)\r\n        if (ret) {\r\n          return ret\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      return this.encode_(avframe)\r\n    }\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    if (this.audioFrameResizer && this.audioFrameResizer.remainFrameSize() > 0) {\r\n      const avframe = createAVFrame()\r\n      this.audioFrameResizer.flush(avframe)\r\n      avframe.pts = avRescaleQ2(avframe.pts, addressof(avframe.timeBase), this.timeBase!)\r\n      this.encode_(avframe)\r\n      destroyAVFrame(avframe)\r\n    }\r\n\r\n    this.encoder.invoke('encoder_flush', nullptr)\r\n    while (1) {\r\n      const ret = this.receiveAVPacket()\r\n      if (ret < 1) {\r\n        return ret\r\n      }\r\n      this.outputAVPacket()\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public getExtraData() {\r\n    const pointer = this.encoder.invoke<pointer<uint8>>('encoder_get_extradata')\r\n    const size = this.encoder.invoke<int32>('encoder_get_extradata_size')\r\n\r\n    if (pointer && size) {\r\n      return mapUint8Array(pointer, reinterpret_cast<size>(size)).slice()\r\n    }\r\n    return null\r\n  }\r\n\r\n  public close() {\r\n    this.encoder.invoke('encoder_close')\r\n    this.encoder.destroy()\r\n\r\n    if (this.avpacket) {\r\n      this.options.avpacketPool\r\n        ? this.options.avpacketPool.release(this.avpacket as pointer<AVPacketRef>)\r\n        : destroyAVPacket(this.avpacket)\r\n      this.avpacket = nullptr\r\n    }\r\n\r\n    if (this.avframe) {\r\n      destroyAVFrame(this.avframe)\r\n      this.avframe = nullptr\r\n    }\r\n    if (this.encoderOptions) {\r\n      dict.freeAVDict2(this.encoderOptions)\r\n      free(this.encoderOptions)\r\n      this.encoderOptions = nullptr\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia wasm video decoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport AVFrame, { AVFramePool, AVFrameRef } from 'avutil/struct/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport AVCodecParameters, { AVCodecParameterFlags } from 'avutil/struct/avcodecparameters'\r\nimport { createAVFrame, destroyAVFrame } from 'avutil/util/avframe'\r\nimport * as logger from 'common/util/logger'\r\nimport support from 'common/util/support'\r\nimport { AVDictionary } from 'avutil/struct/avdict'\r\nimport { Data } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\nimport * as dict from 'avutil/util/avdict'\r\nimport * as is from 'common/util/is'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport type WasmVideoDecoderOptions = {\r\n  resource: WebAssemblyResource\r\n  onReceiveAVFrame: (frame: pointer<AVFrame>) => void\r\n  avframePool?: AVFramePool\r\n}\r\n\r\n/**\r\n * We leave some space between them for extensions (drop some\r\n * keyframes for intra-only or drop just some bidir frames). \r\n */\r\nexport const enum AVDiscard {\r\n  /**\r\n   * discard nothing\r\n   */\r\n  AVDISCARD_NONE = -16,\r\n  /**\r\n   * discard useless packets like 0 size packets in avi\r\n   */\r\n  AVDISCARD_DEFAULT = 0,\r\n  /**\r\n   * discard all non reference\r\n   */\r\n  AVDISCARD_NONREF = 8,\r\n  /**\r\n   * discard all bidirectional frames\r\n   */\r\n  AVDISCARD_BIDIR = 16,\r\n  /**\r\n   * discard all non intra frames\r\n   */\r\n  AVDISCARD_NONINTRA = 24,\r\n  /**\r\n   * discard all frames except keyframes\r\n   */\r\n  AVDISCARD_NONKEY = 32,\r\n  /**\r\n   * discard all\r\n   */\r\n  AVDISCARD_ALL = 48\r\n}\r\n\r\nexport default class WasmVideoDecoder {\r\n\r\n  private options: WasmVideoDecoderOptions\r\n\r\n  private decoder: WebAssemblyRunner\r\n\r\n  private frame: pointer<AVFrame> = nullptr\r\n\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n\r\n  private decoderOptions: pointer<AVDictionary> = nullptr\r\n\r\n  private timeBase: Rational | undefined\r\n\r\n  private dtsQueue: int64[] = []\r\n\r\n  constructor(options: WasmVideoDecoderOptions) {\r\n    this.options = options\r\n    this.decoder = new WebAssemblyRunner(this.options.resource)\r\n  }\r\n\r\n  private getAVFrame() {\r\n    if (this.frame) {\r\n      return this.frame\r\n    }\r\n    return this.frame = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n  }\r\n\r\n  private outputAVFrame() {\r\n    if (this.frame) {\r\n      if ((this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_NO_PTS)\r\n        && this.dtsQueue.length\r\n      ) {\r\n        this.frame.pts = this.dtsQueue.shift()!\r\n      }\r\n      if (this.options.onReceiveAVFrame) {\r\n        this.frame.timeBase.den = this.timeBase!.den\r\n        this.frame.timeBase.num = this.timeBase!.num\r\n        this.options.onReceiveAVFrame(this.frame)\r\n      }\r\n      else {\r\n        this.options.avframePool ? this.options.avframePool.release(this.frame as pointer<AVFrameRef>) : destroyAVFrame(this.frame)\r\n      }\r\n\r\n      this.frame = nullptr\r\n    }\r\n  }\r\n\r\n  private receiveAVFrame() {\r\n    return this.decoder.invoke<int32>('decoder_receive', this.getAVFrame())\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, threadCount: number = 1, opts: Data = {}): Promise<int32> {\r\n    await this.decoder.run(undefined, threadCount)\r\n    let ret = 0\r\n\r\n    const optsP = reinterpret_cast<pointer<pointer<AVDictionary>>>(malloc(sizeof(pointer)))\r\n    accessof(optsP) <- nullptr\r\n\r\n    if (object.keys(opts).length) {\r\n      if (this.decoderOptions) {\r\n        dict.freeAVDict2(this.decoderOptions)\r\n        free(this.decoderOptions)\r\n        this.decoderOptions = nullptr\r\n      }\r\n      this.decoderOptions = reinterpret_cast<pointer<AVDictionary>>(avMallocz(sizeof(AVDictionary)))\r\n      object.each(opts, (value, key) => {\r\n        if (is.string(value) || is.string(key)) {\r\n          dict.avDictSet(this.decoderOptions, key, value)\r\n        }\r\n      })\r\n      accessof(optsP) <- this.decoderOptions\r\n    }\r\n\r\n    if (support.jspi) {\r\n      ret = await this.decoder.invokeAsync<int32>('decoder_open', parameters, nullptr, threadCount, optsP)\r\n    }\r\n    else {\r\n      ret = this.decoder.invoke<int32>('decoder_open', parameters, nullptr, threadCount, optsP)\r\n      await this.decoder.childThreadsReady()\r\n    }\r\n\r\n    this.decoderOptions = accessof(optsP)\r\n\r\n    free(optsP)\r\n\r\n    if (ret < 0) {\r\n      logger.error(`open video decoder failed, ret: ${ret}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n    this.parameters = parameters\r\n    this.timeBase = undefined\r\n    this.dtsQueue.length = 0\r\n    return 0\r\n  }\r\n\r\n  public decode(avpacket: pointer<AVPacket>): int32 {\r\n\r\n    if (!this.timeBase) {\r\n      this.timeBase = {\r\n        den: avpacket.timeBase.den,\r\n        num: avpacket.timeBase.num\r\n      }\r\n    }\r\n\r\n    let ret = this.decoder.invoke<int32>('decoder_decode', avpacket)\r\n\r\n    if (ret) {\r\n      return ret\r\n    }\r\n\r\n    if (this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_NO_PTS) {\r\n      this.dtsQueue.push(avpacket.dts)\r\n    }\r\n\r\n    while (true) {\r\n      ret = this.receiveAVFrame()\r\n      if (ret === 1) {\r\n        this.outputAVFrame()\r\n      }\r\n      else if (ret < 0) {\r\n        return ret\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    this.decoder.invoke('decoder_flush')\r\n    while (1) {\r\n      const ret = this.receiveAVFrame()\r\n      if (ret < 1) {\r\n        return ret\r\n      }\r\n      this.outputAVFrame()\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public close() {\r\n    this.decoder.invoke('decoder_close')\r\n    this.decoder.destroy()\r\n\r\n    if (this.frame) {\r\n      this.options.avframePool ? this.options.avframePool.release(this.frame as pointer<AVFrameRef>) : destroyAVFrame(this.frame)\r\n      this.frame = nullptr\r\n    }\r\n\r\n    this.parameters = nullptr\r\n\r\n    if (this.decoderOptions) {\r\n      dict.freeAVDict2(this.decoderOptions)\r\n      free(this.decoderOptions)\r\n      this.decoderOptions = nullptr\r\n    }\r\n  }\r\n\r\n  public setSkipFrameDiscard(discard: AVDiscard) {\r\n    this.decoder.invoke('decoder_discard', discard)\r\n  }\r\n\r\n  public getChildThreadCount() {\r\n    if (this.decoder) {\r\n      return this.decoder.getChildThreadCount()\r\n    }\r\n    return 0\r\n  }\r\n}\r\n","/*\r\n * libmedia wasm video encoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVCodecParameters, { AVCodecParameterFlags } from 'avutil/struct/avcodecparameters'\r\nimport AVFrame, { AVPictureType } from 'avutil/struct/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport AVPacket, { AVPacketFlags, AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport { createAVPacket, destroyAVPacket, getAVPacketData, getAVPacketSideData } from 'avutil/util/avpacket'\r\nimport * as logger from 'common/util/logger'\r\nimport * as stack from 'cheap/stack'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { createAVFrame, destroyAVFrame, refAVFrame, unrefAVFrame } from 'avutil/util/avframe'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport { AVCodecID, AVPacketSideDataType } from 'avutil/codec'\r\nimport AVBSFilter from 'avformat/bsf/AVBSFilter'\r\nimport Annexb2AvccFilter from 'avformat/bsf/h2645/Annexb2AvccFilter'\r\nimport support from 'common/util/support'\r\nimport * as av1 from 'avutil/codecs/av1'\r\nimport * as vp9 from 'avutil/codecs/vp9'\r\nimport { AVDictionary } from 'avutil/struct/avdict'\r\nimport { Data } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\nimport * as dict from 'avutil/util/avdict'\r\nimport * as is from 'common/util/is'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport { avRescaleQ, avRescaleQ2 } from 'avutil/util/rational'\r\nimport { NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport type WasmVideoEncoderOptions = {\r\n  resource: WebAssemblyResource\r\n  onReceiveAVPacket: (avpacket: pointer<AVPacket>) => void\r\n  avpacketPool?: AVPacketPool\r\n}\r\n\r\nexport default class WasmVideoEncoder {\r\n\r\n  private options: WasmVideoEncoderOptions\r\n\r\n  private encoder: WebAssemblyRunner\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n  private timeBase: Rational | undefined\r\n  private framerateTimebase: Rational | undefined\r\n  private inputCounter: int64 = 0n\r\n\r\n  private avpacket: pointer<AVPacket> = nullptr\r\n\r\n  private avframe: pointer<AVFrame> = nullptr\r\n\r\n  private encodeQueueSize: number = 0\r\n\r\n  private bitrateFilter: AVBSFilter | undefined\r\n\r\n  private extradata: Uint8Array | null = null\r\n\r\n  private encoderOptions: pointer<AVDictionary> = nullptr\r\n\r\n  constructor(options: WasmVideoEncoderOptions) {\r\n    this.options = options\r\n    this.encoder = new WebAssemblyRunner(this.options.resource)\r\n  }\r\n\r\n  private getAVPacket() {\r\n    if (this.avpacket) {\r\n      return this.avpacket\r\n    }\r\n    return this.avpacket = this.options.avpacketPool ? this.options.avpacketPool.alloc() : createAVPacket()\r\n  }\r\n\r\n  private outputAVPacket() {\r\n    if (this.avpacket) {\r\n      if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_H264\r\n        || this.parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n        || this.parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n      ) {\r\n        // wasm 编码器给出的是 annexb 码流\r\n        this.avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB\r\n        if (!(this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB)) {\r\n          if (!this.bitrateFilter) {\r\n            this.bitrateFilter = new Annexb2AvccFilter()\r\n            const timeBaseP = reinterpret_cast<pointer<Rational>>(stack.malloc(sizeof(Rational)))\r\n            timeBaseP.num = this.timeBase!.num\r\n            timeBaseP.den = this.timeBase!.den\r\n            this.bitrateFilter.init(this.parameters, timeBaseP)\r\n            stack.free(sizeof(Rational))\r\n          }\r\n          this.bitrateFilter.sendAVPacket(this.avpacket)\r\n          this.bitrateFilter.receiveAVPacket(this.avpacket)\r\n        }\r\n\r\n        if (!this.extradata) {\r\n          const ele = getAVPacketSideData(this.avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n          if (ele) {\r\n            this.extradata = mapUint8Array(ele.data, ele.size).slice()\r\n          }\r\n        }\r\n      }\r\n      else if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_AV1) {\r\n        if (!this.extradata) {\r\n          this.extradata = av1.generateExtradata(this.parameters, getAVPacketData(this.avpacket))\r\n        }\r\n      }\r\n      else if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n        if (!this.extradata) {\r\n          this.extradata = vp9.generateExtradata(this.parameters)\r\n        }\r\n      }\r\n\r\n      this.avpacket.timeBase.den = this.timeBase!.den\r\n      this.avpacket.timeBase.num = this.timeBase!.num\r\n      this.avpacket.duration = avRescaleQ(1n, this.framerateTimebase!, this.timeBase!)\r\n\r\n      this.options.onReceiveAVPacket(this.avpacket)\r\n      this.avpacket = nullptr\r\n      this.encodeQueueSize--\r\n    }\r\n  }\r\n\r\n  private receiveAVPacket() {\r\n    return this.encoder.invoke<int32>('encoder_receive', this.getAVPacket())\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, timeBase: Rational, threadCount: number = 1, opts: Data = {}): Promise<int32> {\r\n    await this.encoder.run(undefined, threadCount)\r\n\r\n    const timeBaseP = reinterpret_cast<pointer<Rational>>(malloc(sizeof(Rational)))\r\n    const optsP = reinterpret_cast<pointer<pointer<AVDictionary>>>(malloc(sizeof(pointer)))\r\n\r\n    timeBaseP.num = timeBase.num\r\n    timeBaseP.den = timeBase.den\r\n    accessof(optsP) <- nullptr\r\n\r\n    if (parameters.codecId === AVCodecID.AV_CODEC_ID_MPEG4 && !(parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB)) {\r\n      this.encoder.invoke('encoder_set_flags', 1 << 22)\r\n    }\r\n    this.encoder.invoke('encoder_set_max_b_frame', parameters.videoDelay)\r\n\r\n    if (object.keys(opts).length) {\r\n      if (this.encoderOptions) {\r\n        dict.freeAVDict2(this.encoderOptions)\r\n        free(this.encoderOptions)\r\n        this.encoderOptions = nullptr\r\n      }\r\n      this.encoderOptions = reinterpret_cast<pointer<AVDictionary>>(avMallocz(sizeof(AVDictionary)))\r\n      object.each(opts, (value, key) => {\r\n        if (is.string(value) || is.string(key)) {\r\n          dict.avDictSet(this.encoderOptions, key, value)\r\n        }\r\n      })\r\n      accessof(optsP) <- this.encoderOptions\r\n    }\r\n\r\n    let ret = 0\r\n\r\n    if (support.jspi) {\r\n      ret = await this.encoder.invokeAsync<int32>('encoder_open', parameters, timeBaseP, threadCount, optsP)\r\n    }\r\n    else {\r\n      ret = this.encoder.invoke<int32>('encoder_open', parameters, timeBaseP, threadCount, optsP)\r\n      await this.encoder.childThreadsReady()\r\n    }\r\n\r\n    this.encoderOptions = accessof(optsP)\r\n\r\n    free(optsP)\r\n    free(timeBaseP)\r\n\r\n    if (ret < 0) {\r\n      logger.error(`open video encoder failed, ret: ${ret}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.parameters = parameters\r\n    this.timeBase = timeBase\r\n    this.inputCounter = 0n\r\n    this.framerateTimebase = {\r\n      den: parameters.framerate.num,\r\n      num: parameters.framerate.den\r\n    }\r\n\r\n    this.encodeQueueSize = 0\r\n    return 0\r\n  }\r\n\r\n  private preEncode(frame: pointer<AVFrame>, key: boolean): pointer<AVFrame> {\r\n    if (this.avframe) {\r\n      unrefAVFrame(this.avframe)\r\n    }\r\n    else {\r\n      this.avframe = createAVFrame()\r\n    }\r\n    refAVFrame(this.avframe, frame)\r\n    frame = this.avframe\r\n\r\n    if (key) {\r\n      frame.pictType = AVPictureType.AV_PICTURE_TYPE_I\r\n    }\r\n\r\n    if (frame.pts !== NOPTS_VALUE_BIGINT && frame.timeBase.den !== 0 && frame.timeBase.num !== 0) {\r\n      frame.pts = avRescaleQ2(frame.pts, addressof(frame.timeBase), this.timeBase!)\r\n    }\r\n    else {\r\n      frame.pts = avRescaleQ(this.inputCounter, this.framerateTimebase!, this.timeBase!)\r\n    }\r\n    this.inputCounter++\r\n    frame.timeBase.den = this.timeBase!.den\r\n    frame.timeBase.num = this.timeBase!.num\r\n\r\n    return frame\r\n  }\r\n\r\n  private postEncode() {\r\n    this.encodeQueueSize++\r\n    while (true) {\r\n      let ret = this.receiveAVPacket()\r\n      if (ret === 1) {\r\n        this.outputAVPacket()\r\n      }\r\n      else if (ret < 0) {\r\n        return ret\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async encodeAsync(frame: pointer<AVFrame>, key: boolean): Promise<int32> {\r\n    frame = this.preEncode(frame, key)\r\n\r\n    let ret = await this.encoder.invokeAsync<int32>('encoder_encode', frame)\r\n    if (ret) {\r\n      return ret\r\n    }\r\n    return this.postEncode()\r\n  }\r\n\r\n  public encode(frame: pointer<AVFrame>, key: boolean): int32 {\r\n    frame = this.preEncode(frame, key)\r\n\r\n    let ret = this.encoder.invoke<int32>('encoder_encode', frame)\r\n    if (ret) {\r\n      return ret\r\n    }\r\n\r\n    return this.postEncode()\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    this.encoder.invoke('encoder_flush')\r\n    while (1) {\r\n      const ret = this.receiveAVPacket()\r\n      if (ret < 1) {\r\n        return ret\r\n      }\r\n      this.outputAVPacket()\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public getExtraData() {\r\n    if (this.extradata) {\r\n      return this.extradata\r\n    }\r\n\r\n    const pointer = this.encoder.invoke<pointer<uint8>>('encoder_get_extradata')\r\n    const size = this.encoder.invoke<int32>('encoder_get_extradata_size')\r\n    if (pointer && size) {\r\n      return mapUint8Array(pointer, reinterpret_cast<size>(size)).slice()\r\n    }\r\n    return null\r\n  }\r\n\r\n  public getColorSpace() {\r\n    return {\r\n      colorSpace: this.encoder.invoke<int32>('encoder_get_color_space'),\r\n      colorPrimaries: this.encoder.invoke<int32>('encoder_get_color_primaries'),\r\n      colorTrc: this.encoder.invoke<int32>('encoder_get_color_trc')\r\n    }\r\n  }\r\n\r\n  public close() {\r\n    this.encoder.invoke('encoder_close')\r\n    this.encoder.destroy()\r\n\r\n    if (this.avpacket) {\r\n      this.options.avpacketPool\r\n        ? this.options.avpacketPool.release(this.avpacket as pointer<AVPacketRef>)\r\n        : destroyAVPacket(this.avpacket)\r\n      this.avpacket = nullptr\r\n    }\r\n\r\n    if (this.avframe) {\r\n      destroyAVFrame(this.avframe)\r\n      this.avframe = nullptr\r\n    }\r\n    if (this.bitrateFilter) {\r\n      this.bitrateFilter.destroy()\r\n      this.bitrateFilter = undefined\r\n    }\r\n    if (this.encoderOptions) {\r\n      dict.freeAVDict2(this.encoderOptions)\r\n      free(this.encoderOptions)\r\n      this.encoderOptions = nullptr\r\n    }\r\n  }\r\n\r\n  public getQueueLength() {\r\n    return this.encodeQueueSize\r\n  }\r\n\r\n  public getChildThreadCount() {\r\n    if (this.encoder) {\r\n      return this.encoder.getChildThreadCount()\r\n    }\r\n    return 0\r\n  }\r\n}\r\n","/*\r\n * libmedia Webcodec audio decoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPacketSideDataType } from 'avutil/codec'\r\nimport getAudioCodec from 'avutil/function/getAudioCodec'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport { getAVPacketSideData } from 'avutil/util/avpacket'\r\nimport avpacket2EncodedAudioChunk from 'avutil/function/avpacket2EncodedAudioChunk'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\nimport * as array from 'common/util/array'\r\n\r\nexport type WebAudioDecoderOptions = {\r\n  onReceiveAudioData: (frame: AudioData) => void\r\n  onError: (error?: Error) => void\r\n}\r\n\r\nexport default class WebAudioDecoder {\r\n\r\n  private options: WebAudioDecoderOptions\r\n\r\n  private decoder: AudioDecoder | undefined\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n\r\n  private extradata: Uint8Array | undefined\r\n\r\n  private currentError: Error | null = null\r\n\r\n  constructor(options: WebAudioDecoderOptions) {\r\n    this.options = options\r\n  }\r\n\r\n  private output(frame: AudioData) {\r\n    if (this.options.onReceiveAudioData) {\r\n      this.options.onReceiveAudioData(frame)\r\n    }\r\n    else {\r\n      frame.close()\r\n    }\r\n  }\r\n\r\n  private error(error: Error) {\r\n    this.currentError = error\r\n    this.options.onError(error)\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>): Promise<int32> {\r\n    this.currentError = null\r\n    this.parameters = parameters\r\n    this.extradata = undefined\r\n    if (parameters.extradata !== nullptr) {\r\n      this.extradata = mapUint8Array(parameters.extradata, reinterpret_cast<size>(parameters.extradataSize)).slice()\r\n    }\r\n\r\n    const config: AudioDecoderConfig = {\r\n      codec: getAudioCodec(this.parameters),\r\n      sampleRate: parameters.sampleRate,\r\n      numberOfChannels: parameters.chLayout.nbChannels,\r\n      description: this.extradata\r\n    }\r\n\r\n    if (!config.description) {\r\n      // description 不是 arraybuffer 会抛错\r\n      delete config.description\r\n    }\r\n\r\n    try {\r\n      const support = await AudioDecoder.isConfigSupported(config)\r\n      if (!support.supported) {\r\n        logger.error('not support')\r\n        return errorType.INVALID_PARAMETERS\r\n      }\r\n    }\r\n    catch (error) {\r\n      logger.error(`${error}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    if (this.decoder && this.decoder.state !== 'closed') {\r\n      this.decoder.close()\r\n    }\r\n\r\n    this.decoder = new AudioDecoder({\r\n      output: this.output.bind(this),\r\n      error: this.error.bind(this)\r\n    })\r\n\r\n    this.decoder.reset()\r\n    this.decoder.configure(config)\r\n\r\n    if (this.currentError) {\r\n      logger.error(`open audio decoder error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public changeExtraData(buffer: Uint8Array) {\r\n    if (array.same(buffer, this.extradata!)) {\r\n      return 0\r\n    }\r\n\r\n    this.currentError = null\r\n\r\n    this.extradata = buffer.slice()\r\n\r\n    this.decoder!.reset()\r\n    this.decoder!.configure({\r\n      codec: getAudioCodec(this.parameters),\r\n      sampleRate: this.parameters.sampleRate,\r\n      numberOfChannels: this.parameters.chLayout.nbChannels,\r\n      description: this.extradata\r\n    })\r\n\r\n    if (this.currentError) {\r\n      logger.error(`change extra data error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public decode(avpacket: pointer<AVPacket>): int32 {\r\n\r\n    if (this.currentError) {\r\n      logger.error(`decode error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n\r\n    if (element !== nullptr) {\r\n      let ret = this.changeExtraData(mapUint8Array(element.data, element.size))\r\n      if (ret) {\r\n        return ret\r\n      }\r\n    }\r\n\r\n    const audioChunk = avpacket2EncodedAudioChunk(avpacket)\r\n\r\n    try {\r\n      this.decoder!.decode(audioChunk)\r\n    }\r\n    catch (error) {\r\n      logger.error(`decode error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    if (this.currentError) {\r\n      logger.error(`flush error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n    try {\r\n      await this.decoder!.flush()\r\n      return 0\r\n    }\r\n    catch (error) {\r\n      logger.error(`flush error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public close() {\r\n    if (this.decoder!.state !== 'closed') {\r\n      this.decoder!.close()\r\n    }\r\n    this.decoder = undefined\r\n  }\r\n\r\n  public getQueueLength() {\r\n    return this.decoder?.decodeQueueSize ?? 0\r\n  }\r\n\r\n  static async isSupported(parameters: pointer<AVCodecParameters>) {\r\n    let extradata: Uint8Array | undefined = undefined\r\n    if (parameters.extradata !== nullptr) {\r\n      extradata = mapUint8Array(parameters.extradata, reinterpret_cast<size>(parameters.extradataSize)).slice()\r\n    }\r\n    const config: AudioDecoderConfig = {\r\n      codec: getAudioCodec(parameters),\r\n      sampleRate: parameters.sampleRate,\r\n      numberOfChannels: parameters.chLayout.nbChannels,\r\n      description: extradata\r\n    }\r\n\r\n    if (!config.description) {\r\n      // description 不是 arraybuffer 会抛错\r\n      delete config.description\r\n    }\r\n\r\n    try {\r\n      const support = await AudioDecoder.isConfigSupported(config)\r\n      return support.supported\r\n    }\r\n    catch (error) {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia Webcodec audio encoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVPacket, { AVPacketPool } from 'avutil/struct/avpacket'\r\nimport getAudioCodec from 'avutil/function/getAudioCodec'\r\nimport AVFrame, { AVFramePool, AVFrameRef } from 'avutil/struct/avframe'\r\nimport { avframe2AudioData } from 'avutil/function/avframe2AudioData'\r\nimport { createAVPacket } from 'avutil/util/avpacket'\r\nimport { createAVFrame, destroyAVFrame, refAVFrame } from 'avutil/util/avframe'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport encodedAudioChunk2AVPacket from 'avutil/function/encodedAudioChunk2AVPacket'\r\nimport { avRescaleQ, avRescaleQ2 } from 'avutil/util/rational'\r\nimport { AV_TIME_BASE_Q, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport type WebAudioEncoderOptions = {\r\n  onReceiveAVPacket: (avpacket: pointer<AVPacket>) => void\r\n  onError: (error?: Error) => void\r\n  avpacketPool?: AVPacketPool\r\n  avframePool?: AVFramePool\r\n}\r\n\r\nexport default class WebAudioEncoder {\r\n\r\n  private encoder: AudioEncoder | undefined\r\n\r\n  private options: WebAudioEncoderOptions\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n  private timeBase: Rational | undefined\r\n\r\n  private currentError: Error | null = null\r\n\r\n  private pts: int64 = 0n\r\n  private ptsQueue: int64[] = []\r\n\r\n  private avframeCache: pointer<AVFrame>[]\r\n\r\n  private extradata: Uint8Array | null = null\r\n\r\n  constructor(options: WebAudioEncoderOptions) {\r\n\r\n    this.options = options\r\n    this.avframeCache = []\r\n  }\r\n\r\n  private async output(chunk: EncodedAudioChunk, metadata?: EncodedAudioChunkMetadata) {\r\n\r\n    const avpacket = this.options.avpacketPool ? this.options.avpacketPool.alloc() : createAVPacket()\r\n\r\n    if (!this.extradata) {\r\n      if (metadata?.decoderConfig?.description) {\r\n        let buffer: Uint8Array\r\n        if (metadata.decoderConfig.description instanceof ArrayBuffer) {\r\n          buffer = new Uint8Array(metadata.decoderConfig.description)\r\n        }\r\n        else {\r\n          buffer = new Uint8Array(metadata.decoderConfig.description.buffer)\r\n        }\r\n        this.extradata = buffer\r\n      }\r\n      encodedAudioChunk2AVPacket(chunk, avpacket)\r\n    }\r\n    else {\r\n      encodedAudioChunk2AVPacket(chunk, avpacket, metadata)\r\n    }\r\n\r\n    let pts = this.ptsQueue.shift()\r\n    if (pts === undefined || pts === NOPTS_VALUE_BIGINT) {\r\n      pts = this.pts\r\n    }\r\n    avpacket.pts = pts\r\n    avpacket.dts = pts\r\n    avpacket.duration = avRescaleQ2(avpacket.duration, addressof(avpacket.timeBase), this.timeBase!)\r\n    avpacket.timeBase.den = this.timeBase!.den\r\n    avpacket.timeBase.num = this.timeBase!.num\r\n\r\n    this.pts += avpacket.duration\r\n\r\n    this.options.onReceiveAVPacket(avpacket)\r\n\r\n    const avframe = this.avframeCache.shift()\r\n    if (avframe) {\r\n      this.options.avframePool\r\n        ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n        : destroyAVFrame(avframe)\r\n    }\r\n  }\r\n\r\n  private error(error: Error) {\r\n    this.options.onError(error)\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, timeBase: Rational): Promise<int32> {\r\n\r\n    this.currentError = null\r\n\r\n    const config: AudioEncoderConfig = {\r\n      codec: getAudioCodec(parameters),\r\n      sampleRate: parameters.sampleRate,\r\n      numberOfChannels: parameters.chLayout.nbChannels,\r\n      bitrate: static_cast<double>(parameters.bitrate),\r\n      bitrateMode: 'constant'\r\n    }\r\n\r\n    try {\r\n      const support = await AudioEncoder.isConfigSupported(config)\r\n      if (!support.supported) {\r\n        logger.error('not support')\r\n        return errorType.INVALID_PARAMETERS\r\n      }\r\n    }\r\n    catch (error) {\r\n      logger.error(`${error}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    if (this.encoder && this.encoder.state !== 'closed') {\r\n      this.encoder.close()\r\n    }\r\n\r\n    this.encoder = new AudioEncoder({\r\n      output: this.output.bind(this),\r\n      error: this.error.bind(this)\r\n    })\r\n\r\n    this.encoder.reset()\r\n    this.encoder.configure(config)\r\n\r\n    if (this.currentError) {\r\n      logger.error(`open audio encoder error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.pts = 0n\r\n    this.ptsQueue = []\r\n    this.parameters = parameters\r\n    this.timeBase = timeBase\r\n\r\n    return 0\r\n  }\r\n\r\n  public encode(frame: AudioData | pointer<AVFrame>): int32 {\r\n    if (this.currentError) {\r\n      logger.error(`encode error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n    if (isPointer(frame)) {\r\n      const cache = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n      refAVFrame(cache, frame)\r\n      this.avframeCache.push(cache)\r\n      cache.pts = 0n\r\n      frame = avframe2AudioData(cache)\r\n    }\r\n    try {\r\n      if (frame.timestamp === NOPTS_VALUE) {\r\n        this.ptsQueue.push(NOPTS_VALUE_BIGINT)\r\n      }\r\n      else {\r\n        this.ptsQueue.push(avRescaleQ(static_cast<int64>(frame.timestamp), AV_TIME_BASE_Q, this.timeBase!))\r\n      }\r\n      this.encoder!.encode(frame)\r\n      return 0\r\n    }\r\n    catch (error) {\r\n      logger.error(`encode error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    if (this.currentError) {\r\n      logger.error(`flush error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n    try {\r\n      await this.encoder!.flush()\r\n      return 0\r\n    }\r\n    catch (error) {\r\n      logger.error(`flush error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public close() {\r\n    if (this.encoder) {\r\n      if (this.encoder.state !== 'closed') {\r\n        this.encoder.close()\r\n      }\r\n    }\r\n    if (this.avframeCache.length) {\r\n      this.avframeCache.forEach((avframe) => {\r\n        this.options.avframePool\r\n          ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n          : destroyAVFrame(avframe)\r\n      })\r\n    }\r\n    this.encoder = undefined\r\n  }\r\n\r\n  public getExtraData() {\r\n    return this.extradata\r\n  }\r\n\r\n  public getQueueLength() {\r\n    return this.encoder?.encodeQueueSize ?? 0\r\n  }\r\n\r\n  static async isSupported(parameters: pointer<AVCodecParameters>) {\r\n    const config: AudioEncoderConfig = {\r\n      codec: getAudioCodec(parameters),\r\n      sampleRate: parameters.sampleRate,\r\n      numberOfChannels: parameters.chLayout.nbChannels,\r\n      bitrate: static_cast<double>(parameters.bitrate),\r\n      bitrateMode: 'constant'\r\n    }\r\n    try {\r\n      const support = await AudioEncoder.isConfigSupported(config)\r\n      return support.supported\r\n    }\r\n    catch (error) {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia Webcodec video decoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID, AVPacketSideDataType } from 'avutil/codec'\r\nimport browser from 'common/util/browser'\r\nimport getVideoCodec from 'avutil/function/getVideoCodec'\r\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport AVCodecParameters, { AVCodecParameterFlags } from 'avutil/struct/avcodecparameters'\r\nimport { addAVPacketData, getAVPacketData, getAVPacketSideData } from 'avutil/util/avpacket'\r\nimport { getHardwarePreference } from 'avutil/function/getHardwarePreference'\r\nimport avpacket2EncodedVideoChunk from 'avutil/function/avpacket2EncodedVideoChunk'\r\nimport * as logger from 'common/util/logger'\r\nimport os from 'common/util/os'\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport * as errorType from 'avutil/error'\r\nimport * as array from 'common/util/array'\r\nimport { AV_TIME_BASE_Q } from 'avutil/constant'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\n\r\nexport type WebVideoDecoderOptions = {\r\n  onReceiveVideoFrame: (frame: VideoFrame) => void\r\n  enableHardwareAcceleration?: boolean\r\n  onError: (error?: Error) => void\r\n}\r\n\r\nexport default class WebVideoDecoder {\r\n\r\n  private decoder: VideoDecoder | undefined\r\n\r\n  private options: WebVideoDecoderOptions\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n\r\n  private extradata: Uint8Array | undefined\r\n\r\n  private currentError: Error | null = null\r\n\r\n  private inputQueue: number[]\r\n  private outputQueue: VideoFrame[]\r\n  private dtsQueue: double[]\r\n\r\n  private sort: boolean\r\n\r\n  private keyframeRequire: boolean = false\r\n  private extradataRequire: boolean = false\r\n\r\n  constructor(options: WebVideoDecoderOptions) {\r\n\r\n    this.options = options\r\n    this.inputQueue = []\r\n    this.outputQueue = []\r\n    this.dtsQueue = []\r\n\r\n    // safari 输出帧在有 B 帧的情况下没有按 pts 排序递增输出，这里需要进行排序输出\r\n    // 经测试 safari 17.4 以上正常排序输出，这里不需要排序了\r\n    this.sort = !!(browser.safari && !browser.checkVersion(browser.version, '17.4', true)\r\n      || os.ios && !browser.checkVersion(os.version, '17.4', true))\r\n  }\r\n\r\n  private async output(frame: VideoFrame) {\r\n    if (this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_NO_PTS\r\n      && this.dtsQueue.length\r\n    ) {\r\n      const old = frame\r\n      frame = new VideoFrame(old, {\r\n        timestamp: this.dtsQueue.shift()\r\n      })\r\n      old.close()\r\n    }\r\n    if (this.sort) {\r\n      let i = 0\r\n      for (; i < this.outputQueue.length; i++) {\r\n        if (this.outputQueue[i].timestamp > frame.timestamp) {\r\n          this.outputQueue.splice(i, 0, frame)\r\n          break\r\n        }\r\n      }\r\n      if (i === this.outputQueue.length) {\r\n        this.outputQueue.push(frame)\r\n      }\r\n\r\n      while (this.outputQueue.length > 2\r\n        && this.outputQueue[0].timestamp === this.inputQueue[0]\r\n      ) {\r\n        const output = this.outputQueue.shift()!\r\n        if (this.options.onReceiveVideoFrame) {\r\n          this.options.onReceiveVideoFrame(output)\r\n        }\r\n        else {\r\n          output.close()\r\n        }\r\n        this.inputQueue.shift()\r\n      }\r\n    }\r\n    else {\r\n      if (this.options.onReceiveVideoFrame) {\r\n        this.options.onReceiveVideoFrame(frame)\r\n      }\r\n      else {\r\n        frame.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  private error(error: Error) {\r\n    this.currentError = error\r\n    this.options.onError(error)\r\n  }\r\n\r\n  private changeExtraData(buffer: Uint8Array) {\r\n    if (array.same(buffer, this.extradata!)) {\r\n      return 0\r\n    }\r\n\r\n    this.currentError = null\r\n\r\n    this.extradata = buffer.slice()\r\n\r\n    this.decoder!.reset()\r\n\r\n    this.decoder!.configure({\r\n      codec: getVideoCodec(this.parameters, buffer),\r\n      description: this.extradata,\r\n      hardwareAcceleration: getHardwarePreference(this.options.enableHardwareAcceleration ?? true)\r\n    })\r\n\r\n    if (this.currentError) {\r\n      logger.error(`change extra data error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.keyframeRequire = true\r\n\r\n    return 0\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>): Promise<int32> {\r\n    this.currentError = null\r\n    this.extradata = undefined\r\n    if (parameters.extradata !== nullptr) {\r\n      this.extradata = mapUint8Array(parameters.extradata, reinterpret_cast<size>(parameters.extradataSize)).slice()\r\n    }\r\n    this.parameters = parameters\r\n\r\n    const config = {\r\n      codec: getVideoCodec(parameters),\r\n      codedWidth: parameters.width,\r\n      codedHeight: parameters.height,\r\n      description: (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) ? undefined : this.extradata,\r\n      hardwareAcceleration: getHardwarePreference(this.options.enableHardwareAcceleration ?? true)\r\n    }\r\n\r\n    if (!config.description) {\r\n      // description 不是 arraybuffer 会抛错\r\n      delete config.description\r\n    }\r\n\r\n    try {\r\n      const support = await VideoDecoder.isConfigSupported(config)\r\n      if (!support.supported) {\r\n        logger.error('not support')\r\n        return errorType.INVALID_PARAMETERS\r\n      }\r\n    }\r\n    catch (error) {\r\n      logger.error(`${error}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    if (this.decoder && this.decoder.state !== 'closed') {\r\n      this.decoder.close()\r\n    }\r\n\r\n    this.decoder = new VideoDecoder({\r\n      output: this.output.bind(this),\r\n      error: this.error.bind(this)\r\n    })\r\n\r\n    this.decoder.reset()\r\n    this.decoder.configure(config)\r\n\r\n    if (this.currentError) {\r\n      logger.error(`open video decoder error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.keyframeRequire = true\r\n    if (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) {\r\n      this.extradataRequire = true\r\n    }\r\n    if (this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_NO_PTS) {\r\n      this.sort = false\r\n    }\r\n\r\n    this.inputQueue.length = 0\r\n    this.outputQueue.length = 0\r\n    this.dtsQueue.length = 0\r\n\r\n    return 0\r\n  }\r\n\r\n  public decode(avpacket: pointer<AVPacket>): int32 {\r\n\r\n    if (this.currentError) {\r\n      logger.error(`decode error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n\r\n    if (element !== nullptr) {\r\n      let ret = this.changeExtraData(mapUint8Array(element.data, element.size))\r\n      if (ret) {\r\n        return ret\r\n      }\r\n    }\r\n\r\n    const key = avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY\r\n\r\n    if (this.keyframeRequire) {\r\n      if (!key) {\r\n        return 0\r\n      }\r\n      if ((this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB)\r\n        && this.extradata\r\n        && this.extradataRequire\r\n      ) {\r\n        if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n          if (!h264.generateAnnexbExtradata(getAVPacketData(avpacket))) {\r\n            const data = h264.annexbAddExtradata(getAVPacketData(avpacket), this.extradata)\r\n            if (data) {\r\n              addAVPacketData(avpacket, data.bufferPointer, data.length)\r\n            }\r\n          }\r\n        }\r\n        else if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n          if (!hevc.generateAnnexbExtradata(getAVPacketData(avpacket))) {\r\n            const data = hevc.annexbAddExtradata(getAVPacketData(avpacket), this.extradata)\r\n            if (data) {\r\n              addAVPacketData(avpacket, data.bufferPointer, data.length)\r\n            }\r\n          }\r\n        }\r\n        else if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n          if (!vvc.generateAnnexbExtradata(getAVPacketData(avpacket))) {\r\n            const data = vvc.annexbAddExtradata(getAVPacketData(avpacket), this.extradata)\r\n            if (data) {\r\n              addAVPacketData(avpacket, data.bufferPointer, data.length)\r\n            }\r\n          }\r\n        }\r\n        this.extradataRequire = false\r\n      }\r\n    }\r\n\r\n    const videoChunk = avpacket2EncodedVideoChunk(avpacket)\r\n\r\n    const timestamp = videoChunk.timestamp\r\n\r\n    if (this.sort) {\r\n      let i = 0\r\n      for (; i < this.inputQueue.length; i++) {\r\n        if (this.inputQueue[i] > timestamp) {\r\n          this.inputQueue.splice(i, 0, timestamp)\r\n          break\r\n        }\r\n      }\r\n      if (i === this.inputQueue.length) {\r\n        this.inputQueue.push(timestamp)\r\n      }\r\n    }\r\n\r\n    try {\r\n      this.decoder!.decode(videoChunk)\r\n      if (this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_NO_PTS) {\r\n        this.dtsQueue.push(static_cast<double>(avRescaleQ2(avpacket.dts, addressof(avpacket.timeBase), AV_TIME_BASE_Q)))\r\n      }\r\n    }\r\n    catch (error) {\r\n      logger.error(`decode error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    if (key) {\r\n      this.keyframeRequire = false\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    if (this.currentError) {\r\n      logger.error(`flush error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n    try {\r\n      await this.decoder!.flush()\r\n    }\r\n    catch (error) {\r\n      logger.error(`flush error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n    if (this.sort) {\r\n      while (this.outputQueue.length) {\r\n        const frame = this.outputQueue.shift()!\r\n        if (this.options.onReceiveVideoFrame) {\r\n          this.options.onReceiveVideoFrame(frame)\r\n        }\r\n        else {\r\n          frame.close()\r\n        }\r\n      }\r\n    }\r\n    this.keyframeRequire = true\r\n    return 0\r\n  }\r\n\r\n  public close() {\r\n    if (this.decoder && this.decoder.state !== 'closed') {\r\n      this.decoder.close()\r\n    }\r\n    this.decoder = undefined\r\n    this.currentError = null\r\n\r\n    if (this.outputQueue?.length) {\r\n      this.outputQueue.forEach((frame) => {\r\n        frame.close()\r\n      })\r\n    }\r\n\r\n    this.inputQueue.length = 0\r\n    this.outputQueue.length = 0\r\n  }\r\n\r\n  public getQueueLength() {\r\n    return this.decoder?.decodeQueueSize ?? 0\r\n  }\r\n\r\n  public setSkipFrameDiscard(discard: number) {\r\n\r\n  }\r\n\r\n  static async isSupported(parameters: pointer<AVCodecParameters>, enableHardwareAcceleration: boolean) {\r\n    let extradata: Uint8Array | undefined\r\n    if (parameters.extradata !== nullptr) {\r\n      extradata = mapUint8Array(parameters.extradata, reinterpret_cast<size>(parameters.extradataSize)).slice()\r\n    }\r\n    const config = {\r\n      codec: getVideoCodec(parameters),\r\n      codedWidth: parameters.width,\r\n      codedHeight: parameters.height,\r\n      description: (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) ? undefined : extradata,\r\n      hardwareAcceleration: getHardwarePreference(enableHardwareAcceleration ?? true)\r\n    }\r\n\r\n    if (!config.description) {\r\n      // description 不是 arraybuffer 会抛错\r\n      delete config.description\r\n    }\r\n\r\n    try {\r\n      const support = await VideoDecoder.isConfigSupported(config)\r\n      return support.supported\r\n    }\r\n    catch (error) {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia Webcodec video encoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket, { AVPacketFlags, AVPacketPool } from 'avutil/struct/avpacket'\r\nimport { AVCodecID } from 'avutil/codec'\r\nimport AVCodecParameters, { AVCodecParameterFlags } from 'avutil/struct/avcodecparameters'\r\nimport AVFrame, { AVFramePool, AVFrameRef } from 'avutil/struct/avframe'\r\nimport getVideoCodec from 'avutil/function/getVideoCodec'\r\nimport { getHardwarePreference } from 'avutil/function/getHardwarePreference'\r\nimport { avQ2D, avRescaleQ, avRescaleQ2 } from 'avutil/util/rational'\r\nimport { avframe2VideoFrame } from 'avutil/function/avframe2VideoFrame'\r\nimport { createAVPacket, getAVPacketData } from 'avutil/util/avpacket'\r\nimport { getAVPixelFormatDescriptor, AVPixelFormatFlags } from 'avutil/pixelFormatDescriptor'\r\nimport { createAVFrame, destroyAVFrame, refAVFrame } from 'avutil/util/avframe'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport encodedVideoChunk2AVPacket from 'avutil/function/encodedVideoChunk2AVPacket'\r\nimport { mapColorPrimaries, mapColorSpace, mapColorTrc } from 'avutil/function/videoFrame2AVFrame'\r\nimport browser from 'common/util/browser'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\n\r\nimport * as av1 from 'avutil/codecs/av1'\r\nimport * as vp9 from 'avutil/codecs/vp9'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { AV_TIME_BASE_Q, NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport { AVPixelFormat } from 'avutil/pixfmt'\r\n\r\nexport type WebVideoEncoderOptions = {\r\n  onReceiveAVPacket: (avpacket: pointer<AVPacket>) => void\r\n  onError: (error?: Error) => void\r\n  enableHardwareAcceleration?: boolean\r\n  avpacketPool?: AVPacketPool\r\n  avframePool?: AVFramePool\r\n}\r\n\r\n// chrome bug: https://issues.chromium.org/issues/357902526\r\nfunction fixChromeConstraintSetFlagsBug(desc: Uint8Array) {\r\n  const constraintSetFlag = desc[2]\r\n  // 如果 constraint_set_flags 字节二进制 第 0 位或第 1 位值为 1\r\n  // 说明取值错误，忽略该字段避免解码异常\r\n  if (constraintSetFlag !== undefined && constraintSetFlag.toString(2).slice(-2).includes('1')) {\r\n    desc[2] = 0\r\n  }\r\n}\r\n\r\nexport default class WebVideoEncoder {\r\n\r\n  private encoder: VideoEncoder | undefined\r\n\r\n  private options: WebVideoEncoderOptions\r\n  private parameters: pointer<AVCodecParameters> = nullptr\r\n  private timeBase: Rational | undefined\r\n\r\n  private currentError: Error | null = null\r\n\r\n  private avframeMap: Map<int64, pointer<AVFrame>>\r\n\r\n  private framerateTimebase: Rational | undefined\r\n\r\n  private inputCounter: int64 = 0n\r\n  private outputCounter: int64 = 0n\r\n\r\n  private extradata: Uint8Array | undefined\r\n\r\n  constructor(options: WebVideoEncoderOptions) {\r\n\r\n    this.options = options\r\n\r\n    this.avframeMap = new Map()\r\n  }\r\n\r\n  private async output(chunk: EncodedVideoChunk, metadata?: EncodedVideoChunkMetadata & {\r\n    svc?: {\r\n      temporalLayerId: number\r\n    }\r\n    alphaSideData?: BufferSource\r\n  }) {\r\n\r\n    const pts = static_cast<int64>(chunk.timestamp as uint32)\r\n    const dts = avRescaleQ(this.outputCounter++, this.framerateTimebase!, this.timeBase!)\r\n\r\n    const avpacket = this.options.avpacketPool ? this.options.avpacketPool.alloc() : createAVPacket()\r\n\r\n    if (!this.extradata) {\r\n      if (metadata?.decoderConfig?.description) {\r\n        let buffer: Uint8Array\r\n        if (metadata.decoderConfig.description instanceof ArrayBuffer) {\r\n          buffer = new Uint8Array(metadata.decoderConfig.description)\r\n        }\r\n        else {\r\n          buffer = new Uint8Array(metadata.decoderConfig.description.buffer)\r\n        }\r\n        if (browser.chrome\r\n          && !browser.checkVersion(browser.version, '130', true)\r\n          && this.parameters.codecId === AVCodecID.AV_CODEC_ID_H264\r\n        ) {\r\n          fixChromeConstraintSetFlagsBug(buffer)\r\n        }\r\n        this.extradata = buffer\r\n      }\r\n      if (metadata?.decoderConfig?.colorSpace) {\r\n        this.parameters.colorSpace = mapColorSpace(metadata.decoderConfig.colorSpace.matrix || '')\r\n        this.parameters.colorPrimaries = mapColorPrimaries(metadata.decoderConfig.colorSpace.primaries || '')\r\n        this.parameters.colorTrc = mapColorTrc(metadata.decoderConfig.colorSpace.transfer || '')\r\n      }\r\n\r\n      encodedVideoChunk2AVPacket(chunk, avpacket)\r\n\r\n      if (!this.extradata) {\r\n        let extradata: Uint8Array | undefined\r\n        if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_AV1) {\r\n          extradata = av1.generateExtradata(this.parameters, getAVPacketData(avpacket))\r\n        }\r\n        else if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n          extradata = vp9.generateExtradata(this.parameters)\r\n        }\r\n        if (extradata) {\r\n          this.extradata = extradata\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      encodedVideoChunk2AVPacket(chunk, avpacket, metadata)\r\n    }\r\n\r\n    avpacket.pts = pts\r\n    avpacket.dts = dts\r\n    avpacket.timeBase.den = this.timeBase!.den\r\n    avpacket.timeBase.num = this.timeBase!.num\r\n    avpacket.duration = avRescaleQ(1n, this.framerateTimebase!, this.timeBase!)\r\n\r\n    if (this.parameters.codecId === AVCodecID.AV_CODEC_ID_H264\r\n      || this.parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n      || this.parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n    ) {\r\n      if (this.parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) {\r\n        avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB\r\n      }\r\n      else {\r\n        avpacket.flags &= ~AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB\r\n      }\r\n    }\r\n\r\n    this.options.onReceiveAVPacket(avpacket)\r\n\r\n    const avframe = this.avframeMap.get(pts)\r\n\r\n    if (avframe) {\r\n      this.options.avframePool\r\n        ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n        : destroyAVFrame(avframe)\r\n    }\r\n    this.avframeMap.delete(pts)\r\n  }\r\n\r\n  private error(error: Error) {\r\n    this.currentError = error\r\n    this.options.onError(error)\r\n  }\r\n\r\n  public async open(parameters: pointer<AVCodecParameters>, timeBase: Rational): Promise<int32> {\r\n    this.currentError = null\r\n\r\n    const descriptor = getAVPixelFormatDescriptor(parameters.format as AVPixelFormat)\r\n\r\n    // webcodecs 目前还不支持 hdr\r\n    if (!descriptor || descriptor.comp[0].depth > 8) {\r\n      logger.error(`format ${parameters.format} not support`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    const config: VideoEncoderConfig = {\r\n      codec: getVideoCodec(parameters),\r\n      width: parameters.width,\r\n      height: parameters.height,\r\n      bitrate: static_cast<double>(parameters.bitrate),\r\n      framerate: avQ2D(parameters.framerate),\r\n      hardwareAcceleration: getHardwarePreference(this.options.enableHardwareAcceleration ?? true),\r\n      latencyMode: parameters.videoDelay ? 'quality' : 'realtime',\r\n      alpha: descriptor && (descriptor.flags & AVPixelFormatFlags.ALPHA) ? 'keep' : 'discard'\r\n    }\r\n\r\n    if (parameters.codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n      config.avc = {\r\n        format: (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) ? 'annexb' : 'avc'\r\n      }\r\n    }\r\n    else if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n      // @ts-ignore\r\n      config.hevc = {\r\n        format: (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) ? 'annexb' : 'hevc'\r\n      }\r\n    }\r\n    else if (parameters.codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n      // @ts-ignore\r\n      config.vvc = {\r\n        format: (parameters.flags & AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB) ? 'annexb' : 'vvc'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const support = await VideoEncoder.isConfigSupported(config)\r\n      if (!support.supported) {\r\n        logger.error('not support')\r\n        return errorType.INVALID_PARAMETERS\r\n      }\r\n    }\r\n    catch (error) {\r\n      logger.error(`${error}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    if (this.encoder && this.encoder.state !== 'closed') {\r\n      this.encoder.close()\r\n    }\r\n\r\n    this.encoder = new VideoEncoder({\r\n      output: this.output.bind(this),\r\n      error: this.error.bind(this)\r\n    })\r\n\r\n    this.encoder.reset()\r\n    this.encoder.configure(config)\r\n\r\n    if (this.currentError) {\r\n      logger.error(`open video encoder error, ${this.currentError}`)\r\n      return errorType.CODEC_NOT_SUPPORT\r\n    }\r\n\r\n    this.parameters = parameters\r\n    this.timeBase = timeBase\r\n    this.inputCounter = 0n\r\n    this.outputCounter = 0n\r\n    this.framerateTimebase = {\r\n      den: parameters.framerate.num,\r\n      num: parameters.framerate.den\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public encode(frame: VideoFrame | pointer<AVFrame>, key: boolean): int32 {\r\n\r\n    if (this.currentError) {\r\n      logger.error(`encode error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n\r\n    let pts = avRescaleQ(this.inputCounter, this.framerateTimebase!, this.timeBase!)\r\n\r\n    if (isPointer(frame) && frame.pts !== NOPTS_VALUE_BIGINT && frame.timeBase.den !== 0 && frame.timeBase.num !== 0\r\n      || !isPointer(frame) && frame.timestamp >= 0\r\n    ) {\r\n      pts = isPointer(frame)\r\n        ? avRescaleQ2(\r\n          frame.pts,\r\n          addressof(frame.timeBase),\r\n          this.timeBase!\r\n        )\r\n        : avRescaleQ(\r\n          static_cast<int64>(frame.timestamp as uint32),\r\n          AV_TIME_BASE_Q,\r\n          this.timeBase!\r\n        )\r\n    }\r\n\r\n    if (isPointer(frame)) {\r\n      const cache = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n      refAVFrame(cache, frame)\r\n      cache.pts = pts\r\n      this.avframeMap.set(cache.pts, cache)\r\n      cache.duration = avRescaleQ(1n, this.framerateTimebase!, cache.timeBase)\r\n      frame = avframe2VideoFrame(cache, pts)\r\n    }\r\n    else {\r\n      frame = new VideoFrame(frame, {\r\n        timestamp: static_cast<double>(pts),\r\n        duration: static_cast<double>(avRescaleQ(1n, this.framerateTimebase!, this.timeBase!))\r\n      })\r\n    }\r\n    try {\r\n      this.encoder!.encode(frame, {\r\n        keyFrame: key\r\n      })\r\n      frame.close()\r\n      this.inputCounter++\r\n      return 0\r\n    }\r\n    catch (error) {\r\n      logger.error(`encode error, ${error}`)\r\n      frame.close()\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public async flush(): Promise<int32> {\r\n    if (this.currentError) {\r\n      logger.error(`flush error, ${this.currentError}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n    try {\r\n      await this.encoder!.flush()\r\n      return 0\r\n    }\r\n    catch (error) {\r\n      logger.error(`flush error, ${error}`)\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public close() {\r\n    if (this.encoder) {\r\n      if (this.encoder.state !== 'closed') {\r\n        this.encoder.close()\r\n      }\r\n    }\r\n    if (this.avframeMap.size) {\r\n      this.avframeMap.forEach((avframe) => {\r\n        this.options.avframePool\r\n          ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n          : destroyAVFrame(avframe)\r\n      })\r\n    }\r\n    this.encoder = undefined\r\n  }\r\n\r\n  public getExtraData() {\r\n    return this.extradata\r\n  }\r\n\r\n  public getColorSpace() {\r\n    return {\r\n      colorSpace: this.parameters.colorSpace,\r\n      colorPrimaries: this.parameters.colorPrimaries,\r\n      colorTrc: this.parameters.colorTrc,\r\n    }\r\n  }\r\n\r\n  public getQueueLength() {\r\n    return this.encoder?.encodeQueueSize ?? 0\r\n  }\r\n\r\n  static async isSupported(parameters: pointer<AVCodecParameters>, enableHardwareAcceleration: boolean) {\r\n    const descriptor = getAVPixelFormatDescriptor(parameters.format as AVPixelFormat)\r\n    // webcodecs 目前还不支持 hdr\r\n    if (!descriptor || descriptor.comp[0].depth > 8) {\r\n      return false\r\n    }\r\n    const config: VideoEncoderConfig = {\r\n      codec: getVideoCodec(parameters),\r\n      width: parameters.width,\r\n      height: parameters.height,\r\n      bitrate: static_cast<double>(parameters.bitrate),\r\n      framerate: avQ2D(parameters.framerate),\r\n      hardwareAcceleration: getHardwarePreference(enableHardwareAcceleration ?? true),\r\n      latencyMode: parameters.videoDelay ? 'quality' : 'realtime',\r\n      alpha: descriptor && (descriptor.flags & AVPixelFormatFlags.ALPHA) ? 'keep' : 'discard'\r\n    }\r\n\r\n    try {\r\n      const support = await VideoEncoder.isConfigSupported(config)\r\n      return support.supported\r\n    }\r\n    catch (error) {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","\r\n/*\r\n * libmedia AVFilter\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVFrame, { AVFramePool, AVFrameRef } from 'avutil/struct/avframe'\r\nimport { destroyAVFrame } from 'avutil/util/avframe'\r\nimport IPCPort, { NOTIFY, REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport * as array from 'common/util/array'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport * as is from 'common/util/is'\r\nimport AVOutputNode from './AVOutputNode'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport interface AVFilterNodeOptions {\r\n  avframePool?: AVFramePool\r\n}\r\n\r\nexport class AVFilterNodePort extends IPCPort {\r\n\r\n  private channel: MessageChannel | MessagePort\r\n\r\n  private next: AVFilterNodePort | undefined\r\n\r\n  constructor(channel: MessageChannel | MessagePort) {\r\n    super(channel instanceof MessageChannel ? channel.port1 : channel)\r\n    this.channel = channel\r\n  }\r\n\r\n  public connect(port: AVFilterNodePort) {\r\n    this.off()\r\n    port.off()\r\n\r\n    this.on(REQUEST, async (request: RpcMessage) => {\r\n      try {\r\n        const result = await port.request<pointer<AVFrame> | VideoFrame>(request.method!, request.params)\r\n        this.reply(request, result, undefined, (isPointer(result) || is.number(result) || request.method !== 'pull') ? undefined : [result])\r\n      }\r\n      catch (error) {\r\n        this.reply(request, null, error as Data)\r\n      }\r\n    })\r\n    this.on(NOTIFY, (message: RpcMessage) => {\r\n      port.notify(message.method!, message.params)\r\n    })\r\n\r\n    port.on(REQUEST, async (request: RpcMessage) => {\r\n      try {\r\n        const result = await this.request<pointer<AVFrame> | VideoFrame>(request.method!, request.params)\r\n        port.reply(request, result, undefined, (isPointer(result) || is.number(result) || request.method !== 'pull') ? undefined : [result])\r\n      }\r\n      catch (error) {\r\n        port.reply(request, null, error as Data)\r\n      }\r\n    })\r\n    port.on(NOTIFY, (message: RpcMessage) => {\r\n      this.notify(message.method!, message.params)\r\n    })\r\n\r\n    this.next = port\r\n  }\r\n\r\n  public disconnect() {\r\n    this.off()\r\n    if (this.next) {\r\n      this.next.off()\r\n    }\r\n    this.next = undefined\r\n  }\r\n\r\n  public getInnerPort() {\r\n    if (this.channel instanceof MessageChannel) {\r\n      return this.channel.port2\r\n    }\r\n  }\r\n}\r\n\r\nexport default abstract class AVFilterNode {\r\n\r\n  protected options: AVFilterNodeOptions\r\n\r\n  protected inputAVFilterNodePort: AVFilterNodePort[]\r\n  protected outputAVFilterNodePort: AVFilterNodePort[]\r\n\r\n  protected inputInnerNodePort: IPCPort[]\r\n  protected outputInnerNodePort: IPCPort[]\r\n\r\n  private currentOutput: (pointer<AVFrame> | VideoFrame)[]\r\n  private consumedCount: number\r\n  private pending: { resolve: (data?: any) => void, reject: () => void }[]\r\n\r\n  protected inputCount: number\r\n  protected outputCount: number\r\n\r\n  private inputConnectedMap: Map<any, number>\r\n  private outputConnectedMap: Map<any, number>\r\n\r\n  constructor(options: AVFilterNodeOptions, inputCount: number, outputCount: number) {\r\n    this.options = options\r\n    this.inputCount = inputCount\r\n    this.outputCount = outputCount\r\n\r\n    this.inputAVFilterNodePort = []\r\n    this.outputAVFilterNodePort = []\r\n\r\n    this.inputInnerNodePort = []\r\n    this.outputInnerNodePort = []\r\n\r\n    for (let i = 0; i < this.inputCount; i++) {\r\n      const port = new AVFilterNodePort(new MessageChannel())\r\n      this.inputAVFilterNodePort.push(port)\r\n      this.inputInnerNodePort.push(new IPCPort(port.getInnerPort()!))\r\n    }\r\n    for (let i = 0; i < this.outputCount; i++) {\r\n      const port = new AVFilterNodePort(new MessageChannel())\r\n      this.outputAVFilterNodePort.push(port)\r\n      this.outputInnerNodePort.push(new IPCPort(port.getInnerPort()!))\r\n    }\r\n\r\n    this.consumedCount = 0\r\n    this.pending = []\r\n    this.currentOutput = []\r\n\r\n    for (let i = 0; i < this.outputCount; i++) {\r\n      this.handlePull(this.outputInnerNodePort[i], i)\r\n    }\r\n\r\n    this.inputConnectedMap = new Map()\r\n    this.outputConnectedMap = new Map()\r\n  }\r\n\r\n  private handlePull(port: IPCPort, index: number) {\r\n    port.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'pull': {\r\n          if (this.consumedCount === 0) {\r\n            const input: (pointer<AVFrame> | VideoFrame)[] = []\r\n            this.currentOutput.length = 0\r\n            for (let i = 0; i < this.inputCount; i++) {\r\n              input.push(await this.inputInnerNodePort[i].request('pull', request.params))\r\n            }\r\n\r\n            await this.process(input, this.currentOutput, request.params)\r\n\r\n            input.forEach((frame) => {\r\n              if (is.number(frame) && frame < 0) {\r\n                return\r\n              }\r\n              if (isPointer(frame)) {\r\n                if (frame > 0) {\r\n                  this.options.avframePool ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(frame)) : destroyAVFrame(frame)\r\n                }\r\n              }\r\n              else {\r\n                frame.close()\r\n              }\r\n            })\r\n\r\n            port.reply(\r\n              request,\r\n              this.currentOutput[index],\r\n              undefined,\r\n              (isPointer(this.currentOutput[index])\r\n                || is.number(this.currentOutput[index])\r\n              )\r\n                ? undefined\r\n                : [this.currentOutput[index]]\r\n            )\r\n            this.consumedCount++\r\n\r\n            if (this.pending.length) {\r\n              this.pending.forEach((item) => {\r\n                item.resolve()\r\n              })\r\n              this.pending.length = 0\r\n            }\r\n            if (this.consumedCount === this.outputCount) {\r\n              this.consumedCount = 0\r\n              this.currentOutput.length = 0\r\n            }\r\n          }\r\n          else if (this.consumedCount === this.outputCount - 1) {\r\n            port.reply(\r\n              request,\r\n              this.currentOutput[index],\r\n              undefined,\r\n              (isPointer(this.currentOutput[index])\r\n                || is.number(this.currentOutput[index])\r\n              )\r\n                ? undefined\r\n                : [this.currentOutput[index]]\r\n            )\r\n            this.consumedCount = 0\r\n            this.currentOutput.length = 0\r\n          }\r\n          else {\r\n            await new Promise((resolve, reject) => {\r\n              this.pending.push({\r\n                resolve,\r\n                reject\r\n              })\r\n            })\r\n            port.reply(\r\n              request,\r\n              this.currentOutput[index],\r\n              undefined,\r\n              (isPointer(this.currentOutput[index])\r\n                || is.number(this.currentOutput[index])\r\n              )\r\n                ? undefined\r\n                : [this.currentOutput[index]]\r\n            )\r\n            this.consumedCount++\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  public getInputNodePort(index: number) {\r\n    return this.inputAVFilterNodePort[index]\r\n  }\r\n\r\n  public getOutputNodePort(index: number) {\r\n    return this.outputAVFilterNodePort[index]\r\n  }\r\n\r\n  public getInputCount() {\r\n    return this.inputCount\r\n  }\r\n\r\n  public getOutputCount() {\r\n    return this.outputCount\r\n  }\r\n\r\n  public getFreeInputNodePort() {\r\n\r\n    const used: number[] = []\r\n\r\n    this.inputConnectedMap.forEach((index, node) => {\r\n      used.push(index)\r\n    })\r\n\r\n    for (let i = 0; i < this.inputCount; i++) {\r\n      if (!array.has(used, i)) {\r\n        return {\r\n          index: i,\r\n          port: this.getInputNodePort(i)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getFreeOutputNodePort() {\r\n\r\n    const used: number[] = []\r\n\r\n    this.outputConnectedMap.forEach((index, node) => {\r\n      used.push(index)\r\n    })\r\n\r\n    for (let i = 0; i < this.outputCount; i++) {\r\n      if (!array.has(used, i)) {\r\n        return {\r\n          index: i,\r\n          port: this.getOutputNodePort(i)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public addInputPeer(node: any, index: number) {\r\n    this.inputConnectedMap.set(node, index)\r\n  }\r\n\r\n  public removeInputPeer(node: any) {\r\n    this.inputConnectedMap.delete(node)\r\n  }\r\n\r\n  public addOutputPeer(node: any, index: number) {\r\n    this.outputConnectedMap.set(node, index)\r\n  }\r\n\r\n  public removeOutputPeer(node: any) {\r\n    this.outputConnectedMap.delete(node)\r\n  }\r\n\r\n  public connect(node: AVFilterNode | AVOutputNode) {\r\n    if (this.outputConnectedMap.size === this.outputCount) {\r\n      throw new Error('all output has connected')\r\n    }\r\n\r\n    const output = this.getFreeOutputNodePort()!\r\n    const nextInput = node.getFreeInputNodePort()!\r\n\r\n    if (!nextInput) {\r\n      throw new Error('next node all input has connected')\r\n    }\r\n\r\n    output.port.connect(nextInput.port)\r\n\r\n    this.outputConnectedMap.set(node, output.index)\r\n    node.addInputPeer(this, nextInput.index)\r\n  }\r\n\r\n  private disconnectNode(node: any) {\r\n    if (!this.outputConnectedMap.has(node)) {\r\n      return\r\n    }\r\n    this.outputAVFilterNodePort[this.outputConnectedMap.get(node)!].disconnect()\r\n    this.outputConnectedMap.delete(node)\r\n\r\n    if (node instanceof AVFilterNode) {\r\n      node.removeInputPeer(this)\r\n    }\r\n  }\r\n\r\n  public disconnect(node?: any) {\r\n    if (node) {\r\n      return this.disconnectNode(node)\r\n    }\r\n    this.outputConnectedMap.forEach((index, node) => {\r\n      this.disconnectNode(node)\r\n    })\r\n  }\r\n\r\n  public abstract ready(): void | Promise<void>\r\n  public abstract destroy(): void | Promise<void>\r\n  public abstract process(inputs: (pointer<AVFrame> | VideoFrame | int32)[], outputs: (pointer<AVFrame> | VideoFrame | int32)[], options?: Data): void | Promise<void>\r\n}\r\n","import AVFilterNode, { AVFilterNodePort } from './AVFilterNode'\r\nimport AVOutputNode from './AVOutputNode'\r\n\r\nexport default class AVInputNode {\r\n\r\n  private nodePort: AVFilterNodePort\r\n\r\n  private outputNode: AVFilterNode | AVOutputNode | undefined\r\n\r\n  constructor(port: MessagePort) {\r\n    this.nodePort = new AVFilterNodePort(port)\r\n  }\r\n\r\n  public connect(node: AVFilterNode | AVOutputNode) {\r\n    const { port: nextPort, index } = node.getFreeInputNodePort()!\r\n    this.nodePort.connect(nextPort)\r\n    node.addInputPeer(this, index)\r\n    this.outputNode = node\r\n  }\r\n\r\n}\r\n","import AVFilterNode, { AVFilterNodePort } from './AVFilterNode'\r\nimport AVInputNode from './AVInputNode'\r\n\r\nexport default class AVOutputNode {\r\n\r\n  public nodePort: AVFilterNodePort\r\n\r\n  private inputNode: AVFilterNode | AVInputNode | undefined\r\n\r\n  constructor(port: MessagePort) {\r\n    this.nodePort = new AVFilterNodePort(port)\r\n  }\r\n\r\n  public getFreeInputNodePort() {\r\n    return {\r\n      index: 0,\r\n      port: this.nodePort\r\n    }\r\n  }\r\n\r\n  public addInputPeer(node: AVFilterNode | AVInputNode) {\r\n    this.inputNode = node\r\n  }\r\n\r\n}\r\n","import { AV_TIME_BASE_Q } from 'avutil/constant'\r\nimport AVFilterNode, { AVFilterNodeOptions } from './AVFilterNode'\r\nimport AVFrame, { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { createAVFrame, destroyAVFrame, refAVFrame } from 'avutil/util/avframe'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { IOError } from 'common/io/error'\r\nimport * as is from 'common/util/is'\r\n\r\nexport interface RangeFilterNodeOptions extends AVFilterNodeOptions {\r\n  /**\r\n   * 微秒时间戳\r\n   */\r\n  start: int64\r\n  /**\r\n   * 微秒时间戳\r\n   */\r\n  end: int64\r\n}\r\n\r\nexport default class RangeFilterNode extends AVFilterNode {\r\n  declare options: RangeFilterNodeOptions\r\n\r\n  constructor(options: RangeFilterNodeOptions) {\r\n    super(options, 1, 1)\r\n  }\r\n\r\n  public async ready() {\r\n\r\n  }\r\n\r\n  public async destroy() {\r\n\r\n  }\r\n\r\n  public async process(inputs: (pointer<AVFrame> | VideoFrame | int32)[], outputs: (pointer<AVFrame> | VideoFrame | int32)[]) {\r\n    let avframe = inputs[0]\r\n\r\n    if (is.number(avframe) && avframe < 0) {\r\n      outputs[0] = avframe\r\n      return\r\n    }\r\n\r\n    let pts = isPointer(avframe)\r\n      ? avRescaleQ2(\r\n        avframe.pts,\r\n        addressof(avframe.timeBase),\r\n        AV_TIME_BASE_Q\r\n      )\r\n      : static_cast<int64>((avframe as VideoFrame).timestamp as uint32)\r\n\r\n    if (pts < this.options.start) {\r\n      while (true) {\r\n        const next = await this.inputInnerNodePort[0].request<pointer<AVFrame> | VideoFrame>('pull')\r\n        if (is.number(next) && next < 0) {\r\n          outputs[0] = next\r\n          return\r\n        }\r\n        pts = isPointer(next)\r\n          ? avRescaleQ2(\r\n            next.pts,\r\n            addressof(next.timeBase),\r\n            AV_TIME_BASE_Q\r\n          )\r\n          : static_cast<int64>(next.timestamp as uint32)\r\n        if (pts >= this.options.start) {\r\n          outputs[0] = next\r\n          return\r\n        }\r\n        else {\r\n          if (isPointer(next)) {\r\n            this.options.avframePool ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(next)) : destroyAVFrame(next)\r\n          }\r\n          else {\r\n            next.close()\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (pts > this.options.end && this.options.end >= this.options.start) {\r\n      outputs[0] = IOError.END\r\n      return\r\n    }\r\n    else {\r\n      if (isPointer(avframe)) {\r\n        const out = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n        refAVFrame(out, avframe)\r\n        outputs[0] = out\r\n      }\r\n      else {\r\n        outputs[0] = (avframe as VideoFrame).clone()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Resampler, { PCMParameters } from 'audioresample/Resampler'\r\nimport AVFilterNode, { AVFilterNodeOptions } from '../AVFilterNode'\r\nimport AVFrame, { AV_NUM_DATA_POINTERS } from 'avutil/struct/avframe'\r\nimport AVPCMBuffer from 'avutil/struct/avpcmbuffer'\r\nimport { createAVFrame, refAVFrame, unrefAVFrame } from 'avutil/util/avframe'\r\nimport { avFree, avFreep, avMalloc, avMallocz } from 'avutil/util/mem'\r\nimport { sampleFormatIsPlanar } from 'avutil/util/sample'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport * as errorType from 'avutil/error'\r\nimport { avbufferCreate } from 'avutil/util/avbuffer'\r\nimport { NOPTS_VALUE } from 'avutil/constant'\r\nimport * as logger from 'common/util/logger'\r\nimport * as is from 'common/util/is'\r\nimport compileResource from 'avutil/function/compileResource'\r\n\r\nexport interface ResampleFilterNodeOptions extends AVFilterNodeOptions {\r\n  resource: WebAssemblyResource | ArrayBuffer\r\n  output: PCMParameters\r\n}\r\n\r\nexport default class ResampleFilterNode extends AVFilterNode {\r\n  declare options: ResampleFilterNodeOptions\r\n\r\n  private resampler: Resampler | undefined\r\n\r\n  private pcm: pointer<AVPCMBuffer> = nullptr\r\n\r\n  constructor(options: ResampleFilterNodeOptions) {\r\n    super(options, 1, 1)\r\n  }\r\n\r\n  public async ready() {\r\n    this.pcm = reinterpret_cast<pointer<AVPCMBuffer>>(avMallocz(sizeof(AVPCMBuffer)))\r\n  }\r\n\r\n  public async destroy() {\r\n    if (this.pcm) {\r\n      if (this.pcm.data) {\r\n        avFreep(addressof(this.pcm.data[0]))\r\n        avFreep(reinterpret_cast<pointer<pointer<void>>>(addressof(this.pcm.data)))\r\n      }\r\n      avFree(this.pcm)\r\n    }\r\n    if (this.resampler) {\r\n      this.resampler.close()\r\n      this.resampler = undefined\r\n    }\r\n  }\r\n\r\n  public async process(inputs: (pointer<AVFrame> | int32)[], outputs: (pointer<AVFrame> | int32)[]) {\r\n    const avframe = inputs[0] as pointer<AVFrame>\r\n\r\n    if (avframe < 0) {\r\n      outputs[0] = avframe\r\n      return\r\n    }\r\n\r\n    const out = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n\r\n    if (avframe.sampleRate !== this.options.output.sampleRate\r\n      || avframe.chLayout.nbChannels !== this.options.output.channels\r\n      || avframe.format !== this.options.output.format && this.options.output.format !== NOPTS_VALUE\r\n    ) {\r\n      if (this.resampler) {\r\n        const currentInput = this.resampler.getInputPCMParameters()!\r\n        if (currentInput.channels !== avframe.chLayout.nbChannels\r\n          || currentInput.sampleRate !== avframe.sampleRate\r\n          || currentInput.format !== avframe.format\r\n        ) {\r\n          this.resampler.close()\r\n          this.resampler = undefined\r\n        }\r\n      }\r\n      if (!this.resampler) {\r\n        let resource = this.options.resource\r\n        if (is.arrayBuffer(resource)) {\r\n          resource = await compileResource(resource)\r\n        }\r\n        this.resampler = new Resampler({\r\n          resource\r\n        })\r\n        const ret = await this.resampler.open(\r\n          {\r\n            channels: avframe.chLayout.nbChannels,\r\n            sampleRate: avframe.sampleRate,\r\n            format: avframe.format\r\n          },\r\n          {\r\n            channels: this.options.output.channels,\r\n            sampleRate: this.options.output.sampleRate,\r\n            format: this.options.output.format === NOPTS_VALUE ? avframe.format : this.options.output.format\r\n          }\r\n        )\r\n        if (ret) {\r\n          logger.error(`open resampler failed, error ${ret}`)\r\n          outputs[0] = errorType.FORMAT_NOT_SUPPORT\r\n          return\r\n        }\r\n      }\r\n\r\n      this.resampler.resample(avframe.extendedData, this.pcm, avframe.nbSamples)\r\n\r\n      out.format = this.options.output.format === NOPTS_VALUE ? avframe.format : this.options.output.format\r\n      out.nbSamples = this.pcm.nbSamples\r\n      out.sampleRate = this.pcm.sampleRate\r\n      out.chLayout.nbChannels = this.pcm.channels\r\n      out.linesize[0] = this.pcm.linesize\r\n\r\n      out.pts = avframe.pts\r\n      out.duration = avframe.duration\r\n      out.pktDts = avframe.pktDts\r\n      out.timeBase = avframe.timeBase\r\n\r\n      const planar = sampleFormatIsPlanar(out.format)\r\n      const planes = planar ? out.chLayout.nbChannels : 1\r\n\r\n      if (planes > AV_NUM_DATA_POINTERS) {\r\n        out.extendedData = reinterpret_cast<pointer<pointer<uint8>>>(avMalloc(planes * reinterpret_cast<int32>(sizeof(accessof(out.extendedData)))))\r\n        if (!out.extendedData) {\r\n          avFreep(reinterpret_cast<pointer<pointer<uint8>>>(addressof(out.extendedData)))\r\n          outputs[0] = errorType.NO_MEMORY\r\n          return\r\n        }\r\n      }\r\n      else {\r\n        out.extendedData = addressof(out.data)\r\n      }\r\n\r\n      for (let i = 0; i < Math.min(planes, AV_NUM_DATA_POINTERS); i++) {\r\n        if (i === 0) {\r\n          out.buf[i] = avbufferCreate(this.pcm.data[i], this.pcm.linesize * (planar ? this.pcm.channels : 1))\r\n          if (!out.buf[i]) {\r\n            unrefAVFrame(out)\r\n            outputs[0] = errorType.NO_MEMORY\r\n            return\r\n          }\r\n        }\r\n        out.extendedData[i] = out.data[i] = this.pcm.data[i]\r\n        this.pcm.data[i] = nullptr\r\n      }\r\n\r\n      for (let i = 0; i < planes - AV_NUM_DATA_POINTERS; i++) {\r\n        out.extendedData[i + AV_NUM_DATA_POINTERS] = this.pcm.data[i]\r\n        this.pcm.data[i] = nullptr\r\n      }\r\n      this.pcm.maxnbSamples = 0\r\n      outputs[0] = out\r\n    }\r\n    else {\r\n      refAVFrame(out, avframe)\r\n      outputs[0] = out\r\n    }\r\n  }\r\n}\r\n","import RangeFilterNode from './RangeFilterNode'\r\nimport ResampleFilterNode from './audio/ResampleFilterNode'\r\nimport FramerateFilterNode from './video/FramerateFilterNode'\r\nimport ScaleFilterNode from './video/ScaleFilterNode'\r\nimport { AVFramePool } from 'avutil/struct/avframe'\r\nimport * as logger from 'common/util/logger'\r\n\r\ntype ConstructorParameters<T extends abstract new (...args: any) => any> =\r\n  T extends new (...args: infer P) => any ? P : never\r\n\r\ntype FirstConstructorParameter<T extends abstract new (...args: any) => any> =\r\n  ConstructorParameters<T>[0]\r\n\r\nexport type GraphNodeType = 'resampler' | 'scaler' | 'range' | 'framerate'\r\n\r\ntype GraphNodeType2AVFilterConstructor<T extends GraphNodeType> =\r\n  T extends 'resampler'\r\n    ? typeof ResampleFilterNode\r\n    : T extends 'scaler'\r\n      ? typeof ScaleFilterNode\r\n      : T extends 'range'\r\n        ? typeof RangeFilterNode\r\n        : T extends 'framerate'\r\n          ? typeof FramerateFilterNode\r\n          : never\r\n\r\ntype GraphNodeType2AVFilter<T extends GraphNodeType> =\r\n  T extends 'resampler'\r\n    ? ResampleFilterNode\r\n    : T extends 'scaler'\r\n      ? ScaleFilterNode\r\n      : T extends 'range'\r\n        ? RangeFilterNode\r\n        : T extends 'framerate'\r\n          ? FramerateFilterNode\r\n          : never\r\n\r\ntype AVFilterGraphFilterOptions<T extends GraphNodeType> = FirstConstructorParameter<GraphNodeType2AVFilterConstructor<T>>\r\n\r\nexport interface AVFilterGraphDesVertex<T extends GraphNodeType> {\r\n  id: number\r\n  type: T\r\n  options: AVFilterGraphFilterOptions<T>\r\n}\r\n\r\nexport interface AVFilterGraphVertex<T extends GraphNodeType> {\r\n  id: number\r\n  filter: GraphNodeType2AVFilter<T>\r\n  children: AVFilterGraphVertex<GraphNodeType>[]\r\n  parents: AVFilterGraphVertex<GraphNodeType>[]\r\n}\r\n\r\nexport interface FilterGraphDes {\r\n  vertices: AVFilterGraphDesVertex<GraphNodeType>[]\r\n  edges: { parent: number, child: number }[]\r\n}\r\n\r\nexport interface FilterGraphPortDes {\r\n  port: MessagePort\r\n  id: number\r\n}\r\n\r\nexport interface FilterGraph {\r\n  vertices: AVFilterGraphVertex<GraphNodeType>[]\r\n  edges: { parent: number, child: number }[]\r\n  inputs: AVFilterGraphVertex<GraphNodeType>[]\r\n  outputs: AVFilterGraphVertex<GraphNodeType>[]\r\n}\r\n\r\nfunction createFilter(vertex: AVFilterGraphDesVertex<GraphNodeType>, avframePool?: AVFramePool) {\r\n  const options = vertex.options\r\n  if (avframePool) {\r\n    options.avframePool = avframePool\r\n  }\r\n\r\n  switch (vertex.type) {\r\n    case 'resampler':\r\n      return new ResampleFilterNode(options as AVFilterGraphFilterOptions<'resampler'>)\r\n    case 'scaler':\r\n      return new ScaleFilterNode(options as AVFilterGraphFilterOptions<'scaler'>)\r\n    case 'range':\r\n      return new RangeFilterNode(options as AVFilterGraphFilterOptions<'range'>)\r\n    case 'framerate':\r\n      return new FramerateFilterNode(options as AVFilterGraphFilterOptions<'framerate'>)\r\n    default:\r\n      throw new Error(`invalid GraphNodeType, ${vertex.type}`)\r\n  }\r\n}\r\n\r\nlet id = 0\r\nexport function createGraphDesVertex<T extends GraphNodeType>(type: T, options: AVFilterGraphFilterOptions<T>): AVFilterGraphDesVertex<T> {\r\n  return {\r\n    id: id++,\r\n    type,\r\n    options\r\n  }\r\n}\r\n\r\nexport function createFilterGraph(des: FilterGraphDes, avframePool?: AVFramePool): FilterGraph {\r\n  const vertices: AVFilterGraphVertex<GraphNodeType>[] = []\r\n  const inputs: AVFilterGraphVertex<GraphNodeType>[] = []\r\n  const outputs: AVFilterGraphVertex<GraphNodeType>[] = []\r\n\r\n  const map: Map<number, AVFilterGraphVertex<GraphNodeType>> = new Map()\r\n\r\n  const hasChildMap: Map<number, boolean> = new Map()\r\n  const hasParentMap: Map<number, boolean> = new Map()\r\n\r\n  des.vertices.forEach((vertex) => {\r\n    const node: AVFilterGraphVertex<GraphNodeType> = {\r\n      id: vertex.id,\r\n      filter: createFilter(vertex, avframePool),\r\n      children: [],\r\n      parents: []\r\n    }\r\n    map.set(node.id, node)\r\n    vertices.push(node)\r\n  })\r\n\r\n  des.edges.forEach((edge, index) => {\r\n    const parent = map.get(edge.parent)!\r\n    const child = map.get(edge.child)!\r\n\r\n    if (!parent) {\r\n      logger.fatal(`${index} edge parent(${edge.parent}) not found`)\r\n    }\r\n    if (!child) {\r\n      logger.fatal(`${index} edge child(${edge.child}) not found`)\r\n    }\r\n    parent.children.push(child)\r\n    child.parents.push(parent)\r\n    hasChildMap.set(parent.id, true)\r\n    hasParentMap.set(child.id, true)\r\n    parent.filter.connect(child.filter)\r\n  })\r\n\r\n  des.vertices.forEach((vertex) => {\r\n    if (!hasParentMap.has(vertex.id)) {\r\n      inputs.push(map.get(vertex.id)!)\r\n    }\r\n    if (!hasChildMap.has(vertex.id)) {\r\n      outputs.push(map.get(vertex.id)!)\r\n    }\r\n  })\r\n\r\n  return {\r\n    vertices,\r\n    edges: des.edges,\r\n    inputs,\r\n    outputs\r\n  }\r\n}\r\n\r\nexport function checkFilterGraphInvalid(graph: FilterGraph, inputs: FilterGraphPortDes[], output: FilterGraphPortDes[]) {\r\n  const inputsMap: Map<number, number> = new Map()\r\n  const outputsMap: Map<number, number> = new Map()\r\n\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    if (inputsMap.has(inputs[i].id)) {\r\n      inputsMap.set(inputs[i].id, inputsMap.get(inputs[i].id)! + 1)\r\n    }\r\n    else {\r\n      inputsMap.set(inputs[i].id, 1)\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < output.length; i++) {\r\n    if (outputsMap.has(output[i].id)) {\r\n      outputsMap.set(output[i].id, outputsMap.get(output[i].id)! + 1)\r\n    }\r\n    else {\r\n      outputsMap.set(output[i].id, 1)\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < graph.inputs.length; i++) {\r\n    if (graph.inputs[i].filter.getInputCount() > (inputsMap.get(graph.inputs[i].id) ?? 0)) {\r\n      logger.error(`input filter(${graph.inputs[i].id}) only has ${inputsMap.get(graph.inputs[i].id)} input channel port`)\r\n      return false\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < graph.outputs.length; i++) {\r\n    if (graph.outputs[i].filter.getOutputCount() > (outputsMap.get(graph.outputs[i].id) ?? 0)) {\r\n      logger.error(`output filter(${graph.outputs[i].id}) only has ${outputsMap.get(graph.outputs[i].id)} output channel port`)\r\n      return false\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < graph.vertices.length; i++) {\r\n    if (graph.vertices[i].children.length && graph.vertices[i].parents.length) {\r\n      if (graph.vertices[i].filter.getOutputCount() !== graph.vertices[i].children.length) {\r\n        logger.error(`filter(${graph.vertices[i].id}) only has ${graph.vertices[i].children.length} output channel port`)\r\n        return false\r\n      }\r\n      if (graph.vertices[i].filter.getInputCount() !== graph.vertices[i].parents.length) {\r\n        logger.error(`filter(${graph.vertices[i].id}) only has ${graph.vertices[i].parents.length} input channel port`)\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","import AVFilterNode, { AVFilterNodeOptions } from '../AVFilterNode'\r\nimport AVFrame, { AVFrameRef } from 'avutil/struct/avframe'\r\nimport * as is from 'common/util/is'\r\nimport { createAVFrame, destroyAVFrame, refAVFrame } from 'avutil/util/avframe'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { avRescaleQ, avRescaleQ2 } from 'avutil/util/rational'\r\nimport { AV_TIME_BASE_Q } from 'avutil/constant'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\n\r\nexport interface FramerateFilterNodeOptions extends AVFilterNodeOptions {\r\n  framerate: Rational\r\n}\r\n\r\nexport default class FramerateFilterNode extends AVFilterNode {\r\n  declare options: FramerateFilterNodeOptions\r\n\r\n  private lastPts: int64 = -1n\r\n\r\n  private delta: int64 = 0n\r\n\r\n  private timeBase: Rational = AV_TIME_BASE_Q\r\n  private step: int64 = 0n\r\n\r\n  constructor(options: FramerateFilterNodeOptions) {\r\n    super(options, 1, 1)\r\n  }\r\n\r\n  public async ready() {\r\n    this.lastPts = -1n\r\n    this.delta = 0n\r\n    this.timeBase = AV_TIME_BASE_Q\r\n    this.step = avRescaleQ(\r\n      1n,\r\n      {\r\n        den: this.options.framerate.num,\r\n        num: this.options.framerate.den\r\n      },\r\n      this.timeBase\r\n    )\r\n  }\r\n\r\n  public async destroy() {\r\n\r\n  }\r\n\r\n  public async process(inputs: (pointer<AVFrame> | VideoFrame | int32)[], outputs: (pointer<AVFrame> | VideoFrame | int32)[]) {\r\n    let avframe = inputs[0]\r\n\r\n    if (is.number(avframe) && avframe < 0) {\r\n      outputs[0] = avframe\r\n      return\r\n    }\r\n\r\n    let pts = isPointer(avframe)\r\n      ? avRescaleQ2(\r\n        avframe.pts,\r\n        addressof(avframe.timeBase),\r\n        this.timeBase\r\n      )\r\n      : static_cast<int64>((avframe as VideoFrame).timestamp)\r\n    let diff = pts - this.lastPts + this.delta\r\n\r\n    if (diff < this.step && this.lastPts > -1n) {\r\n      while (true) {\r\n        const next = await this.inputInnerNodePort[0].request<pointer<AVFrame> | VideoFrame>('pull')\r\n        if (is.number(next) && next < 0) {\r\n          outputs[0] = next\r\n          return\r\n        }\r\n        pts = isPointer(next)\r\n          ? avRescaleQ2(\r\n            next.pts,\r\n            addressof(next.timeBase),\r\n            this.timeBase\r\n          )\r\n          : static_cast<int64>(next.timestamp)\r\n        diff = pts - this.lastPts\r\n        if (diff >= this.step) {\r\n          this.delta += diff - this.step\r\n          this.lastPts = pts\r\n          outputs[0] = next\r\n          return\r\n        }\r\n        else {\r\n          if (isPointer(next)) {\r\n            this.options.avframePool ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(next)) : destroyAVFrame(next)\r\n          }\r\n          else {\r\n            next.close()\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (this.lastPts > -1n) {\r\n        this.delta = diff - this.step\r\n      }\r\n      this.lastPts = pts\r\n\r\n      if (isPointer(avframe)) {\r\n        const out = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n        refAVFrame(out, avframe)\r\n        outputs[0] = out\r\n      }\r\n      else {\r\n        outputs[0] = (avframe as VideoFrame).clone()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import AVFilterNode, { AVFilterNodeOptions } from '../AVFilterNode'\r\nimport AVFrame, { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { copyAVFrameProps, createAVFrame, destroyAVFrame, refAVFrame } from 'avutil/util/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport VideoScaler, { ScaleParameters } from 'videoscale/VideoScaler'\r\nimport * as is from 'common/util/is'\r\nimport { mapFormat, videoFrame2AVFrame } from 'avutil/function/videoFrame2AVFrame'\r\nimport { NOPTS_VALUE } from 'avutil/constant'\r\nimport { AVPixelFormat } from 'avutil/pixfmt'\r\nimport * as errorType from 'avutil/error'\r\nimport * as logger from 'common/util/logger'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport interface ScaleFilterNodeOptions extends AVFilterNodeOptions {\r\n  resource: WebAssemblyResource | ArrayBuffer\r\n  output: ScaleParameters\r\n}\r\n\r\nexport default class ScaleFilterNode extends AVFilterNode {\r\n  declare options: ScaleFilterNodeOptions\r\n\r\n  private scaler: VideoScaler | undefined\r\n\r\n  constructor(options: ScaleFilterNodeOptions) {\r\n    super(options, 1, 1)\r\n  }\r\n\r\n  public async ready() {\r\n\r\n  }\r\n\r\n  public async destroy() {\r\n    if (this.scaler) {\r\n      this.scaler.close()\r\n      this.scaler = undefined\r\n    }\r\n  }\r\n\r\n  public async process(inputs: (pointer<AVFrame> | VideoFrame | int32)[], outputs: (pointer<AVFrame> | VideoFrame | int32)[], options?: Data) {\r\n    let avframe = inputs[0]\r\n\r\n    if (is.number(avframe) && avframe < 0) {\r\n      outputs[0] = avframe\r\n      return\r\n    }\r\n\r\n    const width = isPointer(avframe) ? avframe.width : (avframe as VideoFrame).displayWidth\r\n    const height = isPointer(avframe) ? avframe.height : (avframe as VideoFrame).displayHeight\r\n    const format = isPointer(avframe) ? avframe.format : mapFormat((avframe as VideoFrame).format!)\r\n\r\n    if (width !== this.options.output.width\r\n      || height !== this.options.output.height\r\n      || format !== this.options.output.format\r\n        && this.options.output.format !== NOPTS_VALUE\r\n        && format !== AVPixelFormat.AV_PIX_FMT_NONE\r\n        && (!options || !options.preferVideoFrame || isPointer(avframe))\r\n    ) {\r\n\r\n      if (format === AVPixelFormat.AV_PIX_FMT_NONE) {\r\n        logger.error('src avframe format not support')\r\n        outputs[0] = errorType.FORMAT_NOT_SUPPORT\r\n        return\r\n      }\r\n\r\n      const out = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n\r\n      if (this.scaler) {\r\n        const currentInput = this.scaler.getInputScaleParameters()!\r\n        if (currentInput.width !== width\r\n          || currentInput.height !== height\r\n          || currentInput.format !== format\r\n        ) {\r\n          this.scaler.close()\r\n          this.scaler = undefined\r\n        }\r\n      }\r\n      if (!this.scaler) {\r\n        let resource = this.options.resource\r\n        if (is.arrayBuffer(resource)) {\r\n          resource = await compileResource(resource)\r\n        }\r\n        this.scaler = new VideoScaler({\r\n          resource\r\n        })\r\n        const ret = await this.scaler.open(\r\n          {\r\n            width,\r\n            height,\r\n            format\r\n          },\r\n          {\r\n            width: this.options.output.width,\r\n            height: this.options.output.height,\r\n            format: this.options.output.format !== NOPTS_VALUE\r\n              ? this.options.output.format\r\n              : (format === AVPixelFormat.AV_PIX_FMT_NV12 && !isPointer(avframe)\r\n                ? AVPixelFormat.AV_PIX_FMT_YUV420P\r\n                : format\r\n              )\r\n          }\r\n        )\r\n        if (ret) {\r\n          logger.error(`open scaler failed, error ${ret}`)\r\n          outputs[0] = errorType.FORMAT_NOT_SUPPORT\r\n          return\r\n        }\r\n      }\r\n\r\n      if (!isPointer(avframe)) {\r\n        avframe = await videoFrame2AVFrame(inputs[0] as VideoFrame, this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame())\r\n      }\r\n\r\n      this.scaler.scale(avframe, out)\r\n\r\n      copyAVFrameProps(out, avframe)\r\n      out.width = this.options.output.width\r\n      out.height = this.options.output.height\r\n      out.format = this.options.output.format\r\n\r\n      outputs[0] = out\r\n\r\n      if (!isPointer(inputs[0])) {\r\n        this.options.avframePool ? this.options.avframePool.release(reinterpret_cast<pointer<AVFrameRef>>(avframe)) : destroyAVFrame(avframe)\r\n      }\r\n    }\r\n    else {\r\n      if (isPointer(avframe)) {\r\n        const out = this.options.avframePool ? this.options.avframePool.alloc() : createAVFrame()\r\n        refAVFrame(out, avframe)\r\n        outputs[0] = out\r\n      }\r\n      else {\r\n        outputs[0] = (avframe as VideoFrame).clone()\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia AVFormatContext\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\n\r\nimport AVStream, { AVStreamInterface } from 'avutil/AVStream'\r\nimport AVPacket from 'avutil/struct/avpacket'\r\n\r\nimport OFormat from './formats/OFormat'\r\nimport IFormat from './formats/IFormat'\r\n\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport IOReaderSync from 'common/io/IOReaderSync'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport { AVFormat } from 'avutil/avformat'\r\nimport { destroyAVPacket } from 'avutil/util/avpacket'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport * as staticData from 'cheap/staticData'\r\nimport { Mutex, lock, unlock } from 'cheap/thread/mutex'\r\n\r\n// 在静态区分配 stream 计数器和计数器操作锁\r\nconst streamCounter: pointer<int32> = reinterpret_cast<pointer<int32>>(staticData.malloc(sizeof(int32), sizeof(int32)))\r\nconst streamCounterMutex: pointer<Mutex> = reinterpret_cast<pointer<Mutex>>(staticData.malloc(sizeof(Mutex), sizeof(atomic_int32)))\r\n\r\nexport interface AVChapter {\r\n  /**\r\n   * 章节 id\r\n   */\r\n  id: uint64\r\n  /**\r\n   * 时间基\r\n   */\r\n  timeBase: Rational\r\n  /**\r\n   * 开始时间\r\n   */\r\n  start: int64\r\n  /**\r\n   * 结束时间\r\n   */\r\n  end: int64\r\n  /**\r\n   * 元数据\r\n   */\r\n  metadata: Record<string, any>\r\n}\r\n\r\nclass AVFormatContextInterval {\r\n\r\n  public packetBuffer: pointer<AVPacket>[]\r\n\r\n  constructor() {\r\n    this.packetBuffer = []\r\n  }\r\n}\r\n\r\nexport interface AVIFormatContext {\r\n  metadata: Record<string, any>\r\n  streams: AVStream[]\r\n\r\n  options: Record<string, any>\r\n  chapters: AVChapter[]\r\n\r\n  privateData: Record<string, any>\r\n  privateData2: Record<string, any>\r\n\r\n  format: AVFormat\r\n  iformat: IFormat\r\n\r\n  ioReader: IOReader\r\n  ioWriter: IOWriter\r\n\r\n  errorFlag: number\r\n\r\n  interval: AVFormatContextInterval\r\n\r\n  streamIndex: number\r\n\r\n  getStreamById(id: number): AVStream\r\n\r\n  getStreamByIndex(index: number): AVStream\r\n\r\n  getStreamByMediaType(mediaType: AVMediaType): AVStream\r\n\r\n  createStream(): AVStream\r\n\r\n  addStream(stream: AVStream): void\r\n\r\n  removeStream(stream: AVStream): void\r\n\r\n  removeStreamById(id: number): void\r\n\r\n  removeStreamByIndex(index: number): void\r\n\r\n  destroy(): Promise<void>\r\n\r\n  getDecoderResource: (mediaType: AVMediaType, codecId: AVCodecID) => Promise<WebAssemblyResource> | WebAssemblyResource\r\n}\r\n\r\nexport interface AVOFormatContext {\r\n\r\n  metadataHeaderPadding: int32\r\n\r\n  metadata: Record<string, any>\r\n  streams: AVStream[]\r\n\r\n  options: Record<string, any>\r\n  chapters: AVChapter[]\r\n\r\n  privateData: Record<string, any>\r\n  privateData2: Record<string, any>\r\n\r\n  format: AVFormat\r\n  oformat: OFormat\r\n\r\n  ioWriter: IOWriterSync\r\n\r\n  errorFlag: number\r\n\r\n  interval: AVFormatContextInterval\r\n\r\n  streamIndex: number\r\n\r\n  getStreamById(id: number): AVStream\r\n\r\n  getStreamByIndex(index: number): AVStream\r\n\r\n  getStreamByMediaType(mediaType: AVMediaType): AVStream\r\n\r\n  createStream(): AVStream\r\n\r\n  addStream(stream: AVStream): void\r\n\r\n  removeStream(stream: AVStream): void\r\n\r\n  removeStreamById(id: number): void\r\n\r\n  removeStreamByIndex(index: number): void\r\n\r\n  destroy(): Promise<void>\r\n}\r\n\r\nexport interface AVFormatContextInterface {\r\n  metadata: Record<string, any>\r\n  format: AVFormat\r\n  streams: AVStreamInterface[]\r\n  chapters: AVChapter[]\r\n}\r\n\r\nexport class AVFormatContext {\r\n\r\n  public metadataHeaderPadding = -1\r\n\r\n  public metadata: Record<string, any>\r\n  public streams: AVStream[]\r\n\r\n  public options: Record<string, any>\r\n  public chapters: AVChapter[]\r\n\r\n  public privateData: Record<string, any>\r\n  public privateData2: Record<string, any>\r\n\r\n  public iformat: IFormat\r\n  public oformat: OFormat\r\n\r\n  public ioReader: IOReader | IOReaderSync\r\n  public ioWriter: IOWriter | IOWriterSync\r\n\r\n  public errorFlag: number\r\n\r\n  public interval: AVFormatContextInterval\r\n\r\n  public streamIndex: number\r\n\r\n  public getDecoderResource: (mediaType: AVMediaType, codecId: AVCodecID) => Promise<WebAssemblyResource> | WebAssemblyResource = null\r\n\r\n  constructor() {\r\n    this.streams = []\r\n    this.errorFlag = 0\r\n    this.streamIndex  = 0\r\n    this.interval = new AVFormatContextInterval()\r\n\r\n    this.options = {}\r\n    this.privateData = {}\r\n    this.metadata = {}\r\n    this.chapters = []\r\n  }\r\n\r\n  get format() {\r\n    if (this.iformat) {\r\n      return this.iformat.type\r\n    }\r\n    else if (this.oformat) {\r\n      return this.oformat.type\r\n    }\r\n    return AVFormat.UNKNOWN\r\n  }\r\n\r\n  public getStreamById(id: number) {\r\n    return this.streams.find((stream) => stream.id === id)\r\n  }\r\n\r\n  public getStreamByIndex(index: number) {\r\n    return this.streams.find((stream) => stream.index === index)\r\n  }\r\n\r\n  public getStreamByMediaType(mediaType: AVMediaType) {\r\n    return this.streams.find((stream) => stream.codecpar?.codecType === mediaType)\r\n  }\r\n\r\n  public createStream() {\r\n    const stream = new AVStream()\r\n    stream.index = this.streamIndex++\r\n\r\n    if (defined(ENABLE_THREADS)) {\r\n      lock(streamCounterMutex)\r\n    }\r\n    stream.id = accessof(streamCounter)\r\n    accessof(streamCounter) <- reinterpret_cast<int32>(stream.id + 1)\r\n    if (defined(ENABLE_THREADS)) {\r\n      unlock(streamCounterMutex)\r\n    }\r\n\r\n    this.removeStreamByIndex(stream.index)\r\n    this.streams.push(stream)\r\n\r\n    return stream\r\n  }\r\n\r\n  public addStream(stream: AVStream) {\r\n    this.removeStreamByIndex(stream.index)\r\n    this.streams.push(stream)\r\n  }\r\n\r\n  public removeStream(stream: AVStream) {\r\n    this.removeStreamByIndex(stream.index)\r\n  }\r\n\r\n  public removeStreamById(id: number) {\r\n    const index = this.streams.findIndex((stream) => stream.id === id)\r\n\r\n    if (index > -1) {\r\n      const st = this.streams.splice(index, 1)\r\n      if (st[0]) {\r\n        st[0].destroy()\r\n      }\r\n    }\r\n  }\r\n\r\n  public removeStreamByIndex(i: number) {\r\n\r\n    const index = this.streams.findIndex((stream) => stream.index === i)\r\n\r\n    if (index > -1) {\r\n      const st = this.streams.splice(index, 1)\r\n      if (st[0]) {\r\n        st[0].destroy()\r\n      }\r\n    }\r\n  }\r\n\r\n  public async destroy() {\r\n\r\n    if (this.oformat) {\r\n      this.oformat.destroy(this as AVOFormatContext)\r\n    }\r\n    if (this.iformat) {\r\n      await this.iformat.destroy(this as AVIFormatContext)\r\n    }\r\n\r\n    if (this.interval.packetBuffer.length) {\r\n      this.interval.packetBuffer.forEach((avpacket) => {\r\n        destroyAVPacket(avpacket)\r\n      })\r\n    }\r\n\r\n    this.streams.forEach((stream) => {\r\n      stream.destroy()\r\n    })\r\n    this.streams = []\r\n    this.interval = null\r\n    this.ioReader = this.ioWriter = null\r\n    this.oformat = this.iformat = null\r\n  }\r\n}\r\n\r\n/**\r\n * 创建 AVIFormatContext\r\n * \r\n * @returns \r\n */\r\nexport function createAVIFormatContext() {\r\n  return new AVFormatContext() as AVIFormatContext\r\n}\r\n\r\n/**\r\n * 创建 AVOFormatContext\r\n * \r\n * @returns \r\n */\r\nexport function createAVOFormatContext() {\r\n  return new AVFormatContext() as AVOFormatContext\r\n}\r\n","/*\r\n * libmedia AVBSFilter\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport { copyCodecParameters, freeCodecParameters } from 'avutil/util/codecparameters'\r\n\r\nexport default abstract class AVBSFilter {\r\n\r\n  inCodecpar: pointer<AVCodecParameters>\r\n  inTimeBase: Rational\r\n\r\n  outCodecpar: pointer<AVCodecParameters>\r\n\r\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\r\n    this.inCodecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n    copyCodecParameters(this.inCodecpar, codecpar)\r\n\r\n    this.inTimeBase = {\r\n      den: timeBase.den,\r\n      num: timeBase.num\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.inCodecpar) {\r\n      freeCodecParameters(this.inCodecpar)\r\n      this.inCodecpar = nullptr\r\n    }\r\n  }\r\n\r\n  public abstract sendAVPacket(avpacket: pointer<AVPacket>): number\r\n  public abstract receiveAVPacket(avpacket: pointer<AVPacket>): number\r\n  public abstract reset(): number\r\n}\r\n","/*\r\n * libmedia Annexb2AvccFilter\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\r\nimport AVBSFilter from '../AVBSFilter'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { addAVPacketData, addAVPacketSideData, copyAVPacketProps, createAVPacket,\r\n  destroyAVPacket, refAVPacket, unrefAVPacket\r\n} from 'avutil/util/avpacket'\r\n\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport { mapSafeUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport { AVCodecID, AVPacketSideDataType } from 'avutil/codec'\r\nimport * as errorType from 'avutil/error'\r\nimport { avMalloc } from 'avutil/util/mem'\r\nimport * as logger from 'common/util/logger'\r\n\r\nexport default class Annexb2AvccFilter extends AVBSFilter {\r\n\r\n  private cache: pointer<AVPacket>\r\n  private cached: boolean\r\n  private reverseSps: boolean\r\n\r\n  constructor(reverseSps: boolean = false) {\r\n    super()\r\n    this.reverseSps = reverseSps\r\n  }\r\n\r\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\r\n    super.init(codecpar, timeBase)\r\n    this.cache = createAVPacket()\r\n    this.cached = false\r\n\r\n    return 0\r\n  }\r\n\r\n  public destroy(): void {\r\n    super.destroy()\r\n    destroyAVPacket(this.cache)\r\n    this.cache = nullptr\r\n  }\r\n\r\n  public sendAVPacket(avpacket: pointer<AVPacket>): number {\r\n\r\n    const buffer = mapSafeUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size))\r\n\r\n    if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB)) {\r\n      refAVPacket(this.cache, avpacket)\r\n    }\r\n    else {\r\n\r\n      copyAVPacketProps(this.cache, avpacket)\r\n\r\n      let convert: {\r\n        bufferPointer: pointer<uint8>,\r\n        length: number,\r\n        extradata: Uint8Array,\r\n        key: boolean\r\n      }\r\n\r\n      if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n        convert = h264.annexb2Avcc(buffer, this.reverseSps)\r\n      }\r\n      else if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n        convert = hevc.annexb2Avcc(buffer, this.reverseSps)\r\n      }\r\n      else if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n        convert = vvc.annexb2Avcc(buffer, this.reverseSps)\r\n      }\r\n      else {\r\n        logger.fatal(`not support for codecId: ${this.inCodecpar.codecId}`)\r\n      }\r\n\r\n      this.cache.flags &= ~AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB\r\n\r\n      addAVPacketData(this.cache, convert.bufferPointer, convert.length)\r\n\r\n      if (convert.key) {\r\n        this.cache.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\r\n      }\r\n\r\n      if (convert.extradata) {\r\n        const extradata = avMalloc(convert.extradata.length)\r\n        memcpyFromUint8Array(extradata, convert.extradata.length, convert.extradata)\r\n        addAVPacketSideData(this.cache, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradata, convert.extradata.length)\r\n      }\r\n    }\r\n    this.cached = true\r\n    return 0\r\n  }\r\n\r\n  public receiveAVPacket(avpacket: pointer<AVPacket>): number {\r\n    if (this.cached) {\r\n      unrefAVPacket(avpacket)\r\n      refAVPacket(avpacket, this.cache)\r\n      this.cached = false\r\n      return 0\r\n    }\r\n    else {\r\n      return errorType.DATA_INVALID\r\n    }\r\n  }\r\n\r\n  public reset(): number {\r\n    return 0\r\n  }\r\n}\r\n","/*\r\n * libmedia avformat config\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport const DURATION_MAX_READ_SIZE = 250 * 1024\r\n\r\nexport const SAMPLE_INDEX_STEP = 5000n\r\n","/*\r\n * libmedia demux util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\r\nimport { AVIFormatContext } from './AVFormatContext'\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport { AV_MILLI_TIME_BASE_Q, INT32_MAX, NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport { AVPacketSideDataType, AVCodecID, AVMediaType } from 'avutil/codec'\r\nimport { AVFormat, AVSeekFlags, IOFlags } from 'avutil/avformat'\r\nimport { checkStreamParameters } from './function/checkStreamParameters'\r\nimport { avD2Q, avRescaleQ, avRescaleQ2 } from 'avutil/util/rational'\r\nimport { copyAVPacketData, createAVPacket, destroyAVPacket,\r\n  getAVPacketSideData,\r\n  hasAVPacketSideData, refAVPacket, unrefAVPacket\r\n} from 'avutil/util/avpacket'\r\nimport { DURATION_MAX_READ_SIZE, SAMPLE_INDEX_STEP } from './config'\r\nimport * as errorType from 'avutil/error'\r\nimport AVStream, { AVStreamMetadataKey } from 'avutil/AVStream'\r\nimport * as logger from 'common/util/logger'\r\nimport { IOError } from 'common/io/error'\r\nimport WasmVideoDecoder from 'avcodec/wasmcodec/VideoDecoder'\r\nimport WasmAudioDecoder from 'avcodec/wasmcodec/AudioDecoder'\r\nimport { destroyAVFrame } from 'avutil/util/avframe'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport roundStandardFramerate from './function/roundStandardFramerate'\r\nimport guessDelayFromPts from './function/guessDelayFromPts'\r\nimport guessDtsFromPts from './function/guessDtsFromPts'\r\nimport { AVChannelLayout, AVChannelOrder } from 'avutil/audiosamplefmt'\r\n\r\nconst MIN_ANALYZE_SAMPLES = 16\r\n\r\nexport interface DemuxOptions {\r\n  /**\r\n   * 只分析流的必要参数（设置 true 将不会分析视频帧率和音频每帧采用点数等参数）\r\n   */\r\n  fastOpen?: boolean\r\n  /**\r\n   * 最大流分析时长（毫秒）\r\n   */\r\n  maxAnalyzeDuration?: number\r\n}\r\n\r\ninterface StreamDemuxPrivateData {\r\n  delay?: int32\r\n  dtsQueue?: int64[]\r\n}\r\n\r\nexport const DefaultDemuxOptions = {\r\n  fastOpen: false,\r\n  maxAnalyzeDuration: 15000\r\n}\r\n\r\n/**\r\n * 打开流\r\n * \r\n * @param formatContext \r\n * @param options DemuxOptions 选项\r\n * @returns 成功返回 0，否则返回错误码\r\n */\r\nexport async function open(formatContext: AVIFormatContext, options: DemuxOptions = {}): Promise<int32> {\r\n  const opts = object.extend({}, DefaultDemuxOptions, options)\r\n  if (!formatContext.ioReader) {\r\n    logger.fatal('need IOReader')\r\n  }\r\n  if (!formatContext.iformat) {\r\n    logger.fatal('need iformat')\r\n  }\r\n  if (formatContext.iformat.type === AVFormat.MPEGTS) {\r\n    // mpegts 的最小分析时长为 2 秒，mpegts 的 dts 一般从 1.4 秒开始\r\n    opts.maxAnalyzeDuration = Math.max(opts.maxAnalyzeDuration, 2000)\r\n  }\r\n  formatContext.iformat.init(formatContext)\r\n  formatContext.options = opts\r\n  return formatContext.iformat.readHeader(formatContext)\r\n}\r\n\r\nasync function estimateDurationFromPts(formatContext: AVIFormatContext) {\r\n  const fileSize = await formatContext.ioReader.fileSize()\r\n  if (fileSize <= 0n) {\r\n    return\r\n  }\r\n\r\n  const cache = formatContext.interval.packetBuffer\r\n  formatContext.interval.packetBuffer = []\r\n\r\n  let now = formatContext.ioReader.getPos()\r\n\r\n  let retry = 0\r\n  while (retry < 4) {\r\n    const pos = fileSize - static_cast<int64>(DURATION_MAX_READ_SIZE << retry)\r\n    const nextPos = await formatContext.iformat.seek(formatContext, null, pos, AVSeekFlags.BYTE)\r\n    if (nextPos < 0) {\r\n      break\r\n    }\r\n    else if (!retry && nextPos > 0) {\r\n      now = nextPos\r\n    }\r\n    const lastDurationMap: Record<number, int64> = {}\r\n\r\n    const avpacket = createAVPacket()\r\n\r\n    while (true) {\r\n      const ret = await readAVPacket(formatContext, avpacket)\r\n\r\n      if (ret < 0) {\r\n        break\r\n      }\r\n      else {\r\n        let duration = avpacket.pts\r\n        if (duration === NOPTS_VALUE_BIGINT) {\r\n          duration = avpacket.dts\r\n        }\r\n        const stream = formatContext.getStreamByIndex(avpacket.streamIndex)\r\n        if (stream.startTime !== NOPTS_VALUE_BIGINT) {\r\n          duration -= stream.startTime\r\n        }\r\n        else {\r\n          duration -= stream.firstDTS\r\n        }\r\n\r\n        if (duration > 0n) {\r\n          if (stream.duration === NOPTS_VALUE_BIGINT\r\n            || !lastDurationMap[avpacket.streamIndex]\r\n            || (\r\n              stream.duration < duration\r\n              && Math.abs(static_cast<double>(duration - stream.duration)) < 60 * stream.timeBase.den / stream.timeBase.num\r\n            )\r\n          ) {\r\n            stream.duration = duration\r\n          }\r\n          lastDurationMap[avpacket.streamIndex] = duration\r\n        }\r\n      }\r\n    }\r\n\r\n    destroyAVPacket(avpacket)\r\n\r\n    let hasDuration = true\r\n\r\n    array.each(formatContext.streams, (stream) => {\r\n      if (stream.duration === NOPTS_VALUE_BIGINT) {\r\n        hasDuration = false\r\n        return false\r\n      }\r\n    })\r\n\r\n    if (hasDuration) {\r\n      break\r\n    }\r\n    retry++\r\n  }\r\n\r\n  array.each(formatContext.interval.packetBuffer, (avpacket) => {\r\n    destroyAVPacket(avpacket)\r\n  })\r\n  formatContext.interval.packetBuffer = cache.filter((avpacket) => {\r\n    if (avpacket.pos >= now) {\r\n      destroyAVPacket(avpacket)\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  await formatContext.iformat.seek(formatContext, null, now, AVSeekFlags.BYTE)\r\n}\r\n\r\n/**\r\n * 分析流 stream\r\n * \r\n * @param formatContext \r\n * @returns 成功返回 0，否则返回错误码\r\n */\r\nexport async function analyzeStreams(formatContext: AVIFormatContext): Promise<int32> {\r\n  const streamFirstGotMap: Record<int32, boolean> = {}\r\n  const streamDtsMap: Record<int32, int64[]> = {}\r\n  const streamPtsMap: Record<int32, int64[]> = {}\r\n  const streamBitMap: Record<int32, number> = {}\r\n  const streamContextMap: Record<int32, StreamDemuxPrivateData> = {}\r\n  const decoderMap: Record<int32, WasmVideoDecoder | WasmAudioDecoder> = {}\r\n  const pictureGot: Record<int32, boolean> = {}\r\n\r\n  const needStreams = formatContext.iformat.getAnalyzeStreamsCount()\r\n  let avpacket: pointer<AVPacket> = nullptr\r\n  const caches: pointer<AVPacket>[] = []\r\n  let ret = 0\r\n\r\n  function checkPictureGot() {\r\n    if (!formatContext.getDecoderResource) {\r\n      return true\r\n    }\r\n    for (let i = 0; i < formatContext.streams.length; i++) {\r\n      if (decoderMap[formatContext.streams[i].index] && !pictureGot[formatContext.streams[i].index]) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  function calculate(stream: AVStream, end: boolean) {\r\n\r\n    let dtsList = streamDtsMap[stream.index]\r\n    const ptsList = streamPtsMap[stream.index]\r\n\r\n    let delay = stream.codecpar.videoDelay\r\n\r\n    if (ptsList?.length) {\r\n      delay = Math.min(\r\n        Math.max(guessDelayFromPts(ptsList), stream.codecpar.videoDelay),\r\n        16\r\n      )\r\n      if (end) {\r\n        stream.codecpar.videoDelay = delay\r\n      }\r\n    }\r\n\r\n    if (!dtsList && ptsList?.length) {\r\n      if (delay) {\r\n        dtsList = guessDtsFromPts(delay, ptsList)\r\n      }\r\n      else {\r\n        dtsList = ptsList.slice()\r\n      }\r\n      const context: StreamDemuxPrivateData = {\r\n        delay,\r\n        dtsQueue: dtsList\r\n      }\r\n      dtsList = []\r\n      streamContextMap[stream.index] = context\r\n      for (let i = 0; i < caches.length; i++) {\r\n        if (stream.index === caches[i].streamIndex) {\r\n          const dts = context.dtsQueue.shift()\r\n          caches[i].dts = dts\r\n          dtsList.push(dts)\r\n          const sample = stream.sampleIndexes.find((sample) => {\r\n            return sample.pts === caches[i].pts\r\n          })\r\n          if (sample) {\r\n            sample.dts = caches[i].dts\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (dtsList && dtsList.length > 1) {\r\n      let count = 0n\r\n      for (let i = 1; i < dtsList.length; i++) {\r\n        count += dtsList[i] - dtsList[i - 1]\r\n      }\r\n      if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO\r\n        && stream.codecpar.sampleRate > 0\r\n        && !stream.codecpar.frameSize\r\n      ) {\r\n        let value = static_cast<double>(count) / (dtsList.length - 1)\r\n        stream.codecpar.frameSize = Math.round(value / stream.timeBase.den * stream.timeBase.num * stream.codecpar.sampleRate)\r\n      }\r\n      else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n        const q = avD2Q((stream.timeBase.den * (dtsList.length - 1))\r\n          / (reinterpret_cast<int32>(static_cast<double>(count)) * stream.timeBase.num), INT32_MAX)\r\n        stream.codecpar.framerate.num = q.num\r\n        stream.codecpar.framerate.den = q.den\r\n        roundStandardFramerate(stream.codecpar.framerate)\r\n      }\r\n      const duration = static_cast<double>(dtsList[dtsList.length - 1] - stream.startTime) * stream.timeBase.num / stream.timeBase.den\r\n      if (duration) {\r\n        stream.codecpar.bitrate = static_cast<int64>(streamBitMap[stream.index] * 8 / duration)\r\n      }\r\n    }\r\n  }\r\n\r\n  function finalizeAnalyze() {\r\n    formatContext.streams.forEach((stream) => {\r\n      calculate(stream, true)\r\n      if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n        if (stream.codecpar.chLayout.nbChannels === 1) {\r\n          stream.codecpar.chLayout.u.mask = static_cast<uint64>(AVChannelLayout.AV_CHANNEL_LAYOUT_MONO as uint32)\r\n          stream.codecpar.chLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_NATIVE\r\n        }\r\n        else if (stream.codecpar.chLayout.nbChannels === 2) {\r\n          stream.codecpar.chLayout.u.mask = static_cast<uint64>(AVChannelLayout.AV_CHANNEL_LAYOUT_STEREO as uint32)\r\n          stream.codecpar.chLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_NATIVE\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  while (true) {\r\n    if (formatContext.streams.length >= needStreams\r\n      && (formatContext.options as DemuxOptions).fastOpen\r\n      && checkStreamParameters(formatContext)\r\n    ) {\r\n      finalizeAnalyze()\r\n      break\r\n    }\r\n\r\n    if (!avpacket) {\r\n      avpacket = createAVPacket()\r\n    }\r\n    let packetCached = false\r\n    ret = await readAVPacket(formatContext, avpacket)\r\n\r\n    if (ret !== 0) {\r\n      finalizeAnalyze()\r\n      break\r\n    }\r\n\r\n    const stream = formatContext.getStreamByIndex(avpacket.streamIndex)\r\n\r\n    let pts = avpacket.pts\r\n    if (pts === NOPTS_VALUE_BIGINT) {\r\n      pts = avpacket.dts\r\n    }\r\n\r\n    if (avpacket.size) {\r\n      packetCached = true\r\n      caches.push(avpacket)\r\n\r\n      if (!streamFirstGotMap[stream.index]) {\r\n        stream.firstDTS = avpacket.dts\r\n        stream.startTime = pts\r\n        streamFirstGotMap[stream.index] = true\r\n      }\r\n      else if (pts < stream.startTime) {\r\n        stream.startTime = pts\r\n      }\r\n\r\n      if (avpacket.dts !== NOPTS_VALUE_BIGINT) {\r\n        if (streamDtsMap[stream.index]) {\r\n          streamDtsMap[stream.index].push(avpacket.dts)\r\n        }\r\n        else {\r\n          streamDtsMap[stream.index] = [avpacket.dts]\r\n        }\r\n      }\r\n      if (streamPtsMap[stream.index]) {\r\n        streamPtsMap[stream.index].push(pts)\r\n      }\r\n      else {\r\n        streamPtsMap[stream.index] = [pts]\r\n      }\r\n\r\n      if (streamBitMap[stream.index]) {\r\n        streamBitMap[stream.index] += avpacket.size\r\n      }\r\n      else {\r\n        streamBitMap[stream.index] = avpacket.size\r\n      }\r\n\r\n      if (!pictureGot[stream.index]\r\n        && formatContext.getDecoderResource\r\n        && !(formatContext.options as DemuxOptions).fastOpen\r\n        && !stream.metadata[AVStreamMetadataKey.ENCRYPTION]\r\n      ) {\r\n        let decoder = decoderMap[stream.index]\r\n        if (!decoder) {\r\n          const resource = await formatContext.getDecoderResource(stream.codecpar.codecType, stream.codecpar.codecId)\r\n          if (resource) {\r\n            if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n              decoder = new WasmAudioDecoder({\r\n                resource,\r\n                onReceiveAVFrame: (avframe) => {\r\n                  stream.codecpar.format = avframe.format\r\n                  stream.codecpar.frameSize = avframe.nbSamples\r\n                  stream.codecpar.sampleRate = avframe.sampleRate\r\n                  stream.codecpar.chLayout = avframe.chLayout\r\n                  destroyAVFrame(avframe)\r\n                  pictureGot[stream.index] = true\r\n                },\r\n              })\r\n            }\r\n            else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n              if (resource.threadModule) {\r\n                delete resource.threadModule\r\n              }\r\n              decoder = new WasmVideoDecoder({\r\n                resource,\r\n                onReceiveAVFrame: (avframe) => {\r\n                  stream.codecpar.format = avframe.format\r\n                  stream.codecpar.colorRange = avframe.colorRange\r\n                  stream.codecpar.colorSpace = avframe.colorSpace\r\n                  stream.codecpar.colorPrimaries = avframe.colorPrimaries\r\n                  stream.codecpar.colorTrc = avframe.colorTrc\r\n                  stream.codecpar.chromaLocation = avframe.chromaLocation\r\n                  if (avframe.sampleAspectRatio.num && avframe.sampleAspectRatio.den) {\r\n                    stream.codecpar.sampleAspectRatio = avframe.sampleAspectRatio\r\n                  }\r\n                  stream.codecpar.width = avframe.width\r\n                  stream.codecpar.height = avframe.height\r\n                  destroyAVFrame(avframe)\r\n                  pictureGot[stream.index] = true\r\n                }\r\n              })\r\n            }\r\n            const ret = await decoder.open(addressof(stream.codecpar))\r\n            if (ret) {\r\n              decoder.close()\r\n              pictureGot[stream.index] = true\r\n            }\r\n            else {\r\n              decoderMap[stream.index] = decoder\r\n            }\r\n          }\r\n        }\r\n        if (decoder) {\r\n          const ret = decoder.decode(avpacket)\r\n          if (ret) {\r\n            pictureGot[stream.index] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // fastOpen 的时候分析到最小 samples 数量\r\n    if (streamPtsMap[stream.index] && streamPtsMap[stream.index].length === MIN_ANALYZE_SAMPLES) {\r\n      calculate(stream, false)\r\n    }\r\n\r\n    if (stream.startTime !== NOPTS_VALUE_BIGINT\r\n      && (pts - stream.startTime) > avRescaleQ(\r\n        static_cast<int64>((formatContext.options as DemuxOptions).maxAnalyzeDuration),\r\n        AV_MILLI_TIME_BASE_Q,\r\n        stream.timeBase\r\n      )\r\n      && (formatContext.streams.length >= needStreams\r\n        && checkStreamParameters(formatContext)\r\n        || (pts - stream.startTime) > avRescaleQ(\r\n          15000n,\r\n          AV_MILLI_TIME_BASE_Q,\r\n          stream.timeBase\r\n        )\r\n        // 以 30 帧来判断分析的包是否足够\r\n        && (!streamPtsMap[stream.index] || streamPtsMap[stream.index].length > 30 * 15)\r\n      )\r\n      && checkPictureGot()\r\n    ) {\r\n      finalizeAnalyze()\r\n      if (packetCached) {\r\n        avpacket = nullptr\r\n      }\r\n      break\r\n    }\r\n    if (packetCached) {\r\n      avpacket = nullptr\r\n    }\r\n  }\r\n\r\n  if (avpacket) {\r\n    destroyAVPacket(avpacket)\r\n  }\r\n  if (caches.length) {\r\n    formatContext.interval.packetBuffer = caches.concat(formatContext.interval.packetBuffer)\r\n  }\r\n\r\n  object.each(decoderMap, (decoder) => {\r\n    if (decoder) {\r\n      decoder.close()\r\n    }\r\n  })\r\n\r\n  object.each(streamContextMap, (context, index) => {\r\n    const stream = formatContext.getStreamByIndex(+index)\r\n    if (stream.privateData2) {\r\n      object.extend(stream.privateData2, context)\r\n    }\r\n    else {\r\n      stream.privateData2 = context\r\n    }\r\n  })\r\n\r\n  if (ret === IOError.END || ret === IOError.ABORT) {\r\n    return 0\r\n  }\r\n  else if (ret !== 0) {\r\n    return ret\r\n  }\r\n\r\n  if ((formatContext.iformat.type === AVFormat.MPEGTS)\r\n    && (formatContext.ioReader.flags & IOFlags.SEEKABLE)\r\n    && !(formatContext.ioReader.flags & IOFlags.SLICE)\r\n  ) {\r\n    await estimateDurationFromPts(formatContext)\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction addSample(stream: AVStream, avpacket: pointer<AVPacket>) {\r\n  let pts = avpacket.pts\r\n  if (pts === NOPTS_VALUE_BIGINT) {\r\n    pts = avpacket.dts\r\n  }\r\n  const index = array.binarySearch(stream.sampleIndexes, (sample) => {\r\n    if (sample.pts < pts) {\r\n      return 1\r\n    }\r\n    else {\r\n      return -1\r\n    }\r\n  })\r\n  const sample = {\r\n    dts: avpacket.dts,\r\n    pts: pts,\r\n    pos: avpacket.pos,\r\n    size: avpacket.size,\r\n    duration: avpacket.duration,\r\n    flags: avpacket.flags\r\n  }\r\n  if (index > -1) {\r\n    stream.sampleIndexesPosMap.set(avpacket.pos, index)\r\n    stream.sampleIndexes.splice(index, 0, sample)\r\n  }\r\n  else {\r\n    stream.sampleIndexesPosMap.set(avpacket.pos, stream.sampleIndexes.length)\r\n    stream.sampleIndexes.push(sample)\r\n  }\r\n}\r\n\r\nasync function packetNeedRead(formatContext: AVIFormatContext, avpacket: pointer<AVPacket>): Promise<int32> {\r\n  const stream = formatContext.getStreamByIndex(avpacket.streamIndex)\r\n  if (avpacket.dts === NOPTS_VALUE_BIGINT) {\r\n    const demuxContext = stream.privateData2 as StreamDemuxPrivateData\r\n    if (demuxContext) {\r\n      if (demuxContext.delay) {\r\n        array.sortInsert(demuxContext.dtsQueue, avpacket.pts, (a) => {\r\n          if (a < avpacket.pts) {\r\n            return 1\r\n          }\r\n          else {\r\n            return -1\r\n          }\r\n        })\r\n        if (demuxContext.dtsQueue.length > demuxContext.delay) {\r\n          avpacket.dts = demuxContext.dtsQueue.shift()\r\n        }\r\n      }\r\n      else {\r\n        avpacket.dts = avpacket.pts\r\n      }\r\n    }\r\n  }\r\n\r\n  let ret = 0\r\n  // h264 hevc aac 解析到 extradata，继续\r\n  if (stream\r\n    && (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n      || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC\r\n    )\r\n  ) {\r\n    if (!avpacket.size\r\n      && hasAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n    ) {\r\n      while (1) {\r\n        const tmpPacket = createAVPacket()\r\n        ret = await formatContext.iformat.readAVPacket(formatContext, tmpPacket)\r\n        if (ret !== 0) {\r\n          if (formatContext.interval.packetBuffer.length) {\r\n            let cache = formatContext.interval.packetBuffer.shift()\r\n            unrefAVPacket(avpacket)\r\n            refAVPacket(avpacket, cache)\r\n            destroyAVPacket(cache)\r\n            return packetNeedRead(formatContext, avpacket)\r\n          }\r\n          return ret\r\n        }\r\n        if (tmpPacket.streamIndex === avpacket.streamIndex) {\r\n          if (tmpPacket.size) {\r\n            copyAVPacketData(avpacket, tmpPacket)\r\n            avpacket.dts = tmpPacket.dts\r\n            avpacket.pts = tmpPacket.pts\r\n            destroyAVPacket(tmpPacket)\r\n            return 0\r\n          }\r\n          else {\r\n            unrefAVPacket(avpacket)\r\n            refAVPacket(avpacket, tmpPacket)\r\n            destroyAVPacket(tmpPacket)\r\n            continue\r\n          }\r\n        }\r\n        else {\r\n          let i = formatContext.interval.packetBuffer.length - 1\r\n          let needPush = true\r\n          for (; i >= 0; i--) {\r\n            if (formatContext.interval.packetBuffer[i].streamIndex === tmpPacket.streamIndex) {\r\n              if (!formatContext.interval.packetBuffer[i].size\r\n                && !tmpPacket.size\r\n              ) {\r\n                destroyAVPacket(formatContext.interval.packetBuffer[i])\r\n                formatContext.interval.packetBuffer.splice(i, 1, tmpPacket)\r\n                needPush = false\r\n              }\r\n              else if (!formatContext.interval.packetBuffer[i].size\r\n                && tmpPacket.size\r\n              ) {\r\n                copyAVPacketData(formatContext.interval.packetBuffer[i], tmpPacket)\r\n                destroyAVPacket(tmpPacket)\r\n                needPush = false\r\n              }\r\n              break\r\n            }\r\n          }\r\n          if (needPush) {\r\n            formatContext.interval.packetBuffer.push(tmpPacket)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_END) {\r\n      return readAVPacket(formatContext, avpacket)\r\n    }\r\n  }\r\n  if (formatContext.ioReader.flags & IOFlags.SEEKABLE) {\r\n    if (!stream.sampleIndexesPosMap.has(avpacket.pos)) {\r\n      if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n        if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\r\n          addSample(stream, avpacket)\r\n        }\r\n      }\r\n      else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n        const index = array.binarySearch(stream.sampleIndexes, (sample) => {\r\n          if (sample.pts < avpacket.pts) {\r\n            return 1\r\n          }\r\n          else {\r\n            return -1\r\n          }\r\n        })\r\n\r\n        if (!stream.sampleIndexes.length\r\n          || (index < 0\r\n            && avRescaleQ2(\r\n              avpacket.pts - stream.sampleIndexes[stream.sampleIndexes.length - 1].pts,\r\n              addressof(avpacket.timeBase),\r\n              AV_MILLI_TIME_BASE_Q\r\n            ) >= SAMPLE_INDEX_STEP\r\n          )\r\n          || (index > 0\r\n            && index < stream.sampleIndexes.length - 1\r\n            && avRescaleQ2(\r\n              avpacket.pts - stream.sampleIndexes[index - 1].pts,\r\n              addressof(avpacket.timeBase),\r\n              AV_MILLI_TIME_BASE_Q\r\n            ) >= SAMPLE_INDEX_STEP\r\n          )\r\n          || (index === 0\r\n            && avRescaleQ2(\r\n              stream.sampleIndexes[0].pts - avpacket.pts,\r\n              addressof(avpacket.timeBase),\r\n              AV_MILLI_TIME_BASE_Q\r\n            ) >= SAMPLE_INDEX_STEP\r\n          )\r\n        ) {\r\n          addSample(stream, avpacket)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * 读取一个包\r\n * \r\n * @param formatContext AVIFormatContext 上下文\r\n * @param avpacket \r\n * @returns 成功返回 0，否则返回错误码\r\n */\r\nexport async function readAVPacket(formatContext: AVIFormatContext, avpacket: pointer<AVPacket>): Promise<int32> {\r\n  let ret = 0\r\n  unrefAVPacket(avpacket)\r\n  if (formatContext.interval.packetBuffer.length) {\r\n    const cache = formatContext.interval.packetBuffer.shift()\r\n    refAVPacket(avpacket, cache)\r\n    destroyAVPacket(cache)\r\n    return packetNeedRead(formatContext, avpacket)\r\n  }\r\n\r\n  ret = await formatContext.iformat.readAVPacket(formatContext, avpacket)\r\n\r\n  if (ret !== 0) {\r\n    unrefAVPacket(avpacket)\r\n    return ret\r\n  }\r\n  return packetNeedRead(formatContext, avpacket)\r\n}\r\n\r\n/**\r\n * \r\n * seek 到指定位置\r\n * \r\n * @param formatContext AVIFormatContext 上下文\r\n * @param streamIndex 指定流 index\r\n * @param timestamp seek 的位置或时间戳（毫秒）\r\n * @param flags AVSeekFlags 标志\r\n * @returns 错误返回负数，否则返回 seek 之前的 pos，方便 seek 回来\r\n */\r\nexport async function seek(formatContext: AVIFormatContext, streamIndex: number, timestamp: int64, flags: int32): Promise<int64> {\r\n\r\n  let stream = streamIndex > -1 ? formatContext.streams.find((stream) => stream.index === streamIndex) : null\r\n\r\n  if (!stream) {\r\n    stream = formatContext.getStreamByMediaType(AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n    if (!stream) {\r\n      stream = formatContext.getStreamByMediaType(AVMediaType.AVMEDIA_TYPE_AUDIO)\r\n    }\r\n    if (!stream) {\r\n      stream = formatContext.getStreamByMediaType(AVMediaType.AVMEDIA_TYPE_SUBTITLE)\r\n    }\r\n  }\r\n\r\n  if (!stream) {\r\n    logger.error(`not found any stream to seek, streamIndex: ${stream.index}`)\r\n    return static_cast<int64>(errorType.DATA_INVALID)\r\n  }\r\n\r\n  logger.debug(`seek in ${stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO\r\n    ? 'video'\r\n    : 'audio'\r\n  } stream, streamIndex: ${stream.index}, timestamp: ${timestamp}, flags: ${flags}`)\r\n\r\n  timestamp = avRescaleQ(timestamp, AV_MILLI_TIME_BASE_Q, stream.timeBase)\r\n\r\n  const ret = await formatContext.iformat.seek(formatContext, stream, timestamp, flags)\r\n\r\n  if (ret >= 0n) {\r\n    array.each(formatContext.interval.packetBuffer, (avpacket) => {\r\n      if (formatContext.ioReader.flags & IOFlags.SLICE) {\r\n        const newSideData = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n        const stream = formatContext.streams[avpacket.streamIndex]\r\n        if (!stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA] && newSideData) {\r\n          stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA] = mapUint8Array(newSideData.data, newSideData.size).slice()\r\n        }\r\n      }\r\n      destroyAVPacket(avpacket)\r\n    })\r\n    formatContext.interval.packetBuffer.length = 0\r\n\r\n    // 重新分析 dts\r\n    const oldDelay: Record<int32, int32> = {}\r\n    formatContext.streams.forEach((stream) => {\r\n      const context = stream.privateData2 as StreamDemuxPrivateData\r\n      if (context?.dtsQueue) {\r\n        context.dtsQueue.length = 0\r\n        if (context.delay) {\r\n          oldDelay[stream.index] = context.delay\r\n          context.delay = MIN_ANALYZE_SAMPLES\r\n        }\r\n      }\r\n    })\r\n    const cache: pointer<AVPacket>[] = []\r\n    while (formatContext.streams.some((stream) => {\r\n      const context = stream.privateData2 as StreamDemuxPrivateData\r\n      return context && context.dtsQueue && context.dtsQueue.length < context.delay\r\n    })) {\r\n      const avpacket = createAVPacket()\r\n      const ret = await readAVPacket(formatContext, avpacket)\r\n      if (ret) {\r\n        destroyAVPacket(avpacket)\r\n        break\r\n      }\r\n      cache.push(avpacket)\r\n    }\r\n    formatContext.streams.forEach((stream) => {\r\n      const context = stream.privateData2 as StreamDemuxPrivateData\r\n      if (context?.delay) {\r\n        context.delay = oldDelay[stream.index]\r\n        context.dtsQueue = guessDtsFromPts(context.delay, context.dtsQueue)\r\n        for (let i = 0; i < cache.length; i++) {\r\n          if (stream.index === cache[i].streamIndex) {\r\n            cache[i].dts = context.dtsQueue.shift()\r\n            const sample = stream.sampleIndexes.find((sample) => {\r\n              return sample.pts === cache[i].pts\r\n            })\r\n            if (sample) {\r\n              sample.dts = cache[i].dts\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    formatContext.interval.packetBuffer = cache.concat(formatContext.interval.packetBuffer)\r\n    return 0n\r\n  }\r\n\r\n  return ret\r\n}\r\n","import { AVFormatContext, AVFormatContextInterface, AVIFormatContext, AVOFormatContext } from './AVFormatContext'\r\nimport AVStream, { AVDisposition, AVStreamInterface } from 'avutil/AVStream'\r\nimport * as object from 'common/util/object'\r\nimport * as stringEnum from 'avutil/stringEnum'\r\nimport * as is from 'common/util/is'\r\nimport { avQ2D, avReduce, avRescaleQ } from 'avutil/util/rational'\r\nimport { AV_MILLI_TIME_BASE_Q, NOPTS_VALUE } from 'avutil/constant'\r\nimport * as string from 'common/util/string'\r\nimport toString from 'common/function/toString'\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\n\r\nimport * as aac from 'avutil/codecs/aac'\r\nimport * as opus from 'avutil/codecs/opus'\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport * as av1 from 'avutil/codecs/av1'\r\nimport * as vp9 from 'avutil/codecs/vp9'\r\nimport * as mp3 from 'avutil/codecs/mp3'\r\nimport { AVFormat } from 'avutil/avformat'\r\nimport isHdr from 'avutil/function/isHdr'\r\nimport { layoutName2AVChannelLayout } from 'avutil/stringEnum'\r\nimport { AVChannelOrder } from 'avutil/audiosamplefmt'\r\n\r\nexport interface DumpIOInfo {\r\n  from: string\r\n  tag: 'Input' | 'Output'\r\n  isLive?: boolean\r\n}\r\n\r\nexport function dumpTime(time: int64) {\r\n  if (time < 0) {\r\n    time = 0n\r\n  }\r\n  const ms = static_cast<int32>(time % 1000n)\r\n  const secs = static_cast<int32>(time / 1000n % 60n)\r\n  const mins = static_cast<int32>(time / 1000n / 60n % 60n)\r\n  const hours = static_cast<int32>(time / 1000n / 3600n)\r\n  return string.format('%02d:%02d:%02d.%03d', hours, mins, secs, ms)\r\n}\r\n\r\nexport function dumpInt64(v: int64) {\r\n  if (v < 10000n) {\r\n    return toString(static_cast<int32>(v))\r\n  }\r\n  return static_cast<int32>(v / 1000n) + 'k'\r\n}\r\n\r\nexport function dumpBitrate(v: int64) {\r\n  if (v < 10000n) {\r\n    return toString(static_cast<int32>(v)) + ' bps/s'\r\n  }\r\n  return static_cast<int32>(v / 1000n) + ' kbps/s'\r\n}\r\n\r\nexport function dumpKey<T>(obj: Record<string, T>, value: T, defaultValue: string = 'unknown') {\r\n  let name = defaultValue\r\n  object.each(obj, (v, k) => {\r\n    if (value === v) {\r\n      name = k\r\n      return false\r\n    }\r\n  })\r\n  return name\r\n}\r\n\r\nexport function dumpCodecName(codecType: AVMediaType, codecId: AVCodecID) {\r\n  if (codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n    return dumpKey(stringEnum.AudioCodecString2CodecId, codecId)\r\n  }\r\n  else if (codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n    return dumpKey(stringEnum.VideoCodecString2CodecId, codecId)\r\n  }\r\n  else if (codecType === AVMediaType.AVMEDIA_TYPE_SUBTITLE) {\r\n    return dumpKey(stringEnum.SubtitleCodecString2CodecId, codecId)\r\n  }\r\n  return 'unknown'\r\n}\r\n\r\nexport function dumpFormatName(format: AVFormat) {\r\n  return dumpKey(stringEnum.Format2AVFormat, format)\r\n}\r\n\r\nexport function dumpProfileName(codecId: AVCodecID, profile: int32) {\r\n  switch (codecId) {\r\n    case AVCodecID.AV_CODEC_ID_AAC:\r\n      return aac.AACProfile2Name[profile] || 'LC'\r\n    case AVCodecID.AV_CODEC_ID_MP3:\r\n      return mp3.MP3Profile2Name[profile] || 'Layer3'\r\n    case AVCodecID.AV_CODEC_ID_H264:\r\n      return h264.H264Profile2Name[profile] || 'High'\r\n    case AVCodecID.AV_CODEC_ID_HEVC:\r\n      return hevc.HEVCProfile2Name[profile] || 'Main'\r\n    case AVCodecID.AV_CODEC_ID_AV1:\r\n      return av1.AV1Profile2Name[profile] || 'Main'\r\n    case AVCodecID.AV_CODEC_ID_VP9:\r\n      return vp9.VP9Profile2Name[profile] || 'Profile0'\r\n  }\r\n}\r\n\r\nexport function dumpAVStreamInterface(stream: AVStreamInterface, index: number, prefix: string) {\r\n  const mediaType = dumpKey(stringEnum.mediaType2AVMediaType, stream.codecpar.codecType)\r\n\r\n  const list = []\r\n\r\n  if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n    const profileName = dumpProfileName(stream.codecpar.codecId, stream.codecpar.profile)\r\n    const codecName = dumpKey(stringEnum.AudioCodecString2CodecId, stream.codecpar.codecId)\r\n    list.push(`${codecName}${profileName ? ` (${profileName})` : ''}`)\r\n\r\n    list.push(`${stream.codecpar.sampleRate} Hz`)\r\n    let channel = `${stream.codecpar.chLayout.nbChannels} channels`\r\n\r\n    if (stream.codecpar.chLayout.order === AVChannelOrder.AV_CHANNEL_ORDER_NATIVE) {\r\n      const name = dumpKey(layoutName2AVChannelLayout, static_cast<double>(stream.codecpar.chLayout.u.mask), '')\r\n      if (name) {\r\n        channel = name\r\n      }\r\n    }\r\n    list.push(channel)\r\n    list.push(dumpKey(stringEnum.SampleFmtString2SampleFormat, stream.codecpar.format))\r\n    if (stream.codecpar.bitrate > 0n) {\r\n      list.push(`${dumpBitrate(stream.codecpar.bitrate)}`)\r\n    }\r\n  }\r\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n    const profileName = dumpProfileName(stream.codecpar.codecId, stream.codecpar.profile)\r\n    const codecName = dumpKey(stringEnum.VideoCodecString2CodecId, stream.codecpar.codecId)\r\n    list.push(`${codecName}${profileName ? ` (${profileName})` : ''}`)\r\n\r\n    if (stream.codecpar.format !== NOPTS_VALUE) {\r\n      const pixfmt = dumpKey(stringEnum.PixfmtString2AVPixelFormat, stream.codecpar.format, `unknown(${stream.codecpar.format})`)\r\n      const range = dumpKey(stringEnum.colorRange2AVColorRange, stream.codecpar.colorRange, 'tv')\r\n      const space = dumpKey(stringEnum.colorSpace2AVColorSpace, stream.codecpar.colorSpace, 'bt709')\r\n      const primary = dumpKey(stringEnum.colorPrimaries2AVColorPrimaries, stream.codecpar.colorPrimaries, 'bt709')\r\n      const trc = dumpKey(stringEnum.colorTrc2AVColorTransferCharacteristic, stream.codecpar.colorTrc, 'bt709')\r\n      const isHdr_ = isHdr(stream.codecpar)\r\n      if (space === primary && primary === trc) {\r\n        list.push(`${pixfmt}(${range}, ${space}, ${isHdr_ ? 'HDR' : 'SDR'})`)\r\n      }\r\n      else {\r\n        list.push(`${pixfmt}(${range}, ${space}/${primary}/${trc}, ${isHdr_ ? 'HDR' : 'SDR'})`)\r\n      }\r\n    }\r\n\r\n    const dar = {\r\n      num: stream.codecpar.width * stream.codecpar.sampleAspectRatio.num,\r\n      den: stream.codecpar.height * stream.codecpar.sampleAspectRatio.den\r\n    }\r\n    avReduce(dar)\r\n\r\n    list.push(`${stream.codecpar.width}x${stream.codecpar.height} [SAR: ${stream.codecpar.sampleAspectRatio.num}:${stream.codecpar.sampleAspectRatio.den} DAR ${dar.num}:${dar.den}]`)\r\n\r\n    if (stream.codecpar.bitrate > 0n) {\r\n      list.push(`${dumpBitrate(stream.codecpar.bitrate)}`)\r\n    }\r\n    if (avQ2D(stream.codecpar.framerate) > 0) {\r\n      list.push(`${avQ2D(stream.codecpar.framerate).toFixed(2)} fps`)\r\n      list.push(`${avQ2D(stream.codecpar.framerate).toFixed(2)} tbr`)\r\n    }\r\n    list.push(`${dumpInt64(static_cast<int64>(avQ2D({\r\n      num: stream.timeBase.den,\r\n      den: stream.timeBase.num\r\n    })))} tbn`)\r\n\r\n\r\n  }\r\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_SUBTITLE) {\r\n    const codecName = dumpKey(stringEnum.SubtitleCodecString2CodecId, stream.codecpar.codecId)\r\n    list.push(codecName)\r\n    if (stream.codecpar.bitrate > 0n) {\r\n      list.push(`${dumpBitrate(stream.codecpar.bitrate)}`)\r\n    }\r\n  }\r\n  else {\r\n    if (stream.codecpar.bitrate > 0n) {\r\n      list.push(`${dumpBitrate(stream.codecpar.bitrate)}`)\r\n    }\r\n  }\r\n\r\n  let disposition = ''\r\n  if (stream.disposition) {\r\n    disposition = ' '\r\n    if (stream.disposition & AVDisposition.DEFAULT) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DEFAULT)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.DUB) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DUB)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.ORIGINAL) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.ORIGINAL)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.COMMENT) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.COMMENT)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.LYRICS) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.LYRICS)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.KARAOKE) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.KARAOKE)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.FORCED) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.FORCED)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.HEARING_IMPAIRED) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.HEARING_IMPAIRED)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.VISUAL_IMPAIRED) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.VISUAL_IMPAIRED)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.CLEAN_EFFECTS) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.CLEAN_EFFECTS)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.ATTACHED_PIC) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.ATTACHED_PIC)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.TIMED_THUMBNAILS) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.TIMED_THUMBNAILS)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.CAPTIONS) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.CAPTIONS)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.DESCRIPTIONS) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DESCRIPTIONS)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.METADATA) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.METADATA)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.DEPENDENT) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DEPENDENT)}) `\r\n    }\r\n    if (stream.disposition & AVDisposition.STILL_IMAGE) {\r\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.STILL_IMAGE)}) `\r\n    }\r\n  }\r\n\r\n  let dump = `${prefix}Stream #${index}:${stream.index} ${mediaType}: ${list.join(', ')}${disposition}\\n`\r\n\r\n  if (Object.keys(stream.metadata).length) {\r\n    dump += `${prefix}  Metadata:\\n`\r\n    object.each(stream.metadata, (value, key) => {\r\n      if (!is.object(value) && !is.array(value)) {\r\n        dump += `${prefix}    ${key}: ${value}\\n`\r\n      }\r\n      else if (key === 'matrix' && stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n        dump += `${prefix}    ${key}: [${value.toString()}]\\n`\r\n      }\r\n    })\r\n  }\r\n\r\n  return dump\r\n}\r\n\r\nexport function dumpAVFormatContextInterface(formatContext: AVFormatContextInterface, index: number, input: DumpIOInfo) {\r\n  let dump = `${input.tag} #${index}, ${input.isLive ? 'live' : 'vod'}, ${dumpKey(stringEnum.Format2AVFormat, formatContext.format)}, from '${input.from}':\\n`\r\n  if (Object.keys(formatContext.metadata).length) {\r\n    dump += '  Metadata:\\n'\r\n    object.each(formatContext.metadata, (value, key) => {\r\n      if (!is.object(value) || !is.array(value)) {\r\n        dump += `    ${key}: ${value}\\n`\r\n      }\r\n    })\r\n  }\r\n\r\n  let duration = 0n\r\n  let bitrate = 0n\r\n  let start = -1n\r\n\r\n  formatContext.streams.forEach((stream) => {\r\n    const d = avRescaleQ(stream.duration, stream.timeBase, AV_MILLI_TIME_BASE_Q)\r\n    const s = avRescaleQ(stream.startTime, stream.timeBase, AV_MILLI_TIME_BASE_Q)\r\n\r\n    if (d > duration) {\r\n      duration = d\r\n    }\r\n    if (s < start || start === -1n) {\r\n      start = s\r\n    }\r\n    bitrate += stream.codecpar.bitrate\r\n  })\r\n\r\n  dump += `  Duration: ${dumpTime(duration)}, start: ${dumpTime(start)}, bitrate: ${dumpBitrate(bitrate)}\\n`\r\n  formatContext.streams.forEach((stream, i) => {\r\n    dump += dumpAVStreamInterface(stream, index, '  ')\r\n  })\r\n  return dump\r\n}\r\n\r\nexport default function dump(formatContexts: (AVFormatContextInterface | AVIFormatContext | AVOFormatContext)[], inputs: DumpIOInfo[]) {\r\n  let dump = ''\r\n  formatContexts.forEach((formatContext, index) => {\r\n    if (formatContext instanceof AVFormatContext) {\r\n      const streams: AVStreamInterface[] = []\r\n      for (let i = 0; i < formatContext.streams.length; i++) {\r\n        const stream = formatContext.streams[i] as AVStream\r\n        streams.push({\r\n          index: stream.index,\r\n          id: stream.id,\r\n          codecpar: addressof(stream.codecpar),\r\n          nbFrames: stream.nbFrames,\r\n          metadata: stream.metadata,\r\n          duration: stream.duration,\r\n          startTime: stream.startTime,\r\n          disposition: stream.disposition,\r\n          timeBase: stream.timeBase\r\n        })\r\n      }\r\n      formatContext = {\r\n        metadata: formatContext.metadata,\r\n        format: formatContext.format,\r\n        chapters: formatContext.chapters,\r\n        streams\r\n      }\r\n    }\r\n    dump += dumpAVFormatContextInterface(formatContext as AVFormatContextInterface, index, inputs[index])\r\n  })\r\n  return dump\r\n}\r\n","/*\r\n * libmedia abstract format encoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID } from 'avutil/codec'\r\nimport { AVFormat } from 'avutil/avformat'\r\nimport { AVOFormatContext } from '../AVFormatContext'\r\nimport AVPacket from 'avutil/struct/avpacket'\r\n\r\nexport default abstract class OFormat {\r\n\r\n  public type: AVFormat = AVFormat.UNKNOWN\r\n\r\n  public abstract init(formatContext: AVOFormatContext): number\r\n\r\n  public async destroy(formatContext: AVOFormatContext) {}\r\n\r\n  public abstract writeHeader(formatContext: AVOFormatContext): number\r\n\r\n  public abstract writeAVPacket(formatContext: AVOFormatContext, avpacket: pointer<AVPacket>): number\r\n\r\n  public abstract flush(formatContext: AVOFormatContext): number\r\n\r\n  public abstract writeTrailer(formatContext: AVOFormatContext): number\r\n\r\n}\r\n\r\nexport const OFormatSupportedCodecs: Record<Exclude<AVFormat, AVFormat.UNKNOWN>, AVCodecID[]> = {\r\n  [AVFormat.AAC]: [AVCodecID.AV_CODEC_ID_AAC],\r\n  [AVFormat.AVI]: [\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_AC3,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_H264\r\n  ],\r\n  [AVFormat.FLAC]: [AVCodecID.AV_CODEC_ID_FLAC],\r\n  [AVFormat.FLV]: [\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_SPEEX,\r\n    AVCodecID.AV_CODEC_ID_ADPCM_SWF,\r\n    AVCodecID.AV_CODEC_ID_NELLYMOSER,\r\n    AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n    AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n    AVCodecID.AV_CODEC_ID_AC3,\r\n    AVCodecID.AV_CODEC_ID_EAC3,\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_FLAC,\r\n\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_VP8,\r\n    AVCodecID.AV_CODEC_ID_VVC\r\n  ],\r\n  [AVFormat.IVF]: [AVCodecID.AV_CODEC_ID_VP8, AVCodecID.AV_CODEC_ID_VP9],\r\n  [AVFormat.MATROSKA]: [\r\n    AVCodecID.AV_CODEC_ID_VORBIS,\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_FLAC,\r\n    AVCodecID.AV_CODEC_ID_ALAC,\r\n    AVCodecID.AV_CODEC_ID_DTS,\r\n    AVCodecID.AV_CODEC_ID_EAC3,\r\n    AVCodecID.AV_CODEC_ID_AC3,\r\n    AVCodecID.AV_CODEC_ID_PCM_F32LE,\r\n    AVCodecID.AV_CODEC_ID_PCM_S16BE,\r\n    AVCodecID.AV_CODEC_ID_PCM_S16LE,\r\n\r\n    AVCodecID.AV_CODEC_ID_VP8,\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_VVC,\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_THEORA,\r\n\r\n    AVCodecID.AV_CODEC_ID_WEBVTT,\r\n    AVCodecID.AV_CODEC_ID_SSA,\r\n    AVCodecID.AV_CODEC_ID_ASS,\r\n    AVCodecID.AV_CODEC_ID_TEXT,\r\n    AVCodecID.AV_CODEC_ID_SUBRIP\r\n  ],\r\n  [AVFormat.WEBM]: [\r\n    AVCodecID.AV_CODEC_ID_VORBIS,\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n\r\n    AVCodecID.AV_CODEC_ID_VP8,\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n\r\n    AVCodecID.AV_CODEC_ID_WEBVTT\r\n  ],\r\n  [AVFormat.MOV]: [\r\n    AVCodecID.AV_CODEC_ID_VORBIS,\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_FLAC,\r\n    AVCodecID.AV_CODEC_ID_SPEEX,\r\n    AVCodecID.AV_CODEC_ID_AC3,\r\n    AVCodecID.AV_CODEC_ID_EAC3,\r\n\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_VVC,\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n\r\n    AVCodecID.AV_CODEC_ID_WEBVTT,\r\n    AVCodecID.AV_CODEC_ID_MOV_TEXT\r\n  ],\r\n  [AVFormat.MP3]: [AVCodecID.AV_CODEC_ID_MP3],\r\n  [AVFormat.MPEGTS]: [\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_AC3,,\r\n    AVCodecID.AV_CODEC_ID_DTS,\r\n    AVCodecID.AV_CODEC_ID_AAC_LATM,\r\n    AVCodecID.AV_CODEC_ID_EAC3,\r\n\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_VVC\r\n  ],\r\n  [AVFormat.MPEGPS]: [\r\n    AVCodecID.AV_CODEC_ID_MP1,\r\n    AVCodecID.AV_CODEC_ID_MP2,\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_AC3,,\r\n    AVCodecID.AV_CODEC_ID_DTS,\r\n\r\n    AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_VVC\r\n  ],\r\n  [AVFormat.OGG]: [\r\n    AVCodecID.AV_CODEC_ID_VORBIS,\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_FLAC,\r\n    AVCodecID.AV_CODEC_ID_SPEEX\r\n  ],\r\n  [AVFormat.WAV]: [],\r\n  [AVFormat.WEBVTT]: [AVCodecID.AV_CODEC_ID_WEBVTT],\r\n  [AVFormat.ASS]: [AVCodecID.AV_CODEC_ID_ASS, AVCodecID.AV_CODEC_ID_SSA],\r\n  [AVFormat.SUBRIP]: [AVCodecID.AV_CODEC_ID_SUBRIP],\r\n  [AVFormat.TTML]: [AVCodecID.AV_CODEC_ID_TTML],\r\n  [AVFormat.H264]: [AVCodecID.AV_CODEC_ID_H264],\r\n  [AVFormat.HEVC]: [AVCodecID.AV_CODEC_ID_HEVC],\r\n  [AVFormat.VVC]: [AVCodecID.AV_CODEC_ID_VVC],\r\n  [AVFormat.RTSP]: [\r\n    AVCodecID.AV_CODEC_ID_OPUS,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n    AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n    AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_VP8,\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_AV1\r\n  ],\r\n  [AVFormat.RTMP]: [\r\n    AVCodecID.AV_CODEC_ID_MP3,\r\n    AVCodecID.AV_CODEC_ID_AAC,\r\n    AVCodecID.AV_CODEC_ID_SPEEX,\r\n    AVCodecID.AV_CODEC_ID_ADPCM_SWF,\r\n    AVCodecID.AV_CODEC_ID_NELLYMOSER,\r\n    AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n    AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n\r\n    AVCodecID.AV_CODEC_ID_MPEG4,\r\n    AVCodecID.AV_CODEC_ID_H264,\r\n    AVCodecID.AV_CODEC_ID_HEVC,\r\n    AVCodecID.AV_CODEC_ID_AV1,\r\n    AVCodecID.AV_CODEC_ID_VP9,\r\n    AVCodecID.AV_CODEC_ID_VVC\r\n  ]\r\n}\r\n","/*\r\n * libmedia check stream parameters\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVIFormatContext, AVOFormatContext } from '../AVFormatContext'\r\nimport {  NOPTS_VALUE } from 'avutil/constant'\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\nimport * as array from 'common/util/array'\r\nimport { avQ2D } from 'avutil/util/rational'\r\n\r\nexport function checkStreamParameters(context: AVIFormatContext | AVOFormatContext) {\r\n  let result = true\r\n  array.each(context.streams, (stream) => {\r\n    switch (stream.codecpar.codecType) {\r\n      case AVMediaType.AVMEDIA_TYPE_AUDIO:\r\n        if (stream.codecpar.chLayout.nbChannels === NOPTS_VALUE\r\n          || stream.codecpar.sampleRate === NOPTS_VALUE\r\n          || stream.codecpar.frameSize === NOPTS_VALUE\r\n          || stream.codecpar.bitrate === 0n\r\n        ) {\r\n          result = false\r\n        }\r\n        break\r\n      case AVMediaType.AVMEDIA_TYPE_VIDEO:\r\n        if (avQ2D(stream.codecpar.framerate) === 0\r\n          || stream.codecpar.width === NOPTS_VALUE\r\n          || stream.codecpar.height === NOPTS_VALUE\r\n          || stream.codecpar.bitrate === 0n\r\n        ) {\r\n          result = false\r\n        }\r\n\r\n        if ((stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264\r\n          || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n          || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n          || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MPEG4\r\n        )\r\n          && (\r\n            stream.codecpar.profile === NOPTS_VALUE\r\n              || stream.codecpar.level === NOPTS_VALUE\r\n          )\r\n        ) {\r\n          result = false\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  return result\r\n}\r\n","/*\r\n * libmedia guess delay from pts\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as array from 'common/util/array'\r\n\r\nexport default function guessDelayFromPts(ptsList: int64[]) {\r\n  if (ptsList.length < 2) {\r\n    return 0\r\n  }\r\n  const dtsList = ptsList.slice().sort((a, b) => {\r\n    if (a > b) {\r\n      return 1\r\n    }\r\n    else {\r\n      return -1\r\n    }\r\n  })\r\n  let maxDelay = 0\r\n\r\n  let index = 0\r\n  let queue: int64[] = []\r\n\r\n  for (let i = 0; i < ptsList.length; i++) {\r\n    array.sortInsert(queue, ptsList[i], (a) => {\r\n      if (a < ptsList[i]) {\r\n        return 1\r\n      }\r\n      else {\r\n        return -1\r\n      }\r\n    })\r\n    while (queue.length && queue[0] === dtsList[index]) {\r\n      queue.shift()\r\n      index++\r\n    }\r\n    maxDelay = Math.max(maxDelay, queue.length)\r\n  }\r\n  return maxDelay\r\n}\r\n","/*\r\n * libmedia guess dts from pts\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\nexport default function guessDtsFromPts(delay: int32, ptsList: int64[]) {\r\n  if (ptsList.length < delay) {\r\n    return ptsList.slice().sort((a, b) => {\r\n      if (a > b) {\r\n        return 1\r\n      }\r\n      else {\r\n        return -1\r\n      }\r\n    })\r\n  }\r\n  const pre: int64[] = []\r\n  const dtsList = ptsList.slice().sort((a, b) => {\r\n    if (a > b) {\r\n      return 1\r\n    }\r\n    else {\r\n      return -1\r\n    }\r\n  })\r\n  if (delay) {\r\n    const defaultDuration = dtsList[dtsList.length - 1] - dtsList[dtsList.length - 2]\r\n    for (let i = delay; i > 0; i-- ) {\r\n      pre.push((pre.length ? pre[pre.length - 1] : 0n) + (i >= dtsList.length ? defaultDuration : (dtsList[i] - dtsList[i - 1])))\r\n    }\r\n    pre.reverse()\r\n  }\r\n\r\n  const result: int64[] = []\r\n  for (let i = 0; i < delay; i++) {\r\n    result.push(dtsList[0] - pre[i])\r\n  }\r\n  return result.concat(dtsList)\r\n}\r\n","/*\r\n * libmedia round to standard framerate\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { avQ2D, avReduce } from 'avutil/util/rational'\r\n\r\nconst MAX_STD_FRAMERATE = 30 * 12 + 30 + 3 + 6\r\n\r\nfunction getStdFramerate(index: number) {\r\n  if (index < 30 * 12) {\r\n    return (index + 1) * 1001\r\n  }\r\n  index -= 30 * 12\r\n  if (index < 30) {\r\n    return (index + 31) * 1001 * 12\r\n  }\r\n  index -= 30\r\n  if (index < 3) {\r\n    return [80, 120, 240][index] * 1001 * 12\r\n  }\r\n  index -= 3\r\n  return [24, 30, 60, 12, 15, 48][index] * 1000 * 12\r\n}\r\n\r\nexport default function roundStandardFramerate(framerate: Rational) {\r\n  let bestFps = 0\r\n  let bestError = 0.01\r\n  for (let i = 0; i < MAX_STD_FRAMERATE; i++) {\r\n    const error = Math.abs(avQ2D(framerate) / avQ2D({ num: getStdFramerate(i), den: 12 * 1001}) - 1)\r\n    if (error < bestError) {\r\n      bestError = error\r\n      bestFps = getStdFramerate(i)\r\n    }\r\n  }\r\n  if (bestFps) {\r\n    const f = { num: bestFps, den: 12 * 1001}\r\n    avReduce(f)\r\n    framerate.num = f.num\r\n    framerate.den = f.den\r\n  }\r\n}\r\n","/*\r\n * libmedia mux util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket from 'avutil/struct/avpacket'\r\nimport { AVOFormatContext } from './AVFormatContext'\r\nimport * as object from 'common/util/object'\r\nimport * as logger from 'common/util/logger'\r\nimport { OFormatSupportedCodecs } from './formats/OFormat'\r\nimport * as array from 'common/util/array'\r\nimport { AVFormat } from 'avutil/avformat'\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\nimport * as errorType from 'avutil/error'\r\nimport { dumpCodecName, dumpFormatName } from './dump'\r\nimport { NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport * as bigint from 'common/util/bigint'\r\n\r\nexport type MuxOptions = {\r\n  zeroStart?: boolean\r\n  nonnegative?: boolean\r\n}\r\n\r\ninterface MuxPrivateData {\r\n  firstPts: Map<number, int64>\r\n  firstDts: Map<number, int64>\r\n  dtsPtsDelta: Map<number, int64>\r\n}\r\n\r\nconst defaultMuxOptions: MuxOptions = {\r\n  zeroStart: false,\r\n  nonnegative: false\r\n}\r\n\r\nexport function open(formatContext: AVOFormatContext, options: MuxOptions = {}) {\r\n  const opts = object.extend({}, defaultMuxOptions, options)\r\n  if (!formatContext.ioWriter) {\r\n    logger.fatal('need ioWriter')\r\n  }\r\n  if (!formatContext.oformat) {\r\n    logger.fatal('need oformat')\r\n  }\r\n  formatContext.options = opts\r\n\r\n  formatContext.privateData2 = {\r\n    firstPts: new Map(),\r\n    firstDts: new Map(),\r\n    dtsPtsDelta: new Map()\r\n  }\r\n\r\n  let supportCodecs = OFormatSupportedCodecs[formatContext.oformat.type]\r\n  if (supportCodecs) {\r\n    for (let i = 0; i < formatContext.streams.length; i++) {\r\n      const codecId = formatContext.streams[i].codecpar.codecId\r\n      const codecType = formatContext.streams[i].codecpar.codecType\r\n      if (formatContext.oformat.type === AVFormat.WAV) {\r\n        if (codecId < AVCodecID.AV_CODEC_ID_PCM_S16LE\r\n          || codecId > AVCodecID.AV_CODEC_ID_ADPCM_XMD\r\n        ) {\r\n          logger.error(`format ${dumpFormatName(formatContext.oformat.type)} not support codecId ${dumpCodecName(formatContext.streams[i].codecpar.codecType, codecId)}`)\r\n          return errorType.CODEC_NOT_SUPPORT\r\n        }\r\n      }\r\n      else if (codecType !== AVMediaType.AVMEDIA_TYPE_DATA\r\n        && codecType !== AVMediaType.AVMEDIA_TYPE_ATTACHMENT\r\n        && !array.has(supportCodecs, codecId)\r\n      ) {\r\n        logger.error(`format ${dumpFormatName(formatContext.oformat.type)} not support codecId ${dumpCodecName(formatContext.streams[i].codecpar.codecType, codecId)}`)\r\n        return errorType.CODEC_NOT_SUPPORT\r\n      }\r\n    }\r\n  }\r\n  return formatContext.oformat.init(formatContext)\r\n}\r\n\r\nexport function writeHeader(formatContext: AVOFormatContext): number {\r\n  formatContext.oformat.writeHeader(formatContext)\r\n  return 0\r\n}\r\n\r\nexport function writeAVPacket(formatContext: AVOFormatContext, avpacket: pointer<AVPacket>): number {\r\n  const privateData = formatContext.privateData2 as MuxPrivateData\r\n  if (!privateData.firstDts.has(avpacket.streamIndex)) {\r\n    privateData.firstDts.set(avpacket.streamIndex, avpacket.dts === NOPTS_VALUE_BIGINT ? 0n : avpacket.dts)\r\n  }\r\n  if (!privateData.firstPts.has(avpacket.streamIndex)) {\r\n    privateData.firstPts.set(avpacket.streamIndex, avpacket.pts === NOPTS_VALUE_BIGINT ? 0n : avpacket.pts)\r\n    privateData.dtsPtsDelta.set(avpacket.streamIndex, bigint.min(privateData.firstDts.get(avpacket.streamIndex), privateData.firstPts.get(avpacket.streamIndex)))\r\n  }\r\n  if ((formatContext.options as MuxOptions).zeroStart) {\r\n    avpacket.dts -= privateData.dtsPtsDelta.get(avpacket.streamIndex)\r\n    avpacket.pts -= privateData.dtsPtsDelta.get(avpacket.streamIndex)\r\n  }\r\n  else if ((formatContext.options as MuxOptions).nonnegative) {\r\n    if (privateData.firstDts.get(avpacket.streamIndex) < 0\r\n      || privateData.firstPts.get(avpacket.streamIndex) < 0\r\n    ) {\r\n      avpacket.dts -= privateData.dtsPtsDelta.get(avpacket.streamIndex)\r\n      avpacket.pts -= privateData.dtsPtsDelta.get(avpacket.streamIndex)\r\n    }\r\n  }\r\n\r\n  return formatContext.oformat.writeAVPacket(formatContext, avpacket)\r\n}\r\n\r\nexport function writeTrailer(formatContext: AVOFormatContext): number {\r\n  formatContext.oformat.writeTrailer(formatContext)\r\n  return 0\r\n}\r\n\r\nexport function flush(formatContext: AVOFormatContext) {\r\n  formatContext.oformat.flush(formatContext)\r\n}\r\n","/*\r\n * libmedia custom loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport default abstract class CustomIOLoader {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * 源扩展名，若无法自动分析出源的格式需要使用此数据获取默认的格式\r\n   */\r\n  get ext(): string {\r\n    throw new Error('need implemented ext getter')\r\n  }\r\n\r\n  /**\r\n   * IOFlags\r\n   */\r\n  get flags(): int32 {\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * 源的名字，主要用于日志打印，可不传\r\n   */\r\n  get name(): string {\r\n    return 'CustomIOLoader.' + Math.random()\r\n  }\r\n\r\n  /**\r\n   * 最小缓冲时长默认 4（秒）\r\n   * \r\n   * 开启 jitter buffer 需要\r\n   */\r\n  get minBuffer(): number {\r\n    return 4\r\n  }\r\n\r\n  /**\r\n   * 打开 ioloader\r\n   * \r\n   * @returns 成功返回 0, 失败返回错误码（负值）\r\n   */\r\n  public abstract open(): Promise<int32>\r\n\r\n  /**\r\n   * 读取数据到缓冲区\r\n   * \r\n   * @param buffer 可以放置数据的缓冲区，类 Uint8Array 结构\r\n   * @param options 一些配置（比如 hls 和 dash 有相关配置项）\r\n   * \r\n   * @returns 返回写入的数据长度，失败返回错误码（负值）\r\n   */\r\n  public abstract read(buffer: Uint8ArrayInterface, options?: Data): Promise<int32>\r\n\r\n  /**\r\n   * 写出数据，一些协议如 rtmp、rtsp 需要与服务器交互数据\r\n   * \r\n   * @param buffer 要写出的数据，类 Uint8Array 结构\r\n   * \r\n   * @returns 成功返回 0，失败返回错误码（负值）\r\n   */\r\n  public write(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    throw new Error('need implemented write function')\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos 位置\r\n   * @param options 一些配置（比如 hls 和 dash 有相关配置项）\r\n   * \r\n   * @returns 成功返回 0, 否则失败，可以返回错误码（负值）\r\n   */\r\n  public abstract seek(pos: int64, options?: Data): Promise<int32>\r\n\r\n  /**\r\n   * 数据总字节大小\r\n   * \r\n   * 没有返回 0n\r\n   */\r\n  public abstract size(): Promise<int64>\r\n\r\n  /**\r\n   * 停止 ioloader\r\n   */\r\n  public abstract stop(): Promise<void>\r\n}\r\n","/*\r\n * libmedia fetch loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Sleep from 'common/timer/Sleep'\r\nimport IOLoader, { IOLoaderOptions, IOLoaderStatus } from './IOLoader'\r\nimport * as object from 'common/util/object'\r\nimport { IOError } from 'common/io/error'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\nimport { Data, HttpOptions, Range } from 'common/types/type'\r\n\r\nexport interface FetchInfo {\r\n  url: string\r\n  httpOptions?: HttpOptions\r\n}\r\n\r\nexport interface FetchIOLoaderOptions extends IOLoaderOptions {\r\n  disableSegment?: boolean\r\n}\r\n\r\nexport default class FetchIOLoader extends IOLoader {\r\n\r\n  declare public options: FetchIOLoaderOptions\r\n\r\n  private contentLength: number\r\n\r\n  private receivedLength: number\r\n\r\n  private info: FetchInfo\r\n\r\n  private range: Range\r\n\r\n  private startBytes: number\r\n\r\n  private endBytes: number\r\n\r\n  private eofIndex: number\r\n\r\n  private abortController: AbortController\r\n\r\n  private reader: ReadableStreamDefaultReader<Uint8Array>\r\n\r\n  private buffers: Uint8Array[]\r\n\r\n  private supportRange: boolean\r\n\r\n  private abortSleep_: Sleep\r\n\r\n  private aborted: boolean\r\n\r\n  constructor(options: FetchIOLoaderOptions = {}) {\r\n    super(options)\r\n  }\r\n\r\n  private async getTotalSize(method: string, headers: Data = {}) {\r\n    const params: RequestInit = {\r\n      method: method,\r\n      headers: {},\r\n      mode: 'cors',\r\n      cache: 'default',\r\n      referrerPolicy: 'no-referrer-when-downgrade'\r\n    }\r\n    if (this.info.httpOptions?.headers) {\r\n      object.each(this.info.httpOptions.headers, (value, key) => {\r\n        params.headers[key] = value\r\n      })\r\n    }\r\n\r\n    object.each(headers, (value, key) => {\r\n      params.headers[key] = value\r\n    })\r\n\r\n    if (this.info.httpOptions?.credentials) {\r\n      params.credentials = this.info.httpOptions.credentials\r\n    }\r\n\r\n    if (this.info.httpOptions?.referrerPolicy) {\r\n      params.referrerPolicy = this.info.httpOptions.referrerPolicy\r\n    }\r\n    if (typeof AbortController === 'function') {\r\n      this.abortController = new AbortController()\r\n      params.signal = this.abortController.signal\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(this.info.url, params)\r\n      if (res.ok && (res.status >= 200 && res.status <= 299)) {\r\n        if (this.abortController) {\r\n          this.abortController.abort()\r\n          this.abortController = null\r\n        }\r\n\r\n        const acceptRanges = res.headers.get('Accept-Ranges')\r\n        if (acceptRanges) {\r\n          if (acceptRanges.indexOf('bytes') === -1) {\r\n            this.supportRange = false\r\n          }\r\n        }\r\n\r\n        const contentRange = res.headers.get('Content-Range')\r\n        if (contentRange) {\r\n          const size = contentRange.split('/')[1]\r\n          if (size) {\r\n            return parseInt(size)\r\n          }\r\n        }\r\n        const lengthHeader = res.headers.get('X-Content-Length') || res.headers.get('Content-Length')\r\n        if (lengthHeader != null) {\r\n          return parseInt(lengthHeader)\r\n        }\r\n      }\r\n    }\r\n    catch (error) {}\r\n    return 0\r\n  }\r\n\r\n  public async open(info: FetchInfo, range: Range = { from: 0, to: -1 }) {\r\n\r\n    this.info = info\r\n    this.range = range\r\n\r\n    if (!this.range.to) {\r\n      this.range.to = -1\r\n    }\r\n\r\n    this.range.from = Math.max(this.range.from, 0)\r\n\r\n    if (this.eofIndex < 0) {\r\n      this.eofIndex = range.to\r\n    }\r\n\r\n    this.startBytes = 0\r\n    this.endBytes = -1\r\n    this.receivedLength = 0\r\n    this.buffers = []\r\n    this.supportRange = true\r\n    this.aborted = false\r\n\r\n    if (this.range && !this.options.isLive) {\r\n      this.startBytes = this.range.from ?? 0\r\n    }\r\n\r\n    this.status = IOLoaderStatus.CONNECTING\r\n\r\n    if (!this.options.isLive && !this.options.disableSegment) {\r\n      let totalSize = await this.getTotalSize('HEAD')\r\n      if (!totalSize) {\r\n        totalSize = await this.getTotalSize('Get', {\r\n          range: 'bytes=0-1'\r\n        })\r\n      }\r\n      if (totalSize <= 2) {\r\n        totalSize = 0\r\n      }\r\n      if (totalSize) {\r\n        this.contentLength = totalSize\r\n        if (this.range.to < 0) {\r\n          this.eofIndex = this.contentLength + this.range.to\r\n        }\r\n        if (this.supportRange) {\r\n          this.endBytes = Math.min(this.startBytes + this.options.preload - 1, this.eofIndex)\r\n        }\r\n      }\r\n      else {\r\n        this.endBytes = -1\r\n      }\r\n    }\r\n\r\n    this.status = IOLoaderStatus.BUFFERING\r\n\r\n    return 0\r\n  }\r\n\r\n  private async openReader() {\r\n    const params: RequestInit = {\r\n      method: 'GET',\r\n      headers: {},\r\n      mode: 'cors',\r\n      cache: 'default',\r\n      referrerPolicy: 'no-referrer-when-downgrade'\r\n    }\r\n    if (this.info.httpOptions?.headers) {\r\n      object.each(this.info.httpOptions.headers, (value, key) => {\r\n        params.headers[key] = value\r\n      })\r\n    }\r\n    if (!this.options.isLive && !this.options.disableSegment) {\r\n      params.headers['range'] = `bytes=${this.startBytes}-${this.endBytes > 0 ? this.endBytes : ''}`\r\n    }\r\n\r\n    if (this.info.httpOptions?.credentials) {\r\n      params.credentials = this.info.httpOptions.credentials\r\n    }\r\n\r\n    if (this.info.httpOptions?.referrerPolicy) {\r\n      params.referrerPolicy = this.info.httpOptions.referrerPolicy\r\n    }\r\n\r\n    if (this.abortController) {\r\n      this.abortController.abort()\r\n    }\r\n\r\n    if (typeof AbortController === 'function') {\r\n      this.abortController = new AbortController()\r\n      params.signal = this.abortController.signal\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(this.info.url, params)\r\n      if (res.ok && (res.status >= 200 && res.status <= 299)) {\r\n        this.reader = res.body.getReader()\r\n      }\r\n      else {\r\n        this.status = IOLoaderStatus.ERROR\r\n        logger.fatal(`FetchStreamLoader: Http code invalid, ${res.status} ${res.statusText}`)\r\n      }\r\n    }\r\n    catch (error) {\r\n      if (this.retryCount < this.options.retryCount && (!this.options.isLive || !this.receivedLength)) {\r\n        this.retryCount++\r\n        this.status = IOLoaderStatus.CONNECTING\r\n\r\n        this.abortSleep_ = new Sleep(this.options.retryInterval)\r\n        await this.abortSleep_\r\n        this.abortSleep_ = null\r\n        if (this.aborted) {\r\n          return\r\n        }\r\n        return this.openReader()\r\n      }\r\n      else {\r\n        logger.fatal(`FetchStreamLoader: exception ${error.message}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  private async readInterval(buffer: Uint8ArrayInterface, preLen: int32 = 0): Promise<number> {\r\n\r\n    let pos = 0\r\n\r\n    while (this.buffers.length && pos < buffer.length) {\r\n      const cache = this.buffers.shift()\r\n      if (cache.length > buffer.length - pos) {\r\n        buffer.set(cache.subarray(0, buffer.length - pos), pos)\r\n        this.buffers.unshift(cache.subarray(buffer.length - pos))\r\n        pos = buffer.length\r\n      }\r\n      else {\r\n        buffer.set(cache, pos)\r\n        pos += cache.length\r\n      }\r\n    }\r\n\r\n    if (pos >= buffer.length) {\r\n      return buffer.length + preLen\r\n    }\r\n\r\n    if (this.status === IOLoaderStatus.COMPLETE) {\r\n      return pos > 0 ? (pos + preLen) : (preLen > 0 ? preLen : IOError.END)\r\n    }\r\n\r\n    if (!this.reader) {\r\n      await this.openReader()\r\n      if (this.aborted) {\r\n        return IOError.END\r\n      }\r\n    }\r\n\r\n    const { value, done } = await this.reader.read()\r\n\r\n    if (done) {\r\n      if (this.contentLength !== null && (this.receivedLength + this.range.from) < this.endBytes + 1) {\r\n        this.status = IOLoaderStatus.ERROR\r\n        logger.fatal('Fetch stream meet Early-EOF')\r\n      }\r\n      else if (this.options.isLive || this.options.disableSegment || (this.receivedLength + this.range.from) >= this.eofIndex) {\r\n        this.status = IOLoaderStatus.COMPLETE\r\n        this.startBytes = 0\r\n        return pos > 0 ? (pos + preLen) : (preLen > 0 ? preLen : IOError.END)\r\n      }\r\n      else {\r\n\r\n        await this.reader.cancel()\r\n\r\n        if (this.abortController) {\r\n          this.abortController.abort()\r\n          this.abortController = null\r\n        }\r\n\r\n        this.reader = null\r\n\r\n        this.startBytes = this.endBytes + 1\r\n        this.endBytes = Math.min(this.startBytes + this.options.preload - 1, this.eofIndex)\r\n\r\n        return this.readInterval(buffer.subarray(pos, undefined, true), pos)\r\n      }\r\n    }\r\n    else {\r\n\r\n      this.receivedLength += value.length\r\n\r\n      if (value.length > buffer.length - pos) {\r\n        buffer.set(value.subarray(0, buffer.length - pos), pos)\r\n        this.buffers.push(value.subarray(buffer.length - pos))\r\n        return buffer.length + preLen\r\n      }\r\n      else {\r\n        buffer.set(value, pos)\r\n        pos += value.length\r\n        return pos + preLen\r\n      }\r\n    }\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    return this.readInterval(buffer)\r\n  }\r\n\r\n  public async seek(pos: int64) {\r\n\r\n    if (!this.supportRange) {\r\n      return errorType.OPERATE_NOT_SUPPORT\r\n    }\r\n\r\n    await this.abort()\r\n    this.aborted = false\r\n    this.receivedLength = Number(pos) - this.range.from\r\n    this.startBytes = Number(pos)\r\n    if (!this.options.disableSegment) {\r\n      this.endBytes = Math.min(this.startBytes + this.options.preload, this.eofIndex)\r\n    }\r\n    this.buffers.length = 0\r\n    if (this.status === IOLoaderStatus.COMPLETE) {\r\n      this.status = IOLoaderStatus.BUFFERING\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  public async size() {\r\n    if (this.options.isLive) {\r\n      return 0n\r\n    }\r\n    return static_cast<int64>(this.contentLength || 0)\r\n  }\r\n\r\n  public abortSleep() {\r\n    this.aborted = true\r\n    if (this.abortSleep_) {\r\n      this.abortSleep_.stop()\r\n      this.abortSleep_ = null\r\n    }\r\n  }\r\n\r\n  public async abort() {\r\n    this.abortSleep()\r\n    if (!this.reader) {\r\n      return\r\n    }\r\n    await this.reader.cancel()\r\n    if (this.abortController) {\r\n      this.abortController.abort()\r\n      this.abortController = null\r\n    }\r\n    this.reader = null\r\n  }\r\n\r\n  public async stop() {\r\n    this.status = IOLoaderStatus.IDLE\r\n    await this.abort()\r\n  }\r\n\r\n  public getUrl() {\r\n    return this.info?.url\r\n  }\r\n}\r\n","/*\r\n * libmedia file loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOLoader, { IOLoaderStatus } from './IOLoader'\r\nimport { IOError } from 'common/io/error'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport * as is from 'common/util/is'\r\nimport { Range } from 'common/types/type'\r\n\r\nexport interface FileInfo {\r\n  file: File\r\n}\r\n\r\n// chrome 目前使用 arrayBuffer 读文件数据会造成内存泄漏，先关闭\r\nconst hasArrayBuffer = is.func(Blob.prototype.arrayBuffer)\r\nconst hasFileReaderSync = typeof FileReaderSync === 'function'\r\n\r\nexport default class FileIOLoader extends IOLoader {\r\n\r\n  private info: FileInfo\r\n\r\n  private range: Range\r\n\r\n  private readPos: number\r\n\r\n  private endPos: number\r\n\r\n  private reader: FileReader | FileReaderSync\r\n  private readerResolve: (buffer: ArrayBuffer) => void\r\n\r\n  public async open(info: FileInfo, range: Range = { from: 0, to: -1 }) {\r\n\r\n    this.info = info\r\n    this.range = range\r\n\r\n    this.readPos = 0\r\n    this.endPos = this.info.file.size\r\n\r\n    if (range.from > 0) {\r\n      this.readPos = range.from\r\n    }\r\n    if (range.to > 0) {\r\n      this.endPos = range.to\r\n    }\r\n\r\n    this.status = IOLoaderStatus.BUFFERING\r\n\r\n    return 0\r\n  }\r\n\r\n  private readBufferByReaderSync(len: number) {\r\n    if (!this.reader) {\r\n      this.reader = new FileReaderSync()\r\n    }\r\n    return this.reader.readAsArrayBuffer(this.info.file.slice(this.readPos, this.readPos + len)) as ArrayBuffer\r\n  }\r\n\r\n  private async readBufferByReader(len: number) {\r\n    if (!this.reader) {\r\n      this.reader = new FileReader()\r\n      this.reader.onloadend = (event) => {\r\n        if (this.readerResolve) {\r\n          this.readerResolve(event.target.result as ArrayBuffer)\r\n        }\r\n      }\r\n    }\r\n    return new Promise<ArrayBuffer>((resolve) => {\r\n      this.readerResolve = resolve\r\n      this.reader.readAsArrayBuffer(this.info.file.slice(this.readPos, this.readPos + len))\r\n    })\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface) {\r\n    if (this.readPos >= this.endPos) {\r\n      this.status = IOLoaderStatus.COMPLETE\r\n      return IOError.END\r\n    }\r\n    const len = Math.min(buffer.length, this.endPos - this.readPos)\r\n\r\n    if (hasFileReaderSync) {\r\n      buffer.set(new Uint8Array(this.readBufferByReaderSync(len)), 0)\r\n    }\r\n    else if (hasArrayBuffer) {\r\n      buffer.set(new Uint8Array(await (this.info.file.slice(this.readPos, this.readPos + len).arrayBuffer())), 0)\r\n    }\r\n    else {\r\n      buffer.set(new Uint8Array(await this.readBufferByReader(len)), 0)\r\n    }\r\n\r\n    this.readPos += len\r\n\r\n    if (this.readPos >= this.endPos) {\r\n      this.status = IOLoaderStatus.COMPLETE\r\n    }\r\n\r\n    return len\r\n  }\r\n\r\n  public async seek(pos: int64) {\r\n    this.readPos = Number(pos)\r\n    if (this.status === IOLoaderStatus.COMPLETE) {\r\n      this.status = IOLoaderStatus.BUFFERING\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async size() {\r\n    return static_cast<int64>(this.info.file.size)\r\n  }\r\n\r\n  public async stop() {\r\n    this.status = IOLoaderStatus.IDLE\r\n  }\r\n}\r\n","/*\r\n * libmedia abstract loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { Data, Timeout, Range } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\n\r\nexport const enum IOLoaderStatus {\r\n  IDLE,\r\n  CONNECTING,\r\n  BUFFERING,\r\n  ERROR,\r\n  COMPLETE\r\n}\r\n\r\nexport interface IOLoaderVideoStreamInfo {\r\n  list: {\r\n    width: number\r\n    height: number\r\n    frameRate: number\r\n    codec: string\r\n    bandwidth?: number\r\n  }[]\r\n  selectedIndex: number\r\n}\r\n\r\nexport interface IOLoaderAudioStreamInfo {\r\n  list: {\r\n    lang: string\r\n    codec: string\r\n    bandwidth?: number\r\n  }[]\r\n  selectedIndex: number\r\n}\r\n\r\nexport interface IOLoaderSubtitleStreamInfo {\r\n  list: {\r\n    lang: string\r\n    codec: string\r\n  }[]\r\n  selectedIndex: number\r\n}\r\n\r\nexport type IOLoaderOptions = {\r\n  isLive?: boolean\r\n  preload?: number\r\n  retryCount?: number\r\n  retryInterval?: number\r\n}\r\n\r\nconst optionsDefault = {\r\n  isLive: false,\r\n  preload: 5 * 1024 * 1024,\r\n  retryCount: 20,\r\n  retryInterval: 1\r\n}\r\n\r\nexport default abstract class IOLoader {\r\n\r\n  public options: IOLoaderOptions\r\n\r\n  protected status: IOLoaderStatus\r\n\r\n  protected retryCount: number\r\n\r\n  protected retryTimeout: Timeout\r\n\r\n  constructor(options: IOLoaderOptions = {}) {\r\n    this.options = options\r\n    this.status = IOLoaderStatus.IDLE\r\n    this.retryCount = 0\r\n\r\n    this.options = object.extend({}, optionsDefault)\r\n    object.extend(this.options, options)\r\n  }\r\n\r\n  /**\r\n   * 打开 ioloader\r\n   * \r\n   * @param info \r\n   * @param range \r\n   * \r\n   * @returns 成功返回 0, 失败返回错误码（负值）\r\n   */\r\n  public abstract open(info: Data, range?: Range): Promise<int32>\r\n\r\n  /**\r\n   * 读取数据到缓冲区\r\n   * \r\n   * @param buffer 可以放置数据的缓冲区，类 Uint8Array 结构\r\n   * @param options 一些配置（比如 hls 和 dash 有相关配置项）\r\n   * \r\n   * @returns 返回写入的数据长度，失败返回错误码（负值）\r\n   */\r\n  public abstract read(buffer: Uint8ArrayInterface, options?: Data): Promise<int32>\r\n\r\n  /**\r\n   * 写出数据，一些协议如 rtmp、rtsp 需要与服务器交互数据\r\n   * \r\n   * @param buffer 要写出的数据，类 Uint8Array 结构\r\n   * \r\n   * @returns 成功返回 0，失败返回错误码（负值）\r\n   */\r\n  public write(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    throw new Error('need implemented write function')\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos 位置\r\n   * @param options 一些配置（比如 hls 和 dash 有相关配置项）\r\n   * \r\n   * @returns 成功返回 0, 否则失败，可以返回错误码（负值）\r\n   */\r\n  public abstract seek(pos: int64, options?: Data): Promise<int32>\r\n\r\n  /**\r\n   * 数据总字节大小\r\n   * \r\n   * 没有返回 0n\r\n   */\r\n  public abstract size(): Promise<int64>\r\n\r\n  /**\r\n   * 停止 ioloader\r\n   */\r\n  public abstract stop(): Promise<void>\r\n}\r\n","/*\r\n * libmedia abstract socket loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport IOLoader, { IOLoaderOptions, IOLoaderStatus } from './IOLoader'\r\nimport { IOError } from 'common/io/error'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport default abstract class SocketIOLoader extends IOLoader {\r\n  protected readQueue: Uint8Array[]\r\n\r\n  protected consume: (value: void | PromiseLike<void>) => void\r\n\r\n  constructor(options: IOLoaderOptions = {}) {\r\n    super(options)\r\n    this.readQueue = []\r\n  }\r\n\r\n  public abstract send(buffer: Uint8ArrayInterface): Promise<int32>\r\n  public abstract open(info: Data): Promise<int32>\r\n\r\n  private async readInterval(buffer: Uint8ArrayInterface, preLen: int32 = 0): Promise<number> {\r\n    let pos = 0\r\n    while (this.readQueue.length && pos < buffer.length) {\r\n      const cache = this.readQueue.shift()\r\n      if (cache.length > buffer.length - pos) {\r\n        buffer.set(cache.subarray(0, buffer.length - pos), pos)\r\n        this.readQueue.unshift(cache.subarray(buffer.length - pos))\r\n        pos = buffer.length\r\n      }\r\n      else {\r\n        buffer.set(cache, pos)\r\n        pos += cache.length\r\n      }\r\n    }\r\n\r\n    if (pos > 0 || preLen) {\r\n      return pos + preLen\r\n    }\r\n\r\n    if (this.status === IOLoaderStatus.COMPLETE || this.status === IOLoaderStatus.IDLE) {\r\n      return pos > 0 ? (pos + preLen) : (preLen > 0 ? preLen : IOError.END)\r\n    }\r\n\r\n    if (this.status === IOLoaderStatus.ERROR) {\r\n      return pos > 0 ? (pos + preLen) : (preLen > 0 ? preLen : IOError.NETWORK_ERROR)\r\n    }\r\n\r\n    await new Promise<void>((resolve) => {\r\n      this.consume = resolve\r\n    })\r\n\r\n    this.consume = null\r\n\r\n    return this.readInterval(buffer, preLen)\r\n  }\r\n\r\n  public async read(buffer: Uint8ArrayInterface) {\r\n    return this.readInterval(buffer)\r\n  }\r\n\r\n  public async write(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    return this.send(buffer)\r\n  }\r\n}\r\n","/*\r\n * libmedia websocket loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { IOLoaderStatus } from './IOLoader'\r\nimport { IOError } from 'common/io/error'\r\nimport SocketIOLoader from './SocketIOLoader'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport interface WebSocketOptions {\r\n  protocols?: string | string[]\r\n}\r\n\r\nexport interface WebSocketInfo {\r\n  url: string\r\n  websocketOptions?: WebSocketOptions\r\n}\r\n\r\nexport default class WebSocketIOLoader extends SocketIOLoader {\r\n\r\n  protected info: WebSocketInfo\r\n\r\n  protected socket: WebSocket\r\n\r\n  public async send(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    if (this.socket) {\r\n      this.socket.send(buffer.slice())\r\n      return 0\r\n    }\r\n    return IOError.INVALID_OPERATION\r\n  }\r\n  public open(info: WebSocketInfo): Promise<int32> {\r\n    this.info = info\r\n    this.status = IOLoaderStatus.CONNECTING\r\n    return new Promise<int32>((resolve) => {\r\n      this.socket = new WebSocket(info.url, info.websocketOptions?.protocols)\r\n      this.socket.binaryType = 'arraybuffer'\r\n      this.socket.onopen = () => {\r\n        this.status = IOLoaderStatus.BUFFERING\r\n        resolve(0)\r\n      }\r\n      this.socket.onerror = () => {\r\n        this.status = IOLoaderStatus.ERROR\r\n        resolve(IOError.NETWORK_ERROR)\r\n        if (this.consume) {\r\n          this.consume()\r\n        }\r\n      }\r\n      this.socket.onmessage = (message) => {\r\n        let data = message.data\r\n        this.readQueue.push(new Uint8Array(data))\r\n        if (this.consume) {\r\n          this.consume()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  public seek(pos: int64, options?: Data): Promise<int32> {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  public size(): Promise<int64> {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  public async stop() {\r\n    if (this.socket) {\r\n      this.socket.close()\r\n      this.socket = null\r\n    }\r\n    this.status = IOLoaderStatus.COMPLETE\r\n    if (this.consume) {\r\n      this.consume()\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia webtransport loader\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { IOLoaderStatus } from './IOLoader'\r\nimport { IOError } from 'common/io/error'\r\nimport SocketIOLoader from './SocketIOLoader'\r\nimport { Data } from 'common/types/type'\r\n\r\nexport interface WebTransportInfo {\r\n  url: string\r\n  webtransportOptions?: WebTransportOptions\r\n}\r\n\r\nexport default class WebTransportIOLoader extends SocketIOLoader {\r\n\r\n  protected info: WebTransportInfo\r\n\r\n  protected transport: WebTransport\r\n\r\n  protected datagramReader: ReadableStreamDefaultReader<Uint8Array>\r\n  protected reader: ReadableStreamDefaultReader<Uint8Array>\r\n\r\n  protected datagramWriter: WritableStreamDefaultWriter<Uint8Array>\r\n  protected writer: WritableStreamDefaultWriter<Uint8Array>\r\n  protected stream: WebTransportBidirectionalStream\r\n\r\n  protected readPacketQueue: Uint8Array[]\r\n\r\n  protected consumePacket: (value: void | PromiseLike<void>) => void\r\n\r\n  public async send(buffer: Uint8ArrayInterface): Promise<int32> {\r\n    if (this.writer) {\r\n      this.writer.write(buffer.slice())\r\n      return 0\r\n    }\r\n    return IOError.INVALID_OPERATION\r\n  }\r\n\r\n  private async handleRead() {\r\n    let isDone = false\r\n    while (true) {\r\n      try {\r\n        const { value, done } = await this.reader.read()\r\n        if (done) {\r\n          isDone = done\r\n          break\r\n        }\r\n        this.readQueue.push(value)\r\n      }\r\n      catch (error) {\r\n        if (!isDone) {\r\n          this.status = IOLoaderStatus.ERROR\r\n          if (this.consume) {\r\n            this.consume()\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  private async readDatagram() {\r\n    let isDone = false\r\n    while (true) {\r\n      try {\r\n        const { value, done } = await this.datagramReader.read()\r\n        if (done) {\r\n          isDone = true\r\n          break\r\n        }\r\n        this.readPacketQueue.push(value)\r\n      }\r\n      catch (error) {\r\n        if (!isDone) {\r\n          this.status = IOLoaderStatus.ERROR\r\n          if (this.consumePacket) {\r\n            this.consumePacket()\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  public async open(info: WebTransportInfo): Promise<int32> {\r\n    this.info = info\r\n    this.transport = new WebTransport(info.url, info.webtransportOptions)\r\n\r\n    this.readPacketQueue = []\r\n\r\n    this.status = IOLoaderStatus.CONNECTING\r\n\r\n    await this.transport.ready\r\n\r\n    this.transport.closed.then(() => {\r\n      if (this.transport) {\r\n        this.status = IOLoaderStatus.ERROR\r\n      }\r\n      else {\r\n        this.status = IOLoaderStatus.COMPLETE\r\n      }\r\n    })\r\n\r\n    this.status = IOLoaderStatus.BUFFERING\r\n\r\n    this.stream = await this.transport.createBidirectionalStream()\r\n    this.reader = this.stream.readable.getReader()\r\n    this.writer = this.stream.writable.getWriter()\r\n\r\n    this.datagramReader = this.transport.datagrams.readable.getReader()\r\n    this.datagramWriter = this.transport.datagrams.writable.getWriter()\r\n\r\n    this.handleRead()\r\n    this.readDatagram()\r\n\r\n    return 0\r\n  }\r\n\r\n  public async readPacket(buffer: Uint8ArrayInterface) {\r\n    while (true) {\r\n      if (this.readPacketQueue.length) {\r\n        const data = this.readPacketQueue.shift()\r\n        assert(data.length <= buffer.length)\r\n        buffer.set(data, 0)\r\n        return data.length\r\n      }\r\n\r\n      if (this.status === IOLoaderStatus.COMPLETE || this.status === IOLoaderStatus.IDLE) {\r\n        return IOError.END\r\n      }\r\n\r\n      if (this.status === IOLoaderStatus.ERROR) {\r\n        return IOError.NETWORK_ERROR\r\n      }\r\n\r\n      await new Promise<void>((resolve) => {\r\n        this.consumePacket = resolve\r\n      })\r\n      this.consumePacket = null\r\n    }\r\n  }\r\n\r\n  public async writePacket(buffer: Uint8ArrayInterface) {\r\n    if (this.datagramWriter) {\r\n      this.datagramWriter.write(buffer.slice())\r\n      return 0\r\n    }\r\n    return IOError.INVALID_OPERATION\r\n  }\r\n\r\n  public seek(pos: int64, options?: Data): Promise<int32> {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  public size(): Promise<int64> {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  public async stop() {\r\n    if (this.transport) {\r\n      this.transport.close()\r\n      this.transport = null\r\n    }\r\n    this.status = IOLoaderStatus.COMPLETE\r\n    if (this.consume) {\r\n      this.consume()\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia AudioDecodePipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport * as error from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport WasmAudioDecoder from 'avcodec/wasmcodec/AudioDecoder'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport * as logger from 'common/util/logger'\r\nimport AVFramePoolImpl from 'avutil/implement/AVFramePoolImpl'\r\nimport { IOError } from 'common/io/error'\r\nimport { AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport WebAudioDecoder from 'avcodec/webcodec/AudioDecoder'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport * as array from 'common/util/array'\r\nimport getTimestamp from 'common/function/getTimestamp'\r\nimport { audioData2AVFrame } from 'avutil/function/audioData2AVFrame'\r\nimport * as errorType from 'avutil/error'\r\nimport { Data } from 'common/types/type'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { AVCodecParametersSerialize, AVPacketSerialize, unserializeAVCodecParameters, unserializeAVPacket } from 'avutil/util/serialize'\r\nimport { avMallocz } from 'avutil/util/mem'\r\nimport { copyCodecParameters, freeCodecParameters } from 'avutil/util/codecparameters'\r\nimport * as is from 'common/util/is'\r\n\r\nexport interface AudioDecodeTaskOptions extends TaskOptions {\r\n  resource: ArrayBuffer | WebAssemblyResource\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n  avframeList: pointer<List<pointer<AVFrameRef>>>\r\n  avframeListMutex: pointer<Mutex>\r\n}\r\n\r\ntype SelfTask = Omit<AudioDecodeTaskOptions, 'resource'> & {\r\n  resource: WebAssemblyResource\r\n  decoder: WasmAudioDecoder | WebAudioDecoder\r\n  frameCaches: pointer<AVFrameRef>[]\r\n  inputEnd: boolean\r\n  parameters: pointer<AVCodecParameters>\r\n\r\n  lastDecodeTimestamp: number\r\n\r\n  avframePool: AVFramePoolImpl\r\n  avpacketPool: AVPacketPool\r\n\r\n  wasmDecoderOptions?: Data\r\n\r\n  pending?: Promise<void>\r\n  pendingResolve?: () => void\r\n}\r\n\r\nexport default class AudioDecodePipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createWebcodecDecoder(task: SelfTask) {\r\n    return new WebAudioDecoder({\r\n      onError: (error) => {\r\n        logger.error(`audio decode error, taskId: ${task.taskId}, error: ${error}`)\r\n      },\r\n      onReceiveAudioData(audioData) {\r\n        const avframe = audioData2AVFrame(audioData, task.avframePool.alloc())\r\n        task.frameCaches.push(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n        task.stats.audioFrameDecodeCount++\r\n        task.stats.audioFrameDecodeIntervalMax = Math.max(\r\n          getTimestamp() - task.lastDecodeTimestamp,\r\n          task.stats.audioFrameDecodeIntervalMax\r\n        )\r\n        audioData.close()\r\n      }\r\n    })\r\n  }\r\n\r\n  private createWasmcodecDecoder(task: SelfTask, resource: WebAssemblyResource) {\r\n    return new WasmAudioDecoder({\r\n      resource: resource,\r\n      onReceiveAVFrame(avframe) {\r\n        task.frameCaches.push(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n        task.stats.audioFrameDecodeCount++\r\n        task.stats.audioFrameDecodeIntervalMax = Math.max(\r\n          getTimestamp() - task.lastDecodeTimestamp,\r\n          task.stats.audioFrameDecodeIntervalMax\r\n        )\r\n      },\r\n      avframePool: task.avframePool\r\n    })\r\n  }\r\n\r\n  private async pullAVPacketInternal(task: SelfTask, leftIPCPort: IPCPort) {\r\n    const result = await leftIPCPort.request<pointer<AVPacketRef> | AVPacketSerialize>('pull')\r\n    if (is.number(result) || isPointer(result)) {\r\n      return result as pointer<AVPacketRef>\r\n    }\r\n    else {\r\n      const avpacket = task.avpacketPool.alloc()\r\n      unserializeAVPacket(result, avpacket)\r\n      return avpacket\r\n    }\r\n  }\r\n\r\n  private async createTask(options: AudioDecodeTaskOptions): Promise<number> {\r\n\r\n    assert(options.leftPort)\r\n    assert(options.rightPort)\r\n\r\n    const leftIPCPort = new IPCPort(options.leftPort)\r\n    const rightIPCPort = new IPCPort(options.rightPort)\r\n    const frameCaches: pointer<AVFrameRef>[] = []\r\n\r\n    const avframePool = new AVFramePoolImpl(accessof(options.avframeList), options.avframeListMutex)\r\n\r\n    const task: SelfTask = {\r\n      ...options,\r\n      resource: await compileResource(options.resource),\r\n      frameCaches,\r\n      inputEnd: false,\r\n      decoder: null,\r\n      parameters: nullptr,\r\n      lastDecodeTimestamp: 0,\r\n\r\n      avframePool,\r\n      avpacketPool: new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex),\r\n    }\r\n\r\n    if (task.resource) {\r\n      task.decoder = this.createWasmcodecDecoder(task, task.resource)\r\n    }\r\n    else {\r\n      task.decoder = this.createWebcodecDecoder(task)\r\n    }\r\n\r\n    this.tasks.set(options.taskId, task)\r\n\r\n    rightIPCPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'pull': {\r\n          if (frameCaches.length) {\r\n            const frame = frameCaches.shift()\r\n            rightIPCPort.reply(request, frame)\r\n            break\r\n          }\r\n          else if (!task.inputEnd) {\r\n            while (true) {\r\n              if (frameCaches.length) {\r\n                const frame = frameCaches.shift()\r\n                rightIPCPort.reply(request, frame)\r\n                break\r\n              }\r\n\r\n              if (task.pending) {\r\n                await task.pending\r\n              }\r\n\r\n              task.lastDecodeTimestamp = getTimestamp()\r\n              const avpacket = await this.pullAVPacketInternal(task, leftIPCPort)\r\n\r\n              if (avpacket === IOError.END) {\r\n                await task.decoder.flush()\r\n                task.inputEnd = true\r\n                if (frameCaches.length) {\r\n                  const frame = frameCaches.shift()\r\n                  rightIPCPort.reply(request, frame)\r\n                  break\r\n                }\r\n                else {\r\n                  logger.info(`audio decoder ended, taskId: ${task.taskId}`)\r\n                  rightIPCPort.reply(request, IOError.END)\r\n                  break\r\n                }\r\n              }\r\n              else if (avpacket > 0) {\r\n\r\n                const ret = task.decoder.decode(avpacket)\r\n\r\n                task.avpacketPool.release(avpacket)\r\n\r\n                if (ret < 0) {\r\n                  task.stats.audioDecodeErrorPacketCount++\r\n                  logger.error(`audio decode error, taskId: ${options.taskId}, ret: ${ret}`)\r\n                }\r\n                continue\r\n              }\r\n              else {\r\n                logger.error(`audio decode pull avpacket error, taskId: ${options.taskId}, ret: ${avpacket}`)\r\n                rightIPCPort.reply(request, avpacket)\r\n                break\r\n              }\r\n            }\r\n            break\r\n          }\r\n          rightIPCPort.reply(request, IOError.END)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  public async open(taskId: string, parameters: AVCodecParametersSerialize | pointer<AVCodecParameters>, wasmDecoderOptions: Data = {}) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.wasmDecoderOptions = wasmDecoderOptions\r\n      const codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n      if (isPointer(parameters)) {\r\n        copyCodecParameters(codecpar, parameters)\r\n      }\r\n      else {\r\n        unserializeAVCodecParameters(parameters, codecpar)\r\n      }\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      task.parameters = codecpar\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        const ret = await task.decoder.open(codecpar, task.wasmDecoderOptions)\r\n        if (ret) {\r\n          logger.error(`open audio decoder failed, error: ${ret}`)\r\n          resolve(errorType.CODEC_NOT_SUPPORT)\r\n          return\r\n        }\r\n        resolve(0)\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async beforeReopenDecoder(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.pending = new Promise<void>((resolve) => {\r\n        task.pendingResolve = resolve\r\n      })\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async reopenDecoder(\r\n    taskId: string,\r\n    parameters: AVCodecParametersSerialize | pointer<AVCodecParameters>,\r\n    resource?: string | ArrayBuffer | WebAssemblyResource,\r\n    wasmDecoderOptions?: Data\r\n  ) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (wasmDecoderOptions) {\r\n        task.wasmDecoderOptions = wasmDecoderOptions\r\n      }\r\n      const codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n      if (isPointer(parameters)) {\r\n        copyCodecParameters(codecpar, parameters)\r\n      }\r\n      else {\r\n        unserializeAVCodecParameters(parameters, codecpar)\r\n      }\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      task.parameters = codecpar\r\n      let decoder: WasmAudioDecoder | WebAudioDecoder\r\n      if (resource) {\r\n        resource = await compileResource(resource)\r\n        decoder = this.createWasmcodecDecoder(task, resource)\r\n      }\r\n      else {\r\n        decoder = this.createWebcodecDecoder(task)\r\n      }\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        const ret = await decoder.open(codecpar)\r\n        if (ret) {\r\n          logger.error(`reopen audio decoder failed, error: ${ret}`)\r\n          resolve(errorType.CODEC_NOT_SUPPORT)\r\n          return\r\n        }\r\n        if (resource) {\r\n          task.resource = resource as WebAssemblyResource\r\n        }\r\n        task.decoder.close()\r\n        task.decoder = decoder\r\n\r\n        logger.debug(`reopen audio decoder, taskId: ${task.taskId}`)\r\n        resolve(0)\r\n        if (task.pendingResolve) {\r\n          task.pendingResolve()\r\n          task.pending = null\r\n        }\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async resetTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.decoder) {\r\n        await task.decoder.flush()\r\n      }\r\n      array.each(task.frameCaches, (frame) => {\r\n        task.avframePool.release(frame)\r\n      })\r\n      task.frameCaches.length = 0\r\n      task.inputEnd = false\r\n      task.lastDecodeTimestamp = getTimestamp()\r\n\r\n      logger.info(`reset audio decoder, taskId: ${task.taskId}`)\r\n    }\r\n  }\r\n\r\n  public async registerTask(options: AudioDecodeTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return error.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.rightPort.close()\r\n      task.leftPort.close()\r\n      task.decoder.close()\r\n      task.frameCaches.forEach((frame) => {\r\n        task.avframePool.release(frame)\r\n      })\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      this.tasks.delete(taskId)\r\n      logger.debug(`unregisterTask task, taskId: ${taskId}`)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia AudioEncodePipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport { AVFrameRef } from 'avutil/struct/avframe'\r\nimport WasmAudioEncoder from 'avcodec/wasmcodec/AudioEncoder'\r\nimport WebAudioEncoder from 'avcodec/webcodec/AudioEncoder'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVFramePoolImpl from 'avutil/implement/AVFramePoolImpl'\r\nimport IPCPort, { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport * as logger from 'common/util/logger'\r\nimport { IOError } from 'common/io/error'\r\nimport * as array from 'common/util/array'\r\nimport * as error from 'avutil/error'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport * as errorType from 'avutil/error'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { Data } from 'common/types/type'\r\nimport compileResource from 'avutil/function/compileResource'\r\n\r\nexport interface AudioEncodeTaskOptions extends TaskOptions {\r\n  resource: ArrayBuffer | WebAssemblyResource\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n  avframeList: pointer<List<pointer<AVFrameRef>>>\r\n  avframeListMutex: pointer<Mutex>\r\n}\r\n\r\ntype SelfTask = Omit<AudioEncodeTaskOptions, 'resource'> & {\r\n  encoder: WasmAudioEncoder | WebAudioEncoder\r\n  resource: WebAssemblyResource\r\n  avpacketCaches: pointer<AVPacketRef>[]\r\n  parameters: pointer<AVCodecParameters>\r\n  inputEnd: boolean\r\n  avframePool: AVFramePoolImpl\r\n  avpacketPool: AVPacketPool\r\n  wasmEncoderOptions?: Data\r\n}\r\n\r\nexport default class AudioEncodePipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createWebcodecEncoder(task: SelfTask) {\r\n    return new WebAudioEncoder({\r\n      onError: (error) => {\r\n        logger.error(`audio encode error, taskId: ${task.taskId}, error: ${error}`)\r\n      },\r\n      onReceiveAVPacket(avpacket) {\r\n        task.avpacketCaches.push(reinterpret_cast<pointer<AVPacketRef>>(avpacket))\r\n        task.stats.audioPacketEncodeCount++\r\n      },\r\n      avpacketPool: task.avpacketPool,\r\n      avframePool: task.avframePool\r\n    })\r\n  }\r\n\r\n  private async createTask(options: AudioEncodeTaskOptions): Promise<number> {\r\n\r\n    assert(options.leftPort)\r\n    assert(options.rightPort)\r\n\r\n    const leftIPCPort = new IPCPort(options.leftPort)\r\n    const rightIPCPort = new IPCPort(options.rightPort)\r\n    const avpacketCaches: pointer<AVPacketRef>[] = []\r\n\r\n    const avpacketPool = new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex)\r\n\r\n    const task: SelfTask = {\r\n      ...options,\r\n      resource: await compileResource(options.resource),\r\n      avpacketCaches,\r\n      encoder: null,\r\n      inputEnd: false,\r\n      parameters: nullptr,\r\n\r\n      avframePool: new AVFramePoolImpl(accessof(options.avframeList), options.avframeListMutex),\r\n      avpacketPool\r\n    }\r\n\r\n    if (task.resource) {\r\n      task.encoder = new WasmAudioEncoder({\r\n        resource: task.resource,\r\n        onReceiveAVPacket(avpacket) {\r\n          task.avpacketCaches.push(reinterpret_cast<pointer<AVPacketRef>>(avpacket))\r\n          task.stats.audioPacketEncodeCount++\r\n        },\r\n        avpacketPool: avpacketPool\r\n      })\r\n    }\r\n    else {\r\n      task.encoder = this.createWebcodecEncoder(task)\r\n    }\r\n\r\n    this.tasks.set(options.taskId, task)\r\n\r\n    rightIPCPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'pull': {\r\n          if (avpacketCaches.length) {\r\n            const avpacket = avpacketCaches.shift()\r\n            rightIPCPort.reply(request, avpacket)\r\n            break\r\n          }\r\n          else if (!task.inputEnd) {\r\n            while (true) {\r\n              if (avpacketCaches.length) {\r\n                const avpacket = avpacketCaches.shift()\r\n                rightIPCPort.reply(request, avpacket)\r\n                break\r\n              }\r\n\r\n              const avframe = await leftIPCPort.request<pointer<AVFrameRef> | AudioData>('pull')\r\n\r\n              if (isPointer(avframe) || avframe instanceof AudioData) {\r\n                const ret = task.encoder.encode(avframe)\r\n                if (isPointer(avframe)) {\r\n                  task.avframePool.release(avframe)\r\n                }\r\n                else {\r\n                  avframe.close()\r\n                }\r\n                if (ret < 0) {\r\n                  task.stats.audioEncodeErrorFrameCount++\r\n                  logger.error(`audio encode error, taskId: ${options.taskId}, ret: ${ret}`)\r\n                  rightIPCPort.reply(request, ret)\r\n                  break\r\n                }\r\n                // 硬解队列中的 EncodedVideoChunk 过多会报错， 这里判断做一下延时\r\n                while (task.encoder instanceof WebAudioEncoder\r\n                  && task.encoder.getQueueLength() > 4\r\n                ) {\r\n                  await new Sleep(0)\r\n                }\r\n                continue\r\n              }\r\n              else {\r\n                if (avframe === IOError.END) {\r\n                  await task.encoder.flush()\r\n                  task.inputEnd = true\r\n                  if (avpacketCaches.length) {\r\n                    const avpacket = avpacketCaches.shift()\r\n                    rightIPCPort.reply(request, avpacket)\r\n                    break\r\n                  }\r\n                  else {\r\n                    logger.info(`audio encoder ended, taskId: ${task.taskId}`)\r\n                    rightIPCPort.reply(request, IOError.END)\r\n                    break\r\n                  }\r\n                }\r\n                else {\r\n                  logger.error(`audio encoder pull avpacket error, taskId: ${options.taskId}, ret: ${avframe}`)\r\n                  rightIPCPort.reply(request, avframe)\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            break\r\n          }\r\n          logger.info(`audio encoder ended, taskId: ${task.taskId}`)\r\n          rightIPCPort.reply(request, IOError.END)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  public async open(taskId: string, parameters: pointer<AVCodecParameters>, timeBase: Rational, wasmEncoderOptions: Data = {}) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.wasmEncoderOptions = wasmEncoderOptions\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        const ret = await task.encoder.open(parameters, timeBase, task.wasmEncoderOptions)\r\n        if (ret) {\r\n          logger.error(`open audio encoder failed, error: ${ret}`)\r\n          resolve(errorType.CODEC_NOT_SUPPORT)\r\n          return\r\n        }\r\n        task.parameters = parameters\r\n        resolve(0)\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async getExtraData(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      return task.encoder.getExtraData()\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async resetTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.encoder) {\r\n        await task.encoder.flush()\r\n      }\r\n      array.each(task.avpacketCaches, (avpacket) => {\r\n        task.avpacketPool.release(avpacket)\r\n      })\r\n      task.avpacketCaches.length = 0\r\n      task.inputEnd = false\r\n\r\n      logger.info(`reset audio encoder, taskId: ${task.taskId}`)\r\n    }\r\n  }\r\n\r\n  public async registerTask(options: AudioEncodeTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return error.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.rightPort.close()\r\n      task.leftPort.close()\r\n      task.encoder.close()\r\n      task.avpacketCaches.forEach((avpacket) => {\r\n        task.avpacketPool.release(avpacket)\r\n      })\r\n      this.tasks.delete(taskId)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia DemuxPipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n *\r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n *\r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Data } from 'common/types/type'\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport * as errorType from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport { AVFormatContextInterface, AVIFormatContext, createAVIFormatContext } from 'avformat/AVFormatContext'\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport IFormat from 'avformat/formats/IFormat'\r\nimport * as demux from 'avformat/demux'\r\nimport { AVFormat, IOFlags } from 'avutil/avformat'\r\nimport { avFree, avMalloc } from 'avutil/util/mem'\r\nimport SafeUint8Array from 'cheap/std/buffer/SafeUint8Array'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVPacketFlags, AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport * as logger from 'common/util/logger'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport { IOError } from 'common/io/error'\r\nimport { AVCodecID, AVMediaType, AVPacketSideDataType } from 'avutil/codec'\r\nimport LoopTask from 'common/timer/LoopTask'\r\nimport * as array from 'common/util/array'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\nimport { AV_MILLI_TIME_BASE_Q, NOPTS_VALUE } from 'avutil/constant'\r\nimport * as bigint from 'common/util/bigint'\r\nimport { AVStreamInterface } from 'avutil/AVStream'\r\nimport { addAVPacketSideData, getAVPacketData, getAVPacketSideData } from 'avutil/util/avpacket'\r\nimport { mapUint8Array, memcpy, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport analyzeAVFormat from 'avutil/function/analyzeAVFormat'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport isWorker from 'common/function/isWorker'\r\nimport * as cheapConfig from 'cheap/config'\r\nimport { serializeAVPacket } from 'avutil/util/serialize'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport * as is from 'common/util/is'\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport support from 'common/util/support'\r\n\r\nimport { type IRtspFormatOptions } from 'avformat/formats/IRtspFormat'\r\nimport { type IFlvFormatOptions } from 'avformat/formats/IFlvFormat'\r\nimport { type IMovFormatOptions } from 'avformat/formats/IMovFormat'\r\nimport { type IH264FormatOptions } from 'avformat/formats/IH264Format'\r\nimport { type IHevcFormatOptions } from 'avformat/formats/IHevcFormat'\r\nimport { type IVvcFormatOptions } from 'avformat/formats/IVvcFormat'\r\nimport { type IAviFormatOptions } from 'avformat/formats/IAviFormat'\r\n\r\nexport const STREAM_INDEX_ALL = -1\r\nconst MAX_QUEUE_LENGTH_DEFAULT = 5000\r\n\r\nexport interface DemuxTaskOptions extends TaskOptions {\r\n  format?: AVFormat\r\n  bufferLength?: number\r\n  isLive?: boolean\r\n  ioloaderOptions?: Data\r\n  formatOptions?: Data\r\n  mainTaskId?: string\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n  flags?: int32\r\n}\r\n\r\ntype SelfTask = DemuxTaskOptions & {\r\n  leftIPCPort: IPCPort\r\n  rightIPCPorts: Map<number, IPCPort & { streamIndex?: number }>\r\n  controlIPCPort: IPCPort\r\n\r\n  formatContext: AVIFormatContext\r\n  ioReader: IOReader\r\n  iBuffer: pointer<uint8>\r\n  oBuffer: pointer<uint8>\r\n\r\n  cacheAVPackets: Map<number, pointer<AVPacketRef>[]>\r\n  pendingAVPackets: Map<number, pointer<AVPacketRef>[]>\r\n  cacheRequests: Map<number, RpcMessage>\r\n  streamIndexFlush: Map<number, boolean>\r\n\r\n  realFormat: AVFormat\r\n\r\n  demuxEnded: boolean\r\n  loop: LoopTask\r\n\r\n  gopCounter: int32\r\n  lastKeyFramePts: int64\r\n  lastAudioDts: int64\r\n  lastVideoDts: int64\r\n\r\n  avpacketPool: AVPacketPool\r\n}\r\n\r\nexport default class DemuxPipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createTask(options: DemuxTaskOptions): number {\r\n    let leftIPCPort: IPCPort\r\n    let controlIPCPort: IPCPort\r\n\r\n    if (options.mainTaskId) {\r\n      const mainTask = this.tasks.get(options.mainTaskId)\r\n      leftIPCPort = mainTask.leftIPCPort\r\n      controlIPCPort = mainTask.controlIPCPort\r\n    }\r\n    else {\r\n      assert(options.leftPort)\r\n      leftIPCPort = new IPCPort(options.leftPort)\r\n      if (options.controlPort) {\r\n        controlIPCPort = new IPCPort(options.controlPort)\r\n      }\r\n    }\r\n\r\n    assert(leftIPCPort)\r\n\r\n    const bufferLength = options.bufferLength || 1 * 1024 * 1024\r\n\r\n    const iBuf: pointer<uint8> = avMalloc(bufferLength)\r\n    if (!iBuf) {\r\n      return errorType.NO_MEMORY\r\n    }\r\n    const oBuf: pointer<uint8> = avMalloc(bufferLength)\r\n    if (!oBuf) {\r\n      return errorType.NO_MEMORY\r\n    }\r\n\r\n    const iBuffer = new SafeUint8Array(iBuf, bufferLength)\r\n    const ioReader = new IOReader(bufferLength, true, iBuffer)\r\n\r\n    const oBuffer = new SafeUint8Array(oBuf, bufferLength)\r\n    const ioWriter = new IOWriter(bufferLength, true, oBuffer)\r\n\r\n    if (!options.isLive) {\r\n      ioReader.flags |= IOFlags.SEEKABLE\r\n    }\r\n    if (options.flags) {\r\n      ioReader.flags |= options.flags\r\n    }\r\n\r\n    ioReader.onFlush = async (buffer) => {\r\n\r\n      assert(buffer.byteOffset >= iBuf && buffer.byteOffset < iBuf + bufferLength)\r\n\r\n      const params: {\r\n        pointer: pointer<void>\r\n        length: size\r\n        ioloaderOptions?: Data\r\n      } = {\r\n        pointer: reinterpret_cast<pointer<void>>(buffer.byteOffset as uint32),\r\n        length: buffer.length\r\n      }\r\n      if (options.ioloaderOptions) {\r\n        params.ioloaderOptions = options.ioloaderOptions\r\n      }\r\n      try {\r\n        const result = await leftIPCPort.request<int32 | Uint8Array>('read', params)\r\n        if (is.number(result)) {\r\n          return result\r\n        }\r\n        assert(result.length <= params.length)\r\n        memcpyFromUint8Array(params.pointer, result.length, result)\r\n        return result.length\r\n      }\r\n      catch (error) {\r\n        return IOError.INVALID_OPERATION\r\n      }\r\n    }\r\n\r\n    ioReader.onSeek = async (pos) => {\r\n      try {\r\n        const params: {\r\n          pos: int64,\r\n          ioloaderOptions?: Data\r\n        } = {\r\n          pos\r\n        }\r\n        if (options.ioloaderOptions) {\r\n          params.ioloaderOptions = options.ioloaderOptions\r\n        }\r\n        return leftIPCPort.request<int32>('seek', params)\r\n      }\r\n      catch (error) {\r\n        return IOError.INVALID_OPERATION\r\n      }\r\n    }\r\n\r\n    ioReader.onSize = async () => {\r\n      try {\r\n        return leftIPCPort.request<int64>('size')\r\n      }\r\n      catch (error) {\r\n        return static_cast<int64>(IOError.INVALID_OPERATION)\r\n      }\r\n    }\r\n\r\n    ioWriter.onFlush = async (buffer) => {\r\n      assert(buffer.byteOffset >= oBuf && buffer.byteOffset < oBuf + bufferLength)\r\n\r\n      const params: {\r\n        pointer: pointer<uint8>\r\n        length: int32\r\n      } = {\r\n        pointer: reinterpret_cast<pointer<uint8>>(buffer.byteOffset),\r\n        length: buffer.length\r\n      }\r\n      try {\r\n        return await leftIPCPort.request<int32>('write', params)\r\n      }\r\n      catch (error) {\r\n        return IOError.INVALID_OPERATION\r\n      }\r\n    }\r\n\r\n    const formatContext = createAVIFormatContext()\r\n    formatContext.ioReader = ioReader\r\n    formatContext.ioWriter = ioWriter\r\n\r\n    if (support.wasmBaseSupported) {\r\n      formatContext.getDecoderResource = async (mediaType, codecId) => {\r\n        if (!controlIPCPort) {\r\n          return\r\n        }\r\n        const wasm: ArrayBuffer | WebAssemblyResource = await controlIPCPort.request('getDecoderResource', {\r\n          codecId,\r\n          mediaType\r\n        })\r\n\r\n        return compileResource(wasm, mediaType === AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n      }\r\n    }\r\n\r\n    this.tasks.set(options.taskId, {\r\n      ...options,\r\n\r\n      leftIPCPort,\r\n      rightIPCPorts: new Map(),\r\n      controlIPCPort,\r\n\r\n      formatContext,\r\n      ioReader,\r\n      iBuffer: iBuf,\r\n      oBuffer: oBuf,\r\n\r\n      cacheAVPackets: new Map(),\r\n      cacheRequests: new Map(),\r\n      streamIndexFlush: new Map(),\r\n      pendingAVPackets: new Map(),\r\n\r\n      realFormat: AVFormat.UNKNOWN,\r\n\r\n      demuxEnded: false,\r\n      loop: null,\r\n\r\n      gopCounter: 0,\r\n      lastKeyFramePts: 0n,\r\n      lastAudioDts: 0n,\r\n      lastVideoDts: 0n,\r\n\r\n      avpacketPool: new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex)\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  public async openStream(taskId: string, maxProbeDuration: int32 = 3000) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      let ret = await task.leftIPCPort.request<int32>('open')\r\n\r\n      if (ret < 0) {\r\n        logger.error(`open ioloader failed, ret: ${ret}`)\r\n        return ret\r\n      }\r\n\r\n      let format: AVFormat\r\n      try {\r\n        if (task.format !== AVFormat.RTSP) {\r\n          format = await analyzeAVFormat(task.ioReader, task.format)\r\n          task.format = format\r\n        }\r\n        else {\r\n          format = task.format\r\n        }\r\n      }\r\n      catch (error) {\r\n        return errorType.DATA_INVALID\r\n      }\r\n\r\n      let iformat: IFormat\r\n\r\n      switch (format) {\r\n        case AVFormat.FLV:\r\n          if (defined(ENABLE_DEMUXER_FLV)) {\r\n            iformat = new ((await import('avformat/formats/IFlvFormat')).default)(task.formatOptions as IFlvFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('flv format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MP4:\r\n          if (defined(ENABLE_DEMUXER_MP4) || defined(ENABLE_PROTOCOL_DASH)) {\r\n            iformat = new ((await import('avformat/formats/IMovFormat')).default)(task.formatOptions as IMovFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('mp4 format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MPEGTS:\r\n          if (defined(ENABLE_DEMUXER_MPEGPS) || defined(ENABLE_PROTOCOL_HLS)) {\r\n            iformat = new ((await import('avformat/formats/IMpegtsFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('mpegts format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MPEGPS:\r\n          if (defined(ENABLE_DEMUXER_MPEGPS)) {\r\n            iformat = new ((await import('avformat/formats/IMpegpsFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('mpegps format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.IVF:\r\n          if (defined(ENABLE_DEMUXER_IVF)) {\r\n            iformat = new ((await import('avformat/formats/IIvfFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('ivf format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.OGG:\r\n          if (defined(ENABLE_DEMUXER_OGG)) {\r\n            iformat = new ((await import('avformat/formats/IOggFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('oggs format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MP3:\r\n          if (defined(ENABLE_DEMUXER_MP3)) {\r\n            iformat = new ((await import('avformat/formats/IMp3Format')).default)\r\n          }\r\n          else {\r\n            logger.error('mp3 format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MATROSKA:\r\n        case AVFormat.WEBM:\r\n          if (defined(ENABLE_DEMUXER_MATROSKA)) {\r\n            iformat = new (((await import('avformat/formats/IMatroskaFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('matroska format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.AAC:\r\n          if (defined(ENABLE_DEMUXER_AAC)) {\r\n            iformat = new (((await import('avformat/formats/IAacFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('aac format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.FLAC:\r\n          if (defined(ENABLE_DEMUXER_FLAC)) {\r\n            iformat = new (((await import('avformat/formats/IFlacFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('flac format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.WAV:\r\n          if (defined(ENABLE_DEMUXER_WAV)) {\r\n            iformat = new (((await import('avformat/formats/IWavFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('wav format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.WEBVTT:\r\n          if (defined(ENABLE_DEMUXER_WEBVTT)) {\r\n            iformat = new (((await import('avformat/formats/IWebVttFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('webvtt format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.SUBRIP:\r\n          if (defined(ENABLE_DEMUXER_SUBRIP)) {\r\n            iformat = new (((await import('avformat/formats/ISubRipFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('subrip format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.ASS:\r\n          if (defined(ENABLE_DEMUXER_ASS)) {\r\n            iformat = new (((await import('avformat/formats/IAssFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('ass format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.TTML:\r\n          if (defined(ENABLE_DEMUXER_TTML)) {\r\n            iformat = new (((await import('avformat/formats/ITtmlFormat')).default))\r\n          }\r\n          else {\r\n            logger.error('ttml format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.H264:\r\n          if (defined(ENABLE_DEMUXER_H264)) {\r\n            iformat = new (((await import('avformat/formats/IH264Format')).default))(task.formatOptions as IH264FormatOptions)\r\n          }\r\n          else {\r\n            logger.error('h264 format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.HEVC:\r\n          if (defined(ENABLE_DEMUXER_HEVC)) {\r\n            iformat = new (((await import('avformat/formats/IHevcFormat')).default))(task.formatOptions as IHevcFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('hevc format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.VVC:\r\n          if (defined(ENABLE_DEMUXER_VVC)) {\r\n            iformat = new (((await import('avformat/formats/IVvcFormat')).default))(task.formatOptions as IVvcFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('vvc format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.RTSP:\r\n          if (defined(ENABLE_PROTOCOL_RTSP)) {\r\n            iformat = new (((await import('avformat/formats/IRtspFormat')).default))(task.formatOptions as IRtspFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('vvc format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.AVI:\r\n          if (defined(ENABLE_DEMUXER_AVI)) {\r\n            iformat = new (((await import('avformat/formats/IAviFormat')).default))(task.formatOptions as IAviFormatOptions)\r\n          }\r\n          else {\r\n            logger.error('avi format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        default:\r\n          logger.error('format not support')\r\n          return errorType.FORMAT_NOT_SUPPORT\r\n      }\r\n\r\n      assert(iformat)\r\n\r\n      task.realFormat = format\r\n      task.formatContext.iformat = iformat\r\n\r\n      return demux.open(task.formatContext, {\r\n        maxAnalyzeDuration: maxProbeDuration,\r\n        fastOpen: task.isLive\r\n      })\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async getFormat(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      return task.realFormat\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async analyzeStreams(taskId: string): Promise<AVFormatContextInterface | int32> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n\r\n      let ret = await demux.analyzeStreams(task.formatContext)\r\n\r\n      if (ret) {\r\n        return ret\r\n      }\r\n\r\n      const streams: AVStreamInterface[] = []\r\n      for (let i = 0; i < task.formatContext.streams.length; i++) {\r\n        const stream = task.formatContext.streams[i]\r\n        streams.push({\r\n          index: stream.index,\r\n          id: stream.id,\r\n          codecpar: addressof(stream.codecpar),\r\n          nbFrames: stream.nbFrames,\r\n          metadata: stream.metadata,\r\n          duration: stream.duration,\r\n          startTime: stream.startTime,\r\n          disposition: stream.disposition,\r\n          timeBase: {\r\n            den: stream.timeBase.den,\r\n            num: stream.timeBase.num\r\n          }\r\n        })\r\n      }\r\n      return {\r\n        metadata: task.formatContext.metadata,\r\n        format: task.realFormat,\r\n        chapters: task.formatContext.chapters,\r\n        streams\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  private replyAVPacket(task: SelfTask, ipcPort: IPCPort, request: RpcMessage, avpacket: pointer<AVPacketRef>) {\r\n    if (isWorker() && !cheapConfig.USE_THREADS && isPointer(avpacket)) {\r\n      const data = serializeAVPacket(avpacket)\r\n      const transfer = [data.data.buffer]\r\n      if (data.sideData.length) {\r\n        data.sideData.forEach((side) => {\r\n          transfer.push(side.data.buffer)\r\n        })\r\n      }\r\n      ipcPort.reply(request, data, null, transfer)\r\n      task.avpacketPool.release(avpacket)\r\n      return\r\n    }\r\n    ipcPort.reply(request, avpacket)\r\n  }\r\n\r\n  public async connectStreamTask(taskId: string, streamIndex: number, port: MessagePort) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      const ipcPort: IPCPort & { streamIndex?: number } = new IPCPort(port)\r\n\r\n      task.cacheAVPackets.set(streamIndex, [])\r\n\r\n      ipcPort.streamIndex = streamIndex\r\n      ipcPort.on(REQUEST, async (request: RpcMessage) => {\r\n        switch (request.method) {\r\n          case 'pull': {\r\n            const cacheAVPackets = task.cacheAVPackets.get(ipcPort.streamIndex)\r\n            if (cacheAVPackets.length) {\r\n              const avpacket = cacheAVPackets.shift()\r\n              if (task.stats !== nullptr) {\r\n                if (task.formatContext.streams[avpacket.streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n                  task.stats.audioPacketQueueLength--\r\n                }\r\n                else if (task.formatContext.streams[avpacket.streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n                  task.stats.videoPacketQueueLength--\r\n                }\r\n              }\r\n              this.replyAVPacket(task, ipcPort, request, avpacket)\r\n            }\r\n            else {\r\n              if (task.demuxEnded) {\r\n                ipcPort.reply(request, IOError.END)\r\n              }\r\n              else {\r\n                task.cacheRequests.set(ipcPort.streamIndex, request)\r\n                if (task.loop && task.loop.isStarted()) {\r\n                  task.loop.resetInterval()\r\n                }\r\n              }\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n      task.rightIPCPorts.set(streamIndex, ipcPort)\r\n\r\n      logger.debug(`connect stream ${streamIndex}, taskId: ${task.taskId}`)\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async addPendingStream(taskId: string, streamIndex: number) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.pendingAVPackets.set(streamIndex, [])\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async changeConnectStream(taskId: string, newStreamIndex: number, oldStreamIndex: number, force: boolean = true, start: boolean = false) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n\r\n      if (newStreamIndex === oldStreamIndex) {\r\n        return\r\n      }\r\n\r\n      let cache = task.cacheAVPackets.get(oldStreamIndex)\r\n      const ipcPort = task.rightIPCPorts.get(oldStreamIndex)\r\n      const request = task.cacheRequests.get(oldStreamIndex)\r\n\r\n      if (!cache) {\r\n        logger.warn(`oldStreamIndex ${oldStreamIndex} not found`)\r\n      }\r\n\r\n      await task.loop.stopBeforeNextTick()\r\n\r\n      if (force) {\r\n        if (!task.pendingAVPackets.has(newStreamIndex)) {\r\n          array.each(cache, (avpacket) => {\r\n            task.avpacketPool.release(avpacket)\r\n          })\r\n          cache.length = 0\r\n        }\r\n      }\r\n      else {\r\n        task.streamIndexFlush.set(newStreamIndex, true)\r\n      }\r\n\r\n      if (task.pendingAVPackets.has(newStreamIndex)) {\r\n        task.pendingAVPackets.set(oldStreamIndex, cache)\r\n        cache = task.pendingAVPackets.get(newStreamIndex)\r\n        task.pendingAVPackets.delete(newStreamIndex)\r\n      }\r\n      if (task.formatContext.streams[newStreamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n        task.stats.audioPacketQueueLength = cache.length\r\n      }\r\n      else if (task.formatContext.streams[newStreamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n        task.stats.videoPacketQueueLength = cache.length\r\n      }\r\n\r\n      ipcPort.streamIndex = newStreamIndex\r\n\r\n      task.cacheAVPackets.set(newStreamIndex, cache)\r\n      task.rightIPCPorts.set(newStreamIndex, ipcPort)\r\n\r\n      task.cacheAVPackets.delete(oldStreamIndex)\r\n      task.rightIPCPorts.delete(oldStreamIndex)\r\n\r\n      if (request) {\r\n        task.cacheRequests.set(newStreamIndex, request)\r\n        task.cacheRequests.delete(oldStreamIndex)\r\n      }\r\n\r\n      if (!force || start) {\r\n        task.loop.start()\r\n      }\r\n\r\n      logger.debug(`changed connect stream, new ${newStreamIndex}, old: ${oldStreamIndex}, force: ${force}, taskId: ${task.taskId}`)\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  private async doDemux(task: SelfTask, minQueueLength: int32) {\r\n    const avpacket = task.avpacketPool.alloc()\r\n\r\n    let ret = await demux.readAVPacket(task.formatContext, avpacket)\r\n\r\n    if (!ret) {\r\n\r\n      if (defined(ENABLE_LOG_TRACE)) {\r\n        logger.trace(`got packet, index: ${avpacket.streamIndex}, dts: ${avpacket.dts}, pts: ${avpacket.pts}, pos: ${\r\n          avpacket.pos\r\n        }, duration: ${avpacket.duration}, keyframe: ${(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) ? 'true' : 'false'}`)\r\n      }\r\n\r\n      const streamIndex = avpacket.streamIndex\r\n\r\n      assert(streamIndex !== NOPTS_VALUE)\r\n\r\n      if (task.stats !== nullptr) {\r\n        if (task.formatContext.streams[streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO\r\n          && task.cacheAVPackets.has(streamIndex)\r\n        ) {\r\n          task.stats.audioPacketCount++\r\n          task.stats.audioPacketBytes += static_cast<int64>(avpacket.size)\r\n          if (task.stats.audioPacketCount > 1 && avpacket.dts > task.lastAudioDts) {\r\n            const list = task.cacheAVPackets.get(streamIndex)\r\n            if (list && list.length) {\r\n              task.stats.audioEncodeFramerate = Math.round(avpacket.timeBase.den / avpacket.timeBase.num\r\n                / (static_cast<int32>(avpacket.dts - list[0].dts) / list.length))\r\n            }\r\n            else {\r\n              task.stats.audioEncodeFramerate = Math.round(avpacket.timeBase.den / avpacket.timeBase.num\r\n                / static_cast<int32>(avpacket.dts - task.lastAudioDts))\r\n            }\r\n          }\r\n          task.lastAudioDts = avpacket.dts\r\n        }\r\n        else if (task.formatContext.streams[streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO\r\n          && task.cacheAVPackets.has(streamIndex)\r\n        ) {\r\n          task.stats.videoPacketCount++\r\n          task.stats.videoPacketBytes += static_cast<int64>(avpacket.size)\r\n\r\n          if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\r\n            task.stats.keyFrameCount++\r\n            if (task.stats.keyFrameCount > 1 && avpacket.pts > task.lastKeyFramePts) {\r\n              task.stats.gop = task.gopCounter\r\n              task.gopCounter = 1\r\n              task.stats.keyFrameInterval = static_cast<int32>(avRescaleQ2(\r\n                avpacket.pts - task.lastKeyFramePts,\r\n                addressof(avpacket.timeBase),\r\n                AV_MILLI_TIME_BASE_Q\r\n              ))\r\n            }\r\n            task.lastKeyFramePts = avpacket.pts\r\n          }\r\n          else {\r\n            task.gopCounter++\r\n          }\r\n          if (task.stats.videoPacketCount > 1 && avpacket.dts > task.lastVideoDts) {\r\n            const list = task.cacheAVPackets.get(streamIndex)\r\n            if (list && list.length) {\r\n              task.stats.videoEncodeFramerate = Math.round(avpacket.timeBase.den / avpacket.timeBase.num\r\n                / (static_cast<int32>(avpacket.dts - list[0].dts) / list.length))\r\n            }\r\n            else {\r\n              task.stats.videoEncodeFramerate = Math.round(avpacket.timeBase.den / avpacket.timeBase.num\r\n                / static_cast<int32>(avpacket.dts - task.lastVideoDts))\r\n            }\r\n          }\r\n          task.lastVideoDts = avpacket.dts\r\n        }\r\n      }\r\n\r\n      if (task.streamIndexFlush.get(streamIndex)) {\r\n        const stream = task.formatContext.streams.find((stream) => {\r\n          return stream.index === streamIndex\r\n        })\r\n        const ele = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n        if (!ele && stream && stream.codecpar.extradataSize) {\r\n          const data = avMalloc(reinterpret_cast<size>(stream.codecpar.extradataSize))\r\n          memcpy(data, stream.codecpar.extradata, reinterpret_cast<size>(stream.codecpar.extradataSize))\r\n          addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, data, reinterpret_cast<size>(stream.codecpar.extradataSize))\r\n        }\r\n        task.streamIndexFlush.set(streamIndex, false)\r\n      }\r\n\r\n      if (task.cacheRequests.has(streamIndex)) {\r\n        this.replyAVPacket(task, task.rightIPCPorts.get(streamIndex), task.cacheRequests.get(streamIndex), avpacket)\r\n        task.cacheRequests.delete(streamIndex)\r\n      }\r\n      else {\r\n        if (task.cacheAVPackets.has(streamIndex)) {\r\n          task.cacheAVPackets.get(streamIndex).push(avpacket)\r\n          if (task.stats !== nullptr) {\r\n            if (task.formatContext.streams[streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n              task.stats.audioPacketQueueLength++\r\n            }\r\n            else if (task.formatContext.streams[streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n              task.stats.videoPacketQueueLength++\r\n            }\r\n          }\r\n          if (task.formatContext.streams[streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_SUBTITLE) {\r\n            if (task.cacheAVPackets.get(streamIndex).length > minQueueLength) {\r\n              task.avpacketPool.release(task.cacheAVPackets.get(streamIndex).shift())\r\n            }\r\n          }\r\n        }\r\n        else if (task.pendingAVPackets.has(streamIndex)) {\r\n          const pending = task.pendingAVPackets.get(streamIndex)\r\n          pending.push(avpacket)\r\n          if (task.stats !== nullptr) {\r\n            const type = task.formatContext.streams[streamIndex].codecpar.codecType\r\n            while (pending.length) {\r\n              const head = pending[0]\r\n              const time = avRescaleQ2(head.pts, addressof(head.timeBase), AV_MILLI_TIME_BASE_Q)\r\n              const currentTime = bigint.max(task.stats.audioCurrentTime, task.stats.videoCurrentTime)\r\n              if (type === AVMediaType.AVMEDIA_TYPE_AUDIO\r\n                && time >= currentTime\r\n                || type === AVMediaType.AVMEDIA_TYPE_VIDEO\r\n                  && time >= currentTime\r\n                || (type !== AVMediaType.AVMEDIA_TYPE_AUDIO && type !== AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n                  && pending.length <= minQueueLength\r\n              ) {\r\n                break\r\n              }\r\n              task.avpacketPool.release(pending.shift())\r\n            }\r\n          }\r\n          else {\r\n            if (pending.length > minQueueLength) {\r\n              task.avpacketPool.release(pending.shift())\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (task.rightIPCPorts.has(STREAM_INDEX_ALL)) {\r\n            if (task.cacheRequests.has(STREAM_INDEX_ALL)) {\r\n              this.replyAVPacket(task, task.rightIPCPorts.get(STREAM_INDEX_ALL), task.cacheRequests.get(STREAM_INDEX_ALL), avpacket)\r\n              task.cacheRequests.delete(STREAM_INDEX_ALL)\r\n            }\r\n            else {\r\n              task.cacheAVPackets.get(STREAM_INDEX_ALL).push(avpacket)\r\n            }\r\n          }\r\n          else {\r\n            task.avpacketPool.release(avpacket)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      task.avpacketPool.release(avpacket)\r\n      if (ret !== IOError.END && ret !== IOError.ABORT) {\r\n        logger.error(`demux error, ret: ${ret}, taskId: ${task.taskId}`)\r\n      }\r\n      for (let streamIndex of task.cacheRequests.keys()) {\r\n        const cacheAVPackets = task.cacheAVPackets.get(streamIndex)\r\n        if (!cacheAVPackets.length) {\r\n          task.rightIPCPorts.get(streamIndex).reply(task.cacheRequests.get(streamIndex), IOError.END)\r\n          task.cacheRequests.delete(streamIndex)\r\n        }\r\n      }\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  public async startDemux(taskId: string, isLive: boolean, minQueueLength: int32) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      // mpegts 最小 20\r\n      minQueueLength = Math.max(minQueueLength, task.format === AVFormat.MPEGTS ? 20 : 10)\r\n\r\n      if (task.loop) {\r\n        task.loop.destroy()\r\n      }\r\n      task.loop = new LoopTask(async () => {\r\n        if (!isLive) {\r\n          let canDo = false\r\n          let isMaxQueue = false\r\n          task.cacheAVPackets.forEach((list, streamIndex) => {\r\n            const stream = task.formatContext.streams.find((stream) => {\r\n              return stream.index === streamIndex\r\n            })\r\n            if (list.length < minQueueLength\r\n              && (stream.codecpar.codecType !== AVMediaType.AVMEDIA_TYPE_SUBTITLE\r\n                || task.cacheAVPackets.size === 1\r\n              )\r\n            ) {\r\n              canDo = true\r\n            }\r\n            if (list.length > Math.max(minQueueLength * 2, MAX_QUEUE_LENGTH_DEFAULT)) {\r\n              isMaxQueue = true\r\n            }\r\n          })\r\n\r\n          if (!canDo || isMaxQueue) {\r\n            task.loop.emptyTask()\r\n            return\r\n          }\r\n        }\r\n        const ret = await this.doDemux(task, minQueueLength)\r\n        if (ret) {\r\n          task.demuxEnded = true\r\n          logger.info(`demuxer ended, taskId: ${task.taskId}`)\r\n          task.loop.stop()\r\n        }\r\n      }, 0, 0, true, false)\r\n\r\n      if (isLive && task.cacheAVPackets.size) {\r\n        while (true) {\r\n          let done = false\r\n          task.cacheAVPackets.forEach((list, streamIndex) => {\r\n            if (list.length >= minQueueLength) {\r\n              done = true\r\n            }\r\n          })\r\n          if (!done) {\r\n            const ret = await this.doDemux(task, minQueueLength)\r\n            if (ret) {\r\n              task.demuxEnded = true\r\n              return\r\n            }\r\n          }\r\n          else {\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      task.loop.start()\r\n\r\n      logger.debug(`start demux loop, taskId: ${task.taskId}`)\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async seek(taskId: string, timestamp: int64, flags: int32, streamIndex: int32 = -1): Promise<int64> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.loop) {\r\n        await task.loop.stopBeforeNextTick()\r\n        let ret: int32 | int64 = await demux.seek(task.formatContext, streamIndex, timestamp, flags)\r\n        if (ret >= 0n) {\r\n\r\n          function resetList(list: pointer<AVPacketRef>[]) {\r\n            array.each(list, (avpacket) => {\r\n              if (task.formatContext.ioReader.flags & IOFlags.SLICE) {\r\n                const newSideData = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n                const stream = task.formatContext.streams[avpacket.streamIndex]\r\n                if (!stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA] && newSideData) {\r\n                  stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA] = mapUint8Array(newSideData.data, newSideData.size).slice()\r\n                }\r\n              }\r\n              task.avpacketPool.release(avpacket)\r\n            })\r\n            list.length = 0\r\n          }\r\n\r\n          task.cacheAVPackets.forEach(resetList)\r\n          task.pendingAVPackets.forEach(resetList)\r\n\r\n          if (task.stats !== nullptr) {\r\n            // 判断当前 task 处理的 stream 来重置\r\n            task.cacheAVPackets.forEach((list, streamIndex) => {\r\n              const stream = task.formatContext.streams.find((stream) => {\r\n                return stream.index === streamIndex\r\n              })\r\n              if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n                task.stats.audioPacketQueueLength = 0\r\n              }\r\n              else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n                task.stats.videoPacketQueueLength = 0\r\n              }\r\n            })\r\n          }\r\n\r\n          const avpacket = task.avpacketPool.alloc() as pointer<AVPacketRef>\r\n\r\n          while (true) {\r\n            ret = await demux.readAVPacket(task.formatContext, avpacket)\r\n            if (ret < 0 || task.cacheAVPackets.has(avpacket.streamIndex)) {\r\n              break\r\n            }\r\n          }\r\n\r\n          if (ret >= 0) {\r\n            task.demuxEnded = false\r\n            const streamIndex = avpacket.streamIndex\r\n            task.cacheAVPackets.get(streamIndex).push(avpacket)\r\n\r\n            if (task.stats !== nullptr) {\r\n              if (task.formatContext.streams[avpacket.streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n                task.stats.audioPacketQueueLength++\r\n              }\r\n              else if (task.formatContext.streams[avpacket.streamIndex].codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n                task.stats.videoPacketQueueLength++\r\n              }\r\n            }\r\n            task.loop.start()\r\n            return avRescaleQ2(bigint.max(avpacket.pts, 0n), addressof(avpacket.timeBase), AV_MILLI_TIME_BASE_Q)\r\n          }\r\n          else {\r\n\r\n            logger.warn(`got first packet failed after seek, taskId: ${task.taskId}`)\r\n\r\n            task.avpacketPool.release(avpacket)\r\n            task.demuxEnded = true\r\n            return timestamp\r\n          }\r\n        }\r\n        return ret\r\n      }\r\n      else {\r\n\r\n        logger.info('seek before demux loop start')\r\n\r\n        let ret = await demux.seek(task.formatContext, -1, timestamp, flags)\r\n        if (ret < 0) {\r\n          return ret\r\n        }\r\n        return timestamp\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 裁剪 avpacket 队列大小\r\n   *\r\n   * @param taskId\r\n   * @param max （毫秒）\r\n   */\r\n  public async croppingAVPacketQueue(taskId: string, max: int64) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n\r\n      let croppingMax = max\r\n\r\n      const indexes: Map<number, number> = new Map()\r\n\r\n      function hasSps(avpacket: pointer<AVPacketRef>, codecId: AVCodecID) {\r\n        if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\r\n          return false\r\n        }\r\n        let hasNewSps = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA) !== nullptr\r\n        if (!hasNewSps && (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB)) {\r\n          if (codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n            hasNewSps = !!h264.generateAnnexbExtradata(getAVPacketData(avpacket))\r\n          }\r\n          else if (codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n            hasNewSps = !!hevc.generateAnnexbExtradata(getAVPacketData(avpacket))\r\n          }\r\n          else if (codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n            hasNewSps = !!vvc.generateAnnexbExtradata(getAVPacketData(avpacket))\r\n          }\r\n        }\r\n        return hasNewSps\r\n      }\r\n\r\n      const cacheAVPackets: Map<number, pointer<AVPacketRef>[]> = new Map()\r\n      task.cacheAVPackets.forEach((list, streamIndex) => {\r\n        cacheAVPackets.set(streamIndex, list)\r\n      })\r\n      task.pendingAVPackets.forEach((list, streamIndex) => {\r\n        cacheAVPackets.set(streamIndex, list)\r\n      })\r\n\r\n      // 先处理视频\r\n      cacheAVPackets.forEach((list, streamIndex) => {\r\n        const codecType = task.formatContext.streams[streamIndex].codecpar.codecType\r\n        const codecId = task.formatContext.streams[streamIndex].codecpar.codecId\r\n        if (codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n          const lastDts = list[list.length - 1].dts\r\n          let i = list.length - 2\r\n          for (i = list.length - 2; i >= 0; i--) {\r\n            if ((list[i].flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\r\n              if (avRescaleQ2(lastDts - list[i].dts, addressof(list[i].timeBase), AV_MILLI_TIME_BASE_Q) >= max) {\r\n                croppingMax = bigint.max(croppingMax, avRescaleQ2(lastDts - list[i].dts, addressof(list[i].timeBase), AV_MILLI_TIME_BASE_Q))\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (codecId === AVCodecID.AV_CODEC_ID_H264\r\n            || codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n            || codecId === AVCodecID.AV_CODEC_ID_VVC\r\n          ) {\r\n            if (i > 0 && !hasSps(list[i], codecId)) {\r\n              for (let j = i - 1; j > 0; j--) {\r\n                if ((list[j].flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\r\n                  // 前面有新的 sps，裁剪到最新的 sps 处\r\n                  if (hasSps(list[j], codecId)) {\r\n                    croppingMax = bigint.max(croppingMax, avRescaleQ2(lastDts - list[j].dts, addressof(list[j].timeBase), AV_MILLI_TIME_BASE_Q))\r\n                    i = j\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (i > 0) {\r\n            indexes.set(streamIndex, i)\r\n          }\r\n        }\r\n      })\r\n\r\n      // 再处理非视频，裁剪到视频处\r\n      cacheAVPackets.forEach((list, streamIndex) => {\r\n        const codecType = task.formatContext.streams[streamIndex].codecpar.codecType\r\n        if (codecType !== AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n          const lastDts = list[list.length - 1].dts\r\n          let i = list.length - 2\r\n          for (i = list.length - 2; i >= 0; i--) {\r\n            // 使用视频的裁剪时间\r\n            if (avRescaleQ2(lastDts - list[i].dts, addressof(list[i].timeBase), AV_MILLI_TIME_BASE_Q) >= croppingMax) {\r\n              break\r\n            }\r\n          }\r\n          if (i >= 0) {\r\n            indexes.set(streamIndex, i)\r\n          }\r\n        }\r\n      })\r\n      // 判断所有流是否都支持裁剪\r\n      if (indexes.size === cacheAVPackets.size) {\r\n        indexes.forEach((index, streamIndex) => {\r\n\r\n          const list = cacheAVPackets.get(streamIndex)\r\n          list.splice(0, index).forEach((avpacket) => {\r\n            task.avpacketPool.release(avpacket)\r\n          })\r\n\r\n          const codecType = task.formatContext.streams[streamIndex].codecpar.codecType\r\n\r\n          if (task.stats !== nullptr) {\r\n            if (codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n              task.stats.audioPacketQueueLength = list.length\r\n            }\r\n            else if (codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n              task.stats.videoPacketQueueLength = list.length\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  public async stop(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.formatContext.ioReader.flags |= IOFlags.ABORT\r\n    }\r\n  }\r\n\r\n  public async registerTask(options: DemuxTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.ioReader && (task.ioReader.flags & IOFlags.NETWORK)) {\r\n        task.ioReader.abort()\r\n      }\r\n      if (task.loop) {\r\n        await task.loop.stopBeforeNextTick()\r\n        task.loop.destroy()\r\n      }\r\n\r\n      task.cacheAVPackets.forEach((list) => {\r\n        list.forEach((avpacket) => {\r\n          task.avpacketPool.release(avpacket)\r\n        })\r\n      })\r\n      task.pendingAVPackets.forEach((list) => {\r\n        list.forEach((avpacket) => {\r\n          task.avpacketPool.release(avpacket)\r\n        })\r\n      })\r\n\r\n      task.cacheRequests.forEach((request, streamId) => {\r\n        task.rightIPCPorts.get(streamId).reply(request, IOError.END)\r\n      })\r\n      task.cacheRequests.clear()\r\n\r\n      await task.formatContext.destroy()\r\n\r\n      if (!task.mainTaskId) {\r\n        task.leftIPCPort.destroy()\r\n        if (task.controlIPCPort) {\r\n          task.controlIPCPort.destroy()\r\n        }\r\n      }\r\n      task.rightIPCPorts.forEach((ipcPort) => {\r\n        ipcPort.destroy()\r\n      })\r\n      task.rightIPCPorts.clear()\r\n\r\n      if (task.iBuffer) {\r\n        avFree(task.iBuffer)\r\n        task.iBuffer = nullptr\r\n      }\r\n      if (task.oBuffer) {\r\n        avFree(task.oBuffer)\r\n        task.oBuffer = nullptr\r\n      }\r\n      this.tasks.delete(taskId)\r\n      logger.debug(`unregisterTask task, taskId: ${taskId}`)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia IOPipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Data, Range } from 'common/types/type'\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport FetchIOLoader from 'avnetwork/ioLoader/FetchIOLoader'\r\nimport IOLoader, { IOLoaderOptions } from 'avnetwork/ioLoader/IOLoader'\r\nimport * as errorType from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport { mapSafeUint8Array } from 'cheap/std/memory'\r\nimport FileIOLoader from 'avnetwork/ioLoader/FileIOLoader'\r\nimport * as logger from 'common/util/logger'\r\nimport type DashIOLoader from 'avnetwork/ioLoader/DashIOLoader'\r\nimport type HlsIOLoader from 'avnetwork/ioLoader/HlsIOLoader'\r\nimport WebSocketIOLoader from 'avnetwork/ioLoader/WebSocketIOLoader'\r\nimport WebTransportIOLoader from 'avnetwork/ioLoader/WebTransportIOLoader'\r\nimport { IOType } from 'avutil/avformat'\r\nimport { AVMediaType } from 'avutil/codec'\r\n\r\nexport interface IOTaskOptions extends TaskOptions {\r\n  type: IOType\r\n  options: IOLoaderOptions\r\n  info: Data\r\n  range: Range\r\n}\r\n\r\ntype SelfTask = IOTaskOptions & {\r\n  ioLoader: IOLoader\r\n  ipcPort: IPCPort\r\n}\r\n\r\nexport default class IOPipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private async createTask(options: IOTaskOptions): Promise<number> {\r\n    let ioLoader: IOLoader\r\n\r\n    switch (options.type) {\r\n      case IOType.Fetch:\r\n        ioLoader = new FetchIOLoader(options.options)\r\n        break\r\n      case IOType.File:\r\n        ioLoader = new FileIOLoader(options.options)\r\n        break\r\n      case IOType.WEBSOCKET:\r\n        ioLoader = new WebSocketIOLoader(options.options)\r\n        break\r\n      case IOType.WEBTRANSPORT:\r\n        ioLoader = new WebTransportIOLoader(options.options)\r\n        break\r\n      case IOType.HLS:\r\n        if (defined(ENABLE_PROTOCOL_HLS)) {\r\n          ioLoader = new (await import('avnetwork/ioLoader/HlsIOLoader')).default(options.options)\r\n        }\r\n        else {\r\n          logger.error('hls protocol not support, maybe you can rebuild avmedia')\r\n          return errorType.FORMAT_NOT_SUPPORT\r\n        }\r\n        break\r\n      case IOType.DASH:\r\n        if (defined(ENABLE_PROTOCOL_DASH)) {\r\n          ioLoader = new (await import('avnetwork/ioLoader/DashIOLoader')).default(options.options)\r\n        }\r\n        else {\r\n          logger.error('dash protocol not support, maybe you can rebuild avmedia')\r\n          return errorType.FORMAT_NOT_SUPPORT\r\n        }\r\n        break\r\n      case IOType.RTMP:\r\n        if (defined(ENABLE_PROTOCOL_RTMP)) {\r\n          ioLoader = new (await import('avnetwork/ioLoader/RtmpIOLoader')).default(options.options)\r\n        }\r\n        else {\r\n          logger.error('rtmp protocol not support, maybe you can rebuild avmedia')\r\n          return errorType.FORMAT_NOT_SUPPORT\r\n        }\r\n        break\r\n    }\r\n\r\n    if (!ioLoader) {\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n\r\n    assert(options.rightPort)\r\n\r\n    const ipcPort = new IPCPort(options.rightPort)\r\n\r\n    const task = {\r\n      ...options,\r\n      ioLoader,\r\n      ipcPort\r\n    }\r\n\r\n    ipcPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'open': {\r\n          try {\r\n            const ret = await ioLoader.open(options.info, options.range)\r\n            if (ret < 0) {\r\n              logger.error(`loader open error, ${ret}, taskId: ${options.taskId}`)\r\n              ipcPort.reply(request, null, ret)\r\n              break\r\n            }\r\n            ipcPort.reply(request, ret)\r\n          }\r\n          catch (error) {\r\n            logger.error(`loader open error, ${error}, taskId: ${options.taskId}`)\r\n            ipcPort.reply(request, null, error)\r\n          }\r\n          break\r\n        }\r\n        case 'read': {\r\n          const pointer: pointer<void> = request.params.pointer\r\n          const length: size = request.params.length\r\n          const ioloaderOptions: Data = request.params.ioloaderOptions\r\n\r\n          assert(pointer)\r\n          assert(length)\r\n\r\n          const buffer = mapSafeUint8Array(pointer, length)\r\n\r\n          try {\r\n            const len = await ioLoader.read(buffer, ioloaderOptions)\r\n            task.stats.bufferReceiveBytes += static_cast<int64>(len)\r\n            ipcPort.reply(request, len)\r\n          }\r\n          catch (error) {\r\n            if (!this.tasks.has(options.taskId)) {\r\n              return\r\n            }\r\n            logger.error(`loader read error, ${error}, taskId: ${options.taskId}`)\r\n            ipcPort.reply(request, errorType.DATA_INVALID)\r\n          }\r\n\r\n          break\r\n        }\r\n\r\n        case 'write': {\r\n          const pointer = request.params.pointer\r\n          const length = request.params.length\r\n\r\n          assert(pointer)\r\n          assert(length)\r\n\r\n          const buffer = mapSafeUint8Array(pointer, length)\r\n\r\n          try {\r\n            const ret = await ioLoader.write(buffer)\r\n            task.stats.bufferSendBytes += static_cast<int64>(length as int32)\r\n            ipcPort.reply(request, ret)\r\n          }\r\n          catch (error) {\r\n            logger.error(`loader write error, ${error}, taskId: ${options.taskId}`)\r\n            ipcPort.reply(request, errorType.DATA_INVALID)\r\n          }\r\n\r\n          break\r\n        }\r\n\r\n        case 'seek': {\r\n          const pos = request.params.pos\r\n          const ioloaderOptions = request.params.ioloaderOptions\r\n\r\n          assert(pos >= 0)\r\n\r\n          try {\r\n            const ret = await ioLoader.seek(pos, ioloaderOptions)\r\n            if (ret < 0) {\r\n              logger.error(`loader seek error, ${ret}, taskId: ${options.taskId}`)\r\n              ipcPort.reply(request, null, ret)\r\n              break\r\n            }\r\n            ipcPort.reply(request, ret)\r\n          }\r\n          catch (error) {\r\n            logger.error(`loader seek error, ${error}, taskId: ${options.taskId}`)\r\n            ipcPort.reply(request, null, error)\r\n          }\r\n          break\r\n        }\r\n\r\n        case 'size': {\r\n          ipcPort.reply(request, await ioLoader.size())\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    this.tasks.set(options.taskId, task)\r\n\r\n    return 0\r\n  }\r\n\r\n  public async open(id: string) {\r\n    const task = this.tasks.get(id)\r\n    if (task) {\r\n      await task.ioLoader.open(task.info, task.range)\r\n      return 0\r\n    }\r\n  }\r\n\r\n  public async getDuration(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.HLS || task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getDuration()\r\n        }\r\n      }\r\n      return 0\r\n    }\r\n  }\r\n\r\n  public async hasAudio(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).hasAudio()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).hasAudio()\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public async hasVideo(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).hasVideo()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).hasVideo()\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public async hasSubtitle(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).hasSubtitle()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).hasSubtitle()\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public async getVideoList(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getVideoList()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).getVideoList()\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      list: [],\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  public async getAudioList(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getAudioList()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).getAudioList()\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      list: [],\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  public async getSubtitleList(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getSubtitleList()\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).getSubtitleList()\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      list: [],\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  public async selectVideo(taskId: string, index: number) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).selectVideo(index)\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).selectVideo(index)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async selectAudio(taskId: string, index: number) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).selectAudio(index)\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).selectAudio(index)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async selectSubtitle(taskId: string, index: number) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).selectSubtitle(index)\r\n        }\r\n        else if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).selectSubtitle(index)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getCurrentProtection(taskId: string, mediaType: AVMediaType) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getCurrentProtection(mediaType)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getMinBuffer(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (defined(ENABLE_PROTOCOL_DASH)) {\r\n        if (task.type === IOType.DASH) {\r\n          return (task.ioLoader as DashIOLoader).getMinBuffer()\r\n        }\r\n      }\r\n      if (defined(ENABLE_PROTOCOL_HLS)) {\r\n        if (task.type === IOType.HLS) {\r\n          return (task.ioLoader as HlsIOLoader).getMinBuffer()\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async registerTask(options: IOTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(id: string): Promise<void> {\r\n    const task = this.tasks.get(id)\r\n    if (task) {\r\n      await task.ioLoader.stop().catch((error) => {\r\n        logger.warn(`stop ioloader error: ${error}, we will ignore it`)\r\n      })\r\n      task.ipcPort.destroy()\r\n      this.tasks.delete(id)\r\n      logger.debug(`unregisterTask task, taskId: ${id}`)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia MuxPipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport * as errorType from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { AVOFormatContext, createAVOFormatContext } from 'avformat/AVFormatContext'\r\nimport * as mux from 'avformat/mux'\r\nimport { AVFormat } from 'avutil/avformat'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport * as logger from 'common/util/logger'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport { IOError } from 'common/io/error'\r\nimport LoopTask from 'common/timer/LoopTask'\r\nimport * as array from 'common/util/array'\r\nimport { avRescaleQ2 } from 'avutil/util/rational'\r\nimport { AV_MILLI_TIME_BASE_Q, NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport OFormat from 'avformat/formats/OFormat'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport { AVStreamInterface } from 'avutil/AVStream'\r\nimport { copyCodecParameters } from 'avutil/util/codecparameters'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { AVMediaType } from 'avutil/codec'\r\nimport { Data } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\n\r\nconst MIN_QUEUE_CACHE = 30\r\n\r\nexport interface MuxTaskOptions extends TaskOptions {\r\n  isLive?: boolean\r\n  format: AVFormat\r\n  formatOptions: Data\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n}\r\n\r\ntype SelfTask = MuxTaskOptions & {\r\n  rightIPCPort: IPCPort\r\n  formatContext: AVOFormatContext\r\n  avpacketPool: AVPacketPool\r\n  loop: LoopTask\r\n  ended: boolean\r\n  streams: {\r\n    stream: AVStreamInterface\r\n    pullIPC: IPCPort\r\n    avpacketQueue: pointer<AVPacketRef>[]\r\n    ended: boolean\r\n    pulling: Promise<void>\r\n  }[]\r\n}\r\n\r\nexport default class MuxPipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createTask(options: MuxTaskOptions): number {\r\n\r\n    assert(options.rightPort)\r\n    const rightIPCPort = new IPCPort(options.rightPort)\r\n\r\n    const formatContext = createAVOFormatContext()\r\n    const ioWriter = new IOWriterSync(5 * 1024 * 1024)\r\n\r\n    ioWriter.onFlush = (data: Uint8Array, pos: int64) => {\r\n      const buffer = data.slice()\r\n      rightIPCPort.notify('write', {\r\n        data: buffer,\r\n        pos\r\n      }, [buffer.buffer])\r\n      return 0\r\n    }\r\n    ioWriter.onSeek = (pos) => {\r\n      rightIPCPort.notify('seek', {\r\n        pos\r\n      })\r\n      return 0\r\n    }\r\n\r\n    formatContext.ioWriter = ioWriter\r\n\r\n    this.tasks.set(options.taskId, {\r\n      ...options,\r\n      rightIPCPort,\r\n      formatContext,\r\n      loop: null,\r\n      ended: false,\r\n      streams: [],\r\n      avpacketPool: new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex)\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  public async open(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n\r\n      let oformat: OFormat\r\n\r\n      switch (task.format) {\r\n        case AVFormat.FLV:\r\n          if (defined(ENABLE_MUXER_FLV)) {\r\n            oformat = new ((await import('avformat/formats/OFlvFormat')).default)(task.formatOptions)\r\n          }\r\n          else {\r\n            logger.error('flv format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MP4:\r\n          if (defined(ENABLE_MUXER_MP4) || defined(ENABLE_PROTOCOL_DASH)) {\r\n            oformat = new ((await import('avformat/formats/OMovFormat')).default)(task.formatOptions)\r\n          }\r\n          else {\r\n            logger.error('mp4 format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MPEGTS:\r\n          if (defined(ENABLE_MUXER_MP4) || defined(ENABLE_PROTOCOL_HLS)) {\r\n            oformat = new ((await import('avformat/formats/OMpegtsFormat')).default)(task.formatOptions)\r\n          }\r\n          else {\r\n            logger.error('mpegts format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.IVF:\r\n          if (defined(ENABLE_MUXER_IVF)) {\r\n            oformat = new ((await import('avformat/formats/OIvfFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('ivf format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.OGG:\r\n          if (defined(ENABLE_MUXER_OGG)) {\r\n            oformat = new ((await import('avformat/formats/OOggFormat')).default)\r\n          }\r\n          else {\r\n            logger.error('oggs format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MP3:\r\n          if (defined(ENABLE_MUXER_MP3)) {\r\n            oformat = new ((await import('avformat/formats/OMp3Format')).default)(task.formatOptions)\r\n          }\r\n          else {\r\n            logger.error('mp3 format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        case AVFormat.MATROSKA:\r\n        case AVFormat.WEBM:\r\n          if (defined(ENABLE_MUXER_MATROSKA)) {\r\n            const options = {\r\n              isLive: task.isLive,\r\n              docType: task.format === AVFormat.WEBM ? 'webm' : 'matroska'\r\n            }\r\n            oformat = new (((await import('avformat/formats/OMatroskaFormat')).default))(object.extend(task.formatOptions, options))\r\n          }\r\n          else {\r\n            logger.error('matroska format not support, maybe you can rebuild avmedia')\r\n            return errorType.FORMAT_NOT_SUPPORT\r\n          }\r\n          break\r\n        default:\r\n          logger.error('format not support')\r\n          return errorType.FORMAT_NOT_SUPPORT\r\n      }\r\n\r\n      assert(oformat)\r\n\r\n      task.formatContext.oformat = oformat\r\n\r\n      for (let i = 0; i < task.streams.length; i++) {\r\n        if (task.streams[i].ended\r\n          || (task.streams[i].stream.codecpar.codecType !== AVMediaType.AVMEDIA_TYPE_AUDIO\r\n            && task.streams[i].stream.codecpar.codecType !== AVMediaType.AVMEDIA_TYPE_VIDEO\r\n          )\r\n        ) {\r\n          continue\r\n        }\r\n        const avpacket = await task.streams[i].pullIPC.request<pointer<AVPacketRef>>('pull')\r\n        if (avpacket === IOError.END) {\r\n          task.streams[i].ended = true\r\n        }\r\n        else if (avpacket < 0) {\r\n          logger.error(`pull stream ${i} avpacket error, ret: ${avpacket}`)\r\n          task.streams[i].ended = true\r\n          return errorType.DATA_INVALID\r\n        }\r\n        else {\r\n          avpacket.streamIndex = task.streams[i].stream.index\r\n          task.streams[i].avpacketQueue.push(avpacket)\r\n          const currentDts = avRescaleQ2(avpacket.dts, addressof(avpacket.timeBase), AV_MILLI_TIME_BASE_Q)\r\n          if (task.streams[i].stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n            task.stats.firstAudioMuxDts = currentDts\r\n          }\r\n          else if (task.streams[i].stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n            task.stats.firstVideoMuxDts = currentDts\r\n          }\r\n        }\r\n      }\r\n      return 0\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async addStream(taskId: string, stream: AVStreamInterface, port: MessagePort) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.streams.push({\r\n        stream,\r\n        pullIPC: new IPCPort(port),\r\n        avpacketQueue: [],\r\n        ended: stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_ATTACHMENT\r\n          || stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_DATA,\r\n        pulling: null\r\n      })\r\n      const ostream = task.formatContext.createStream()\r\n      ostream.id = stream.id\r\n      ostream.index = stream.index\r\n      copyCodecParameters(addressof(ostream.codecpar), stream.codecpar)\r\n      ostream.timeBase.num = stream.timeBase.num\r\n      ostream.timeBase.den = stream.timeBase.den\r\n      ostream.metadata = stream.metadata\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async updateAVCodecParameters(taskId: string, streamIndex: int32, codecpar: pointer<AVCodecParameters>) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      const stream = task.formatContext.getStreamByIndex(streamIndex)\r\n      if (stream) {\r\n        copyCodecParameters(addressof(stream.codecpar), codecpar)\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async start(taskId: string): Promise<number> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n\r\n      if (task.loop) {\r\n        logger.error('task has started')\r\n        return errorType.INVALID_OPERATE\r\n      }\r\n\r\n      let ret = mux.open(task.formatContext, {\r\n        nonnegative: task.format !== AVFormat.MOV\r\n          && task.format !== AVFormat.MATROSKA\r\n      })\r\n\r\n      if (ret < 0) {\r\n        logger.error('mux task open error')\r\n        return errorType.FORMAT_NOT_SUPPORT\r\n      }\r\n\r\n      mux.writeHeader(task.formatContext)\r\n\r\n      if (!task.streams.length) {\r\n        logger.error('task streams not found')\r\n        return errorType.INVALID_OPERATE\r\n      }\r\n\r\n      function process(index: number, avpacket: pointer<AVPacketRef>) {\r\n        if (avpacket === IOError.END) {\r\n          task.streams[index].ended = true\r\n        }\r\n        else if (avpacket < 0) {\r\n          logger.error(`pull stream ${index} avpacket error, ret: ${avpacket}`)\r\n          task.streams[index].ended = true\r\n          task.loop.stop()\r\n          task.ended = true\r\n          task.rightIPCPort.notify('error')\r\n        }\r\n        else {\r\n          avpacket.streamIndex = task.streams[index].stream.index\r\n          task.streams[index].avpacketQueue.push(avpacket)\r\n        }\r\n      }\r\n\r\n      function pull(index: number) {\r\n        if (task.streams[index].pulling) {\r\n          return\r\n        }\r\n        task.streams[index].pulling = task.streams[index].pullIPC.request<pointer<AVPacketRef>>('pull').then((avpacket) => {\r\n          process(index, avpacket)\r\n          task.streams[index].pulling = null\r\n        })\r\n      }\r\n\r\n      task.loop = new LoopTask(async () => {\r\n        for (let i = 0; i < task.streams.length; i++) {\r\n          if (!task.streams[i].ended && task.streams[i].avpacketQueue.length < MIN_QUEUE_CACHE) {\r\n            const mediaType = task.streams[i].stream.codecpar.codecType\r\n            if ((mediaType === AVMediaType.AVMEDIA_TYPE_AUDIO || mediaType === AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n              && !task.streams[i].avpacketQueue.length\r\n            ) {\r\n              if (task.streams[i].pulling) {\r\n                await task.streams[i].pulling\r\n              }\r\n              else {\r\n                process(i, await task.streams[i].pullIPC.request<pointer<AVPacketRef>>('pull'))\r\n              }\r\n            }\r\n            else {\r\n              pull(i)\r\n            }\r\n          }\r\n        }\r\n\r\n        let avpacket: pointer<AVPacketRef> = nullptr\r\n        let dts: int64 = NOPTS_VALUE_BIGINT\r\n        let index = 0\r\n        let type: AVMediaType = AVMediaType.AVMEDIA_TYPE_UNKNOWN\r\n\r\n        for (let i = 0; i < task.streams.length; i++) {\r\n          if (task.streams[i].avpacketQueue.length) {\r\n            const currentDts = avRescaleQ2(task.streams[i].avpacketQueue[0].dts, addressof(task.streams[i].avpacketQueue[0].timeBase), AV_MILLI_TIME_BASE_Q)\r\n            if (dts === NOPTS_VALUE_BIGINT || currentDts < dts) {\r\n              avpacket = task.streams[i].avpacketQueue[0]\r\n              dts = currentDts\r\n              index = i\r\n              type = task.streams[i].stream.codecpar.codecType\r\n            }\r\n          }\r\n        }\r\n        if (avpacket) {\r\n          const now = task.formatContext.ioWriter.getPos()\r\n          mux.writeAVPacket(task.formatContext, avpacket)\r\n          task.stats.bufferOutputBytes += task.formatContext.ioWriter.getPos() - now\r\n          task.avpacketPool.release(avpacket)\r\n          task.streams[index].avpacketQueue.shift()\r\n\r\n          if (type === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n            task.stats.lastAudioMuxDts = dts\r\n          }\r\n          else if (type === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n            task.stats.lastVideoMuxDts = dts\r\n          }\r\n        }\r\n        else if (!task.streams.some((s) => !s.ended)) {\r\n          mux.writeTrailer(task.formatContext)\r\n          mux.flush(task.formatContext)\r\n          task.rightIPCPort.notify('end')\r\n          task.loop.stop()\r\n          task.ended = true\r\n        }\r\n      }, 0, 0, false, false)\r\n      task.loop.start()\r\n\r\n      return 0\r\n    }\r\n    else {\r\n      logger.error('task not found')\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n  }\r\n\r\n  public async pause(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.loop) {\r\n        await task.loop.stopBeforeNextTick()\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async unpause(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.loop && !task.loop.isStarted() && !task.ended) {\r\n        task.loop.start()\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('task not found')\r\n    }\r\n  }\r\n\r\n  public async registerTask(options: MuxTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.loop) {\r\n        await task.loop.stopBeforeNextTick()\r\n        task.loop.destroy()\r\n      }\r\n      array.each(task.streams, (stream) => {\r\n        if (stream.avpacketQueue.length) {\r\n          stream.avpacketQueue.forEach((avpacket) => {\r\n            task.avpacketPool.release(avpacket)\r\n          })\r\n          stream.avpacketQueue.length = 0\r\n        }\r\n        stream.pullIPC.destroy()\r\n      })\r\n      await task.formatContext.destroy()\r\n      this.tasks.delete(taskId)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia abstract Pipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Stats from './struct/stats'\r\nimport * as logger from 'common/util/logger'\r\n\r\nexport interface TaskOptions {\r\n  leftPort?: MessagePort\r\n  rightPort?: MessagePort\r\n  controlPort?: MessagePort\r\n  taskId: string\r\n  stats: pointer<Stats>\r\n}\r\n\r\nexport default abstract class Pipeline {\r\n\r\n  protected tasks: Map<string, TaskOptions>\r\n\r\n  abstract registerTask(options: TaskOptions): Promise<number>\r\n  abstract unregisterTask(id: string): Promise<void>\r\n\r\n  constructor() {\r\n    this.tasks = new Map()\r\n  }\r\n\r\n  public async clear() {\r\n    if (this.tasks.size) {\r\n      for (const key of this.tasks.keys()) {\r\n        await this.unregisterTask(key)\r\n      }\r\n    }\r\n  }\r\n\r\n  public async setLogLevel(level: number) {\r\n    logger.setLevel(level)\r\n  }\r\n\r\n  public async getTaskCount() {\r\n    return this.tasks.size\r\n  }\r\n}\r\n","/*\r\n * libmedia VideoDecodePipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport * as errorType from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport WasmVideoDecoder, { AVDiscard } from 'avcodec/wasmcodec/VideoDecoder'\r\nimport WebVideoDecoder from 'avcodec/webcodec/VideoDecoder'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport * as logger from 'common/util/logger'\r\nimport AVFramePoolImpl from 'avutil/implement/AVFramePoolImpl'\r\nimport { IOError } from 'common/io/error'\r\nimport { AVPacketFlags, AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport * as is from 'common/util/is'\r\nimport * as array from 'common/util/array'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport isWorker from 'common/function/isWorker'\r\nimport { AVCodecID, AVPacketSideDataType } from 'avutil/codec'\r\nimport { avQ2D, avRescaleQ2 } from 'avutil/util/rational'\r\nimport getTimestamp from 'common/function/getTimestamp'\r\nimport { AV_MILLI_TIME_BASE_Q, NOPTS_VALUE } from 'avutil/constant'\r\nimport support from 'common/util/support'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { Data } from 'common/types/type'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport { AVCodecParametersSerialize, AVPacketSerialize, unserializeAVCodecParameters, unserializeAVPacket } from 'avutil/util/serialize'\r\nimport { avFree, avMalloc, avMallocz } from 'avutil/util/mem'\r\nimport { copyCodecParameters, freeCodecParameters } from 'avutil/util/codecparameters'\r\nimport { getAVPacketSideData } from 'avutil/util/avpacket'\r\nimport { memcpy } from 'cheap/std/memory'\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport * as intread from 'avutil/util/intread'\r\n\r\nexport interface VideoDecodeTaskOptions extends TaskOptions {\r\n  resource: ArrayBuffer | WebAssemblyResource\r\n  enableHardware: boolean\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n  avframeList: pointer<List<pointer<AVFrameRef>>>\r\n  avframeListMutex: pointer<Mutex>\r\n  preferWebCodecs?: boolean\r\n}\r\n\r\ntype SelfTask = Omit<VideoDecodeTaskOptions, 'resource'> & {\r\n  resource: WebAssemblyResource\r\n  leftIPCPort: IPCPort\r\n  rightIPCPort: IPCPort\r\n\r\n  softwareDecoder: WasmVideoDecoder | WebVideoDecoder\r\n  softwareDecoderOpened: boolean\r\n  hardwareDecoder?: WebVideoDecoder\r\n  targetDecoder: WasmVideoDecoder | WebVideoDecoder\r\n\r\n  frameCaches: (pointer<AVFrameRef> | VideoFrame)[]\r\n  inputEnd: boolean\r\n\r\n  needKeyFrame: boolean\r\n\r\n  parameters: pointer<AVCodecParameters>\r\n\r\n  hardwareRetryCount: number\r\n\r\n  lastDecodeTimestamp: number\r\n\r\n  firstDecoded: boolean\r\n\r\n  decoderFallbackReady: Promise<number>\r\n\r\n  avframePool: AVFramePoolImpl\r\n  avpacketPool: AVPacketPool\r\n\r\n  wasmDecoderOptions?: Data\r\n  discard: AVDiscard\r\n  playRate: double\r\n}\r\n\r\nexport interface VideoDecodeTaskInfo {\r\n  codecId: AVCodecID\r\n  width: int32\r\n  height: int32\r\n  framerate: float\r\n  hardware: boolean\r\n}\r\n\r\nexport default class VideoDecodePipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createWebCodecDecoder(task: SelfTask, enableHardwareAcceleration: boolean = true) {\r\n    return new WebVideoDecoder({\r\n      onError: (error) => {\r\n        if (task.hardwareRetryCount > 3 || !task.firstDecoded) {\r\n          if (task.targetDecoder === task.hardwareDecoder) {\r\n            task.targetDecoder = task.softwareDecoder\r\n            task.hardwareDecoder.close()\r\n            task.hardwareDecoder = null\r\n            task.decoderFallbackReady = this.openSoftwareDecoder(task)\r\n            logger.warn(`video decode error by hardware decoder(${task.hardwareRetryCount}), taskId: ${task.taskId}, error: ${error}, try to fallback to software decoder`)\r\n          }\r\n        }\r\n        else {\r\n          task.hardwareRetryCount++\r\n          logger.info(`retry open hardware decoder(${task.hardwareRetryCount}), taskId: ${task.taskId}`)\r\n          task.decoderFallbackReady = task.hardwareDecoder.open(task.parameters)\r\n        }\r\n        task.needKeyFrame = true\r\n        task.leftIPCPort.request('requestKeyframe')\r\n      },\r\n      onReceiveVideoFrame(frame) {\r\n        task.firstDecoded = true\r\n        task.frameCaches.push(frame)\r\n        task.stats.videoFrameDecodeCount++\r\n        if (task.lastDecodeTimestamp !== NOPTS_VALUE) {\r\n          task.stats.videoFrameDecodeIntervalMax = Math.max(\r\n            getTimestamp() - task.lastDecodeTimestamp,\r\n            task.stats.videoFrameDecodeIntervalMax\r\n          )\r\n          task.lastDecodeTimestamp = NOPTS_VALUE\r\n        }\r\n      },\r\n      enableHardwareAcceleration\r\n    })\r\n  }\r\n\r\n  private createWasmcodecDecoder(task: SelfTask, resource: WebAssemblyResource) {\r\n    return new WasmVideoDecoder({\r\n      resource: resource,\r\n      onReceiveAVFrame(avframe) {\r\n        task.firstDecoded = true\r\n        task.frameCaches.push(reinterpret_cast<pointer<AVFrameRef>>(avframe))\r\n        task.stats.videoFrameDecodeCount++\r\n        if (task.lastDecodeTimestamp !== NOPTS_VALUE) {\r\n          task.stats.videoFrameDecodeIntervalMax = Math.max(\r\n            getTimestamp() - task.lastDecodeTimestamp,\r\n            task.stats.videoFrameDecodeIntervalMax\r\n          )\r\n          task.lastDecodeTimestamp = NOPTS_VALUE\r\n        }\r\n      },\r\n      avframePool: task.avframePool\r\n    })\r\n  }\r\n\r\n  private async pullAVPacketInternal(task: SelfTask, leftIPCPort: IPCPort) {\r\n    const result = await leftIPCPort.request<pointer<AVPacketRef> | AVPacketSerialize>('pull')\r\n    if (is.number(result) || isPointer(result)) {\r\n      return result as pointer<AVPacketRef>\r\n    }\r\n    else {\r\n      const avpacket = task.avpacketPool.alloc()\r\n      unserializeAVPacket(result, avpacket)\r\n      return avpacket\r\n    }\r\n  }\r\n\r\n  private async createTask(options: VideoDecodeTaskOptions): Promise<number> {\r\n\r\n    assert(options.leftPort)\r\n    assert(options.rightPort)\r\n\r\n    const leftIPCPort = new IPCPort(options.leftPort)\r\n    const rightIPCPort = new IPCPort(options.rightPort)\r\n    const frameCaches: (pointer<AVFrameRef> | VideoFrame)[] = []\r\n\r\n    const avframePool = new AVFramePoolImpl(accessof(options.avframeList), options.avframeListMutex)\r\n\r\n    const task: SelfTask = {\r\n      ...options,\r\n      resource: await compileResource(options.resource, true),\r\n      leftIPCPort,\r\n      rightIPCPort,\r\n      softwareDecoder: null,\r\n      hardwareDecoder: null,\r\n      frameCaches,\r\n      inputEnd: false,\r\n      targetDecoder: null,\r\n      needKeyFrame: true,\r\n      parameters: nullptr,\r\n      hardwareRetryCount: 0,\r\n      lastDecodeTimestamp: 0,\r\n      firstDecoded: false,\r\n      decoderFallbackReady: null,\r\n      softwareDecoderOpened: false,\r\n      discard: AVDiscard.AVDISCARD_DEFAULT,\r\n      playRate: 1,\r\n\r\n      avframePool,\r\n      avpacketPool: new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex)\r\n    }\r\n\r\n    task.softwareDecoder = task.resource\r\n      ? this.createWasmcodecDecoder(task, task.resource)\r\n      : (support.videoDecoder ? this.createWebCodecDecoder(task, false) : null)\r\n\r\n    if (!task.softwareDecoder) {\r\n      logger.error('software decoder not support')\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n\r\n    if (support.videoDecoder && options.enableHardware) {\r\n      task.hardwareDecoder = this.createWebCodecDecoder(task)\r\n    }\r\n\r\n    task.targetDecoder = task.hardwareDecoder || task.softwareDecoder\r\n\r\n    this.tasks.set(options.taskId, task)\r\n\r\n    rightIPCPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'pull': {\r\n          if (frameCaches.length) {\r\n            const frame = frameCaches.shift()\r\n            rightIPCPort.reply(request, frame, null, (isPointer(frame) || is.number(frame)) ? null : [frame])\r\n            break\r\n          }\r\n          else if (!task.inputEnd) {\r\n            while (true) {\r\n              if (frameCaches.length) {\r\n                const frame = frameCaches.shift()\r\n                rightIPCPort.reply(request, frame, null, (isPointer(frame) || is.number(frame)) ? null : [frame])\r\n                break\r\n              }\r\n\r\n              if (task.decoderFallbackReady) {\r\n                let ret = await task.decoderFallbackReady\r\n                if (ret) {\r\n                  if (task.targetDecoder === task.hardwareDecoder) {\r\n                    task.targetDecoder = task.softwareDecoder\r\n                    task.hardwareDecoder.close()\r\n                    task.hardwareDecoder = null\r\n                    logger.warn(`video decode error by hardware decoder(${task.hardwareRetryCount}), taskId: ${task.taskId}, error: ${ret}, try to fallback to software decoder`)\r\n                    ret = await this.openSoftwareDecoder(task)\r\n                  }\r\n                  if (ret) {\r\n                    logger.info(`video decoder open error, taskId: ${task.taskId}`)\r\n                    rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                    break\r\n                  }\r\n                }\r\n                task.decoderFallbackReady = null\r\n              }\r\n              if (task.lastDecodeTimestamp === NOPTS_VALUE) {\r\n                task.lastDecodeTimestamp = getTimestamp()\r\n              }\r\n              const avpacket = await this.pullAVPacketInternal(task, leftIPCPort)\r\n\r\n              if (avpacket === IOError.END) {\r\n                if (task.targetDecoder === task.hardwareDecoder) {\r\n                  // 硬解的 flush 有时会卡主，这里设置 2 秒超时，若超时只能丢弃还未 flush 出来的帧了\r\n                  let ret = await Promise.race([\r\n                    new Sleep(2),\r\n                    task.targetDecoder.flush()\r\n                  ])\r\n                  if (ret) {\r\n                    logger.warn(`video hardware decoder flush failed, ignore it, taskId: ${task.taskId}`)\r\n                  }\r\n                }\r\n                else {\r\n                  await task.targetDecoder.flush()\r\n                }\r\n                task.inputEnd = true\r\n                // 等待 flush 出的帧入队\r\n                if (task.targetDecoder === task.hardwareDecoder) {\r\n                  await new Sleep(0)\r\n                }\r\n                if (frameCaches.length) {\r\n                  const frame = frameCaches.shift()\r\n                  rightIPCPort.reply(request, frame, null, task.targetDecoder === task.hardwareDecoder ? [frame] : null)\r\n                  break\r\n                }\r\n                else {\r\n                  logger.info(`video decoder ended, taskId: ${task.taskId}`)\r\n                  rightIPCPort.reply(request, IOError.END)\r\n                  break\r\n                }\r\n              }\r\n              else if (avpacket > 0) {\r\n                if (task.needKeyFrame) {\r\n                  if ((avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY)\r\n                      && task.parameters.codecId !== AVCodecID.AV_CODEC_ID_H264\r\n                    || task.parameters.codecId === AVCodecID.AV_CODEC_ID_H264\r\n                      && h264.isIDR(\r\n                        avpacket,\r\n                        task.parameters.extradata\r\n                          ? ((intread.r8(task.parameters.extradata + 4) & 0x03) + 1)\r\n                          : 4\r\n                      )\r\n                    || task.parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n                      && hevc.isIDR(\r\n                        avpacket,\r\n                        task.parameters.extradata\r\n                          ? ((intread.r8(task.parameters.extradata + 21) & 0x03) + 1)\r\n                          : 4\r\n                      )\r\n                    || task.parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n                      && vvc.isIDR(\r\n                        avpacket,\r\n                        task.parameters.extradata\r\n                          ? (((intread.r8(task.parameters.extradata) >>> 1) & 0x03) + 1)\r\n                          : 4\r\n                      )\r\n                  ) {\r\n                    task.needKeyFrame = false\r\n                    avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\r\n                  }\r\n                  else {\r\n                    // 需要关键帧但不是，跳过继续请求新的 avpacket\r\n                    if (defined(ENABLE_LOG_TRACE)) {\r\n                      logger.trace(`skip the packet because of not got one keyframe, dts: ${avpacket.dts}(${\r\n                        avRescaleQ2(avpacket.dts, addressof(avpacket.timeBase), AV_MILLI_TIME_BASE_Q)\r\n                      }ms) taskId: ${task.taskId}`)\r\n                    }\r\n                    task.avpacketPool.release(avpacket)\r\n                    continue\r\n                  }\r\n                }\r\n                let ret = task.targetDecoder.decode(avpacket)\r\n\r\n                if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\r\n                  // 更新 task.parameters 到最新的 extradata\r\n                  const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\r\n                  if (element !== nullptr) {\r\n                    if (task.parameters.extradata) {\r\n                      avFree(task.parameters.extradata)\r\n                    }\r\n                    task.parameters.extradataSize = static_cast<int32>(element.size)\r\n                    task.parameters.extradata = avMalloc(element.size)\r\n                    memcpy(task.parameters.extradata, element.data, element.size)\r\n                  }\r\n                }\r\n\r\n                if (ret < 0) {\r\n                  task.stats.videoDecodeErrorPacketCount++\r\n                  // 硬解或者 webcodecs 软解失败\r\n                  if ((task.targetDecoder instanceof WebVideoDecoder) && task.softwareDecoder) {\r\n\r\n                    logger.warn(`video decode error from hardware, taskId: ${task.taskId}, error: ${ret}, try to fallback to software decoder`)\r\n\r\n                    if (task.targetDecoder === task.hardwareDecoder) {\r\n                      task.hardwareDecoder.close()\r\n                      task.hardwareDecoder = null\r\n                    }\r\n                    else if (task.resource) {\r\n                      task.softwareDecoder.close()\r\n                      task.softwareDecoder = this.createWasmcodecDecoder(task, task.resource)\r\n                      task.softwareDecoderOpened = false\r\n                    }\r\n                    else {\r\n                      logger.error(`cannot fallback to wasm video decoder because of resource not found , taskId: ${options.taskId}`)\r\n                      rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                      break\r\n                    }\r\n\r\n                    try {\r\n                      await this.openSoftwareDecoder(task)\r\n                      task.targetDecoder = task.softwareDecoder\r\n                    }\r\n                    catch (error) {\r\n                      logger.error(`video software decoder open error, taskId: ${options.taskId}`)\r\n                      rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                      break\r\n                    }\r\n\r\n                    if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\r\n                      ret = task.targetDecoder.decode(avpacket)\r\n                      if (ret >= 0) {\r\n                        task.avpacketPool.release(avpacket)\r\n                        continue\r\n                      }\r\n                      // webcodecs 软解失败，回退到 wasm 软解\r\n                      if ((task.targetDecoder instanceof WebVideoDecoder) && task.resource) {\r\n\r\n                        logger.warn(`video decode error by webcodecs soft decoder, taskId: ${task.taskId}, error: ${ret}, try to fallback to wasm software decoder`)\r\n\r\n                        task.softwareDecoder.close()\r\n                        task.softwareDecoder = this.createWasmcodecDecoder(task, task.resource)\r\n                        task.softwareDecoderOpened = false\r\n                        try {\r\n                          await this.openSoftwareDecoder(task)\r\n                          task.targetDecoder = task.softwareDecoder\r\n                        }\r\n                        catch (error) {\r\n                          logger.error(`video wasm software decoder open error, taskId: ${options.taskId}`)\r\n                          rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                          break\r\n                        }\r\n                        ret = task.targetDecoder.decode(avpacket)\r\n                        if (ret >= 0) {\r\n                          task.avpacketPool.release(avpacket)\r\n                          continue\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      task.avpacketPool.release(avpacket)\r\n                      task.needKeyFrame = true\r\n                      task.leftIPCPort.request('requestKeyframe')\r\n                      continue\r\n                    }\r\n                  }\r\n                  task.avpacketPool.release(avpacket)\r\n                  logger.error(`video decode error, taskId: ${options.taskId}, ret: ${ret}`)\r\n                  rightIPCPort.reply(request, ret)\r\n                  break\r\n                }\r\n                task.avpacketPool.release(avpacket)\r\n                // WebVideoDecoder 队列中的 EncodedVideoChunk 过多会导致内存占用激增，这里控制一下\r\n                while (task.targetDecoder instanceof WebVideoDecoder\r\n                  && task.targetDecoder.getQueueLength() > 20\r\n                ) {\r\n                  await new Sleep(0)\r\n                }\r\n                continue\r\n              }\r\n              else {\r\n                logger.error(`video decode pull avpacket error, taskId: ${options.taskId}, ret: ${avpacket}`)\r\n                rightIPCPort.reply(request, avpacket)\r\n                break\r\n              }\r\n            }\r\n            break\r\n          }\r\n          logger.info(`video decoder ended, taskId: ${task.taskId}`)\r\n          rightIPCPort.reply(request, IOError.END)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  private async openSoftwareDecoder(task: SelfTask) {\r\n    if (task.softwareDecoder && !task.softwareDecoderOpened) {\r\n      const parameters = task.parameters\r\n      let threadCount = 1\r\n\r\n      if (isWorker()) {\r\n        let pixels = parameters.width * parameters.height\r\n        let framerate = avQ2D(parameters.framerate)\r\n        if (pixels >= 1920 * 1080 && pixels <= 2048 * 1080) {\r\n          if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_AV1\r\n          ) {\r\n            threadCount = 2\r\n          }\r\n          if (framerate > 30) {\r\n            threadCount = 2\r\n            if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n              || parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n              || parameters.codecId === AVCodecID.AV_CODEC_ID_AV1\r\n            ) {\r\n              threadCount = 4\r\n            }\r\n          }\r\n          else if (framerate > 60) {\r\n            threadCount = 4\r\n            if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n              || parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n              || parameters.codecId === AVCodecID.AV_CODEC_ID_AV1\r\n            ) {\r\n              threadCount = 6\r\n            }\r\n          }\r\n        }\r\n        else if (pixels > 2048 * 1080 && pixels <= 3840 * 2160) {\r\n          threadCount = 4\r\n          if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_AV1\r\n          ) {\r\n            threadCount = 6\r\n          }\r\n        }\r\n        else if (pixels > 3840 * 2160) {\r\n          threadCount = 6\r\n          if (parameters.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n            || parameters.codecId === AVCodecID.AV_CODEC_ID_AV1\r\n          ) {\r\n            threadCount = 8\r\n          }\r\n        }\r\n        threadCount = Math.min(threadCount, navigator.hardwareConcurrency)\r\n      }\r\n\r\n      logger.debug(`open software(${task.softwareDecoder instanceof WebVideoDecoder ? 'webcodecs' : 'wasm'}) decoder`)\r\n\r\n      let ret = await task.softwareDecoder.open(parameters, threadCount, task.wasmDecoderOptions)\r\n      if (ret) {\r\n        if ((task.softwareDecoder instanceof WebVideoDecoder) && task.resource) {\r\n\r\n          logger.warn(`webcodecs software decoder open failed, ${ret}, try to fallback to wasm software decoder`)\r\n\r\n          task.softwareDecoder.close()\r\n          task.softwareDecoder = this.createWasmcodecDecoder(task, task.resource)\r\n          ret = await task.softwareDecoder.open(parameters, threadCount)\r\n          if (ret) {\r\n            return ret\r\n          }\r\n          task.targetDecoder = task.softwareDecoder\r\n        }\r\n        else {\r\n          return ret\r\n        }\r\n      }\r\n      task.softwareDecoderOpened = true\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async reopenDecoder(\r\n    taskId: string,\r\n    parameters: AVCodecParametersSerialize | pointer<AVCodecParameters>,\r\n    resource?: string | ArrayBuffer | WebAssemblyResource,\r\n    wasmDecoderOptions?: Data\r\n  ) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      const codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n      if (isPointer(parameters)) {\r\n        copyCodecParameters(codecpar, parameters)\r\n      }\r\n      else {\r\n        unserializeAVCodecParameters(parameters, codecpar)\r\n      }\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      task.parameters = codecpar\r\n\r\n      if (wasmDecoderOptions) {\r\n        task.wasmDecoderOptions = wasmDecoderOptions\r\n      }\r\n\r\n      if (resource) {\r\n        resource = await compileResource(resource, true)\r\n      }\r\n\r\n      let softwareDecoder: WasmVideoDecoder | WebVideoDecoder\r\n\r\n      if (task.preferWebCodecs && support.videoDecoder && WebVideoDecoder.isSupported(codecpar, false)) {\r\n        softwareDecoder = this.createWebCodecDecoder(task, false)\r\n      }\r\n      else {\r\n        softwareDecoder = resource\r\n          ? this.createWasmcodecDecoder(task, resource as WebAssemblyResource)\r\n          : (support.videoDecoder ? this.createWebCodecDecoder(task, false) : null)\r\n      }\r\n\r\n      let hardwareDecoder: WebVideoDecoder = (support.videoDecoder && task.enableHardware)\r\n        ? this.createWebCodecDecoder(task, true)\r\n        : null\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        if (task.softwareDecoder) {\r\n          task.softwareDecoder.close()\r\n        }\r\n        if (task.hardwareDecoder) {\r\n          task.hardwareDecoder.close()\r\n        }\r\n        task.softwareDecoder = softwareDecoder\r\n        task.hardwareDecoder = hardwareDecoder\r\n        task.targetDecoder = task.hardwareDecoder || task.softwareDecoder\r\n        task.hardwareRetryCount = 0\r\n\r\n        if (task.hardwareDecoder) {\r\n          const ret = await task.hardwareDecoder.open(codecpar)\r\n          if (ret) {\r\n            logger.error(`cannot reopen hardware decoder, ${ret}, taskId: ${task.taskId}`)\r\n            task.hardwareDecoder.close()\r\n            task.hardwareDecoder = null\r\n            task.targetDecoder = task.softwareDecoder\r\n          }\r\n          else {\r\n            logger.debug(`reopen video hardware decoder, taskId: ${task.taskId}`)\r\n          }\r\n        }\r\n\r\n        if (resource) {\r\n          task.resource = resource as WebAssemblyResource\r\n        }\r\n\r\n        if (task.targetDecoder === task.softwareDecoder) {\r\n          const ret = await this.openSoftwareDecoder(task)\r\n          if (ret) {\r\n            logger.error(`reopen video software decoder failed, error: ${ret}`)\r\n            if (!task.hardwareDecoder) {\r\n              resolve(errorType.CODEC_NOT_SUPPORT)\r\n              return\r\n            }\r\n          }\r\n          else {\r\n            logger.debug(`reopen video soft decoder, taskId: ${task.taskId}`)\r\n          }\r\n        }\r\n        resolve(0)\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async open(taskId: string, parameters: AVCodecParametersSerialize | pointer<AVCodecParameters>,  wasmDecoderOptions: Data = {}) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.wasmDecoderOptions = wasmDecoderOptions\r\n\r\n      const codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n      if (isPointer(parameters)) {\r\n        copyCodecParameters(codecpar, parameters)\r\n      }\r\n      else {\r\n        unserializeAVCodecParameters(parameters, codecpar)\r\n      }\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      task.parameters = codecpar\r\n\r\n      if (task.preferWebCodecs\r\n        && support.videoDecoder\r\n        && WebVideoDecoder.isSupported(codecpar, false)\r\n        && task.softwareDecoder instanceof WasmVideoDecoder\r\n      ) {\r\n        task.softwareDecoder.close()\r\n        const softwareDecoder = this.createWebCodecDecoder(task, false)\r\n        if (task.softwareDecoder === task.targetDecoder) {\r\n          task.targetDecoder = softwareDecoder\r\n        }\r\n        task.softwareDecoder = softwareDecoder\r\n      }\r\n\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        if (task.hardwareDecoder) {\r\n          logger.debug('open hardware decoder')\r\n          const ret = await task.hardwareDecoder.open(codecpar)\r\n          if (ret) {\r\n            logger.warn(`cannot open hardware decoder, ${ret}, try to open software decoder`)\r\n            task.hardwareDecoder.close()\r\n            task.hardwareDecoder = null\r\n            task.targetDecoder = task.softwareDecoder\r\n          }\r\n        }\r\n\r\n        if (task.targetDecoder === task.softwareDecoder) {\r\n          const ret = await this.openSoftwareDecoder(task)\r\n          if (ret) {\r\n            logger.error(`open video software decoder failed, error: ${ret}`)\r\n            if (!task.hardwareDecoder) {\r\n              resolve(errorType.CODEC_NOT_SUPPORT)\r\n              return\r\n            }\r\n          }\r\n        }\r\n        resolve(0)\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async setPlayRate(taskId: string, rate: double) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task && task.softwareDecoder) {\r\n      let discard = AVDiscard.AVDISCARD_DEFAULT\r\n      let framerate = avQ2D(task.parameters.framerate)\r\n      if (framerate >= 120) {\r\n        if (rate <= 1) {\r\n          discard = AVDiscard.AVDISCARD_DEFAULT\r\n        }\r\n        else if (rate < 1.5) {\r\n          discard = AVDiscard.AVDISCARD_NONREF\r\n        }\r\n        else if (rate < 3) {\r\n          // 跳过所有帧间编码帧\r\n          discard = AVDiscard.AVDISCARD_NONREF\r\n        }\r\n        else {\r\n          // 跳过所有帧间编码帧\r\n          discard = AVDiscard.AVDISCARD_NONKEY\r\n        }\r\n      }\r\n      else if (framerate >= 60) {\r\n        if (rate < 1.5) {\r\n          discard = AVDiscard.AVDISCARD_DEFAULT\r\n        }\r\n        else if (rate < 3) {\r\n          discard = AVDiscard.AVDISCARD_NONREF\r\n        }\r\n        else if (rate < 8) {\r\n          discard = AVDiscard.AVDISCARD_NONINTRA\r\n        }\r\n        else {\r\n          discard = AVDiscard.AVDISCARD_NONKEY\r\n        }\r\n      }\r\n      else {\r\n        if (rate >= 8) {\r\n          discard = AVDiscard.AVDISCARD_NONKEY\r\n        }\r\n        else if (rate >= 4) {\r\n          discard = AVDiscard.AVDISCARD_NONINTRA\r\n        }\r\n        else {\r\n          discard = AVDiscard.AVDISCARD_DEFAULT\r\n        }\r\n      }\r\n      task.softwareDecoder.setSkipFrameDiscard(discard)\r\n      if (task.playRate < rate) {\r\n        task.discard = discard\r\n      }\r\n      else {\r\n        task.discard = Math.max(task.discard, discard)\r\n      }\r\n      task.playRate = rate\r\n    }\r\n  }\r\n\r\n  public async setNextDiscard(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task && task.softwareDecoder) {\r\n      if (task.discard < AVDiscard.AVDISCARD_NONKEY) {\r\n        task.discard += 8\r\n        task.softwareDecoder.setSkipFrameDiscard(task.discard)\r\n\r\n        logger.info(`set next discard, taskId: ${task.taskId}, discard: ${task.discard}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  public async setPrevDiscard(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task && task.softwareDecoder) {\r\n      if (task.discard > AVDiscard.AVDISCARD_DEFAULT) {\r\n        task.discard -= 8\r\n        task.softwareDecoder.setSkipFrameDiscard(task.discard)\r\n\r\n        logger.info(`set prev discard, taskId: ${task.taskId}, discard: ${task.discard}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  public async resetTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.targetDecoder === task.softwareDecoder) {\r\n        await task.targetDecoder.flush()\r\n      }\r\n      // webcodec flush 有可能会卡主，这里重新创建解码器\r\n      else if (task.targetDecoder === task.hardwareDecoder) {\r\n        task.hardwareDecoder.close()\r\n        task.hardwareDecoder = this.createWebCodecDecoder(task)\r\n        const ret = await task.hardwareDecoder.open(task.parameters)\r\n        if (ret) {\r\n          logger.fatal('reopen hardware decoder failed')\r\n        }\r\n        task.targetDecoder = task.hardwareDecoder\r\n      }\r\n      array.each(task.frameCaches, (frame) => {\r\n        if (isPointer(frame)) {\r\n          task.avframePool.release(frame)\r\n        }\r\n        else {\r\n          frame.close()\r\n        }\r\n      })\r\n      task.frameCaches.length = 0\r\n      task.needKeyFrame = true\r\n      task.inputEnd = false\r\n      task.lastDecodeTimestamp = getTimestamp()\r\n\r\n      logger.info(`reset video decoder, taskId: ${task.taskId}`)\r\n    }\r\n  }\r\n\r\n  public async registerTask(options: VideoDecodeTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.rightPort.close()\r\n      task.leftPort.close()\r\n      if (task.softwareDecoder) {\r\n        task.softwareDecoder.close()\r\n      }\r\n      if (task.hardwareDecoder) {\r\n        task.hardwareDecoder.close()\r\n      }\r\n      task.frameCaches.forEach((frame) => {\r\n        if (isPointer(frame)) {\r\n          task.avframePool.release(frame)\r\n        }\r\n        else {\r\n          frame.close()\r\n        }\r\n      })\r\n      if (task.parameters) {\r\n        freeCodecParameters(task.parameters)\r\n      }\r\n      this.tasks.delete(taskId)\r\n      logger.debug(`unregisterTask task, taskId: ${taskId}`)\r\n    }\r\n  }\r\n\r\n  public async getTasksInfo() {\r\n    const info: VideoDecodeTaskInfo[] = []\r\n    this.tasks.forEach((task) => {\r\n      info.push({\r\n        codecId: task.parameters.codecId,\r\n        width: task.parameters.width,\r\n        height: task.parameters.height,\r\n        framerate: avQ2D(task.parameters.framerate),\r\n        hardware: task.targetDecoder === task.hardwareDecoder\r\n      })\r\n    })\r\n    return info\r\n  }\r\n}\r\n","/*\r\n * libmedia VideoEncodePipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport Pipeline, { TaskOptions } from './Pipeline'\r\nimport * as errorType from 'avutil/error'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport List from 'cheap/std/collection/List'\r\nimport AVFrame, { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport * as logger from 'common/util/logger'\r\nimport AVFramePoolImpl from 'avutil/implement/AVFramePoolImpl'\r\nimport { IOError } from 'common/io/error'\r\nimport { AVPacketPool, AVPacketRef } from 'avutil/struct/avpacket'\r\nimport * as is from 'common/util/is'\r\nimport * as array from 'common/util/array'\r\nimport * as object from 'common/util/object'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport AVPacketPoolImpl from 'avutil/implement/AVPacketPoolImpl'\r\nimport isWorker from 'common/function/isWorker'\r\nimport { AVCodecID } from 'avutil/codec'\r\nimport { avQ2D } from 'avutil/util/rational'\r\nimport support from 'common/util/support'\r\nimport WasmVideoEncoder from 'avcodec/wasmcodec/VideoEncoder'\r\nimport WebVideoEncoder from 'avcodec/webcodec/VideoEncoder'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport isPointer from 'cheap/std/function/isPointer'\r\nimport { Data } from 'common/types/type'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport { mapFormat, videoFrame2AVFrame } from 'avutil/function/videoFrame2AVFrame'\r\n\r\nexport interface VideoEncodeTaskOptions extends TaskOptions {\r\n  resource: ArrayBuffer | WebAssemblyResource\r\n  resourceExtraData?: Data\r\n  enableHardware: boolean\r\n  avpacketList: pointer<List<pointer<AVPacketRef>>>\r\n  avpacketListMutex: pointer<Mutex>\r\n  avframeList: pointer<List<pointer<AVFrameRef>>>\r\n  avframeListMutex: pointer<Mutex>\r\n\r\n  gop: int32\r\n  preferWebCodecs?: boolean\r\n}\r\n\r\ntype SelfTask = Omit<VideoEncodeTaskOptions, 'resource'> & {\r\n  leftIPCPort: IPCPort\r\n  rightIPCPort: IPCPort\r\n  resource: WebAssemblyResource\r\n\r\n  softwareEncoder: WasmVideoEncoder | WebVideoEncoder\r\n  softwareEncoderOpened: boolean\r\n  hardwareEncoder?: WebVideoEncoder\r\n  targetEncoder: WasmVideoEncoder | WebVideoEncoder\r\n\r\n  avpacketCaches: pointer<AVPacketRef>[]\r\n  inputEnd: boolean\r\n  encodeEnd: boolean\r\n\r\n  parameters: pointer<AVCodecParameters>\r\n  timeBase: Rational\r\n\r\n  encoderFallbackReady: Promise<number>\r\n\r\n  avframePool: AVFramePoolImpl\r\n  avpacketPool: AVPacketPool\r\n\r\n  gopCounter: int32\r\n\r\n  firstEncoded: boolean\r\n  wasmEncoderOptions?: Data\r\n}\r\n\r\nexport interface VideoEncodeTaskInfo {\r\n  codecId: AVCodecID\r\n  width: int32\r\n  height: int32\r\n  framerate: float\r\n  hardware: boolean\r\n}\r\n\r\nexport default class VideoEncodePipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private createWebcodecEncoder(task: SelfTask, enableHardwareAcceleration: boolean = true) {\r\n    return new WebVideoEncoder({\r\n      onError: (error) => {\r\n        if (task.targetEncoder === task.hardwareEncoder) {\r\n          task.targetEncoder = task.softwareEncoder\r\n          task.hardwareEncoder.close()\r\n          task.hardwareEncoder = null\r\n          task.encoderFallbackReady = this.openSoftwareEncoder(task)\r\n          logger.warn(`video encode error by hardware encoder, taskId: ${task.taskId}, error: ${error}, try to fallback to software encoder`)\r\n        }\r\n        else {\r\n          logger.error(`video encode error by hardware encoder, taskId: ${task.taskId}, error: ${error}`)\r\n        }\r\n      },\r\n      onReceiveAVPacket(avpacket) {\r\n        task.avpacketCaches.push(reinterpret_cast<pointer<AVPacketRef>>(avpacket))\r\n        task.stats.videoPacketEncodeCount++\r\n      },\r\n      enableHardwareAcceleration,\r\n      avpacketPool: task.avpacketPool,\r\n      avframePool: task.avframePool\r\n    })\r\n  }\r\n\r\n  private createWasmcodecEncoder(task: SelfTask, resource: WebAssemblyResource) {\r\n    return new WasmVideoEncoder({\r\n      resource: task.resource,\r\n      onReceiveAVPacket(avpacket) {\r\n        task.avpacketCaches.push(reinterpret_cast<pointer<AVPacketRef>>(avpacket))\r\n        task.stats.videoPacketEncodeCount++\r\n      },\r\n      avpacketPool: task.avpacketPool\r\n    })\r\n  }\r\n\r\n  private async createTask(options: VideoEncodeTaskOptions): Promise<number> {\r\n\r\n    assert(options.leftPort)\r\n    assert(options.rightPort)\r\n\r\n    const leftIPCPort = new IPCPort(options.leftPort)\r\n    const rightIPCPort = new IPCPort(options.rightPort)\r\n    const avpacketCaches: pointer<AVPacketRef>[] = []\r\n\r\n    const avframePool = new AVFramePoolImpl(accessof(options.avframeList), options.avframeListMutex)\r\n    const avpacketPool = new AVPacketPoolImpl(accessof(options.avpacketList), options.avpacketListMutex)\r\n\r\n    const resource = await compileResource(options.resource, true)\r\n\r\n    if (options.resourceExtraData) {\r\n      object.extend(resource, options.resourceExtraData)\r\n    }\r\n\r\n    const task: SelfTask = {\r\n      ...options,\r\n      resource,\r\n      leftIPCPort,\r\n      rightIPCPort,\r\n      softwareEncoder: null,\r\n      hardwareEncoder: null,\r\n      avpacketCaches,\r\n      inputEnd: false,\r\n      encodeEnd: false,\r\n      targetEncoder: null,\r\n      parameters: nullptr,\r\n      timeBase: null,\r\n      encoderFallbackReady: null,\r\n      softwareEncoderOpened: false,\r\n      gopCounter: 0,\r\n      firstEncoded: false,\r\n\r\n      avframePool,\r\n      avpacketPool\r\n    }\r\n\r\n    task.softwareEncoder = task.resource\r\n      ? this.createWasmcodecEncoder(task, task.resource)\r\n      : (support.videoEncoder ? this.createWebcodecEncoder(task, false) : null)\r\n\r\n    if (!task.softwareEncoder) {\r\n      logger.error('software encoder not support')\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n\r\n    if (support.videoEncoder && options.enableHardware) {\r\n      task.hardwareEncoder = this.createWebcodecEncoder(task)\r\n    }\r\n\r\n    task.targetEncoder = task.hardwareEncoder || task.softwareEncoder\r\n\r\n    this.tasks.set(options.taskId, task)\r\n\r\n    const caches: (pointer<AVFrameRef> | VideoFrame)[] = []\r\n\r\n    let pullPadding: Promise<any>\r\n    const MAX = 4\r\n\r\n    async function pullAVFrame() {\r\n      if (!task.inputEnd) {\r\n        if (!caches.length) {\r\n          if (pullPadding) {\r\n            await pullPadding\r\n          }\r\n          const avframe = await leftIPCPort.request<pointer<AVFrameRef> | VideoFrame>('pull', {\r\n            preferVideoFrame: task.targetEncoder instanceof WebVideoEncoder && task.firstEncoded\r\n          })\r\n          if (is.number(avframe) && avframe < 0) {\r\n            task.inputEnd = true\r\n          }\r\n          caches.push(avframe)\r\n        }\r\n        if (caches.length < MAX && !pullPadding && task.firstEncoded) {\r\n          pullPadding = leftIPCPort.request<pointer<AVFrameRef> | VideoFrame>('pull',  {\r\n            preferVideoFrame: task.targetEncoder instanceof WebVideoEncoder && task.firstEncoded\r\n          }).then((avframe) => {\r\n            if (is.number(avframe) && avframe < 0) {\r\n              task.inputEnd = true\r\n            }\r\n            caches.push(avframe)\r\n            pullPadding = null\r\n          })\r\n        }\r\n      }\r\n      return caches.length ? caches.shift() : IOError.END as pointer<AVFrameRef>\r\n    }\r\n\r\n    rightIPCPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'pull': {\r\n          if (avpacketCaches.length) {\r\n            const avpacket = avpacketCaches.shift()\r\n            rightIPCPort.reply(request, avpacket)\r\n            break\r\n          }\r\n          else if (!task.encodeEnd) {\r\n            while (true) {\r\n              if (avpacketCaches.length) {\r\n                const avpacket = avpacketCaches.shift()\r\n                rightIPCPort.reply(request, avpacket)\r\n                break\r\n              }\r\n\r\n              if (task.encoderFallbackReady) {\r\n                let ret = await task.encoderFallbackReady\r\n                if (ret) {\r\n                  if (task.targetEncoder === task.hardwareEncoder) {\r\n                    task.targetEncoder = task.softwareEncoder\r\n                    task.hardwareEncoder.close()\r\n                    task.hardwareEncoder = null\r\n                    ret = await this.openSoftwareEncoder(task)\r\n                    logger.warn(`video encode error by hardware encoder, taskId: ${task.taskId}, error: ${ret}, try to fallback to software encoder`)\r\n                  }\r\n                  if (ret) {\r\n                    logger.info(`video encoder open error, taskId: ${task.taskId}`)\r\n                    rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                    break\r\n                  }\r\n                }\r\n                task.encoderFallbackReady = null\r\n              }\r\n\r\n              let avframe = await pullAVFrame()\r\n              if (task.targetEncoder instanceof WasmVideoEncoder && avframe instanceof VideoFrame) {\r\n                const frame = task.avframePool.alloc()\r\n                await videoFrame2AVFrame(avframe, frame)\r\n                avframe.close()\r\n                avframe = frame\r\n              }\r\n\r\n              if (isPointer(avframe) || avframe instanceof VideoFrame) {\r\n                let ret = (!task.firstEncoded && task.targetEncoder instanceof WasmVideoEncoder)\r\n                  ? await task.targetEncoder.encodeAsync(avframe as pointer<AVFrame>, task.gopCounter === 0)\r\n                  : task.targetEncoder.encode(avframe as pointer<AVFrame>, task.gopCounter === 0)\r\n                if (ret < 0) {\r\n                  task.stats.videoEncodeErrorFrameCount++\r\n                  if (task.targetEncoder instanceof WebVideoEncoder && task.softwareEncoder) {\r\n\r\n                    logger.warn(`video encode error from hardware, taskId: ${task.taskId}, error: ${ret}, try to fallback to software decoder`)\r\n\r\n                    if (task.targetEncoder === task.hardwareEncoder) {\r\n                      task.hardwareEncoder.close()\r\n                      task.hardwareEncoder = null\r\n                    }\r\n                    else if (task.resource) {\r\n                      task.softwareEncoder.close()\r\n                      task.softwareEncoder = this.createWasmcodecEncoder(task, task.resource)\r\n                      task.softwareEncoderOpened = false\r\n                      task.firstEncoded = false\r\n                      while (caches.length) {\r\n                        if (caches[0] instanceof VideoFrame\r\n                          && mapFormat(caches[0].format) !== task.parameters.format\r\n                        ) {\r\n                          caches.shift().close()\r\n                        }\r\n                        else {\r\n                          break\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      logger.error(`cannot fallback to wasm video encoder because of resource not found , taskId: ${options.taskId}`)\r\n                      rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                      break\r\n                    }\r\n                    try {\r\n                      await this.openSoftwareEncoder(task)\r\n                      task.targetEncoder = task.softwareEncoder\r\n                    }\r\n                    catch (error) {\r\n                      logger.error(`video software encoder open error, taskId: ${options.taskId}`)\r\n                      rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                      break\r\n                    }\r\n\r\n                    task.gopCounter = 0\r\n\r\n                    ret = task.targetEncoder instanceof WasmVideoEncoder\r\n                      ? await task.targetEncoder.encodeAsync(avframe as pointer<AVFrame>, true)\r\n                      : task.targetEncoder.encode(avframe, true)\r\n\r\n                    if (ret < 0 && task.targetEncoder instanceof WebVideoEncoder && task.resource) {\r\n                      logger.warn(`video encode error from webcodecs soft encoder, taskId: ${task.taskId}, error: ${ret}, try to fallback to wasm software encoder`)\r\n                      task.softwareEncoder.close()\r\n                      task.softwareEncoder = this.createWasmcodecEncoder(task, task.resource)\r\n                      task.softwareEncoderOpened = false\r\n                      task.firstEncoded = false\r\n                      task.gopCounter = 0\r\n                      try {\r\n                        await this.openSoftwareEncoder(task)\r\n                        task.targetEncoder = task.softwareEncoder\r\n                      }\r\n                      catch (error) {\r\n                        logger.error(`video software encoder open error, taskId: ${options.taskId}`)\r\n                        rightIPCPort.reply(request, errorType.CODEC_NOT_SUPPORT)\r\n                        break\r\n                      }\r\n                      ret = await task.targetEncoder.encodeAsync(avframe as pointer<AVFrame>, true)\r\n                    }\r\n                  }\r\n                  if (ret < 0) {\r\n                    if (isPointer(avframe)) {\r\n                      task.avframePool.release(avframe)\r\n                    }\r\n                    else {\r\n                      avframe.close()\r\n                    }\r\n                    logger.error(`video encode error, taskId: ${options.taskId}, ret: ${ret}`)\r\n                    rightIPCPort.reply(request, ret)\r\n                    break\r\n                  }\r\n                }\r\n                if (!task.firstEncoded\r\n                  && (task.targetEncoder instanceof WebVideoEncoder\r\n                    || !task.resourceExtraData.enableThreadPool\r\n                    || !support.jspi\r\n                    || task.targetEncoder.getChildThreadCount()\r\n                  )\r\n                ) {\r\n                  task.firstEncoded = true\r\n                }\r\n                task.gopCounter++\r\n                if (task.gopCounter === task.gop) {\r\n                  task.gopCounter = 0\r\n                }\r\n                if (isPointer(avframe)) {\r\n                  task.avframePool.release(avframe)\r\n                }\r\n                else {\r\n                  avframe.close()\r\n                }\r\n                // 硬解队列中的 EncodedVideoChunk 过多会报错， 这里判断做一下延时\r\n                while (task.targetEncoder instanceof WebVideoEncoder\r\n                    && task.targetEncoder.getQueueLength() > 10\r\n                // || task.targetEncoder instanceof WasmVideoEncoder\r\n                    // && task.targetEncoder.getQueueLength() > 40\r\n                ) {\r\n                  await new Sleep(0)\r\n                }\r\n                continue\r\n              }\r\n              else {\r\n                task.encodeEnd = true\r\n                if (avframe === IOError.END) {\r\n                  if (task.targetEncoder === task.hardwareEncoder) {\r\n                    // 硬解的 flush 有时会卡主，这里设置 2 秒超时，若超时只能丢弃还未 flush 出来的帧了\r\n                    let ret = await Promise.race([\r\n                      new Sleep(2),\r\n                      task.targetEncoder.flush()\r\n                    ])\r\n                    if (ret) {\r\n                      logger.warn(`video hardware encoder flush failed, ignore it, taskId: ${task.taskId}`)\r\n                    }\r\n                  }\r\n                  else {\r\n                    await task.targetEncoder.flush()\r\n                  }\r\n                  // 等待 flush 出的帧入队\r\n                  if (task.targetEncoder === task.hardwareEncoder) {\r\n                    await new Sleep(0)\r\n                  }\r\n                  if (avpacketCaches.length) {\r\n                    const avpacket = avpacketCaches.shift()\r\n                    rightIPCPort.reply(request, avpacket)\r\n                    break\r\n                  }\r\n                  else {\r\n                    logger.info(`video encoder ended, taskId: ${task.taskId}`)\r\n                    rightIPCPort.reply(request, IOError.END)\r\n                    break\r\n                  }\r\n                }\r\n                else {\r\n                  logger.error(`video encoder pull avframe error, taskId: ${options.taskId}, ret: ${avframe}`)\r\n                  rightIPCPort.reply(request, avframe)\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            break\r\n          }\r\n          logger.info(`video encoder ended, taskId: ${task.taskId}`)\r\n          rightIPCPort.reply(request, IOError.END)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  private async openSoftwareEncoder(task: SelfTask) {\r\n    if (task.softwareEncoder && !task.softwareEncoderOpened) {\r\n      const parameters = task.parameters\r\n      let threadCount = 1\r\n      if (isWorker()) {\r\n        threadCount = Math.max(threadCount, navigator.hardwareConcurrency)\r\n      }\r\n      let ret = await task.softwareEncoder.open(parameters, task.timeBase, threadCount, task.wasmEncoderOptions)\r\n      if (ret) {\r\n        if ((task.softwareEncoder instanceof WebVideoEncoder) && task.resource) {\r\n\r\n          logger.warn(`webcodecs software encoder open failed, error: ${ret}, try to fallback to wasm software encoder`)\r\n\r\n          task.softwareEncoder.close()\r\n          task.softwareEncoder = this.createWasmcodecEncoder(task, task.resource)\r\n          ret = await task.softwareEncoder.open(parameters, task.timeBase, threadCount, task.wasmEncoderOptions)\r\n          if (ret) {\r\n            return ret\r\n          }\r\n          task.targetEncoder = task.softwareEncoder\r\n        }\r\n        else {\r\n          return ret\r\n        }\r\n      }\r\n\r\n      task.softwareEncoderOpened = true\r\n      if (task.softwareEncoder instanceof WasmVideoEncoder) {\r\n        task.firstEncoded = false\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public async open(taskId: string, codecpar: pointer<AVCodecParameters>, timeBase: Rational, wasmEncoderOptions: Data = {}) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.wasmEncoderOptions = wasmEncoderOptions\r\n\r\n      if (task.preferWebCodecs\r\n        && support.videoEncoder\r\n        && WebVideoEncoder.isSupported(codecpar, false)\r\n        && task.softwareEncoder instanceof WasmVideoEncoder\r\n      ) {\r\n        task.softwareEncoder.close()\r\n        const softwareEncoder = this.createWebcodecEncoder(task, false)\r\n        if (task.softwareEncoder === task.targetEncoder) {\r\n          task.targetEncoder = softwareEncoder\r\n        }\r\n        task.softwareEncoder = softwareEncoder\r\n      }\r\n\r\n      return new Promise<number>(async (resolve, reject) => {\r\n        if (task.hardwareEncoder) {\r\n          let ret = await task.hardwareEncoder.open(codecpar, timeBase)\r\n          if (ret) {\r\n            logger.error(`cannot open hardware encoder, error: ${ret}`)\r\n            task.hardwareEncoder.close()\r\n            task.hardwareEncoder = null\r\n            task.targetEncoder = task.softwareEncoder\r\n          }\r\n        }\r\n\r\n        task.parameters = codecpar\r\n        task.timeBase = timeBase\r\n\r\n        if (task.targetEncoder === task.softwareEncoder) {\r\n          let ret = await this.openSoftwareEncoder(task)\r\n          if (ret) {\r\n            logger.error(`open video software encoder failed, error: ${ret}`)\r\n            if (!task.hardwareEncoder) {\r\n              resolve(errorType.CODEC_NOT_SUPPORT)\r\n              return\r\n            }\r\n          }\r\n        }\r\n        resolve(0)\r\n      })\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async resetTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.targetEncoder === task.softwareEncoder) {\r\n        await task.targetEncoder.flush()\r\n      }\r\n      // webcodec flush 有可能会卡主，这里重新创建编码器\r\n      else if (task.targetEncoder === task.hardwareEncoder) {\r\n        task.hardwareEncoder.close()\r\n        task.hardwareEncoder = this.createWebcodecEncoder(task)\r\n        await task.hardwareEncoder.open(task.parameters, task.timeBase)\r\n        task.targetEncoder = task.hardwareEncoder\r\n      }\r\n      array.each(task.avpacketCaches, (avpacket) => {\r\n        task.avpacketPool.release(avpacket)\r\n      })\r\n      task.avpacketCaches.length = 0\r\n      task.inputEnd = false\r\n      task.encodeEnd = false\r\n\r\n      logger.info(`reset video encode, taskId: ${task.taskId}`)\r\n    }\r\n  }\r\n\r\n  public async getExtraData(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      return task.targetEncoder.getExtraData()\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async getColorSpace(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      return task.targetEncoder.getColorSpace()\r\n    }\r\n    logger.fatal('task not found')\r\n  }\r\n\r\n  public async registerTask(options: VideoEncodeTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return errorType.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      task.rightPort.close()\r\n      task.leftPort.close()\r\n      if (task.softwareEncoder) {\r\n        task.softwareEncoder.close()\r\n      }\r\n      if (task.hardwareEncoder) {\r\n        task.hardwareEncoder.close()\r\n      }\r\n      array.each(task.avpacketCaches, (avpacket) => {\r\n        task.avpacketPool.release(avpacket)\r\n      })\r\n      this.tasks.delete(taskId)\r\n    }\r\n  }\r\n\r\n  public async getTasksInfo() {\r\n    const info: VideoEncodeTaskInfo[] = []\r\n    this.tasks.forEach((task) => {\r\n      info.push({\r\n        codecId: task.parameters.codecId,\r\n        width: task.parameters.width,\r\n        height: task.parameters.height,\r\n        framerate: avQ2D(task.parameters.framerate),\r\n        hardware: task.targetEncoder === task.hardwareEncoder\r\n      })\r\n    })\r\n    return info\r\n  }\r\n}\r\n","/*\r\n * libmedia stats struct defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n@struct\r\nexport class JitterBuffer {\r\n  min: int32\r\n  max: int32\r\n}\r\n\r\n@struct\r\nexport default class Stats {\r\n  /**\r\n   * 音频通道数\r\n   */\r\n  channels: int32\r\n  /**\r\n   * 音频采样率\r\n   */\r\n  sampleRate: int32\r\n  /**\r\n   * 音频帧大小\r\n   */\r\n  audioFrameSize: int32\r\n  /**\r\n   * 音频包总字节数\r\n   */\r\n  audioPacketBytes: int64\r\n  /**\r\n   * 音频包总数\r\n   */\r\n  audioPacketCount: int64\r\n  /**\r\n   * 当前音频包队列长度\r\n   */\r\n  audioPacketQueueLength: int32\r\n  /**\r\n   * 音频包丢弃总数\r\n   */\r\n  audioDropPacketCount: int64\r\n  /**\r\n   * 音频解码错误包总数\r\n   */\r\n  audioDecodeErrorPacketCount: int32\r\n  /**\r\n   * 音频编码错误帧总数\r\n   */\r\n  audioEncodeErrorFrameCount: int32\r\n  /**\r\n   * 音频解码帧总数\r\n   */\r\n  audioFrameDecodeCount: int64\r\n  /**\r\n   * 音频编码包总数\r\n   */\r\n  audioPacketEncodeCount: int64\r\n  /**\r\n   * 音频渲染帧总数\r\n   */\r\n  audioFrameRenderCount: int64\r\n  /**\r\n   * 音频帧丢弃总数\r\n   */\r\n  audioFrameDropCount: int32\r\n  /**\r\n   * 视频宽度\r\n   */\r\n  width: int32\r\n  /**\r\n   * 视频高度\r\n   */\r\n  height: int32\r\n  /**\r\n   * 视频关键帧间隔\r\n   */\r\n  keyFrameInterval: int32\r\n  /**\r\n   * 视频 gop 长度\r\n   */\r\n  gop: int32\r\n  /**\r\n   * 视频包总字节数\r\n   */\r\n  videoPacketBytes: int64\r\n  /**\r\n   * 视频包总数\r\n   */\r\n  videoPacketCount: int64\r\n  /**\r\n   * 当前视频包队列总数\r\n   */\r\n  videoPacketQueueLength: int32\r\n  /**\r\n   * 视频包丢弃总数\r\n   */\r\n  videoDropPacketCount: int64\r\n  /**\r\n   * 视频包解码错误总数\r\n   */\r\n  videoDecodeErrorPacketCount: int32\r\n  /**\r\n   * 视频编码错误帧总数\r\n   */\r\n  videoEncodeErrorFrameCount: int32\r\n  /**\r\n   * 视频解码帧总数\r\n   */\r\n  videoFrameDecodeCount: int64\r\n  /**\r\n   * 视频编码包总数\r\n   */\r\n  videoPacketEncodeCount: int64\r\n  /**\r\n   * 视频渲染帧总数\r\n   */\r\n  videoFrameRenderCount: int64\r\n  /**\r\n   * 视频帧丢弃总数（解码未渲染）\r\n   */\r\n  videoFrameDropCount: int32\r\n  /**\r\n   * 视频关键帧总数\r\n   */\r\n  keyFrameCount: int64\r\n\r\n  /**\r\n   * buffer 丢弃总字节数\r\n   */\r\n  bufferDropBytes: int64\r\n  /**\r\n   * buffer 接收总字节数\r\n   */\r\n  bufferReceiveBytes: int64\r\n  /**\r\n   * buffer 发送总字节数\r\n   */\r\n  bufferSendBytes: int64\r\n  /**\r\n   * buffer 总输出字节数\r\n   * \r\n   */\r\n  bufferOutputBytes: int64\r\n  /**\r\n   * 音频码率\r\n   */\r\n  audioBitrate: int32\r\n  /**\r\n   * 视频码率\r\n   */\r\n  videoBitrate: int32\r\n  /**\r\n   * 视频解码帧率\r\n   */\r\n  videoDecodeFramerate: int32\r\n  /**\r\n   * 视频渲染帧率\r\n   */\r\n  videoRenderFramerate: int32\r\n  /**\r\n   * 视频编码帧率（根据 dts 计算）\r\n   */\r\n  videoEncodeFramerate: int32\r\n  /**\r\n   * 音频解码帧率\r\n   */\r\n  audioDecodeFramerate: int32\r\n  /**\r\n   * 音频渲染帧率\r\n   */\r\n  audioRenderFramerate: int32\r\n  /**\r\n   * 音视频编码帧率（根据 dts 计算）\r\n   */\r\n  audioEncodeFramerate: int32\r\n\r\n  /**\r\n   * 音频最大解码帧间隔（毫秒）\r\n   */\r\n  audioFrameDecodeIntervalMax: int32\r\n  /**\r\n   * 音频最大渲染帧间隔（毫秒）\r\n   */\r\n  audioFrameRenderIntervalMax: int32\r\n  /**\r\n   * 视频最大解码帧间隔（毫秒）\r\n   */\r\n  videoFrameDecodeIntervalMax: int32\r\n  /**\r\n   * 视频最大渲染帧间隔（毫秒）\r\n   */\r\n  videoFrameRenderIntervalMax: int32\r\n  /**\r\n   * 接收带宽\r\n   */\r\n  bandwidth: int32\r\n  /**\r\n   * 抖动指标\r\n   */\r\n  jitter: double\r\n\r\n  /**\r\n   * jitter buffer\r\n   */\r\n  jitterBuffer: JitterBuffer\r\n\r\n  /**\r\n   * 音频卡顿次数\r\n   */\r\n  audioStutter: int32\r\n  /**\r\n   * 视频卡顿次数\r\n   */\r\n  videoStutter: int32\r\n\r\n  /**\r\n   * 音频 codec string\r\n   */\r\n  audiocodec: string\r\n  /**\r\n   * 视频 codec string\r\n   */\r\n  videocodec: string\r\n\r\n  /**\r\n   * 首个 audio mux dts\r\n   */\r\n  firstAudioMuxDts: int64\r\n  /**\r\n   * 上一次 audio mux dts\r\n   */\r\n  lastAudioMuxDts: int64\r\n\r\n  /**\r\n   * 首个 audio mux dts\r\n   */\r\n  firstVideoMuxDts: int64\r\n  /**\r\n   * 上一次 video mux dts\r\n   */\r\n  lastVideoMuxDts: int64\r\n  /**\r\n   * 当前音频播放时间戳\r\n   */\r\n  audioCurrentTime: int64\r\n  /**\r\n   * 当前视频播放时间戳\r\n   */\r\n  videoCurrentTime: int64\r\n  /**\r\n   * 下一个音频帧播放时间戳\r\n   */\r\n  audioNextTime: int64\r\n  /**\r\n   * 下一个视频帧播放时间戳\r\n   */\r\n  videoNextTime: int64\r\n}\r\n","/*\r\n * libmedia AVTranscoder\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\nimport IOPipeline from 'avpipeline/IOPipeline'\r\nimport DemuxPipeline from 'avpipeline/DemuxPipeline'\r\nimport VideoDecodePipeline from 'avpipeline/VideoDecodePipeline'\r\nimport AudioDecodePipeline from 'avpipeline/AudioDecodePipeline'\r\nimport { Thread, closeThread, createThreadFromClass } from 'cheap/thread/thread'\r\nimport generateUUID from 'common/function/generateUUID'\r\nimport * as is from 'common/util/is'\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport { AVPacketRef } from 'avutil/struct/avpacket'\r\nimport List from 'cheap/std/collection/List'\r\nimport { AVFrameRef } from 'avutil/struct/avframe'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport compile, { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport { AVFormat, AVSeekFlags, IOType, IOFlags } from 'avutil/avformat'\r\nimport * as logger from 'common/util/logger'\r\nimport support from 'common/util/support'\r\nimport browser from 'common/util/browser'\r\nimport { avQ2D, avRescaleQ } from 'avutil/util/rational'\r\nimport { AV_MILLI_TIME_BASE_Q, AV_TIME_BASE_Q, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport { mapSafeUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport getVideoCodec from 'avutil/function/getVideoCodec'\r\nimport * as mutex from 'cheap/thread/mutex'\r\nimport AudioEncodePipeline from 'avpipeline/AudioEncodePipeline'\r\nimport VideoEncodePipeline from 'avpipeline/VideoEncodePipeline'\r\nimport { AudioCodecString2CodecId, Ext2Format,\r\n  Format2AVFormat, PixfmtString2AVPixelFormat, SampleFmtString2SampleFormat,\r\n  VideoCodecString2CodecId\r\n} from 'avutil/stringEnum'\r\nimport MuxPipeline from 'avpipeline/MuxPipeline'\r\nimport IOWriterSync from 'common/io/IOWriterSync'\r\nimport { AVStreamInterface, AVStreamMetadataKey } from 'avutil/AVStream'\r\nimport Stats from 'avpipeline/struct/stats'\r\nimport IPCPort, { NOTIFY, REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport * as errorType from 'avutil/error'\r\nimport getAudioCodec from 'avutil/function/getAudioCodec'\r\nimport { avFree, avMalloc, avMallocz } from 'avutil/util/mem'\r\nimport AVCodecParameters, { AVCodecParameterFlags } from 'avutil/struct/avcodecparameters'\r\nimport { copyCodecParameters, freeCodecParameters } from 'avutil/util/codecparameters'\r\nimport SafeFileIO from 'common/io/SafeFileIO'\r\nimport Emitter from 'common/event/Emitter'\r\nimport * as eventType from './eventType'\r\nimport { unrefAVFrame } from 'avutil/util/avframe'\r\nimport { unrefAVPacket } from 'avutil/util/avpacket'\r\n\r\nimport * as aac from 'avutil/codecs/aac'\r\nimport * as opus from 'avutil/codecs/opus'\r\nimport * as h264 from 'avutil/codecs/h264'\r\nimport * as hevc from 'avutil/codecs/hevc'\r\nimport * as vvc from 'avutil/codecs/vvc'\r\nimport * as av1 from 'avutil/codecs/av1'\r\nimport * as vp9 from 'avutil/codecs/vp9'\r\nimport Sleep from 'common/timer/Sleep'\r\nimport AVFilterPipeline from './filter/AVFilterPipeline'\r\nimport { AVFilterGraphDesVertex, FilterGraphPortDes, GraphNodeType, createGraphDesVertex } from 'avfilter/graph'\r\nimport { AVSampleFormat } from 'avutil/audiosamplefmt'\r\nimport { AVPixelFormat } from 'avutil/pixfmt'\r\nimport getTimestamp from 'common/function/getTimestamp'\r\nimport Timer from 'common/timer/Timer'\r\nimport createMessageChannel from './function/createMessageChannel'\r\nimport Controller, { ControllerObserver } from './Controller'\r\nimport { AVFormatContextInterface } from 'avformat/AVFormatContext'\r\nimport dump, { dumpCodecName, dumpTime } from 'avformat/dump'\r\nimport { Data } from 'common/types/type'\r\nimport os from 'common/util/os'\r\nimport compileResource from 'avutil/function/compileResource'\r\nimport CustomIOLoader from 'avnetwork/ioLoader/CustomIOLoader'\r\nimport FetchIOLoader from 'avnetwork/ioLoader/FetchIOLoader'\r\nimport FileIOLoader from 'avnetwork/ioLoader/FileIOLoader'\r\nimport analyzeUrlIOLoader from 'avutil/function/analyzeUrlIOLoader'\r\nimport getWasmUrl from 'avutil/function/getWasmUrl'\r\nimport * as bigint from 'common/util/bigint'\r\nimport align from 'common/math/align'\r\nimport { Rational } from 'avutil/struct/rational'\r\nimport { getAVPixelFormatDescriptor } from 'avutil/pixelFormatDescriptor'\r\nimport isHdr from 'avutil/function/isHdr'\r\nimport hasAlphaChannel from 'avutil/function/hasAlphaChannel'\r\n\r\nexport interface AVTranscoderOptions {\r\n  /**\r\n   * 自定义 wasm 请求 base url\r\n   * \r\n   *  `${wasmBaseUrl}/decode/aac.wasm`\r\n   */\r\n  wasmBaseUrl?: string\r\n  getWasm?: (type: 'decoder' | 'resampler' | 'scaler' | 'encoder', codec?: AVCodecID, mediaType?: AVMediaType) => string | ArrayBuffer | WebAssemblyResource\r\n  onprogress?: (taskId: string, progress: number) => void\r\n}\r\n\r\nexport interface TaskOptions {\r\n  input: {\r\n    file: string | File | CustomIOLoader\r\n    format?: keyof (typeof Format2AVFormat)\r\n    formatOptions?: Data\r\n    /**\r\n     * 源扩展名\r\n     * 强制指定扩展名，对没有扩展名的 url 链接使用\r\n     */\r\n    ext?: string\r\n    /**\r\n     * http 请求配置\r\n     */\r\n    http?: {\r\n      /**\r\n       * http 请求需要添加的 header\r\n       */\r\n      headers?: Data\r\n      /**\r\n       * http 请求的 credentials 配置\r\n       */\r\n      credentials?: RequestCredentials\r\n      /**\r\n       * http 请求的 referrerPolicy 配置\r\n       */\r\n      referrerPolicy?: ReferrerPolicy\r\n    },\r\n    /**\r\n     * webtransport 配置\r\n     */\r\n    webtransport?: WebTransportOptions\r\n\r\n    /**\r\n     * 是否启用 WebCodecs 解码\r\n     */\r\n    enableWebCodecs?: boolean\r\n\r\n    /**\r\n     * 是否启用硬件解码\r\n     */\r\n    enableHardware?: boolean\r\n  }\r\n  start?: number\r\n  duration?: number\r\n  nbFrame?: number\r\n  output: {\r\n    file: FileSystemFileHandle | IOWriterSync\r\n    format?: keyof (typeof Format2AVFormat)\r\n    formatOptions?: Data\r\n    video?: {\r\n      /**\r\n       * 输出编码类型\r\n       */\r\n      codec?: keyof (typeof VideoCodecString2CodecId)\r\n      /**\r\n       * 是否不输出\r\n       */\r\n      disable?: boolean\r\n      /**\r\n       * 输出宽度\r\n       */\r\n      width?: number\r\n      /**\r\n       * 输出高度\r\n       */\r\n      height?: number\r\n      /**\r\n       * 输出帧率\r\n       */\r\n      framerate?: number\r\n      /**\r\n       * 输出码率\r\n       */\r\n      bitrate?: number\r\n      /**\r\n       * 输出视频高宽比\r\n       */\r\n      aspect?: {\r\n        den: number\r\n        num: number\r\n      }\r\n      /**\r\n       * 输出像素格式\r\n       */\r\n      pixfmt?: keyof (typeof PixfmtString2AVPixelFormat)\r\n      /**\r\n       * 输出关键帧间隔（毫秒）\r\n       */\r\n      keyFrameInterval?: number\r\n\r\n      /**\r\n       * 是否启用 WebCodecs 编码\r\n       */\r\n      enableWebCodecs?: boolean\r\n\r\n      /**\r\n       * 是否启用硬件编码\r\n       */\r\n      enableHardware?: boolean\r\n\r\n      /**\r\n       * 配置编码器 profile\r\n       */\r\n      profile?: number\r\n      /**\r\n       * 配置编码器 level\r\n       */\r\n      level?: number\r\n      /**\r\n       * 配置最大 b 帧长度（默认 4）\r\n       * 只有 wasm 的 h264/h265 编码器支持\r\n       */\r\n      delay?: number\r\n      /**\r\n       * 编码器的参数设置 wasm 编码器生效\r\n       * \r\n       * 详情参考 ffmpeg 的编码器 options 配置\r\n       */\r\n      encoderOptions?: Data\r\n    }\r\n    audio?: {\r\n      /**\r\n       * 输出编码类型\r\n       */\r\n      codec?: keyof (typeof AudioCodecString2CodecId)\r\n      /**\r\n       * 是否不输出\r\n       */\r\n      disable?: boolean\r\n      /**\r\n       * 输出声道数\r\n       */\r\n      channels?: number\r\n      /**\r\n       * 输出采样率\r\n       */\r\n      sampleRate?: number\r\n      /**\r\n       * 输出码率\r\n       */\r\n      bitrate?: number\r\n      /**\r\n       * 输出采样格式\r\n       */\r\n      sampleFmt?: keyof (typeof SampleFmtString2SampleFormat)\r\n      /**\r\n       * 配置编码器 profile\r\n       */\r\n      profile?: number\r\n    }\r\n  }\r\n}\r\n\r\ninterface SelfTask {\r\n  taskId: string\r\n  startTime: number\r\n  subTaskId?: string\r\n  ext?: string\r\n  options: TaskOptions\r\n  ioloader2DemuxerChannel: MessageChannel\r\n  muxer2OutputChannel: MessageChannel\r\n  stats: Stats\r\n  inputIPCPort?: IPCPort\r\n  outputIPCPort?: IPCPort\r\n  safeFileIO?: SafeFileIO\r\n  format: AVFormat\r\n  formatContext: AVFormatContextInterface\r\n  streams: {\r\n    taskId?: string\r\n    input: AVStreamInterface\r\n    output?: AVStreamInterface\r\n    demuxer2DecoderChannel?: MessageChannel\r\n    decoder2EncoderChannel?: MessageChannel\r\n    decoder2FilterChannel?: MessageChannel\r\n    filter2EncoderChannel?: MessageChannel\r\n    encoder2MuxerChannel?: MessageChannel\r\n    demuxer2MuxerChannel?: MessageChannel\r\n  }[]\r\n  controller: Controller\r\n}\r\n\r\n@struct\r\nclass AVTranscoderGlobalData {\r\n  avpacketList: List<pointer<AVPacketRef>>\r\n  avframeList: List<pointer<AVFrameRef>>\r\n  avpacketListMutex: Mutex\r\n  avframeListMutex: Mutex\r\n}\r\n\r\nconst defaultAVTranscoderOptions: Partial<AVTranscoderOptions> = {\r\n}\r\n\r\nexport default class AVTranscoder extends Emitter implements ControllerObserver {\r\n\r\n  static Util = {\r\n    compile,\r\n    browser,\r\n    os\r\n  }\r\n\r\n  static IOLoader = {\r\n    CustomIOLoader,\r\n    FetchIOLoader,\r\n    FileIOLoader\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  static Resource: Map<string, WebAssemblyResource | ArrayBuffer> = new Map()\r\n\r\n  private level: number = logger.INFO\r\n\r\n  private DemuxThreadReady: Promise<void>\r\n  private AudioThreadReady: Promise<void>\r\n  private VideoThreadReady: Promise<void>\r\n  private MuxThreadReady: Promise<void>\r\n\r\n  // 下面的线程所有 AVTranscoder 实例共享\r\n  private IOThread: Thread<IOPipeline>\r\n  private DemuxerThread: Thread<DemuxPipeline>\r\n  private MuxThread: Thread<MuxPipeline>\r\n\r\n  private AudioDecoderThread: Thread<AudioDecodePipeline>\r\n  private AudioFilterThread: Thread<AVFilterPipeline>\r\n  private AudioEncoderThread: Thread<AudioEncodePipeline>\r\n\r\n  private VideoDecoderThread: Thread<VideoDecodePipeline>\r\n  private VideoFilterThread: Thread<AVFilterPipeline>\r\n  private VideoEncoderThread: Thread<VideoEncodePipeline>\r\n\r\n  // AVTranscoder 各个线程间共享的数据\r\n  private GlobalData: AVTranscoderGlobalData\r\n\r\n  private tasks: Map<string, SelfTask>\r\n  private options: AVTranscoderOptions\r\n\r\n  private reportTimer: Timer\r\n\r\n  constructor(options: AVTranscoderOptions) {\r\n    super(true)\r\n    this.options = object.extend({}, defaultAVTranscoderOptions, options)\r\n\r\n    this.GlobalData = make<AVTranscoderGlobalData>()\r\n\r\n    mutex.init(addressof(this.GlobalData.avpacketListMutex))\r\n    mutex.init(addressof(this.GlobalData.avframeListMutex))\r\n    this.tasks = new Map()\r\n\r\n    this.reportTimer = new Timer(() => {\r\n      this.report()\r\n    }, 0, 1000)\r\n\r\n    logger.info('create transcoder')\r\n  }\r\n\r\n  private async getResource(type: 'decoder' | 'resampler' | 'scaler' | 'encoder', codecId?: AVCodecID, mediaType?: AVMediaType) {\r\n    const key = codecId != null ? `${type}-${codecId}` : type\r\n\r\n    if (AVTranscoder.Resource.has(key)) {\r\n      return AVTranscoder.Resource.get(key)\r\n    }\r\n\r\n    const wasmUrl = this.options.getWasm\r\n      ? this.options.getWasm(type, codecId, mediaType)\r\n      : getWasmUrl(\r\n        this.options.wasmBaseUrl ?? `https://cdn.jsdelivr.net/gh/zhaohappy/libmedia@${defined(VERSION).split('-')[0].replace(/^[v|n]/, '')}/dist`,\r\n        type,\r\n        codecId\r\n      )\r\n\r\n    if (wasmUrl) {\r\n      let resource: WebAssemblyResource | ArrayBuffer\r\n      // safari 16 以下不支持将 WebAssembly.Module 传递到 worker 中\r\n      if ((browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      )\r\n        && (is.string(wasmUrl) || is.arrayBuffer(wasmUrl))\r\n      ) {\r\n        if (is.string(wasmUrl)) {\r\n          const params: Partial<Data> = {\r\n            method: 'GET',\r\n            headers: {},\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            referrerPolicy: 'no-referrer-when-downgrade'\r\n          }\r\n          const response = await fetch(wasmUrl, params)\r\n          resource = await response.arrayBuffer()\r\n        }\r\n        else {\r\n          resource = wasmUrl\r\n        }\r\n      }\r\n      else {\r\n        resource = await compileResource(wasmUrl, mediaType === AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n      }\r\n\r\n      AVTranscoder.Resource.set(key, resource)\r\n\r\n      return resource\r\n    }\r\n  }\r\n\r\n  private report() {\r\n    this.tasks.forEach((task) => {\r\n      if (task.startTime) {\r\n        const frameCount = task.stats.videoPacketEncodeCount || task.stats.audioPacketEncodeCount\r\n        const time = (getTimestamp() - task.startTime)\r\n        let dts: int64 = 0n\r\n        let duration: int64 = 0n\r\n        if (task.stats.lastVideoMuxDts) {\r\n          const stream =  task.streams.find((s) => s.input.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO)\r\n          dts = task.stats.lastVideoMuxDts - task.stats.firstVideoMuxDts\r\n          if (stream.output) {\r\n            duration = avRescaleQ(stream.output.duration, stream.output.timeBase, AV_MILLI_TIME_BASE_Q)\r\n          }\r\n          else {\r\n            duration = avRescaleQ(stream.input.duration, stream.input.timeBase, AV_MILLI_TIME_BASE_Q)\r\n          }\r\n        }\r\n        if (task.stats.lastAudioMuxDts && !dts) {\r\n          const stream =  task.streams.find((s) => s.input.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO)\r\n          dts = task.stats.lastAudioMuxDts - task.stats.firstAudioMuxDts\r\n          if (stream.output) {\r\n            duration = avRescaleQ(stream.output.duration, stream.output.timeBase, AV_MILLI_TIME_BASE_Q)\r\n          }\r\n          else {\r\n            duration = avRescaleQ(stream.input.duration, stream.input.timeBase, AV_MILLI_TIME_BASE_Q)\r\n          }\r\n        }\r\n\r\n        const fps = time ? (static_cast<double>(frameCount) / (time / 1000)) : static_cast<double>(frameCount)\r\n        const size = static_cast<double>(task.stats.bufferOutputBytes) / 1000\r\n        const bitrate = (dts ? size * 8 / (static_cast<double>(dts) / 1000) : 0)\r\n        const speed = static_cast<double>(dts) / 1000 / (time / 1000)\r\n        let progress = duration ? ((static_cast<double>(dts) / static_cast<double>(duration) * 100)) : 0\r\n        if (progress > 100) {\r\n          progress = 100\r\n        }\r\n\r\n        logger.info(`[${task.taskId}] frame=${frameCount} fps=${fps.toFixed(2)} size=${size}kB time=${dumpTime(dts)} bitrate=${bitrate.toFixed(2)}kbps speed=${speed.toFixed(2)}x progress=${progress.toFixed(2)}%`)\r\n\r\n        if (this.options.onprogress) {\r\n          this.options.onprogress(task.taskId, progress)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private async startDemuxPipeline() {\r\n    if (this.DemuxThreadReady) {\r\n      return this.DemuxThreadReady\r\n    }\r\n    return this.DemuxThreadReady = new Promise(async (resolve) => {\r\n      this.IOThread = await createThreadFromClass(IOPipeline, {\r\n        name: 'IOThread'\r\n      }).run()\r\n      this.IOThread.setLogLevel(this.level)\r\n\r\n      this.DemuxerThread = await createThreadFromClass(DemuxPipeline, {\r\n        name: 'DemuxerThread'\r\n      }).run()\r\n      this.DemuxerThread.setLogLevel(this.level)\r\n      resolve()\r\n    })\r\n  }\r\n\r\n  private async startVideoPipeline() {\r\n    if (this.VideoThreadReady) {\r\n      return this.VideoThreadReady\r\n    }\r\n    return this.VideoThreadReady = new Promise(async (resolve) => {\r\n      this.VideoDecoderThread = await createThreadFromClass(VideoDecodePipeline, {\r\n        name: 'VideoDecoderThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.VideoDecoderThread.setLogLevel(this.level)\r\n\r\n      this.VideoFilterThread = await createThreadFromClass(AVFilterPipeline, {\r\n        name: 'VideoFilterThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.VideoFilterThread.setLogLevel(this.level)\r\n\r\n      this.VideoEncoderThread = await createThreadFromClass(VideoEncodePipeline, {\r\n        name: 'VideoEncoderThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.VideoEncoderThread.setLogLevel(this.level)\r\n      resolve()\r\n    })\r\n  }\r\n\r\n  private async startAudioPipeline() {\r\n    if (this.AudioThreadReady) {\r\n      return this.AudioThreadReady\r\n    }\r\n    return this.AudioThreadReady = new Promise(async (resolve) => {\r\n      this.AudioDecoderThread = await createThreadFromClass(AudioDecodePipeline, {\r\n        name: 'AudioDecoderThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.AudioDecoderThread.setLogLevel(this.level)\r\n\r\n      this.AudioFilterThread = await createThreadFromClass(AVFilterPipeline, {\r\n        name: 'AudioFilterThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.AudioFilterThread.setLogLevel(this.level)\r\n\r\n      this.AudioEncoderThread = await createThreadFromClass(AudioEncodePipeline, {\r\n        name: 'AudioEncoderThread',\r\n        disableWorker: browser.safari && !browser.checkVersion(browser.version, '16.1', true)\r\n          || os.ios && !browser.checkVersion(os.version, '16.1', true)\r\n      }).run()\r\n      this.AudioEncoderThread.setLogLevel(this.level)\r\n      resolve()\r\n    })\r\n  }\r\n\r\n  private async startMuxPipeline() {\r\n    if (this.MuxThreadReady) {\r\n      return this.MuxThreadReady\r\n    }\r\n    return this.MuxThreadReady = new Promise(async (resolve) => {\r\n      this.MuxThread = await createThreadFromClass(MuxPipeline, {\r\n        name: 'MuxThread',\r\n        disableWorker: !support.workerMSE\r\n      }).run()\r\n      this.MuxThread.setLogLevel(this.level)\r\n      resolve()\r\n    })\r\n  }\r\n\r\n  private isHls(task: SelfTask) {\r\n    if (task.ext) {\r\n      return task.ext === 'm3u8' || task.ext === 'm3u'\r\n    }\r\n    if (task.options.input.file instanceof CustomIOLoader) {\r\n      return task.options.input.file.ext === 'm3u8'\r\n    }\r\n    return task.options.input.ext === 'm3u8'\r\n  }\r\n\r\n  private isDash(task: SelfTask) {\r\n    if (task.ext) {\r\n      return task.ext === 'mpd'\r\n    }\r\n    if (task.options.input.file instanceof CustomIOLoader) {\r\n      return task.options.input.file.ext === 'mpd'\r\n    }\r\n    return task.options.input.ext === 'mpd'\r\n  }\r\n\r\n  public async ready() {\r\n    await this.startDemuxPipeline()\r\n    await this.startAudioPipeline()\r\n    await this.startVideoPipeline()\r\n    await this.startMuxPipeline()\r\n    logger.info('AVTranscoder pipelines started')\r\n  }\r\n\r\n  private changeAVStreamTimebase(stream: AVStreamInterface, timeBase: Rational) {\r\n    let startTime = stream.startTime\r\n    let duration = stream.duration\r\n\r\n    if (startTime !== NOPTS_VALUE_BIGINT) {\r\n      startTime = avRescaleQ(startTime, stream.timeBase, timeBase)\r\n    }\r\n    if (duration !== NOPTS_VALUE_BIGINT) {\r\n      duration = avRescaleQ(duration, stream.timeBase, timeBase)\r\n    }\r\n\r\n    stream.duration = duration\r\n    stream.startTime = startTime\r\n\r\n    stream.timeBase.den = timeBase.den\r\n    stream.timeBase.num = timeBase.num\r\n  }\r\n\r\n  private copyAVStreamInterface(task: SelfTask, stream: AVStreamInterface) {\r\n    const newStream = object.extend({}, stream)\r\n    newStream.codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMallocz(sizeof(AVCodecParameters)))\r\n    copyCodecParameters(newStream.codecpar, stream.codecpar)\r\n    newStream.timeBase = {\r\n      den: 1,\r\n      num: 1\r\n    }\r\n\r\n    newStream.timeBase.den = stream.timeBase.den\r\n    newStream.timeBase.num = stream.timeBase.num\r\n\r\n    if (newStream.codecpar.extradata) {\r\n      avFree(newStream.codecpar.extradata)\r\n      newStream.codecpar.extradata = nullptr\r\n      newStream.codecpar.extradataSize = 0\r\n    }\r\n\r\n    if (task.options.duration) {\r\n      newStream.duration = avRescaleQ(static_cast<int64>(task.options.duration), AV_MILLI_TIME_BASE_Q, newStream.timeBase)\r\n    }\r\n\r\n    newStream.metadata[AVStreamMetadataKey.ENCODER] = `libmedia-${defined(VERSION)}`\r\n\r\n    return newStream\r\n  }\r\n\r\n  private async setTaskInput(task: SelfTask) {\r\n    const taskId = task.taskId\r\n    const taskOptions = task.options\r\n    const ioloader2DemuxerChannel = task.ioloader2DemuxerChannel = createMessageChannel()\r\n    const stats = task.stats\r\n\r\n    let ret = 0\r\n    let ext: string\r\n    if (is.string(taskOptions.input.file)) {\r\n      let { info, type, ext: ext_ } = await analyzeUrlIOLoader(\r\n        taskOptions.input.file,\r\n        taskOptions.input.ext,\r\n        taskOptions.input.http\r\n      )\r\n      ext = ext_\r\n      // 注册一个 url io 任务\r\n      ret = await this.IOThread.registerTask\r\n        .transfer(ioloader2DemuxerChannel.port1)\r\n        .invoke({\r\n          type: type,\r\n          info: {\r\n            ...info\r\n          },\r\n          range: {\r\n            from: -1,\r\n            to: -1\r\n          },\r\n          taskId,\r\n          options: {\r\n            isLive: false\r\n          },\r\n          rightPort: ioloader2DemuxerChannel.port1,\r\n          stats: addressof(stats)\r\n        })\r\n    }\r\n    else if (taskOptions.input.file instanceof File) {\r\n      ext = taskOptions.input.file.name.split('.').pop()\r\n      // 注册一个文件 io 任务\r\n      ret = await this.IOThread.registerTask\r\n        .transfer(ioloader2DemuxerChannel.port1)\r\n        .invoke({\r\n          type: IOType.File,\r\n          info: {\r\n            file: taskOptions.input.file\r\n          },\r\n          range: {\r\n            from: -1,\r\n            to: -1\r\n          },\r\n          taskId,\r\n          options: {\r\n            isLive: false\r\n          },\r\n          rightPort: ioloader2DemuxerChannel.port1,\r\n          stats: addressof(stats)\r\n        })\r\n    }\r\n    else if (taskOptions.input.file instanceof CustomIOLoader) {\r\n      const ipcPort = task.inputIPCPort = new IPCPort(ioloader2DemuxerChannel.port1)\r\n      ipcPort.on(REQUEST, async (request: RpcMessage) => {\r\n        switch (request.method) {\r\n          case 'open': {\r\n            const ret = await (task.options.input.file as CustomIOLoader).open()\r\n            if (ret < 0) {\r\n              logger.error(`custom loader open error, ${ret}, taskId: ${task.taskId}`)\r\n              ipcPort.reply(request, null, ret)\r\n              break\r\n            }\r\n            ipcPort.reply(request, ret)\r\n            break\r\n          }\r\n          case 'read': {\r\n            const pointer = request.params.pointer\r\n            const length = request.params.length\r\n\r\n            assert(pointer)\r\n            assert(length)\r\n\r\n            const buffer = mapSafeUint8Array(pointer, length)\r\n\r\n            try {\r\n              const len = await (task.options.input.file as CustomIOLoader).read(length, buffer)\r\n              if (len > 0) {\r\n                task.stats.bufferReceiveBytes += static_cast<int64>(len)\r\n              }\r\n              ipcPort.reply(request, len)\r\n            }\r\n            catch (error) {\r\n              logger.error(`loader read error, ${error}, taskId: ${task.taskId}`)\r\n              ipcPort.reply(request, errorType.DATA_INVALID)\r\n            }\r\n\r\n            break\r\n          }\r\n\r\n          case 'write': {\r\n            const pointer = request.params.pointer\r\n            const length = request.params.length\r\n\r\n            assert(pointer)\r\n            assert(length)\r\n\r\n            const buffer = mapSafeUint8Array(pointer, length)\r\n\r\n            try {\r\n              const ret = await (task.options.input.file as CustomIOLoader).write(buffer)\r\n              task.stats.bufferSendBytes += static_cast<int64>(length)\r\n              ipcPort.reply(request, ret)\r\n            }\r\n            catch (error) {\r\n              logger.error(`loader write error, ${error}, taskId: ${task.taskId}`)\r\n              ipcPort.reply(request, errorType.DATA_INVALID)\r\n            }\r\n\r\n            break\r\n          }\r\n\r\n          case 'seek': {\r\n            const pos = request.params.pos\r\n\r\n            assert(pos >= 0)\r\n\r\n            try {\r\n              const ret = await (task.options.input.file as CustomIOLoader).seek(pos)\r\n              if (ret < 0) {\r\n                logger.error(`custom loader seek error, ${ret}, taskId: ${task.taskId}`)\r\n                ipcPort.reply(request, null, ret)\r\n                break\r\n              }\r\n              ipcPort.reply(request, ret)\r\n            }\r\n            catch (error) {\r\n              logger.error(`loader seek error, ${error}, taskId: ${task.taskId}`)\r\n              ipcPort.reply(request, null, error)\r\n            }\r\n            break\r\n          }\r\n\r\n          case 'size': {\r\n            ipcPort.reply(request, await (task.options.input.file as CustomIOLoader).size())\r\n            break\r\n          }\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      logger.fatal('invalid source')\r\n    }\r\n\r\n\r\n    if (ext) {\r\n      task.ext = ext\r\n    }\r\n\r\n    if (ret < 0) {\r\n      logger.fatal(`register io task failed, ret: ${ret}, taskId: ${taskId}`)\r\n    }\r\n  }\r\n\r\n  private async setTaskOutput(task: SelfTask) {\r\n    const muxer2OutputChannel = task.muxer2OutputChannel = createMessageChannel()\r\n    const ipcPort = task.outputIPCPort = new IPCPort(muxer2OutputChannel.port2)\r\n\r\n    let format: AVFormat\r\n\r\n    if (task.options.output.format) {\r\n      format = Format2AVFormat[task.options.output.format]\r\n    }\r\n    else if (task.options.output.file instanceof FileSystemFileHandle) {\r\n      let ext = task.options.output.file.name.split('.').pop()\r\n      format = Ext2Format[ext]\r\n    }\r\n\r\n    if (!is.number(format)) {\r\n      logger.fatal('invalid output format')\r\n    }\r\n\r\n    task.format = format\r\n\r\n    let ret = await this.MuxThread.registerTask.transfer(muxer2OutputChannel.port1)\r\n      .invoke({\r\n        taskId: task.taskId,\r\n        format,\r\n        avpacketList: addressof(this.GlobalData.avpacketList),\r\n        avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n        stats: addressof(task.stats),\r\n        rightPort: muxer2OutputChannel.port1,\r\n        formatOptions: task.options.output.formatOptions\r\n      })\r\n\r\n    if (ret < 0) {\r\n      logger.fatal(`register mux task failed, ret: ${ret}, taskId: ${task.taskId}`)\r\n    }\r\n\r\n    let ioWriter: {\r\n      write: (buffer: Uint8Array) => void\r\n      appendBufferByPosition: (buffer: Uint8Array, pos: number) => void\r\n      seek: (pos: number) => void\r\n      close: () => void | Promise<void>\r\n    }\r\n\r\n    if (task.options.output.file instanceof FileSystemFileHandle) {\r\n      ioWriter = task.safeFileIO = new SafeFileIO(task.options.output.file)\r\n      await task.safeFileIO.ready()\r\n    }\r\n    else {\r\n      ioWriter = {\r\n        write: (buffer) => {\r\n          (task.options.output.file as IOWriterSync).writeBuffer(buffer)\r\n        },\r\n        appendBufferByPosition: (buffer, pos) => {\r\n          (task.options.output.file as IOWriterSync).flush()\r\n          ;(task.options.output.file as IOWriterSync).writeBuffer(buffer)\r\n          ;(task.options.output.file as IOWriterSync).flushToPos(static_cast<int64>(pos))\r\n        },\r\n        seek: (pos) => {\r\n          (task.options.output.file as IOWriterSync).seek(static_cast<int64>(pos))\r\n        },\r\n        close: () => {\r\n          (task.options.output.file as IOWriterSync).flush()\r\n        }\r\n      }\r\n    }\r\n\r\n    ipcPort.on(NOTIFY, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'write': {\r\n          try {\r\n            if (request.params.pos != null) {\r\n              ioWriter.appendBufferByPosition(request.params.data, Number(request.params.pos))\r\n            }\r\n            else {\r\n              ioWriter.write(request.params.data)\r\n            }\r\n            if (task.options.output.file instanceof FileSystemFileHandle) {\r\n              if (task.safeFileIO.writeQueueSize > 5) {\r\n                try {\r\n                  await this.MuxThread.pause(task.taskId)\r\n                  while (task.safeFileIO.writeQueueSize > 5) {\r\n                    await new Sleep(0)\r\n                  }\r\n                  await this.MuxThread.unpause(task.taskId)\r\n                }\r\n                catch (e) {}\r\n              }\r\n            }\r\n          }\r\n          catch (error) {\r\n            logger.error(`ioWriter write error, ${error}, taskId: ${task.taskId}`)\r\n          }\r\n          break\r\n        }\r\n        case 'seek': {\r\n          const pos = request.params.pos\r\n\r\n          assert(pos >= 0)\r\n\r\n          try {\r\n            ioWriter.seek(Number(pos))\r\n          }\r\n          catch (error) {\r\n            logger.error(`ioWriter seek error, ${error}, taskId: ${task.taskId}`)\r\n          }\r\n          break\r\n        }\r\n        case 'end': {\r\n          await ioWriter.close()\r\n          await this.clearTask(task)\r\n          this.fire(eventType.TASK_ENDED, [task.taskId])\r\n          logger.info(`transcode ended, taskId: ${task.taskId}, cost: ${dumpTime(static_cast<int64>(getTimestamp() - task.startTime))}`)\r\n          break\r\n        }\r\n\r\n        case 'error': {\r\n          await ioWriter.close()\r\n          await this.clearTask(task)\r\n          this.fire(eventType.TASK_ERROR, [task.taskId])\r\n          logger.info(`transcode error, taskId: ${task.taskId}`)\r\n          break\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private async analyzeInputStreams(task: SelfTask) {\r\n    const taskId = task.taskId\r\n    const ioloader2DemuxerChannel = task.ioloader2DemuxerChannel\r\n    const ext = task.ext\r\n    const stats = task.stats\r\n\r\n    let ret = 0\r\n    let subTaskId: string\r\n    if (defined(ENABLE_PROTOCOL_DASH) && this.isDash(task)) {\r\n      await this.IOThread.open(taskId)\r\n      const hasAudio = await this.IOThread.hasAudio(taskId)\r\n      const hasVideo = await this.IOThread.hasVideo(taskId)\r\n      if (hasAudio && hasVideo) {\r\n        // dash 因为音视频各自独立，因此这里注册两个解封装任务\r\n        subTaskId = generateUUID()\r\n        await this.DemuxerThread.registerTask\r\n          .transfer(ioloader2DemuxerChannel.port2, task.controller.getDemuxerRenderControlPort())\r\n          .invoke({\r\n            taskId,\r\n            leftPort: ioloader2DemuxerChannel.port2,\r\n            controlPort: task.controller.getDemuxerRenderControlPort(),\r\n            format: Ext2Format[ext],\r\n            stats: addressof(stats),\r\n            isLive: false,\r\n            flags: IOFlags.SLICE,\r\n            ioloaderOptions: {\r\n              mediaType: 'audio'\r\n            },\r\n            avpacketList: addressof(this.GlobalData.avpacketList),\r\n            avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n            formatOptions: task.options.input.formatOptions\r\n          })\r\n        await this.DemuxerThread.registerTask({\r\n          taskId: subTaskId,\r\n          mainTaskId: taskId,\r\n          flags: IOFlags.SLICE,\r\n          format: Ext2Format[ext],\r\n          stats: addressof(stats),\r\n          isLive: false,\r\n          ioloaderOptions: {\r\n            mediaType: 'video'\r\n          },\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          formatOptions: task.options.input.formatOptions\r\n        })\r\n      }\r\n      else {\r\n        // dash 只有一个媒体类型\r\n        await this.DemuxerThread.registerTask\r\n          .transfer(ioloader2DemuxerChannel.port2, task.controller.getDemuxerRenderControlPort())\r\n          .invoke({\r\n            taskId,\r\n            leftPort: ioloader2DemuxerChannel.port2,\r\n            controlPort: task.controller.getDemuxerRenderControlPort(),\r\n            format: Ext2Format[ext],\r\n            stats: addressof(stats),\r\n            isLive: false,\r\n            flags: IOFlags.SLICE,\r\n            ioloaderOptions: {\r\n              mediaType: hasAudio ? 'audio' : 'video'\r\n            },\r\n            avpacketList: addressof(this.GlobalData.avpacketList),\r\n            avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n            formatOptions: task.options.input.formatOptions\r\n          })\r\n      }\r\n    }\r\n    else {\r\n      await this.DemuxerThread.registerTask\r\n        .transfer(ioloader2DemuxerChannel.port2, task.controller.getDemuxerRenderControlPort())\r\n        .invoke({\r\n          taskId,\r\n          leftPort: ioloader2DemuxerChannel.port2,\r\n          controlPort: task.controller.getDemuxerRenderControlPort(),\r\n          format: Ext2Format[ext],\r\n          stats: addressof(stats),\r\n          isLive: false,\r\n          flags: this.isHls(task) ? IOFlags.SLICE : 0,\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          formatOptions: task.options.input.formatOptions\r\n        })\r\n    }\r\n\r\n    ret = await this.DemuxerThread.openStream(taskId, 15000)\r\n    if (ret < 0) {\r\n      logger.fatal(`open stream failed, ret: ${ret}, taskId: ${taskId}`)\r\n    }\r\n    let formatContext = await this.DemuxerThread.analyzeStreams(taskId)\r\n    if (is.number(formatContext)) {\r\n      logger.fatal(`analyze stream failed, ret: ${formatContext}`)\r\n      return\r\n    }\r\n    else if (!formatContext.streams.length) {\r\n      logger.fatal('not found any stream')\r\n    }\r\n\r\n    if (defined(ENABLE_PROTOCOL_DASH) && subTaskId) {\r\n      ret = await this.DemuxerThread.openStream(subTaskId, 15000)\r\n      if (ret < 0) {\r\n        logger.fatal(`open stream failed, ret: ${ret}, taskId: ${taskId}`)\r\n      }\r\n      const subFormatContext = await this.DemuxerThread.analyzeStreams(subTaskId)\r\n      if (is.number(subFormatContext)) {\r\n        logger.fatal(`analyze stream failed, ret: ${subFormatContext}`)\r\n        return\r\n      }\r\n      else if (!subFormatContext.streams.length) {\r\n        logger.fatal('not found any stream')\r\n      }\r\n      formatContext.streams = formatContext.streams.concat(subFormatContext.streams)\r\n    }\r\n\r\n    if (subTaskId) {\r\n      task.subTaskId = subTaskId\r\n    }\r\n\r\n    if (defined(ENABLE_PROTOCOL_DASH) || defined(ENABLE_PROTOCOL_HLS)) {\r\n      // m3u8 和 dash 的 duration 来自于协议本身\r\n      if (this.isHls(task) || this.isDash(task)) {\r\n        const duration: double = (await this.IOThread.getDuration(taskId)) * 1000\r\n        if (duration > 0) {\r\n          for (let i = 0; i < formatContext.streams.length; i++) {\r\n            formatContext.streams[i].duration = avRescaleQ(\r\n              static_cast<int64>(duration),\r\n              AV_MILLI_TIME_BASE_Q,\r\n              formatContext.streams[i].timeBase\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return formatContext\r\n  }\r\n\r\n  private async handleAudioStream(stream: AVStreamInterface, task: SelfTask): Promise<number> {\r\n    const audioConfig = task.options.output.audio\r\n    if (audioConfig?.disable) {\r\n      return 0\r\n    }\r\n    else if (audioConfig?.codec === 'copy' && !(task.options.start || task.options.duration)) {\r\n      const demuxer2MuxerChannel = createMessageChannel()\r\n      await this.DemuxerThread.connectStreamTask\r\n        .transfer(demuxer2MuxerChannel.port1)\r\n        .invoke(task.taskId, stream.index, demuxer2MuxerChannel.port1)\r\n\r\n      await this.MuxThread.addStream\r\n        .transfer(demuxer2MuxerChannel.port2)\r\n        .invoke(task.taskId, stream, demuxer2MuxerChannel.port2)\r\n\r\n      task.streams.push({\r\n        input: stream,\r\n        demuxer2MuxerChannel\r\n      })\r\n\r\n      return 0\r\n    }\r\n    else {\r\n      const demuxer2DecoderChannel = createMessageChannel()\r\n      const encoder2MuxerChannel = createMessageChannel()\r\n\r\n      const decoder2FilterChannel = createMessageChannel()\r\n      const filter2EncoderChannel = createMessageChannel()\r\n\r\n      const newStream = this.copyAVStreamInterface(task, stream)\r\n      const taskId = generateUUID()\r\n\r\n      let ret = 0\r\n\r\n      if (audioConfig) {\r\n        if (audioConfig.codec && audioConfig.codec !== 'copy') {\r\n          const codecId = AudioCodecString2CodecId[audioConfig.codec]\r\n          if (!is.number(codecId)) {\r\n            logger.fatal(`invalid codec name(${audioConfig.codec})`)\r\n          }\r\n          newStream.codecpar.codecId = codecId\r\n\r\n          if (newStream.codecpar.codecId !== stream.codecpar.codecId) {\r\n            newStream.codecpar.profile = NOPTS_VALUE\r\n            newStream.codecpar.level = NOPTS_VALUE\r\n          }\r\n        }\r\n        if (audioConfig.bitrate) {\r\n          newStream.codecpar.bitrate = static_cast<int64>(audioConfig.bitrate)\r\n        }\r\n        if (audioConfig.channels) {\r\n          newStream.codecpar.chLayout.nbChannels = audioConfig.channels\r\n        }\r\n        if (audioConfig.sampleRate) {\r\n          newStream.codecpar.sampleRate = audioConfig.sampleRate\r\n        }\r\n        if (audioConfig.sampleFmt) {\r\n          const sampleFmt = SampleFmtString2SampleFormat[audioConfig.sampleFmt]\r\n          if (!is.number(sampleFmt)) {\r\n            logger.fatal(`invalid sampleFmt name(${audioConfig.sampleFmt})`)\r\n          }\r\n          newStream.codecpar.format = sampleFmt\r\n        }\r\n        if (audioConfig.profile) {\r\n          newStream.codecpar.profile = audioConfig.profile\r\n        }\r\n      }\r\n\r\n      if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC) {\r\n        newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_FLTP\r\n        if (newStream.codecpar.sampleRate > 48000) {\r\n          newStream.codecpar.sampleRate = 48000\r\n        }\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MP3) {\r\n        newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_FLTP\r\n        if (newStream.codecpar.sampleRate > 48000) {\r\n          newStream.codecpar.sampleRate = 48000\r\n        }\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_OPUS) {\r\n        newStream.codecpar.sampleRate = 48000\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_FLAC) {\r\n        if (newStream.codecpar.format !== AVSampleFormat.AV_SAMPLE_FMT_S16\r\n          && newStream.codecpar.format !== AVSampleFormat.AV_SAMPLE_FMT_S32\r\n        ) {\r\n          newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_S16\r\n        }\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_PCM_ALAW\r\n        || newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_PCM_MULAW\r\n      ) {\r\n        newStream.codecpar.sampleRate = 8000\r\n        newStream.codecpar.bitrate = 64000n\r\n        newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_S16\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_SPEEX) {\r\n        newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_S16\r\n        if (newStream.codecpar.sampleRate > 32000) {\r\n          newStream.codecpar.sampleRate = 32000\r\n        }\r\n      }\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_DTS) {\r\n        newStream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_S32\r\n        let fullbandChannels = newStream.codecpar.chLayout.nbChannels\r\n        const lfeChannel = (fullbandChannels === 6 || fullbandChannels === 3) ? 1 : 0\r\n        if (lfeChannel) {\r\n          fullbandChannels--\r\n        }\r\n        const minFrameBits = align(132 + (493 + 28 * 32) * fullbandChannels + lfeChannel * 72, 32)\r\n        const minBitrate: int32 = (minFrameBits * newStream.codecpar.sampleRate - newStream.codecpar.sampleRate + 1) / 512\r\n        newStream.codecpar.bitrate = bigint.max(static_cast<int64>(minBitrate), newStream.codecpar.bitrate)\r\n      }\r\n\r\n      if (newStream.codecpar.profile === NOPTS_VALUE) {\r\n        if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC) {\r\n          newStream.codecpar.profile = aac.MPEG4AudioObjectTypes.AAC_LC\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MP3) {\r\n          newStream.codecpar.profile = 34\r\n        }\r\n      }\r\n\r\n      if (task.format === AVFormat.MOV) {\r\n        this.changeAVStreamTimebase(newStream, { num: 1, den: newStream.codecpar.sampleRate })\r\n      }\r\n\r\n      await this.DemuxerThread.connectStreamTask\r\n        .transfer(demuxer2DecoderChannel.port1)\r\n        .invoke(task.taskId, stream.index, demuxer2DecoderChannel.port1)\r\n\r\n      let decoderResource = await this.getResource('decoder', stream.codecpar.codecId, stream.codecpar.codecType)\r\n      if (!decoderResource) {\r\n        if (support.audioDecoder) {\r\n          const isSupport = await AudioDecoder.isConfigSupported({\r\n            codec: getVideoCodec(stream.codecpar),\r\n            sampleRate: stream.codecpar.sampleRate,\r\n            numberOfChannels: stream.codecpar.chLayout.nbChannels\r\n          })\r\n          if (!isSupport.supported) {\r\n            logger.error(`AudioDecoder codecId ${stream.codecpar.codecId} not support`)\r\n            freeCodecParameters(newStream.codecpar)\r\n            return errorType.OPERATE_NOT_SUPPORT\r\n          }\r\n        }\r\n        else {\r\n          logger.error(`audio decoder codecId ${stream.codecpar.codecId} not support`)\r\n          freeCodecParameters(newStream.codecpar)\r\n          return errorType.OPERATE_NOT_SUPPORT\r\n        }\r\n      }\r\n\r\n      // 注册一个音频解码任务\r\n      await this.AudioDecoderThread.registerTask\r\n        .transfer(demuxer2DecoderChannel.port2, decoder2FilterChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          resource: decoderResource,\r\n          leftPort: demuxer2DecoderChannel.port2,\r\n          rightPort: decoder2FilterChannel.port1,\r\n          stats: addressof(task.stats),\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex)\r\n        })\r\n\r\n      ret = await this.AudioDecoderThread.open(taskId, stream.codecpar)\r\n\r\n      if (ret < 0) {\r\n        logger.error(`cannot open audio ${dumpCodecName(stream.codecpar.codecType, stream.codecpar.codecId)} decoder`)\r\n        freeCodecParameters(newStream.codecpar)\r\n        return ret\r\n      }\r\n\r\n      let resamplerResource = await this.getResource('resampler')\r\n      if (!resamplerResource) {\r\n        logger.error('resampler not found')\r\n        freeCodecParameters(newStream.codecpar)\r\n        return errorType.OPERATE_NOT_SUPPORT\r\n      }\r\n\r\n      const vertices: AVFilterGraphDesVertex<GraphNodeType>[] = []\r\n      const edges: { parent: number, child: number }[] = []\r\n      let input: FilterGraphPortDes\r\n      let output: FilterGraphPortDes\r\n\r\n      const resampleNode = createGraphDesVertex('resampler', {\r\n        resource: resamplerResource,\r\n        output: {\r\n          channels: newStream.codecpar.chLayout.nbChannels,\r\n          sampleRate: newStream.codecpar.sampleRate,\r\n          format: newStream.codecpar.format as AVSampleFormat\r\n        }\r\n      })\r\n      vertices.push(resampleNode)\r\n      input = {\r\n        id: resampleNode.id,\r\n        port: decoder2FilterChannel.port2\r\n      }\r\n      output = {\r\n        id: resampleNode.id,\r\n        port: filter2EncoderChannel.port1\r\n      }\r\n\r\n      if (task.options.start || task.options.duration) {\r\n        const start = avRescaleQ(static_cast<int64>(task.options.start || 0), AV_MILLI_TIME_BASE_Q, stream.timeBase)\r\n        const rangeNode = createGraphDesVertex('range', {\r\n          start: start,\r\n          end: task.options.duration\r\n            ? (avRescaleQ(static_cast<int64>(task.options.duration), AV_MILLI_TIME_BASE_Q, AV_TIME_BASE_Q) + start)\r\n            : -1n\r\n        })\r\n        vertices.push(rangeNode)\r\n        input = {\r\n          id: rangeNode.id,\r\n          port: decoder2FilterChannel.port2\r\n        }\r\n        edges.push({\r\n          parent: rangeNode.id,\r\n          child: resampleNode.id\r\n        })\r\n      }\r\n\r\n      await this.AudioFilterThread.registerTask\r\n        .transfer(decoder2FilterChannel.port2, filter2EncoderChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          graph: {\r\n            vertices: vertices,\r\n            edges: edges\r\n          },\r\n          inputPorts: [input],\r\n          outputPorts: [output],\r\n          stats: addressof(task.stats),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex),\r\n        })\r\n\r\n      let encoderResource = await this.getResource('encoder', newStream.codecpar.codecId, newStream.codecpar.codecType)\r\n      if (!encoderResource) {\r\n        if (support.audioEncoder) {\r\n          const isSupport = await AudioEncoder.isConfigSupported({\r\n            codec: getAudioCodec(newStream.codecpar),\r\n            sampleRate: newStream.codecpar.sampleRate,\r\n            numberOfChannels: newStream.codecpar.chLayout.nbChannels,\r\n            bitrate: static_cast<int32>(newStream.codecpar.bitrate),\r\n            bitrateMode: 'constant'\r\n          })\r\n          if (!isSupport.supported) {\r\n            logger.error(`AudioEncoder ${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} codecId ${newStream.codecpar.codecId} not support`)\r\n            freeCodecParameters(newStream.codecpar)\r\n            return errorType.OPERATE_NOT_SUPPORT\r\n          }\r\n        }\r\n        else {\r\n          logger.error(`${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} encoder codecId ${newStream.codecpar.codecId} not support`)\r\n          freeCodecParameters(newStream.codecpar)\r\n          return errorType.OPERATE_NOT_SUPPORT\r\n        }\r\n      }\r\n\r\n      // 注册一个音频编码任务\r\n      await this.AudioEncoderThread.registerTask\r\n        .transfer(filter2EncoderChannel.port2, encoder2MuxerChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          resource: encoderResource,\r\n          leftPort: filter2EncoderChannel.port2,\r\n          rightPort: encoder2MuxerChannel.port1,\r\n          stats: addressof(task.stats),\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex),\r\n        })\r\n\r\n      ret = await this.AudioEncoderThread.open(taskId, newStream.codecpar, { num: newStream.timeBase.num, den: newStream.timeBase.den })\r\n\r\n      if (ret < 0) {\r\n        logger.error(`cannot open audio ${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} encoder`)\r\n        freeCodecParameters(newStream.codecpar)\r\n        return ret\r\n      }\r\n\r\n      await this.MuxThread.addStream\r\n        .transfer(encoder2MuxerChannel.port2)\r\n        .invoke(task.taskId, newStream, encoder2MuxerChannel.port2)\r\n\r\n      task.streams.push({\r\n        taskId,\r\n        input: stream,\r\n        output: newStream,\r\n        demuxer2DecoderChannel,\r\n        decoder2FilterChannel,\r\n        filter2EncoderChannel,\r\n        encoder2MuxerChannel\r\n      })\r\n\r\n      return 0\r\n    }\r\n  }\r\n\r\n  private async handleVideoStream(stream: AVStreamInterface, task: SelfTask): Promise<number> {\r\n    const videoConfig = task.options.output.video\r\n    if (videoConfig?.disable) {\r\n      return 0\r\n    }\r\n    else if (videoConfig?.codec === 'copy' && !(task.options.start || task.options.duration)) {\r\n      const demuxer2MuxerChannel = createMessageChannel()\r\n      await this.DemuxerThread.connectStreamTask\r\n        .transfer(demuxer2MuxerChannel.port1)\r\n        .invoke(task.subTaskId || task.taskId, stream.index, demuxer2MuxerChannel.port1)\r\n\r\n      await this.MuxThread.addStream\r\n        .transfer(demuxer2MuxerChannel.port2)\r\n        .invoke(task.taskId, stream, demuxer2MuxerChannel.port2)\r\n\r\n      task.streams.push({\r\n        input: stream,\r\n        demuxer2MuxerChannel\r\n      })\r\n\r\n      return 0\r\n    }\r\n    else {\r\n      const demuxer2DecoderChannel = createMessageChannel()\r\n      const encoder2MuxerChannel = createMessageChannel()\r\n\r\n      const decoder2FilterChannel = createMessageChannel()\r\n      const filter2EncoderChannel = createMessageChannel()\r\n\r\n      const newStream = this.copyAVStreamInterface(task, stream)\r\n\r\n      const taskId = generateUUID()\r\n\r\n      let ret = 0\r\n\r\n      if (videoConfig) {\r\n        if (videoConfig.codec && videoConfig.codec !== 'copy') {\r\n          const codecId = VideoCodecString2CodecId[videoConfig.codec]\r\n          if (!is.number(codecId)) {\r\n            logger.fatal(`invalid codec name(${videoConfig.codec})`)\r\n          }\r\n          newStream.codecpar.codecId = codecId\r\n\r\n          if (newStream.codecpar.codecId !== stream.codecpar.codecId) {\r\n            newStream.codecpar.profile = NOPTS_VALUE\r\n            newStream.codecpar.level = NOPTS_VALUE\r\n          }\r\n        }\r\n        if (videoConfig.width) {\r\n          newStream.codecpar.width = videoConfig.width\r\n        }\r\n        if (videoConfig.height) {\r\n          newStream.codecpar.height = videoConfig.height\r\n        }\r\n        if (videoConfig.bitrate) {\r\n          newStream.codecpar.bitrate = static_cast<int64>(videoConfig.bitrate)\r\n        }\r\n        if (videoConfig.pixfmt) {\r\n          const pixfmt = PixfmtString2AVPixelFormat[videoConfig.pixfmt]\r\n          if (!is.number(pixfmt)) {\r\n            logger.fatal(`invalid pixfmt name(${videoConfig.pixfmt})`)\r\n          }\r\n          newStream.codecpar.format = pixfmt\r\n        }\r\n        if (videoConfig.framerate) {\r\n          newStream.codecpar.framerate.num = videoConfig.framerate >>> 0\r\n          newStream.codecpar.framerate.den = 1\r\n        }\r\n        if (videoConfig.aspect) {\r\n          newStream.codecpar.sampleAspectRatio.den = videoConfig.aspect.den\r\n          newStream.codecpar.sampleAspectRatio.num = videoConfig.aspect.num\r\n        }\r\n        if (videoConfig.profile) {\r\n          newStream.codecpar.profile = videoConfig.profile\r\n        }\r\n        if (videoConfig.level) {\r\n          newStream.codecpar.level = videoConfig.level\r\n        }\r\n        if (videoConfig.delay) {\r\n          newStream.codecpar.videoDelay = videoConfig.delay\r\n        }\r\n      }\r\n\r\n      if (newStream.codecpar.profile === NOPTS_VALUE) {\r\n        if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n          const descriptor = getAVPixelFormatDescriptor(newStream.codecpar.format as AVPixelFormat)\r\n          newStream.codecpar.profile = descriptor?.comp[0]?.depth === 10 ? h264.H264Profile.kHigh10 : h264.H264Profile.kHigh\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n          const descriptor = getAVPixelFormatDescriptor(newStream.codecpar.format as AVPixelFormat)\r\n          newStream.codecpar.profile = descriptor?.comp[0]?.depth === 10 ? hevc.HEVCProfile.Main10 : hevc.HEVCProfile.Main\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AV1) {\r\n          newStream.codecpar.profile = av1.AV1Profile.Main\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n          newStream.codecpar.profile = vp9.VP9Profile.Profile0\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VP8) {\r\n          newStream.codecpar.profile = 0\r\n        }\r\n      }\r\n      if (newStream.codecpar.level === NOPTS_VALUE) {\r\n        if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n          newStream.codecpar.level = h264.getLevelByResolution(newStream.codecpar.width, newStream.codecpar.height, avQ2D(newStream.codecpar.framerate))\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n          newStream.codecpar.level = hevc.getLevelByResolution(\r\n            newStream.codecpar.profile,\r\n            newStream.codecpar.width,\r\n            newStream.codecpar.height,\r\n            avQ2D(newStream.codecpar.framerate),\r\n            static_cast<double>(newStream.codecpar.bitrate)\r\n          )\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n          // TODO 现在还没有 vvc 编码器，将来如果加入了 vvc 编码器再来实现\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AV1) {\r\n          newStream.codecpar.level = av1.getLevelByResolution(newStream.codecpar.width, newStream.codecpar.height, avQ2D(newStream.codecpar.framerate))\r\n        }\r\n        else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n          newStream.codecpar.level = vp9.getLevelByResolution(newStream.codecpar.width, newStream.codecpar.height, avQ2D(newStream.codecpar.framerate))\r\n        }\r\n      }\r\n\r\n      if (!videoConfig || videoConfig.delay == null) {\r\n        // 这个用来设置 max_b_frame_count，只针对 wasm 编码器，webcodecs 目前无法编码出 B 帧\r\n        newStream.codecpar.videoDelay = 4\r\n      }\r\n\r\n      if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264\r\n        || newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MPEG4\r\n        || newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC\r\n        || newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC\r\n      ) {\r\n        if (task.format === AVFormat.MPEGTS) {\r\n          newStream.codecpar.flags |= AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB\r\n        }\r\n        else {\r\n          newStream.codecpar.flags &= ~AVCodecParameterFlags.AV_CODECPAR_FLAG_H26X_ANNEXB\r\n        }\r\n      }\r\n\r\n      if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MPEG4 && newStream.timeBase.den > 65535) {\r\n        this.changeAVStreamTimebase(newStream, { num: 1, den: 65535 })\r\n      }\r\n      else if (task.format === AVFormat.MOV) {\r\n        // 如果是整数帧率，调整时间基为 framerate 的倍数，节省 stts box 的大小\r\n        const framerate = avQ2D(newStream.codecpar.framerate)\r\n        if (framerate === Math.floor(framerate)) {\r\n          this.changeAVStreamTimebase(newStream, { num: 1, den: framerate * 256 })\r\n        }\r\n      }\r\n\r\n      await this.DemuxerThread.connectStreamTask\r\n        .transfer(demuxer2DecoderChannel.port1)\r\n        .invoke(task.subTaskId || task.taskId, stream.index, demuxer2DecoderChannel.port1)\r\n\r\n      let decoderResource = await this.getResource('decoder', stream.codecpar.codecId, stream.codecpar.codecType)\r\n      if (!decoderResource) {\r\n        if (support.videoDecoder) {\r\n          const isSupport = await VideoDecoder.isConfigSupported({\r\n            codec: getVideoCodec(stream.codecpar)\r\n          })\r\n          if (!isSupport.supported) {\r\n            logger.error(`VideoDecoder codecId ${stream.codecpar.codecId} not support`)\r\n            freeCodecParameters(newStream.codecpar)\r\n            return errorType.OPERATE_NOT_SUPPORT\r\n          }\r\n        }\r\n        else {\r\n          logger.error(`video decoder codecId ${stream.codecpar.codecId} not support`)\r\n          freeCodecParameters(newStream.codecpar)\r\n          return errorType.OPERATE_NOT_SUPPORT\r\n        }\r\n      }\r\n\r\n      const descriptor = getAVPixelFormatDescriptor(stream.codecpar.format as AVPixelFormat)\r\n      let canUseHardware = true\r\n      // 硬解只能支持 8 位，webcodecs 10 位的解出来无法拿数据出来编码\r\n      if (descriptor?.comp[0]?.depth > 8) {\r\n        canUseHardware = false\r\n      }\r\n\r\n      // 注册一个视频解码任务\r\n      await this.VideoDecoderThread.registerTask\r\n        .transfer(demuxer2DecoderChannel.port2, decoder2FilterChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          resource: decoderResource,\r\n          leftPort: demuxer2DecoderChannel.port2,\r\n          rightPort: decoder2FilterChannel.port1,\r\n          stats: addressof(task.stats),\r\n          enableHardware: !!task.options.input.enableHardware && !!task.options.input.enableWebCodecs && canUseHardware,\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex),\r\n          preferWebCodecs: !isHdr(stream.codecpar) && !hasAlphaChannel(stream.codecpar) && !!task.options.input.enableWebCodecs\r\n        })\r\n\r\n      ret = await this.VideoDecoderThread.open(taskId, stream.codecpar)\r\n\r\n      if (ret < 0) {\r\n        logger.error(`cannot open video ${dumpCodecName(stream.codecpar.codecType, stream.codecpar.codecId)} decoder`)\r\n        freeCodecParameters(newStream.codecpar)\r\n        return ret\r\n      }\r\n\r\n      let scalerResource = await this.getResource('scaler')\r\n      if (!scalerResource) {\r\n        logger.fatal('scaler not found')\r\n      }\r\n\r\n      const vertices: AVFilterGraphDesVertex<GraphNodeType>[] = []\r\n      const edges: { parent: number, child: number }[] = []\r\n      let input: FilterGraphPortDes\r\n      let output: FilterGraphPortDes\r\n\r\n      let rangeNodeId: number\r\n\r\n      const scaleNode = createGraphDesVertex('scaler', {\r\n        resource: scalerResource,\r\n        output: {\r\n          width: newStream.codecpar.width,\r\n          height: newStream.codecpar.height,\r\n          format: newStream.codecpar.format as AVPixelFormat\r\n        }\r\n      })\r\n\r\n      vertices.push(scaleNode)\r\n      input = {\r\n        id: scaleNode.id,\r\n        port: decoder2FilterChannel.port2\r\n      }\r\n      output = {\r\n        id: scaleNode.id,\r\n        port: filter2EncoderChannel.port1\r\n      }\r\n\r\n      if (task.options.start || task.options.duration) {\r\n        const start = avRescaleQ(static_cast<int64>(task.options.start || 0), AV_MILLI_TIME_BASE_Q, AV_TIME_BASE_Q)\r\n        const rangeNode = createGraphDesVertex('range', {\r\n          start: start,\r\n          end: task.options.duration\r\n            ? (avRescaleQ(static_cast<int64>(task.options.duration), AV_MILLI_TIME_BASE_Q, AV_TIME_BASE_Q) + start)\r\n            : -1n\r\n        })\r\n        vertices.push(rangeNode)\r\n        input = {\r\n          id: rangeNode.id,\r\n          port: decoder2FilterChannel.port2\r\n        }\r\n        edges.push({\r\n          parent: rangeNode.id,\r\n          child: scaleNode.id\r\n        })\r\n        rangeNodeId = rangeNode.id\r\n      }\r\n\r\n      if (avQ2D(stream.codecpar.framerate) > avQ2D(newStream.codecpar.framerate)) {\r\n        const framerateNode = createGraphDesVertex('framerate', {\r\n          framerate: {\r\n            num: newStream.codecpar.framerate.num,\r\n            den: newStream.codecpar.framerate.den\r\n          }\r\n        })\r\n        vertices.push(framerateNode)\r\n\r\n        edges.length = 0\r\n        if (rangeNodeId) {\r\n          edges.push({\r\n            parent: rangeNodeId,\r\n            child: framerateNode.id\r\n          })\r\n          edges.push({\r\n            parent: framerateNode.id,\r\n            child: scaleNode.id\r\n          })\r\n        }\r\n        else {\r\n          input = {\r\n            id: framerateNode.id,\r\n            port: decoder2FilterChannel.port2\r\n          }\r\n          edges.push({\r\n            parent: framerateNode.id,\r\n            child: scaleNode.id\r\n          })\r\n        }\r\n      }\r\n\r\n      await this.VideoFilterThread.registerTask\r\n        .transfer(decoder2FilterChannel.port2, filter2EncoderChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          graph: {\r\n            vertices,\r\n            edges\r\n          },\r\n          inputPorts: [input],\r\n          outputPorts: [output],\r\n          stats: addressof(task.stats),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex),\r\n        })\r\n\r\n      let encoderResource = await this.getResource('encoder', newStream.codecpar.codecId, newStream.codecpar.codecType)\r\n      if (!encoderResource) {\r\n        if (support.videoEncoder) {\r\n          const isSupport = await VideoEncoder.isConfigSupported({\r\n            codec: getVideoCodec(newStream.codecpar),\r\n            width: newStream.codecpar.width,\r\n            height: newStream.codecpar.height\r\n          })\r\n          if (!isSupport.supported) {\r\n            logger.error(`VideoEncoder ${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} codecId ${newStream.codecpar.codecId} not support`)\r\n            freeCodecParameters(newStream.codecpar)\r\n            return errorType.OPERATE_NOT_SUPPORT\r\n          }\r\n        }\r\n        else {\r\n          logger.error(`${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} encoder codecId ${newStream.codecpar.codecId} not support`)\r\n          freeCodecParameters(newStream.codecpar)\r\n          return errorType.OPERATE_NOT_SUPPORT\r\n        }\r\n      }\r\n\r\n      const wasmEncoderOptions: Data = {}\r\n      const resourceExtraData: Data = {}\r\n\r\n      // x265 需要提前创建线程\r\n      if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n        resourceExtraData.enableThreadPool = true\r\n        resourceExtraData.enableThreadCountRate = 2\r\n      }\r\n      // libvpx 需要提前创建线程\r\n      else if (newStream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n        resourceExtraData.enableThreadPool = true\r\n      }\r\n\r\n      if (task.options?.output?.video?.encoderOptions) {\r\n        object.each(task.options.output.video.encoderOptions, (value, key) => {\r\n          wasmEncoderOptions[key] = value\r\n        })\r\n      }\r\n\r\n      // 注册一个视频编码任务\r\n      await this.VideoEncoderThread.registerTask\r\n        .transfer(filter2EncoderChannel.port2, encoder2MuxerChannel.port1)\r\n        .invoke({\r\n          taskId: taskId,\r\n          resource: encoderResource,\r\n          resourceExtraData,\r\n          leftPort: filter2EncoderChannel.port2,\r\n          rightPort: encoder2MuxerChannel.port1,\r\n          stats: addressof(task.stats),\r\n          enableHardware: !!videoConfig.enableHardware && !!videoConfig.enableWebCodecs,\r\n          avpacketList: addressof(this.GlobalData.avpacketList),\r\n          avpacketListMutex: addressof(this.GlobalData.avpacketListMutex),\r\n          avframeList: addressof(this.GlobalData.avframeList),\r\n          avframeListMutex: addressof(this.GlobalData.avframeListMutex),\r\n          gop: static_cast<int32>(avQ2D(newStream.codecpar.framerate) * (videoConfig.keyFrameInterval ?? 5000) / 1000),\r\n          preferWebCodecs: !isHdr(newStream.codecpar) && !hasAlphaChannel(newStream.codecpar) && !!videoConfig.enableWebCodecs\r\n        })\r\n\r\n      ret = await this.VideoEncoderThread.open(taskId, newStream.codecpar, { num: newStream.timeBase.num, den: newStream.timeBase.den }, wasmEncoderOptions)\r\n\r\n      if (ret < 0) {\r\n        logger.error(`cannot open video ${dumpCodecName(newStream.codecpar.codecType, newStream.codecpar.codecId)} encoder`)\r\n        freeCodecParameters(newStream.codecpar)\r\n        return ret\r\n      }\r\n\r\n      await this.MuxThread.addStream.transfer(encoder2MuxerChannel.port2)\r\n        .invoke(task.taskId, newStream, encoder2MuxerChannel.port2)\r\n\r\n      task.streams.push({\r\n        taskId,\r\n        input: stream,\r\n        output: newStream,\r\n        demuxer2DecoderChannel,\r\n        decoder2FilterChannel,\r\n        filter2EncoderChannel,\r\n        encoder2MuxerChannel\r\n      })\r\n\r\n      return 0\r\n    }\r\n  }\r\n\r\n  private async handleCopyStream(stream: AVStreamInterface, task: SelfTask): Promise<number> {\r\n    const demuxer2MuxerChannel = createMessageChannel()\r\n    await this.DemuxerThread.connectStreamTask\r\n      .transfer(demuxer2MuxerChannel.port1)\r\n      .invoke(task.subTaskId || task.taskId, stream.index, demuxer2MuxerChannel.port1)\r\n\r\n    await this.MuxThread.addStream\r\n      .transfer(demuxer2MuxerChannel.port2)\r\n      .invoke(task.taskId, stream, demuxer2MuxerChannel.port2)\r\n\r\n    task.streams.push({\r\n      input: stream,\r\n      demuxer2MuxerChannel\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  private async clearTask(task: SelfTask) {\r\n    this.MuxThread.unregisterTask(task.taskId)\r\n    for (let i = 0; i < task.streams.length; i++) {\r\n      if (task.streams[i].taskId) {\r\n        if (task.streams[i].input.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n          await this.AudioEncoderThread.unregisterTask(task.streams[i].taskId)\r\n          await this.AudioFilterThread.unregisterTask(task.streams[i].taskId)\r\n          await this.AudioDecoderThread.unregisterTask(task.streams[i].taskId)\r\n        }\r\n        else if (task.streams[i].input.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n          await this.VideoEncoderThread.unregisterTask(task.streams[i].taskId)\r\n          await this.VideoFilterThread.unregisterTask(task.streams[i].taskId)\r\n          await this.VideoDecoderThread.unregisterTask(task.streams[i].taskId)\r\n        }\r\n      }\r\n      if (task.streams[i].output) {\r\n        freeCodecParameters(task.streams[i].output.codecpar)\r\n      }\r\n    }\r\n\r\n    this.DemuxerThread.unregisterTask(task.taskId)\r\n    if (task.subTaskId) {\r\n      this.DemuxerThread.unregisterTask(task.subTaskId)\r\n    }\r\n    this.IOThread.unregisterTask(task.taskId)\r\n\r\n    if (task.inputIPCPort) {\r\n      task.inputIPCPort.destroy()\r\n    }\r\n    if (task.outputIPCPort) {\r\n      task.outputIPCPort.destroy()\r\n    }\r\n    if (task.safeFileIO) {\r\n      task.safeFileIO.destroy()\r\n    }\r\n    if (task.stats) {\r\n      unmake(task.stats)\r\n    }\r\n\r\n    this.tasks.delete(task.taskId)\r\n\r\n    if (!this.tasks.size) {\r\n      this.reportTimer.stop()\r\n    }\r\n  }\r\n\r\n  public async addTask(taskOptions: TaskOptions) {\r\n    if (taskOptions.output.audio?.disable && taskOptions.output.video?.disable) {\r\n      logger.fatal('audio and video are all disable')\r\n    }\r\n\r\n    const taskId = generateUUID()\r\n    const stats = make<Stats>()\r\n    const task: SelfTask = {\r\n      taskId,\r\n      startTime: 0,\r\n      options: taskOptions,\r\n      ioloader2DemuxerChannel: null,\r\n      muxer2OutputChannel: null,\r\n      stats,\r\n      format: AVFormat.UNKNOWN,\r\n      streams: [],\r\n      formatContext: null,\r\n      controller: new Controller(this)\r\n    }\r\n    try {\r\n\r\n      let ret = 0\r\n\r\n      await this.setTaskInput(task)\r\n      await this.setTaskOutput(task)\r\n\r\n      const formatContext = task.formatContext = await this.analyzeInputStreams(task)\r\n\r\n      for (let i = 0; i < formatContext.streams.length; i++) {\r\n        const mediaType = formatContext.streams[i].codecpar.codecType\r\n        if (mediaType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n          ret = await this.handleAudioStream(formatContext.streams[i], task)\r\n        }\r\n        else if (mediaType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n          ret = await this.handleVideoStream(formatContext.streams[i], task)\r\n        }\r\n        else {\r\n          ret = await this.handleCopyStream(formatContext.streams[i], task)\r\n        }\r\n\r\n        if (ret < 0) {\r\n          logger.fatal(`config transcode error, ret: ${ret}`)\r\n        }\r\n      }\r\n\r\n      const oformatContext: AVFormatContextInterface = {\r\n        streams: [],\r\n        format: task.format,\r\n        metadata: {},\r\n        chapters: []\r\n      }\r\n\r\n      let mappingDump = ''\r\n      task.streams.forEach((stream) => {\r\n        if (stream.output) {\r\n          oformatContext.streams.push(stream.output)\r\n          mappingDump += `  Stream #0:${stream.input.index} -> #0:${stream.output.index} (${\r\n            dumpCodecName(stream.input.codecpar.codecType, stream.input.codecpar.codecId)\r\n          } -> ${dumpCodecName(stream.output.codecpar.codecType, stream.output.codecpar.codecId)})\\n`\r\n        }\r\n        else {\r\n          oformatContext.streams.push(stream.input)\r\n          mappingDump += `  Stream #0:${stream.input.index} -> #0:${stream.input.index} (${\r\n            dumpCodecName(stream.input.codecpar.codecType, stream.input.codecpar.codecId)} -> copy)\\n`\r\n        }\r\n      })\r\n      logger.info(`\\nAVTranscoder version ${defined(VERSION)} Copyright (c) 2024-present the libmedia developers\\n`\r\n        + dump([formatContext], [{\r\n          from: is.string(task.options.input.file) ? task.options.input.file : (task.options.input.file instanceof File ? task.options.input.file.name : 'ioReader'),\r\n          tag: 'Input'\r\n        }])\r\n        + mappingDump\r\n        + '\\n'\r\n        + dump([oformatContext], [{\r\n          from: task.options.output.file instanceof FileSystemFileHandle ? task.options.output.file.name : 'IOWriter',\r\n          tag: 'Output'\r\n        }]))\r\n\r\n      this.tasks.set(taskId, task)\r\n      return taskId\r\n    }\r\n    catch (error) {\r\n      await this.clearTask(task)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  public async startTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      if (task.options.start) {\r\n        await this.DemuxerThread.seek(task.taskId, static_cast<int64>(task.options.start), AVSeekFlags.TIMESTAMP)\r\n      }\r\n      let ret = 0\r\n      await this.DemuxerThread.startDemux(taskId, false, 10)\r\n      ret = await this.MuxThread.open(taskId)\r\n\r\n      if (ret < 0) {\r\n        await this.clearTask(task)\r\n        logger.fatal(`start transcode error, ret ${ret}`)\r\n      }\r\n\r\n      const streams = task.streams\r\n\r\n      for (let i = 0; i < streams.length; i++) {\r\n        if (!streams[i].output) {\r\n          continue\r\n        }\r\n\r\n        let buffer: Uint8Array\r\n        let updated = false\r\n        if (streams[i].output.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\r\n          buffer = await this.AudioEncoderThread.getExtraData(streams[i].taskId)\r\n        }\r\n        else if (streams[i].output.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n          buffer = await this.VideoEncoderThread.getExtraData(streams[i].taskId)\r\n          const colorSpace = await this.VideoEncoderThread.getColorSpace(streams[i].taskId)\r\n          if (colorSpace) {\r\n            streams[i].output.codecpar.colorSpace = colorSpace.colorSpace\r\n            streams[i].output.codecpar.colorPrimaries = colorSpace.colorPrimaries\r\n            streams[i].output.codecpar.colorTrc = colorSpace.colorTrc\r\n            updated = true\r\n          }\r\n        }\r\n        if (!buffer) {\r\n          const codecId = streams[i].output.codecpar.codecId\r\n          if (codecId === AVCodecID.AV_CODEC_ID_AAC) {\r\n            buffer = aac.avCodecParameters2Extradata(accessof(streams[i].output.codecpar))\r\n          }\r\n          else if (codecId === AVCodecID.AV_CODEC_ID_OPUS) {\r\n            buffer = opus.avCodecParameters2Extradata(accessof(streams[i].output.codecpar))\r\n          }\r\n        }\r\n        if (buffer) {\r\n          const extradata: pointer<uint8> = avMalloc(buffer.length)\r\n          memcpyFromUint8Array(extradata, buffer.length, buffer)\r\n          streams[i].output.codecpar.extradata = extradata\r\n          streams[i].output.codecpar.extradataSize = buffer.length\r\n          updated = true\r\n        }\r\n        if (updated) {\r\n          await this.MuxThread.updateAVCodecParameters(task.taskId, streams[i].output.index, streams[i].output.codecpar)\r\n        }\r\n      }\r\n\r\n      ret = await this.MuxThread.start(taskId)\r\n\r\n      if (ret < 0) {\r\n        await this.clearTask(task)\r\n        logger.fatal(`start transcode error, ret ${ret}`)\r\n      }\r\n\r\n      task.startTime = getTimestamp()\r\n      if (!this.reportTimer.isStarted()) {\r\n        this.reportTimer.start()\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal(`task ${taskId} not found`)\r\n    }\r\n  }\r\n\r\n  public async pauseTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      await this.MuxThread.pause(taskId)\r\n    }\r\n    else {\r\n      logger.fatal(`task ${taskId} not found`)\r\n    }\r\n  }\r\n\r\n  public async unpauseTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      await this.MuxThread.unpause(taskId)\r\n    }\r\n    else {\r\n      logger.fatal(`task ${taskId} not found`)\r\n    }\r\n  }\r\n\r\n  public async cancelTask(taskId: string) {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      await this.MuxThread.unpause(taskId)\r\n      await this.clearTask(task)\r\n    }\r\n    else {\r\n      logger.fatal(`task ${taskId} not found`)\r\n    }\r\n  }\r\n\r\n  public async destroy() {\r\n    if (this.MuxThread) {\r\n      await this.MuxThread.clear()\r\n      closeThread(this.MuxThread)\r\n    }\r\n    if (this.AudioEncoderThread) {\r\n      await this.AudioEncoderThread.clear()\r\n      closeThread(this.AudioEncoderThread)\r\n    }\r\n    if (this.AudioFilterThread) {\r\n      await this.AudioFilterThread.clear()\r\n      closeThread(this.AudioFilterThread)\r\n    }\r\n    if (this.AudioDecoderThread) {\r\n      await this.AudioDecoderThread.clear()\r\n      closeThread(this.AudioDecoderThread)\r\n    }\r\n    if (this.VideoEncoderThread) {\r\n      await this.VideoEncoderThread.clear()\r\n      closeThread(this.VideoEncoderThread)\r\n    }\r\n    if (this.VideoFilterThread) {\r\n      await this.VideoFilterThread.clear()\r\n      closeThread(this.VideoFilterThread)\r\n    }\r\n    if (this.VideoDecoderThread) {\r\n      await this.VideoDecoderThread.clear()\r\n      closeThread(this.VideoDecoderThread)\r\n    }\r\n    if (this.DemuxerThread) {\r\n      await this.DemuxerThread.clear()\r\n      closeThread(this.DemuxerThread)\r\n    }\r\n    if (this.IOThread) {\r\n      await this.IOThread.clear()\r\n      closeThread(this.IOThread)\r\n    }\r\n\r\n    this.VideoEncoderThread = null\r\n    this.VideoFilterThread = null\r\n    this.VideoDecoderThread = null\r\n    this.AudioEncoderThread = null\r\n    this.AudioFilterThread = null\r\n    this.AudioDecoderThread = null\r\n    this.DemuxerThread = null\r\n    this.IOThread = null\r\n    this.MuxThread = null\r\n\r\n    if (this.GlobalData) {\r\n      this.GlobalData.avframeList.clear((avframe) => {\r\n        unrefAVFrame(avframe)\r\n      })\r\n      this.GlobalData.avpacketList.clear((avpacket) => {\r\n        unrefAVPacket(avpacket)\r\n      })\r\n\r\n      mutex.destroy(addressof(this.GlobalData.avpacketListMutex))\r\n      mutex.destroy(addressof(this.GlobalData.avframeListMutex))\r\n\r\n      unmake(this.GlobalData)\r\n      this.GlobalData = null\r\n    }\r\n\r\n    logger.info('AVTranscoder pipelines stopped')\r\n\r\n  }\r\n\r\n  public setLogLevel(level: number) {\r\n    this.level = level\r\n    logger.setLevel(level)\r\n\r\n    if (this.IOThread) {\r\n      this.IOThread.setLogLevel(level)\r\n    }\r\n    if (this.DemuxerThread) {\r\n      this.DemuxerThread.setLogLevel(level)\r\n    }\r\n    if (this.AudioDecoderThread) {\r\n      this.AudioDecoderThread.setLogLevel(level)\r\n    }\r\n    if (this.AudioFilterThread) {\r\n      this.AudioFilterThread.setLogLevel(level)\r\n    }\r\n    if (this.AudioEncoderThread) {\r\n      this.AudioEncoderThread.setLogLevel(level)\r\n    }\r\n    if (this.VideoDecoderThread) {\r\n      this.VideoDecoderThread.setLogLevel(level)\r\n    }\r\n    if (this.VideoFilterThread) {\r\n      this.VideoFilterThread.setLogLevel(level)\r\n    }\r\n    if (this.VideoEncoderThread) {\r\n      this.VideoEncoderThread.setLogLevel(level)\r\n    }\r\n    if (this.MuxThread) {\r\n      this.MuxThread.setLogLevel(level)\r\n    }\r\n\r\n    logger.info(`set log level: ${level}`)\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  public async onGetDecoderResource(mediaType: AVMediaType, codecId: AVCodecID): Promise<WebAssemblyResource | ArrayBuffer> {\r\n    return this.getResource('decoder', codecId, mediaType)\r\n  }\r\n}\r\n","/*\r\n * libmedia AVTranscoder Controller\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\r\nimport IPCPort, { REQUEST, RpcMessage } from 'common/network/IPCPort'\r\nimport createMessageChannel from './function/createMessageChannel'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\n\r\nexport interface ControllerObserver {\r\n  onGetDecoderResource: (mediaType: AVMediaType, codecId: AVCodecID) => Promise<WebAssemblyResource | ArrayBuffer>\r\n}\r\n\r\nexport default class Controller {\r\n  private demuxerControlChannel: MessageChannel\r\n\r\n  private demuxerControlIPCPort: IPCPort\r\n\r\n  private observer: ControllerObserver\r\n\r\n  constructor(observer: ControllerObserver) {\r\n    this.observer = observer\r\n    this.demuxerControlChannel = createMessageChannel()\r\n\r\n    this.demuxerControlIPCPort = new IPCPort(this.demuxerControlChannel.port2)\r\n\r\n    this.demuxerControlIPCPort.on(REQUEST, async (request: RpcMessage) => {\r\n      switch (request.method) {\r\n        case 'getDecoderResource':\r\n          this.demuxerControlIPCPort.reply(\r\n            request,\r\n            await this.observer.onGetDecoderResource(request.params.mediaType, request.params.codecId)\r\n          )\r\n          break\r\n      }\r\n    })\r\n  }\r\n\r\n  public getDemuxerRenderControlPort() {\r\n    return this.demuxerControlChannel.port1\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.demuxerControlIPCPort) {\r\n      this.demuxerControlIPCPort.destroy()\r\n    }\r\n    this.demuxerControlChannel = null\r\n  }\r\n}\r\n","export const TASK_ENDED = 'task-ended'\r\n\r\nexport const TASK_ERROR = 'task-error'\r\n","/*\r\n * libmedia AudioEncodePipeline\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport List from 'cheap/std/collection/List'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport { AVFrameRef } from 'avutil/struct/avframe'\r\nimport AVFramePoolImpl from 'avutil/implement/AVFramePoolImpl'\r\nimport * as error from 'avutil/error'\r\nimport Pipeline, { TaskOptions } from 'avpipeline/Pipeline'\r\nimport { FilterGraph, FilterGraphDes, FilterGraphPortDes, checkFilterGraphInvalid, createFilterGraph } from 'avfilter/graph'\r\nimport AVInputNode from 'avfilter/AVInputNode'\r\nimport AVOutputNode from 'avfilter/AVOutputNode'\r\n\r\n\r\nexport interface AVFilterTaskOptions extends TaskOptions {\r\n  avframeList: pointer<List<pointer<AVFrameRef>>>\r\n  avframeListMutex: pointer<Mutex>\r\n  graph: FilterGraphDes\r\n  inputPorts: FilterGraphPortDes[]\r\n  outputPorts: FilterGraphPortDes[]\r\n}\r\n\r\ntype SelfTask = AVFilterTaskOptions & {\r\n  avframePool: AVFramePoolImpl\r\n  filterGraph: FilterGraph\r\n  inputNodes: AVInputNode[]\r\n  outputNodes: AVOutputNode[]\r\n}\r\n\r\nexport default class AVFilterPipeline extends Pipeline {\r\n\r\n  declare tasks: Map<string, SelfTask>\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  private async createTask(options: AVFilterTaskOptions): Promise<number> {\r\n\r\n    const avframePool = new AVFramePoolImpl(accessof(options.avframeList), options.avframeListMutex)\r\n\r\n    const filterGraph = createFilterGraph(options.graph, avframePool)\r\n    if (!checkFilterGraphInvalid(filterGraph, options.inputPorts, options.outputPorts)) {\r\n      return error.INVALID_OPERATE\r\n    }\r\n\r\n    const inputNodes: AVInputNode[] = []\r\n    const outputNodes: AVOutputNode[] = []\r\n    for (let i = 0; i < options.inputPorts.length; i++) {\r\n      const inputNode = new AVInputNode(options.inputPorts[i].port)\r\n      inputNodes.push(inputNode)\r\n      const next = filterGraph.inputs.find((vertex) => {\r\n        return vertex.id === options.inputPorts[i].id\r\n      })\r\n      inputNode.connect(next.filter)\r\n    }\r\n\r\n    for (let i = 0; i < options.outputPorts.length; i++) {\r\n      const outputNode = new AVOutputNode(options.outputPorts[i].port)\r\n      outputNodes.push(outputNode)\r\n      const prev = filterGraph.outputs.find((vertex) => {\r\n        return vertex.id === options.outputPorts[i].id\r\n      })\r\n      prev.filter.connect(outputNode)\r\n    }\r\n\r\n    for (let i = 0; i < filterGraph.vertices.length; i++) {\r\n      await filterGraph.vertices[i].filter.ready()\r\n    }\r\n\r\n    this.tasks.set(options.taskId, {\r\n      ...options,\r\n      filterGraph,\r\n      inputNodes,\r\n      outputNodes,\r\n      avframePool\r\n    })\r\n\r\n    return 0\r\n  }\r\n\r\n  public async registerTask(options: AVFilterTaskOptions): Promise<number> {\r\n    if (this.tasks.has(options.taskId)) {\r\n      return error.INVALID_OPERATE\r\n    }\r\n    return this.createTask(options)\r\n  }\r\n\r\n  public async unregisterTask(taskId: string): Promise<void> {\r\n    const task = this.tasks.get(taskId)\r\n    if (task) {\r\n      for (let i = 0; i < task.filterGraph.vertices.length; i++) {\r\n        task.filterGraph.vertices[i].filter.disconnect()\r\n        await task.filterGraph.vertices[i].filter.destroy()\r\n      }\r\n      this.tasks.delete(taskId)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia create MessageChannel\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as cheapConfig from 'cheap/config'\r\nimport FakeMessageChannel from 'common/network/FakeMessageChannel'\r\n\r\nexport default function createMessageChannel() {\r\n  if (cheapConfig.USE_THREADS && defined(ENABLE_THREADS)) {\r\n    return new MessageChannel()\r\n  }\r\n  return new FakeMessageChannel() as any as MessageChannel\r\n}\r\n","/*\r\n * libmedia AVStream defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Data } from 'common/types/type'\r\nimport AVCodecParameters from './struct/avcodecparameters'\r\nimport { AVPacketSideDataType } from './codec'\r\nimport { NOPTS_VALUE, NOPTS_VALUE_BIGINT } from './constant'\r\nimport { Rational } from './struct/rational'\r\n\r\nexport const enum AVStreamMetadataKey {\r\n  /**\r\n   * 表演者（歌手、乐队等）\r\n   */\r\n  ARTIST = 'artist',\r\n  /**\r\n   * 自由文本评论\r\n   */\r\n  COMMENT = 'comment',\r\n  /**\r\n   * 版权声明\r\n   */\r\n  COPYRIGHT = 'copyright',\r\n  /**\r\n   * 发行年份（通常为 YYYY 格式）\r\n   */\r\n  DATE = 'date',\r\n  /**\r\n   * 音乐流派\r\n   */\r\n  GENRE = 'genre',\r\n  /**\r\n   * 语言\r\n   */\r\n  LANGUAGE = 'language',\r\n  /**\r\n   * 语言描述\r\n   */\r\n  LANGUAGE_STRING = 'languageString',\r\n  /**\r\n   * 歌曲或作品的标题\r\n   */\r\n  TITLE = 'title',\r\n  /**\r\n   * 专辑名称\r\n   */\r\n  ALBUM = 'album',\r\n  /**\r\n   * 曲目编号\r\n   */\r\n  TRACK = 'track',\r\n  /**\r\n   * 用于编码音频文件的软件信息\r\n   */\r\n  ENCODER = 'encoder',\r\n  /**\r\n   * 时间参数\r\n   */\r\n  TIME_CODE = 'timecode',\r\n  /**\r\n   * 发行商\r\n   */\r\n  VENDOR = 'vendor',\r\n  /**\r\n   * 发行商标识\r\n   */\r\n  VENDOR_ID = 'vendorId',\r\n  /**\r\n   * 海报\r\n   */\r\n  POSTER = 'poster',\r\n  /**\r\n   * 歌词\r\n   */\r\n  LYRICS = 'lyrics',\r\n  /**\r\n   * 专辑的主要艺术家（与 ARTIST 区分开，适用于合集专辑）\r\n   */\r\n  ALBUM_ARTIST = 'albumArtist',\r\n  /**\r\n   * 如果是多张 CD 的专辑，标识当前曲目所在的 CD\r\n   */\r\n  DISC = 'disc',\r\n  /**\r\n   * 具体的演奏者或表演者\r\n   */\r\n  PERFORMER = 'performer',\r\n  /**\r\n   * 发行者\r\n   */\r\n  PUBLISHER = 'publisher',\r\n  /**\r\n   * 作曲者\r\n   */\r\n  COMPOSER = 'composer',\r\n  /**\r\n   * 编曲者\r\n   */\r\n  COMPILATION = 'compilation',\r\n  /**\r\n   * 创建时间\r\n   */\r\n  CREATION_TIME = 'creationTime',\r\n  /**\r\n   * 最后更改时间\r\n   */\r\n  MODIFICATION_TIME = 'modificationTime',\r\n  /**\r\n   * 专辑排序\r\n   */\r\n  ALBUM_SORT = 'albumSort',\r\n  /**\r\n   * 表演者排序\r\n   */\r\n  ARTIST_SORT = 'artistSort',\r\n  /**\r\n   * 标题排序\r\n   */\r\n  TITLE_SORT = 'titleSort',\r\n  /**\r\n   * 分组\r\n   */\r\n  GROUPING = 'grouping',\r\n  /**\r\n   * 额外的描述信息\r\n   */\r\n  DESCRIPTION = 'description',\r\n  /**\r\n   * 许可信息\r\n   */\r\n  LICENSE = 'license',\r\n  /**\r\n   * 国际标准录音代码\r\n   */\r\n  ISRC = 'isrc',\r\n  /**\r\n   * 情绪标签，如 Happy、Sad\r\n   */\r\n  MOOD = 'mood',\r\n  /**\r\n   * mp4 的 elst box 内容\r\n   */\r\n  ELST = 'elst',\r\n  /**\r\n   * mp4 的旋转矩阵\r\n   */\r\n  MATRIX = 'matrix',\r\n  /**\r\n   * 某些媒体的样式（如 webvtt）\r\n   */\r\n  STYLES = 'styles',\r\n  /**\r\n   * 媒体的 mime\r\n   */\r\n  MIME = 'mime',\r\n  /**\r\n   * mp4 的 handlerName\r\n   */\r\n  HANDLER_NAME = 'handlerName',\r\n  /**\r\n   * DRM 系统支持信息\r\n   */\r\n  ENCRYPTION = 'encryption'\r\n}\r\n\r\nexport const enum AVDisposition {\r\n  NONE = 0,\r\n  DEFAULT = 0x0001,\r\n  DUB = 0x0002,\r\n  ORIGINAL = 0x0004,\r\n  COMMENT = 0x0008,\r\n  LYRICS = 0x0010,\r\n  KARAOKE = 0x0020,\r\n\r\n  /**\r\n   * Track should be used during playback by default.\r\n   * Useful for subtitle track that should be displayed\r\n   * even when user did not explicitly ask for subtitles.\r\n   */\r\n  FORCED = 0x0040,\r\n  /**\r\n   * stream for hearing impaired audiences\r\n   */\r\n  HEARING_IMPAIRED = 0x0080,\r\n  /**\r\n   * stream for visual impaired audiences\r\n   */\r\n  VISUAL_IMPAIRED = 0x0100,\r\n  /**\r\n   * stream without voice\r\n   */\r\n  CLEAN_EFFECTS = 0x0200,\r\n  /**\r\n   * The stream is stored in the file as an attached picture/\"cover art\" (e.g.\r\n   * APIC frame in ID3v2). The first (usually only) packet associated with it\r\n   * will be returned among the first few packets read from the file unless\r\n   * seeking takes place. It can also be accessed at any time in\r\n   * AVStream.attached_pic.\r\n   */\r\n  ATTACHED_PIC = 0x0400,\r\n  /**\r\n   * The stream is sparse, and contains thumbnail images, often corresponding\r\n   * to chapter markers. Only ever used with AV_DISPOSITION_ATTACHED_PIC.\r\n   */\r\n  TIMED_THUMBNAILS = 0x0800,\r\n\r\n  /**\r\n   * To specify text track kind (different from subtitles default).\r\n   */\r\n  CAPTIONS = 0x10000,\r\n  DESCRIPTIONS = 0x20000,\r\n  METADATA = 0x40000,\r\n  /**\r\n   * dependent audio stream (mix_type=0 in mpegts)\r\n   */\r\n  DEPENDENT = 0x80000,\r\n  /**\r\n   * still images in video stream (still_picture_flag=1 in mpegts\r\n   */\r\n  STILL_IMAGE = 0x100000\r\n}\r\n\r\n/**\r\n * from FFmpeg\r\n * \r\n */\r\nexport default class AVStream {\r\n  /**\r\n   * stream index in AVFormatContext\r\n   */\r\n  index: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * Format-specific stream ID.\r\n   * decoding: set by libavformat\r\n   * encoding: set by the user, replaced by libavformat if left unset\r\n   */\r\n  id: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * format private data\r\n   */\r\n  privData: Data = null\r\n  /**\r\n   * demuxer or muxer's private data\r\n   */\r\n  privateData2: Data = null\r\n\r\n  codecpar: AVCodecParameters = make<AVCodecParameters>(new AVCodecParameters())\r\n\r\n  /**\r\n   * An array of side data that applies to the whole stream (i.e. the\r\n   * container does not allow it to change between packets).\r\n   *\r\n   * There may be no overlap between the side data in this array and side data\r\n   * in the packets. I.e. a given side data is either exported by the muxer\r\n   * (demuxing) / set by the caller (muxing) in this array, then it never\r\n   * appears in the packets, or the side data is exported / sent through\r\n   * the packets (always in the first packet where the value becomes known or\r\n   * changes), then it does not appear in this array.\r\n   *\r\n   * - demuxing: Set by libavformat when the stream is created.\r\n   * - muxing: May be set by the caller before write_header().\r\n   *\r\n   */\r\n  sideData: Partial<Record<AVPacketSideDataType, Uint8Array>> = {}\r\n\r\n  /**\r\n   * number of frames in this stream if known or 0\r\n   */\r\n  nbFrames: int64 = 0n\r\n\r\n  metadata: Data = {}\r\n\r\n  /**\r\n   * Decoding: duration of the stream, in stream time base.\r\n   * If a source file does not specify a duration, but does specify\r\n   * a bitrate, this value will be estimated from bitrate and file size.\r\n   *\r\n   * Encoding: May be set by the caller before avformat_write_header() to\r\n   * provide a hint to the muxer about the estimated duration.\r\n   */\r\n  duration: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * Decoding: pts of the first frame of the stream in presentation order, in stream time base.\r\n   * Only set this if you are absolutely 100% sure that the value you set\r\n   * it to really is the pts of the first frame.\r\n   * This may be undefined (AV_NOPTS_VALUE).\r\n   * @note The ASF header does NOT contain a correct start_time the ASF\r\n   * demuxer must NOT set this.\r\n   */\r\n  startTime: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * 第一个 packet 的 dts\r\n   */\r\n  firstDTS: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * AV_DISPOSITION_* bit field\r\n   */\r\n  disposition: AVDisposition = AVDisposition.NONE\r\n\r\n  /**\r\n   *\r\n   * 封装时间基\r\n   * \r\n   * decoding: set by libavformat\r\n   * encoding: May be set by the caller before avformat_write_header() to\r\n   *           provide a hint to the muxer about the desired timebase. In\r\n   *           avformat_write_header(), the muxer will overwrite this field\r\n   *           with the timebase that will actually be used for the timestamps\r\n   *           written into the file (which may or may not be related to the\r\n   *           user-provided one, depending on the format).\r\n   */\r\n  timeBase: Rational = make<Rational>()\r\n\r\n  /**\r\n   * 帧索引，可用于 seek\r\n   */\r\n  sampleIndexes: {\r\n    dts: int64\r\n    pts: int64\r\n    pos: int64\r\n    size: int32\r\n    duration: int64\r\n    flags: int32\r\n  }[] = []\r\n\r\n  /**\r\n   * pos 到 sample index 的映射\r\n   */\r\n  sampleIndexesPosMap: Map<int64, int32> = new Map()\r\n\r\n\r\n  public destroy() {\r\n    if (this.codecpar) {\r\n      this.codecpar.destroy()\r\n      unmake(this.codecpar)\r\n      this.codecpar = null\r\n    }\r\n    if (this.timeBase) {\r\n      unmake(this.timeBase)\r\n      this.timeBase = null\r\n    }\r\n    this.sampleIndexes.length = 0\r\n    this.sampleIndexesPosMap.clear()\r\n  }\r\n}\r\n\r\nexport interface AVStreamInterface {\r\n  index: number\r\n  id: number\r\n  codecpar: pointer<AVCodecParameters>\r\n  nbFrames: int64\r\n  metadata: Data\r\n  duration: int64\r\n  startTime: int64\r\n  disposition: int32\r\n  timeBase: Rational\r\n}\r\n\r\nexport interface AVStreamMetadataEncryption {\r\n  schemeType: number\r\n  schemeVersion: number\r\n  cryptByteBlock?: number\r\n  skipByteBlock?: number\r\n  perSampleIVSize: number\r\n  kid: Uint8Array\r\n  constantIV?: Uint8Array\r\n  pattern?: boolean\r\n}\r\n","/*\r\n * libmedia aac util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\nimport Stream from '../AVStream'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport { NOPTS_VALUE } from '../constant'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport BitReader from 'common/io/BitReader'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\n\r\nexport const enum MPEG4AudioObjectTypes {\r\n  NULL = 0,\r\n  /**\r\n   * Main-AAC\r\n   */\r\n  AAC_MAIN,\r\n  /**\r\n   * LC-AAC\r\n   */\r\n  AAC_LC,\r\n  AAC_SSR,\r\n  AAC_LTP,\r\n  /**\r\n   * HE-AAC\r\n   */\r\n  AAC_SBR,\r\n  AAC_SCALABLE,\r\n\r\n  AAC_LD = 23,\r\n\r\n  AAC_PS = 29,\r\n\r\n  LAYER1 = 32,\r\n  LAYER2,\r\n  /**\r\n   * MP3\r\n   */\r\n  LAYER3,\r\n\r\n  AAC_ELD = 39\r\n}\r\n\r\nexport const AACProfile2Name: Partial<Record<MPEG4AudioObjectTypes, string>> = {\r\n  [MPEG4AudioObjectTypes.AAC_MAIN]: 'Main',\r\n  [MPEG4AudioObjectTypes.AAC_LC]: 'LC',\r\n  [MPEG4AudioObjectTypes.AAC_SSR]: 'SSR',\r\n  [MPEG4AudioObjectTypes.AAC_LTP]: 'LTP',\r\n  [MPEG4AudioObjectTypes.AAC_SBR]: 'HE',\r\n  [MPEG4AudioObjectTypes.AAC_SCALABLE]: 'SCALABLE',\r\n  [MPEG4AudioObjectTypes.AAC_PS]: 'HEv2',\r\n  [MPEG4AudioObjectTypes.AAC_LD]: 'LD',\r\n  [MPEG4AudioObjectTypes.AAC_ELD]: 'ELD'\r\n}\r\n\r\nexport const MPEG4SamplingFrequencyIndex = {\r\n  96000: 0,\r\n  88200: 1,\r\n  64000: 2,\r\n  48000: 3,\r\n  44100: 4,\r\n  32000: 5,\r\n  24000: 6,\r\n  22050: 7,\r\n  16000: 8,\r\n  12000: 9,\r\n  11025: 10,\r\n  8000: 11,\r\n  7350: 12\r\n}\r\n\r\nexport const MPEG4SamplingFrequencies = [\r\n  96000,\r\n  88200,\r\n  64000,\r\n  48000,\r\n  44100,\r\n  32000,\r\n  24000,\r\n  22050,\r\n  16000,\r\n  12000,\r\n  11025,\r\n  8000,\r\n  7350,\r\n  NOPTS_VALUE,\r\n  NOPTS_VALUE,\r\n  NOPTS_VALUE\r\n]\r\n\r\nexport const MPEG4Channels = [\r\n  NOPTS_VALUE,\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5,\r\n  6,\r\n  7\r\n]\r\n\r\n/**\r\n * 解析 AAC AudioSpecificConfig\r\n *    \r\n *             frequency\r\n *              44100Hz        fill bit\r\n *               4 bit          3 bit\r\n *              -------         -----\r\n *    0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0\r\n *    ---------         -------\r\n *      5 bit            4 bit\r\n *     AAC LC           fl, fr\r\n *    profile           channel\r\n * \r\n * url: https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Audio_Specific_Config\r\n * \r\n */\r\n\r\nexport function getAVCodecParameters(extradata: Uint8ArrayInterface) {\r\n  let profile = NOPTS_VALUE\r\n  let sampleRate = NOPTS_VALUE\r\n  let channels = NOPTS_VALUE\r\n  if (extradata.length >= 2) {\r\n    profile = (extradata[0] >> 3) & 0x1f\r\n    sampleRate = MPEG4SamplingFrequencies[((extradata[0] & 0x07) << 1)\r\n      | (extradata[1] >> 7)]\r\n\r\n    channels = MPEG4Channels[(extradata[1] >> 3) & 0x0f]\r\n  }\r\n\r\n  return {\r\n    profile,\r\n    sampleRate,\r\n    channels\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParameters(stream: Stream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  if (extradata) {\r\n    const { profile, sampleRate, channels } = getAVCodecParameters(extradata)\r\n    stream.codecpar.profile = profile\r\n    stream.codecpar.sampleRate = sampleRate\r\n    stream.codecpar.chLayout.nbChannels = channels\r\n    stream.codecpar.frameSize = profile ===  MPEG4AudioObjectTypes.AAC_SBR ? 2048 : 1024\r\n    stream.codecpar.format = AVSampleFormat.AV_SAMPLE_FMT_FLTP\r\n  }\r\n}\r\n\r\nexport function avCodecParameters2Extradata(codecpar: AVCodecParameters) {\r\n  const samplingFreqIndex = MPEG4SamplingFrequencyIndex[codecpar.sampleRate]\r\n  const channelConfig = codecpar.chLayout.nbChannels\r\n  const profile = codecpar.profile === NOPTS_VALUE ? MPEG4AudioObjectTypes.AAC_LC : codecpar.profile\r\n\r\n  const extradata = new Uint8Array(2)\r\n  extradata[0] = ((profile & 0x1f) << 3) | ((samplingFreqIndex & 0x0e) >> 1)\r\n  extradata[1] = ((samplingFreqIndex & 0x01) << 7) | ((channelConfig & 0x0f) << 3)\r\n\r\n  return extradata\r\n}\r\n\r\nexport interface AACADTSHeader {\r\n  syncWord: number\r\n  profile: number\r\n  sampleRate: number\r\n  channels: number\r\n  aacFrameLength: number\r\n  numberOfRawDataBlocksInFrame: number\r\n  headerLength: number\r\n  framePayloadLength: number\r\n}\r\n\r\nexport interface AACLATMHeader {\r\n  syncWord: number\r\n  profile: number\r\n  sampleRate: number\r\n  channels: number\r\n  useSameStreamMux: boolean\r\n  headerLength: number\r\n  framePayloadLength: number\r\n  muxLengthBytes: number\r\n}\r\n\r\n/**\r\n * \r\n * adts 封装转 raw\r\n * \r\n * bits    \r\n * - 12  syncword\r\n * - 1   ID (MPEG 标识位，固定为 1)\r\n * - 2   Layer ( 固定为 0)\r\n * - 1   Protection Absent ( 指示是否有 CRC 校验，1 表示没有校验）\r\n * - 2   Profile\r\n * - 4   Sampling Frequency Index ( 采样率的索引）\r\n * - 1   Private Bit ( 保留位，一般设置为 0)\r\n * - 3   Channel Configuration ( 音频通道数）\r\n * - 1   Original Copy ( 原始拷贝标志位，一般设置为 0)\r\n * - 1   Home ( 保留位，一般设置为 0)\r\n * - 1   Copyright Identification Bit（置 0）\r\n * - 1   Copyright Identification Start（置 0）\r\n * - 13  Frame Length ( 帧长度，包括 ADTS 头和音频帧数据的长度）\r\n * - 11  Buffer Fullness ( 缓冲区满度，可用于音频流的同步）\r\n * - 2   Number of Raw Data Blocks in Frame ( 帧中原始数据块的数量）\r\n * - 16  CRC (Protection Absent 控制）\r\n * - N  raw aac data\r\n * \r\n */\r\nexport function parseADTSHeader(buffer: Uint8ArrayInterface): AACADTSHeader | number {\r\n\r\n  if (buffer.length < 7) {\r\n    return -1\r\n  }\r\n\r\n  const syncWord = (buffer[0] << 4) | (buffer[0 + 1] >> 4)\r\n\r\n  if (syncWord !== 0xFFF) {\r\n    return -1\r\n  }\r\n\r\n  /*\r\n    * const id = (buffer[1] & 0x08) >>> 3\r\n    * const layer = (buffer[1] & 0x06) >>> 1\r\n    */\r\n  const protectionAbsent = buffer[1] & 0x01\r\n  const profile = (buffer[2] & 0xC0) >>> 6\r\n  const samplingFrequencyIndex = (buffer[2] & 0x3C) >>> 2\r\n  const channelConfiguration = ((buffer[2] & 0x01) << 2) | ((buffer[3] & 0xC0) >>> 6)\r\n\r\n  // adts_variable_header()\r\n  const aacFrameLength = ((buffer[3] & 0x03) << 11)\r\n    | (buffer[4] << 3)\r\n    | ((buffer[5] & 0xE0) >>> 5)\r\n\r\n  const numberOfRawDataBlocksInFrame = buffer[6] & 0x03\r\n\r\n  let headerLength = protectionAbsent === 1 ? 7 : 9\r\n  let framePayloadLength = aacFrameLength - headerLength\r\n\r\n  return {\r\n    syncWord,\r\n    profile: profile + 1,\r\n    sampleRate: MPEG4SamplingFrequencies[samplingFrequencyIndex],\r\n    channels: MPEG4Channels[channelConfiguration],\r\n    aacFrameLength,\r\n    numberOfRawDataBlocksInFrame,\r\n    headerLength,\r\n    framePayloadLength\r\n  }\r\n}\r\n\r\nexport function parseLATMHeader(buffer: Uint8ArrayInterface, bitReader?: BitReader) {\r\n  if (!bitReader) {\r\n    bitReader = new BitReader()\r\n    bitReader.appendBuffer(buffer)\r\n  }\r\n\r\n  function getLATMValue() {\r\n    const bytesForValue = bitReader.readU(2)\r\n    let value = 0\r\n\r\n    for (let i = 0; i <= bytesForValue; i++) {\r\n      value = value << 8\r\n      value = value | bitReader.readU(8)\r\n    }\r\n    return value\r\n  }\r\n\r\n  const now = bitReader.getPointer()\r\n\r\n  const info: AACLATMHeader = {\r\n    syncWord: 0,\r\n    profile: 0,\r\n    sampleRate: 0,\r\n    channels: 0,\r\n    useSameStreamMux: false,\r\n    headerLength: 0,\r\n    framePayloadLength: 0,\r\n    muxLengthBytes: 0\r\n  }\r\n\r\n  const syncWord = bitReader.readU(11)\r\n\r\n  if (syncWord !== 0x2B7) {\r\n    return -1\r\n  }\r\n\r\n  info.syncWord = syncWord\r\n\r\n  info.muxLengthBytes = bitReader.readU(13)\r\n\r\n  const useSameStreamMux = bitReader.readU1() === 0x01\r\n\r\n  info.useSameStreamMux = useSameStreamMux\r\n\r\n  if (!useSameStreamMux) {\r\n    const audioMuxVersion = bitReader.readU1() === 0x01\r\n    const audioMuxVersionA = audioMuxVersion && bitReader.readU1() === 0x01\r\n    if (audioMuxVersionA) {\r\n      return -1\r\n    }\r\n    if (audioMuxVersion) {\r\n      getLATMValue()\r\n    }\r\n    const allStreamsSameTimeFraming = bitReader.readU1() === 0x01\r\n    if (!allStreamsSameTimeFraming) {\r\n      return -1\r\n    }\r\n    const numSubFrames = bitReader.readU(6)\r\n    if (numSubFrames !== 0) {\r\n      return -1\r\n    }\r\n\r\n    const numProgram = bitReader.readU(4)\r\n    if (numProgram !== 0) {\r\n      return -1\r\n    }\r\n\r\n    const numLayer = bitReader.readU(3)\r\n    if (numLayer !== 0) {\r\n      return -1\r\n    }\r\n\r\n    let fillBits = audioMuxVersion ? getLATMValue() : 0\r\n\r\n    const audioObjectType = bitReader.readU(5)\r\n    fillBits -= 5\r\n\r\n    const samplingFreqIndex = bitReader.readU(4)\r\n    fillBits -= 4\r\n\r\n    const channelConfig = bitReader.readU(4)\r\n    fillBits -= 4\r\n\r\n    bitReader.readU(3)\r\n    fillBits -= 3\r\n\r\n    if (fillBits > 0) {\r\n      bitReader.readU(fillBits)\r\n    }\r\n\r\n    const frameLengthType = bitReader.readU(3)\r\n    if (frameLengthType === 0) {\r\n      bitReader.readU(8)\r\n    }\r\n    else {\r\n      return -1\r\n    }\r\n\r\n    const otherDataPresent = bitReader.readU1() === 0x01\r\n    if (otherDataPresent) {\r\n      if (audioMuxVersion) {\r\n        getLATMValue()\r\n      }\r\n      else {\r\n        let otherDataLenBits = 0\r\n        while (true) {\r\n          otherDataLenBits = otherDataLenBits << 8\r\n          const otherDataLenEsc = bitReader.readU1() === 0x01\r\n          const otherDataLenTmp = bitReader.readU(8)\r\n          otherDataLenBits += otherDataLenTmp\r\n          if (!otherDataLenEsc) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const crcCheckPresent = bitReader.readU1() === 0x01\r\n    if (crcCheckPresent) {\r\n      bitReader.readU(8)\r\n    }\r\n\r\n    info.profile = audioObjectType + 1\r\n    info.sampleRate = MPEG4SamplingFrequencies[samplingFreqIndex]\r\n    info.channels = MPEG4Channels[channelConfig]\r\n  }\r\n\r\n  let length = 0\r\n  while (true) {\r\n    const tmp = bitReader.readU(8)\r\n    length += tmp\r\n    if (tmp !== 0xff) {\r\n      break\r\n    }\r\n  }\r\n\r\n  info.framePayloadLength = length\r\n  info.headerLength = bitReader.getPointer() - now + (bitReader.getBitLeft() === 8 ? 0 : 1)\r\n\r\n  return info\r\n}\r\n","/*\r\n * libmedia av1 util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVStream from '../AVStream'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport BitReader from 'common/io/BitReader'\r\nimport * as av1syntax from '../util/av1syntax'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport BitWriter from 'common/io/BitWriter'\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport { AVPixelFormat } from '../pixfmt'\r\n\r\nexport const enum AV1Profile {\r\n  Main,\r\n  High,\r\n  Professional\r\n}\r\n\r\nexport const enum OBUType {\r\n  Reserved,\r\n  SEQUENCE_HEADER,\r\n  TEMPORAL_DELIMITER,\r\n  FRAME_HEADER,\r\n  TILE_GROUP,\r\n  METADATA,\r\n  FRAME,\r\n  REDUNDANT_FRAME_HEADER,\r\n  TILE_LIST,\r\n  PADDING = 15\r\n}\r\n\r\nexport const AV1Profile2Name: Record<AV1Profile, string> = {\r\n  [AV1Profile.Main]: 'Main',\r\n  [AV1Profile.High]: 'High',\r\n  [AV1Profile.Professional]: 'Professional'\r\n}\r\n\r\nexport const LevelCapabilities = [\r\n  { level: 20, maxResolution: 2048 * 1152 },\r\n  { level: 21, maxResolution: 2816 * 1584 },\r\n  { level: 30, maxResolution: 4352 * 2448 },\r\n  { level: 31, maxResolution: 5504 * 3096 },\r\n  { level: 40, maxResolution: 6144 * 3456 },\r\n  { level: 41, maxResolution: 6144 * 3456 },\r\n  { level: 50, maxResolution: 8192 * 4352 },\r\n  { level: 51, maxResolution: 8192 * 4352 },\r\n  { level: 52, maxResolution: 8192 * 4352 },\r\n  { level: 53, maxResolution: 8192 * 4352 },\r\n  { level: 60, maxResolution: 16384 * 8704 },\r\n  { level: 61, maxResolution: 16384 * 8704 },\r\n  { level: 62, maxResolution: 16384 * 8704 },\r\n  { level: 63, maxResolution: 16384 * 8704 }\r\n]\r\n\r\nexport const AV1LevelIdx = [20, 21, 22, 23, 30, 31, 32, 33, 40, 41, 42, 43, 50, 51, 52, 53, 60, 61, 62, 63, 70, 71, 72, 73]\r\n\r\nexport function getLevelByResolution(width: number, height: number, fps: number) {\r\n  const resolution = width * height\r\n  for (const level of LevelCapabilities) {\r\n    if (resolution <= level.maxResolution) {\r\n      return level.level\r\n    }\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  if (extradata && extradata.length >= 4) {\r\n    const params = parseExtraData(extradata)\r\n\r\n    stream.codecpar.profile = params.profile\r\n    stream.codecpar.level = params.level\r\n  }\r\n}\r\n\r\n/**\r\n * - 1 bit marker\r\n * - 7 bit version\r\n * - 3 bit profile\r\n * - 5 bit level\r\n * - 1 bit tier\r\n * - 1 bit bitdepth > 8\r\n * - 1 bit bitdepth == 12\r\n * - 1 bit monochrome\r\n * - 1 bit chroma_subsampling_x\r\n * - 1 bit chroma_subsampling_y\r\n * - 2 bit chroma_sample_position\r\n * - 8 bit padding\r\n * \r\n * @param header \r\n */\r\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\r\n  const bitReader = new BitReader(extradata.length)\r\n  bitReader.appendBuffer(extradata)\r\n  // marker\r\n  bitReader.readU1()\r\n  // version\r\n  bitReader.readU(7)\r\n\r\n  const profile = bitReader.readU(3)\r\n  const level = bitReader.readU(5)\r\n  const tier = bitReader.readU1()\r\n  let bitDepth = bitReader.readU1() ? 10 : 8\r\n  if (bitReader.readU1()) {\r\n    bitDepth = 12\r\n  }\r\n  const monochrome = bitReader.readU1()\r\n  const chromaSubsamplingX = bitReader.readU1()\r\n  const chromaSubsamplingY = bitReader.readU1()\r\n  const chromaSamplePosition = bitReader.readU(2)\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    tier,\r\n    bitDepth,\r\n    monochrome,\r\n    chromaSubsamplingX,\r\n    chromaSubsamplingY,\r\n    chromaSamplePosition\r\n  }\r\n}\r\n\r\n/* eslint-disable camelcase */\r\nexport function parseSequenceHeader(header: Uint8ArrayInterface) {\r\n  const bitReader = new BitReader(header.length)\r\n  bitReader.appendBuffer(header)\r\n\r\n  bitReader.readU1()\r\n  bitReader.readU(4)\r\n  const extensionFlag = bitReader.readU1()\r\n  const hasSizeFlag = bitReader.readU1()\r\n  // obu_reserved_1bit\r\n  bitReader.readU1()\r\n  if (extensionFlag) {\r\n    bitReader.readU(8)\r\n  }\r\n  if (hasSizeFlag) {\r\n    av1syntax.leb128(bitReader)\r\n  }\r\n\r\n  const seq_profile =\tav1syntax.f(bitReader, 3)\r\n  const still_picture =\tav1syntax.f(bitReader, 1)\r\n  const reduced_still_picture_header = av1syntax.f(bitReader, 1)\r\n\r\n  let timing_info_present_flag = 0\r\n  let decoder_model_info_present_flag = 0\r\n  let initial_display_delay_present_flag = 0\r\n  let operating_points_cnt_minus_1 = 0\r\n  let operating_point_idc: number[] = [0]\r\n  let seq_level_idx: number[] = [0]\r\n  let seq_tier: number[] = [0]\r\n  let decoder_model_present_for_this_op: number[] = [0]\r\n  let initial_display_delay_present_for_this_op: number[] = [0]\r\n  let initial_display_delay_minus_1: number[] = [0]\r\n  let buffer_delay_length_minus_1 = 0\r\n  let decoder_buffer_delay: number[] = [0]\r\n  let encoder_buffer_delay: number[] = [0]\r\n  let low_delay_mode_flag: number[] = [0]\r\n\r\n  if (reduced_still_picture_header) {\r\n    seq_level_idx[0] = av1syntax.f(bitReader, 5)\r\n  }\r\n  else {\r\n    timing_info_present_flag = av1syntax.f(bitReader, 1)\r\n    if (timing_info_present_flag) {\r\n\r\n      let num_units_in_display_tick =\tav1syntax.f(bitReader, 32)\r\n      let time_scale = av1syntax.f(bitReader, 32)\r\n      let equal_picture_interval = av1syntax.f(bitReader, 1)\r\n      if (equal_picture_interval) {\r\n        let num_ticks_per_picture_minus_1 = av1syntax.uvlc(bitReader)\r\n      }\r\n\r\n      let decoder_model_info_present_flag =\tav1syntax.f(bitReader, 1)\r\n      if (decoder_model_info_present_flag) {\r\n        buffer_delay_length_minus_1 =\tav1syntax.f(bitReader, 5)\r\n        let num_units_in_decoding_tick = av1syntax.f(bitReader, 32)\r\n        let buffer_removal_time_length_minus_1 = av1syntax.f(bitReader, 5)\r\n        let frame_presentation_time_length_minus_1 = av1syntax.f(bitReader, 5)\r\n      }\r\n    }\r\n    else {\r\n      decoder_model_info_present_flag = 0\r\n    }\r\n    let initial_display_delay_present_flag = av1syntax.f(bitReader, 1)\r\n    let operating_points_cnt_minus_1 = av1syntax.f(bitReader, 5)\r\n    for (let i = 0; i <= operating_points_cnt_minus_1; i++ ) {\r\n      operating_point_idc[i] = av1syntax.f(bitReader, 12)\r\n      seq_level_idx[i] = av1syntax.f(bitReader, 5)\r\n      if (seq_level_idx[i] > 7) {\r\n        seq_tier[i] = av1syntax.f(bitReader, 1)\r\n      }\r\n      else {\r\n        seq_tier[i] = 0\r\n      }\r\n      if (decoder_model_info_present_flag) {\r\n        decoder_model_present_for_this_op[i] = av1syntax.f(bitReader, 1)\r\n        if (decoder_model_present_for_this_op[i]) {\r\n          let n = buffer_delay_length_minus_1 + 1\r\n          decoder_buffer_delay[i] =\tav1syntax.f(bitReader, n)\r\n          encoder_buffer_delay[i] =\tav1syntax.f(bitReader, n)\r\n          low_delay_mode_flag[i] = av1syntax.f(bitReader, 1)\r\n        }\r\n      }\r\n      else {\r\n        decoder_model_present_for_this_op[i] = 0\r\n      }\r\n      if (initial_display_delay_present_flag) {\r\n        initial_display_delay_present_for_this_op[i] = av1syntax.f(bitReader, 1)\r\n        if ( initial_display_delay_present_for_this_op[i] ) {\r\n          initial_display_delay_minus_1[i] = av1syntax.f(bitReader, 4)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  let frame_width_bits_minus_1 = av1syntax.f(bitReader, 4)\r\n  let frame_height_bits_minus_1 =\tav1syntax.f(bitReader, 4)\r\n  let n = frame_width_bits_minus_1 + 1\r\n  let max_frame_width_minus_1 =\tav1syntax.f(bitReader, n)\r\n  n = frame_height_bits_minus_1 + 1\r\n  let max_frame_height_minus_1 = av1syntax.f(bitReader, n)\r\n  let frame_id_numbers_present_flag = 0\r\n  let delta_frame_id_length_minus_2 = 0\r\n  let additional_frame_id_length_minus_1 = 0\r\n  if (reduced_still_picture_header ) {\r\n    frame_id_numbers_present_flag = 0\r\n  }\r\n  else {\r\n    frame_id_numbers_present_flag =\tav1syntax.f(bitReader, 1)\r\n  }\r\n  if ( frame_id_numbers_present_flag ) {\r\n    delta_frame_id_length_minus_2 =\tav1syntax.f(bitReader, 4)\r\n    additional_frame_id_length_minus_1 = av1syntax.f(bitReader, 3)\r\n  }\r\n  let use_128x128_superblock = av1syntax.f(bitReader, 1)\r\n  let enable_filter_intra =\tav1syntax.f(bitReader, 1)\r\n  let enable_intra_edge_filter = av1syntax.f(bitReader, 1)\r\n  let enable_interintra_compound = 0\r\n  let enable_masked_compound = 0\r\n  let enable_warped_motion = 0\r\n  let enable_dual_filter = 0\r\n  let enable_order_hint = 0\r\n  let enable_jnt_comp = 0\r\n  let enable_ref_frame_mvs = 0\r\n  let seq_force_screen_content_tools = 2\r\n  let seq_force_integer_mv = 2\r\n  let OrderHintBits = 0\r\n  if (!reduced_still_picture_header) {\r\n    let enable_interintra_compound = av1syntax.f(bitReader, 1)\r\n    enable_masked_compound = av1syntax.f(bitReader, 1)\r\n    enable_warped_motion = av1syntax.f(bitReader, 1)\r\n    enable_dual_filter = av1syntax.f(bitReader, 1)\r\n    enable_order_hint = av1syntax.f(bitReader, 1)\r\n    if (enable_order_hint) {\r\n      enable_jnt_comp = av1syntax.f(bitReader, 1)\r\n      enable_ref_frame_mvs = av1syntax.f(bitReader, 1)\r\n    }\r\n    else {\r\n      enable_jnt_comp = 0\r\n      enable_ref_frame_mvs = 0\r\n    }\r\n    let seq_choose_screen_content_tools =\tav1syntax.f(bitReader, 1)\r\n    if (seq_choose_screen_content_tools) {\r\n      seq_force_screen_content_tools = 2\r\n    }\r\n    else {\r\n      seq_force_screen_content_tools = av1syntax.f(bitReader, 1)\r\n    }\r\n\r\n    if (seq_force_screen_content_tools > 0) {\r\n      let seq_choose_integer_mv =\tav1syntax.f(bitReader, 1)\r\n      if (seq_choose_integer_mv) {\r\n        seq_force_integer_mv = 2\r\n      }\r\n      else {\r\n        seq_force_integer_mv = av1syntax.f(bitReader, 1)\r\n      }\r\n    }\r\n    else {\r\n      seq_force_integer_mv = 2\r\n    }\r\n    if (enable_order_hint) {\r\n      const order_hint_bits_minus_1 =\tav1syntax.f(bitReader, 3)\r\n      OrderHintBits = order_hint_bits_minus_1 + 1\r\n    }\r\n    else {\r\n      OrderHintBits = 0\r\n    }\r\n  }\r\n  let enable_superres =\tav1syntax.f(bitReader, 1)\r\n  let enable_cdef =\tav1syntax.f(bitReader, 1)\r\n  let enable_restoration = av1syntax.f(bitReader, 1)\r\n\r\n  let high_bitdepth =\tav1syntax.f(bitReader, 1)\r\n  let twelve_bit = 0\r\n  let bit_depth = 0\r\n  let mono_chrome = 0\r\n  if (seq_profile == 2 && high_bitdepth ) {\r\n    twelve_bit = av1syntax.f(bitReader, 1)\r\n    bit_depth = twelve_bit ? 12 : 10\r\n  }\r\n  else if (seq_profile <= 2) {\r\n    bit_depth = high_bitdepth ? 10 : 8\r\n  }\r\n  if ( seq_profile == 1 ) {\r\n    mono_chrome = 0\r\n  }\r\n  else {\r\n    mono_chrome = av1syntax.f(bitReader, 1)\r\n  }\r\n  const color_description_present_flag = av1syntax.f(bitReader, 1)\r\n  let color_primaries = 0\r\n  let transfer_characteristics = 0\r\n  let matrix_coefficients = 0\r\n  if (color_description_present_flag ) {\r\n    color_primaries =\tav1syntax.f(bitReader, 8)\r\n    transfer_characteristics = av1syntax.f(bitReader, 8)\r\n    matrix_coefficients = av1syntax.f(bitReader, 8)\r\n  }\r\n  else {\r\n    color_primaries = 2\r\n    transfer_characteristics = 2\r\n    matrix_coefficients = 2\r\n  }\r\n  let color_range = 0\r\n  let subsampling_x = 0\r\n  let subsampling_y = 0\r\n  let chroma_sample_position = 0\r\n  let separate_uv_delta_q = 0\r\n  if (mono_chrome) {\r\n    color_range =\tav1syntax.f(bitReader, 1)\r\n    subsampling_x = 1\r\n    subsampling_y = 1\r\n    chroma_sample_position = 0\r\n    separate_uv_delta_q = 0\r\n  }\r\n  else if (color_primaries == 1\r\n    && transfer_characteristics == 13\r\n    && matrix_coefficients == 0\r\n  ) {\r\n    color_range = 1\r\n    subsampling_x = 0\r\n    subsampling_y = 0\r\n    separate_uv_delta_q = av1syntax.f(bitReader, 1)\r\n  }\r\n  else {\r\n    color_range =\tav1syntax.f(bitReader, 1)\r\n    if (seq_profile == 0) {\r\n      subsampling_x = 1\r\n      subsampling_y = 1\r\n    }\r\n    else if ( seq_profile == 1 ) {\r\n      subsampling_x = 0\r\n      subsampling_y = 0\r\n    }\r\n    else {\r\n      if (bit_depth == 12) {\r\n        subsampling_x\t= av1syntax.f(bitReader, 1)\r\n        if (subsampling_x) {\r\n          subsampling_y =\tav1syntax.f(bitReader, 1)\r\n        }\r\n        else {\r\n          subsampling_y = 0\r\n        }\r\n      }\r\n      else {\r\n        subsampling_x = 1\r\n        subsampling_y = 0\r\n      }\r\n    }\r\n    if (subsampling_x && subsampling_y) {\r\n      chroma_sample_position = av1syntax.f(bitReader, 2)\r\n    }\r\n    separate_uv_delta_q = av1syntax.f(bitReader, 1)\r\n  }\r\n\r\n  let film_grain_params_present\t= av1syntax.f(bitReader, 1)\r\n\r\n  return {\r\n    width: max_frame_width_minus_1 + 1,\r\n    height: max_frame_height_minus_1 + 1,\r\n    profile: seq_profile,\r\n    level: AV1LevelIdx[seq_level_idx[0]],\r\n    tier: seq_tier[0],\r\n    bitDepth: bit_depth,\r\n    monoChrome: mono_chrome,\r\n    colorRange: color_range,\r\n    colorPrimaries: color_primaries,\r\n    transferCharacteristics: transfer_characteristics,\r\n    matrixCoefficients: matrix_coefficients,\r\n    subsamplingX: subsampling_x,\r\n    subsamplingY: subsampling_y,\r\n    chromaSamplePosition: chroma_sample_position\r\n  }\r\n}\r\n\r\nexport function splitOBU(buffer: Uint8ArrayInterface) {\r\n  const bitReader = new BitReader()\r\n\r\n  bitReader.appendBuffer(buffer)\r\n\r\n  const list: Uint8ArrayInterface[] = []\r\n\r\n  while (bitReader.remainingLength()) {\r\n    const now = bitReader.getPointer()\r\n    // obu_forbidden_bit\r\n    bitReader.readU1()\r\n    const type = bitReader.readU(4)\r\n    const extensionFlag = bitReader.readU1()\r\n    const hasSizeFlag = bitReader.readU1()\r\n    // obu_reserved_1bit\r\n    bitReader.readU1()\r\n\r\n    if (extensionFlag) {\r\n      bitReader.readU(8)\r\n    }\r\n\r\n    const size = hasSizeFlag ? av1syntax.leb128(bitReader) : buffer.length - 1 - extensionFlag\r\n\r\n    const headerSize = bitReader.getPointer() - now\r\n\r\n    list.push(buffer.subarray(now, now + headerSize + size))\r\n\r\n    bitReader.skip(size * 8)\r\n  }\r\n\r\n  return list\r\n}\r\n\r\nexport function generateExtradata(codecpar: pointer<AVCodecParameters>, buffer: Uint8ArrayInterface) {\r\n  const bitWriter = new BitWriter(4)\r\n  // marker\r\n  bitWriter.writeU1(1)\r\n  // version\r\n  bitWriter.writeU(7, 1)\r\n\r\n  const header = splitOBU(buffer).find((buffer) => {\r\n    return ((buffer[0] >>> 3) & 0x0f) === OBUType.SEQUENCE_HEADER\r\n  })\r\n\r\n  if (header) {\r\n    const params = parseSequenceHeader(header)\r\n    bitWriter.writeU(3, params.profile)\r\n    bitWriter.writeU(5, params.level)\r\n    bitWriter.writeU(1, params.tier)\r\n    bitWriter.writeU(1, params.bitDepth > 8 ? 1 : 0)\r\n    bitWriter.writeU(1, params.bitDepth === 12 ? 1 : 0)\r\n    bitWriter.writeU(1, params.monoChrome)\r\n    bitWriter.writeU(1, params.subsamplingX)\r\n    bitWriter.writeU(1, params.subsamplingY)\r\n    bitWriter.writeU(1, params.chromaSamplePosition)\r\n  }\r\n  else {\r\n    const desc = getAVPixelFormatDescriptor(codecpar.format as AVPixelFormat)\r\n    bitWriter.writeU(3, codecpar.profile)\r\n    bitWriter.writeU(5, codecpar.level)\r\n    bitWriter.writeU(1, 0)\r\n    bitWriter.writeU(1, desc.comp[0].depth > 8 ? 1 : 0)\r\n    bitWriter.writeU(1, desc.comp[0].depth === 12 ? 1 : 0)\r\n    bitWriter.writeU(1, 0)\r\n    bitWriter.writeU(1, 1)\r\n    bitWriter.writeU(1, 1)\r\n    bitWriter.writeU(1, 0)\r\n  }\r\n  // padding\r\n  bitWriter.writeU(8, 0)\r\n  bitWriter.padding()\r\n  return bitWriter.getBuffer()\r\n}\r\n","/*\r\n * libmedia h264 util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as array from 'common/util/array'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport BitReader from 'common/io/BitReader'\r\nimport AVStream from '../AVStream'\r\nimport * as logger from 'common/util/logger'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport * as naluUtil from '../util/nalu'\r\nimport { avMalloc } from '../util/mem'\r\nimport * as expgolomb from '../util/expgolomb'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport * as intread from '../util/intread'\r\nimport * as intwrite from '../util/intwrite'\r\nimport { AVPixelFormat } from '../pixfmt'\r\n\r\nexport const H264_MAX_DPB_FRAMES = 16\r\n\r\nexport const NALULengthSizeMinusOne = 3\r\n\r\nexport const enum PictureType {\r\n  I = 1,\r\n  P,\r\n  B,\r\n  SPS,\r\n  PPS,\r\n  SEI\r\n}\r\n\r\nexport const enum H264NaluType {\r\n  kUnspecified = 0,\r\n  kSliceNonIDR,\r\n  kSliceDPA,\r\n  kSliceDPB,\r\n  kSliceDPC,\r\n  kSliceIDR,\r\n  kSliceSEI,\r\n  kSliceSPS,\r\n  kSlicePPS,\r\n  kSliceAUD,\r\n  kEndOfSequence,\r\n  kEndOfStream,\r\n  kFiller,\r\n  kSPSExt,\r\n  kReserved0\r\n}\r\n\r\nexport const enum H264SliceType {\r\n  kSliceNone = -1,\r\n  kSliceP,\r\n  kSliceB,\r\n  kSliceI,\r\n  kSliceSP = 5,\r\n  kSliceSB,\r\n  kSliceSI\r\n}\r\n\r\nexport const enum H264Profile {\r\n  kBaseline = 66,\r\n  kMain = 77,\r\n  kHigh = 100,\r\n  kConstrained = kBaseline,\r\n  kHigh10 = 110,\r\n  kHigh422 = 122,\r\n  kHigh444 = 244\r\n}\r\n\r\nexport const H264Profile2Name: Record<H264Profile, string> = {\r\n  [H264Profile.kBaseline]: 'Constrained Baseline',\r\n  [H264Profile.kMain]: 'Main',\r\n  [H264Profile.kHigh]: 'High',\r\n  [H264Profile.kHigh10]: 'High10',\r\n  [H264Profile.kHigh422]: 'High422',\r\n  [H264Profile.kHigh444]: 'High444'\r\n}\r\n\r\nexport const LevelCapabilities = [\r\n  { level: 10, maxResolution: 25344, maxFrameRate: 15 },\r\n  { level: 11, maxResolution: 25344, maxFrameRate: 30 },\r\n  { level: 12, maxResolution: 101376, maxFrameRate: 30 },\r\n  { level: 13, maxResolution: 101376, maxFrameRate: 30 },\r\n  { level: 20, maxResolution: 101376, maxFrameRate: 30 },\r\n  { level: 21, maxResolution: 202752, maxFrameRate: 30 },\r\n  { level: 22, maxResolution: 414720, maxFrameRate: 30 },\r\n  { level: 30, maxResolution: 414720, maxFrameRate: 30 },\r\n  { level: 31, maxResolution: 921600, maxFrameRate: 30 },\r\n  { level: 32, maxResolution: 1310720, maxFrameRate: 60 },\r\n  { level: 40, maxResolution: 2097152, maxFrameRate: 30 },\r\n  { level: 41, maxResolution: 2097152, maxFrameRate: 60 },\r\n  { level: 42, maxResolution: 2228224, maxFrameRate: 60 },\r\n  { level: 50, maxResolution: 8912896, maxFrameRate: 30 },\r\n  { level: 51, maxResolution: 8912896, maxFrameRate: 60 },\r\n  { level: 52, maxResolution: 8912896, maxFrameRate: 120 },\r\n  { level: 60, maxResolution: 35651584, maxFrameRate: 30 },\r\n  { level: 61, maxResolution: 35651584, maxFrameRate: 60 },\r\n  { level: 62, maxResolution: 35651584, maxFrameRate: 120 }\r\n]\r\n\r\nexport function getLevelByResolution(width: number, height: number, fps: number) {\r\n  const resolution = width * height\r\n  for (const level of LevelCapabilities) {\r\n    if (resolution <= level.maxResolution && fps <= level.maxFrameRate) {\r\n      return level.level\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * avcc 格式的 extradata 转 annexb sps pps\r\n * \r\n * bits    \r\n * - 8   version ( always 0x01 )\r\n * - 8   avc profile ( sps[0][1] )\r\n * - 8   avc compatibility ( sps[0][2] )\r\n * - 8   avc level ( sps[0][3] )\r\n * - 6   reserved ( all bits on )\r\n * - 2   NALULengthSizeMinusOne\r\n * - 3   reserved ( all bits on )\r\n * - 5   number of SPS NALUs (usually 1)\r\n * - repeated once per SPS:\r\n *   - 16         SPS size\r\n *   - variable   SPS NALU data\r\n * - 8 number of PPS NALUs (usually 1)\r\n * - repeated once per PPS:\r\n *   - 16       PPS size\r\n *   - variable PPS NALU data\r\n * \r\n * - ext (profile !== 66 && profile !== 77 && profile !== 88)\r\n *  - 6 reserved ( all bits on )\r\n *  - 2 chroma_format_idc\r\n *  - 5 reserved ( all bits on )\r\n *  - 3 bit_depth_luma_minus8\r\n *  - 5 reserved ( all bits on )\r\n *  - 3 bit_depth_chroma_minus8\r\n *  - 8 number of SPS_EXT NALUs\r\n *    - 16 SPS_EXT size\r\n *    - variable   SPS_EXT NALU data\r\n * \r\n */\r\nexport function extradata2SpsPps(extradata: Uint8ArrayInterface) {\r\n  const bufferReader = new BufferReader(extradata)\r\n  bufferReader.skip(5)\r\n\r\n  const spss: Uint8ArrayInterface[] = []\r\n  const ppss: Uint8ArrayInterface[] = []\r\n  const spsExts: Uint8ArrayInterface[] = []\r\n\r\n  const spsLength = bufferReader.readUint8() & 0x1f\r\n  for (let i = 0; i < spsLength; i++) {\r\n    const length = bufferReader.readUint16()\r\n    spss.push(bufferReader.readBuffer(length))\r\n  }\r\n\r\n  const ppsLength = bufferReader.readUint8()\r\n  for (let i = 0; i < ppsLength; i++) {\r\n    const length = bufferReader.readUint16()\r\n    ppss.push(bufferReader.readBuffer(length))\r\n  }\r\n\r\n  if (bufferReader.remainingSize() > 4) {\r\n    bufferReader.skip(3)\r\n    const spsExtLength = bufferReader.readUint8()\r\n    if (spsExtLength > 0) {\r\n      for (let i = 0; i < spsExtLength; i++) {\r\n        const length = bufferReader.readUint16()\r\n        spsExts.push(bufferReader.readBuffer(length))\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    spss,\r\n    ppss,\r\n    spsExts\r\n  }\r\n}\r\n\r\n/**\r\n * annexb sps pps 转 avcc 格式的 extradata\r\n * \r\n * @param spss \r\n * @param ppss \r\n * @param spsExts \r\n * @returns \r\n */\r\nexport function spsPps2Extradata(spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[], spsExts: Uint8ArrayInterface[] = []) {\r\n\r\n  if (spss.length > 32) {\r\n    logger.warn(`h264 metadata\\'s sps max length is 32, but get ${spss.length}`)\r\n    spss = spss.slice(0, 32)\r\n  }\r\n  if (spss.length > 256) {\r\n    logger.warn(`h264 metadata\\'s pps max length is 256, but get ${spss.length}`)\r\n    spss = spss.slice(0, 256)\r\n  }\r\n\r\n  let length = 7\r\n  length = spss.reduce((prev, sps) => {\r\n    return prev + 2 + sps.length\r\n  }, length)\r\n  length = ppss.reduce((prev, pps) => {\r\n    return prev + 2 + pps.length\r\n  }, length)\r\n\r\n  const sps = spss[0]\r\n\r\n  const params = parseSPS(sps)\r\n\r\n  if (params.profile !== 66 && params.profile !== 77 && params.profile !== 88) {\r\n    length += 4\r\n\r\n    if (spsExts.length) {\r\n      length = spsExts.reduce((prev, ext) => {\r\n        return prev + 2 + ext.length\r\n      }, length)\r\n    }\r\n  }\r\n\r\n  const buffer = new Uint8Array(length)\r\n  const bufferWriter = new BufferWriter(buffer)\r\n\r\n  bufferWriter.writeUint8(0x01)\r\n  bufferWriter.writeUint8(sps[1])\r\n  bufferWriter.writeUint8(sps[2])\r\n  bufferWriter.writeUint8(sps[3])\r\n  bufferWriter.writeUint8(0xfc | NALULengthSizeMinusOne)\r\n\r\n  // sps\r\n  bufferWriter.writeUint8(0xe0 | (spss.length & 0x1f))\r\n  array.each(spss, (sps) => {\r\n    bufferWriter.writeUint16(sps.length)\r\n    bufferWriter.writeBuffer(sps)\r\n  })\r\n\r\n  // pps\r\n  bufferWriter.writeUint8(ppss.length)\r\n  array.each(ppss, (pps) => {\r\n    bufferWriter.writeUint16(pps.length)\r\n    bufferWriter.writeBuffer(pps)\r\n  })\r\n\r\n  if (params.profile !== 66 && params.profile !== 77 && params.profile !== 88) {\r\n    bufferWriter.writeUint8(0xfc | params.chromaFormatIdc)\r\n    bufferWriter.writeUint8(0xf8 | params.bitDepthLumaMinus8)\r\n    bufferWriter.writeUint8(0xf8 | params.bitDepthChromaMinus8)\r\n\r\n    if (spsExts.length) {\r\n      array.each(spsExts, (ext) => {\r\n        bufferWriter.writeUint16(ext.length)\r\n        bufferWriter.writeBuffer(ext)\r\n      })\r\n    }\r\n  }\r\n\r\n  return buffer\r\n}\r\n\r\n/**\r\n * annexb extradata 转 avcc extradata\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n  if (nalus.length > 1) {\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n    const spsExts: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      if (type === H264NaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSPSExt) {\r\n        spsExts.push(nalu)\r\n      }\r\n    })\r\n    if (spss.length && ppss.length) {\r\n      return spsPps2Extradata(spss, ppss, spsExts)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 从 annexb 码流里面生成 annexb extradata\r\n * \r\n * 提取出 sps 和 pps\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function generateAnnexbExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n  if (nalus.length > 1) {\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n    const spsExts: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      if (type === H264NaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSPSExt) {\r\n        spsExts.push(nalu)\r\n      }\r\n    })\r\n    if (spss.length && ppss.length) {\r\n      const nalus = [spss[0], ppss[0]]\r\n      if (spsExts.length) {\r\n        nalus.push(spsExts[0])\r\n      }\r\n      return naluUtil.joinNaluByStartCode(nalus, 0)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * annexb 格式的 NALU 转 avcc NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n */\r\nexport function annexb2Avcc(data: Uint8ArrayInterface, reverseSps: boolean = false) {\r\n\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n  let extradata: Uint8Array\r\n  let key: boolean = false\r\n\r\n  if (nalus.length) {\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n    const spsExts: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      if (type === H264NaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSPSExt) {\r\n        spsExts.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSliceIDR) {\r\n        key = true\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      extradata = spsPps2Extradata(spss, ppss, spsExts)\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = nalu[0] & 0x1f\r\n        return reverseSps\r\n          ? type !== H264NaluType.kSliceAUD\r\n          : (type !== H264NaluType.kSliceAUD\r\n            && type !== H264NaluType.kSlicePPS\r\n            && type !== H264NaluType.kSliceSPS\r\n            && type !== H264NaluType.kSPSExt)\r\n      })\r\n    }\r\n    else {\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = nalu[0] & 0x1f\r\n        return type !== H264NaluType.kSliceAUD\r\n      })\r\n    }\r\n  }\r\n\r\n  const length = nalus.reduce((prev, nalu) => {\r\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length)\r\n  const buffer = mapUint8Array(bufferPointer, length)\r\n\r\n  naluUtil.joinNaluByLength(nalus, NALULengthSizeMinusOne, buffer)\r\n\r\n  return {\r\n    bufferPointer,\r\n    length,\r\n    key,\r\n    extradata\r\n  }\r\n}\r\n\r\n/**\r\n * 需要保证 data 是 safe 的\r\n * \r\n * @param spss \r\n * @param ppss \r\n * @param spsExts \r\n * @param seis \r\n * @param others  \r\n * @returns \r\n */\r\nexport function nalus2Annexb(\r\n  spss: Uint8ArrayInterface[],\r\n  ppss: Uint8ArrayInterface[],\r\n  spsExts: Uint8ArrayInterface[],\r\n  seis: Uint8ArrayInterface[],\r\n  others: Uint8ArrayInterface[]\r\n) {\r\n  const lengths = [\r\n    naluUtil.joinNaluByStartCodeLength(seis, 0),\r\n    naluUtil.joinNaluByStartCodeLength(spss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(ppss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(spsExts, 0),\r\n    naluUtil.joinNaluByStartCodeLength(others, 2)\r\n  ]\r\n\r\n  let length = lengths.reduce((prev, length) => {\r\n    return prev + length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length + 6)\r\n\r\n  let offset = bufferPointer\r\n  // AUD\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 1)\r\n  intwrite.w8(offset++, H264NaluType.kSliceAUD)\r\n  intwrite.w8(offset++, 0xf0)\r\n\r\n  if (seis.length) {\r\n    naluUtil.joinNaluByStartCode(seis, 0, mapUint8Array(offset, lengths[0]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[0])\r\n  }\r\n  if (spss.length) {\r\n    naluUtil.joinNaluByStartCode(spss, 0, mapUint8Array(offset, lengths[1]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[1])\r\n  }\r\n  if (ppss.length) {\r\n    naluUtil.joinNaluByStartCode(ppss, 0, mapUint8Array(offset, lengths[2]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[2])\r\n  }\r\n  if (spsExts.length) {\r\n    naluUtil.joinNaluByStartCode(spsExts, 0, mapUint8Array(offset, lengths[3]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[3])\r\n  }\r\n  if (others.length) {\r\n    naluUtil.joinNaluByStartCode(others, 2, mapUint8Array(offset, lengths[4]))\r\n  }\r\n\r\n  return {\r\n    bufferPointer,\r\n    length: length + 6,\r\n  }\r\n}\r\n\r\n/**\r\n * annexb 添加 sps pps\r\n * \r\n * @param data \r\n * @param extradata \r\n */\r\nexport function annexbAddExtradata(data: Uint8ArrayInterface, extradata: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data).concat(naluUtil.splitNaluByStartCode(extradata))\r\n  if (nalus.length) {\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n    const spsExts: Uint8ArrayInterface[] = []\r\n    const seis: Uint8ArrayInterface[] = []\r\n    const others: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      if (type === H264NaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSPSExt) {\r\n        spsExts.push(nalu)\r\n      }\r\n      else if (type === H264NaluType.kSliceSEI) {\r\n        seis.push(nalu)\r\n      }\r\n      else if (type !== H264NaluType.kSliceAUD) {\r\n        others.push(nalu)\r\n      }\r\n    })\r\n    return nalus2Annexb(spss, ppss, spsExts, seis, others)\r\n  }\r\n}\r\n\r\n/**\r\n * avcc 格式的 NALU 转 annexb NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n */\r\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\r\n  const naluLengthSizeMinusOne = extradata ? (extradata[4] & 0x03) : NALULengthSizeMinusOne\r\n  let spss: Uint8ArrayInterface[] = []\r\n  let ppss: Uint8ArrayInterface[] = []\r\n  let spsExts: Uint8ArrayInterface[] = []\r\n  let key = false\r\n\r\n  if (extradata) {\r\n    const result = extradata2SpsPps(extradata)\r\n    spss = result.spss\r\n    ppss = result.ppss\r\n    spsExts = result.spsExts\r\n    key = true\r\n  }\r\n\r\n  const others: Uint8ArrayInterface[] = []\r\n  const seis: Uint8ArrayInterface[] = []\r\n  const nalus = naluUtil.splitNaluByLength(data, naluLengthSizeMinusOne)\r\n  nalus.forEach((nalu) => {\r\n    const naluType = nalu[0] & 0x1f\r\n    if (naluType === H264NaluType.kSliceSEI) {\r\n      seis.push(nalu)\r\n    }\r\n    else if (naluType !== H264NaluType.kSliceAUD) {\r\n      others.push(nalu)\r\n    }\r\n    if (naluType === H264NaluType.kSliceIDR) {\r\n      key = true\r\n    }\r\n  })\r\n\r\n  return {\r\n    ...nalus2Annexb(spss, ppss, spsExts, seis, others),\r\n    key\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n\r\n  let sps: Uint8ArrayInterface\r\n  if (extradata && naluUtil.isAnnexb(extradata)) {\r\n    array.each(naluUtil.splitNaluByStartCode(extradata), (nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      if (type === H264NaluType.kSliceSPS) {\r\n        sps = nalu\r\n        return false\r\n      }\r\n    })\r\n  }\r\n  else if (extradata && extradata.length >= 6) {\r\n    stream.metadata.naluLengthSizeMinusOne = (extradata[4] & 0x03)\r\n    const { spss } = extradata2SpsPps(extradata)\r\n    if (spss.length) {\r\n      sps = spss[0]\r\n    }\r\n  }\r\n  if (sps) {\r\n    const { profile, level, width, height, videoDelay, chromaFormatIdc, bitDepthLumaMinus8 } = parseSPS(sps)\r\n    stream.codecpar.profile = profile\r\n    stream.codecpar.level = level\r\n    stream.codecpar.width = width\r\n    stream.codecpar.height = height\r\n    stream.codecpar.videoDelay = videoDelay\r\n    switch (bitDepthLumaMinus8) {\r\n      case 0:\r\n        if (chromaFormatIdc === 3) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P\r\n        }\r\n        else if (chromaFormatIdc === 2) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P\r\n        }\r\n        else {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P\r\n        }\r\n        break\r\n      case 1:\r\n        if (chromaFormatIdc === 3) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P9LE\r\n        }\r\n        else if (chromaFormatIdc === 2) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P9LE\r\n        }\r\n        else {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P9LE\r\n        }\r\n        break\r\n      case 2:\r\n        if (chromaFormatIdc === 3) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P10LE\r\n        }\r\n        else if (chromaFormatIdc === 2) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P10LE\r\n        }\r\n        else {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P10LE\r\n        }\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport function isIDR(avpacket: pointer<AVPacket>, naluLengthSize: int32 = 4) {\r\n  if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB) {\r\n    let nalus = naluUtil.splitNaluByStartCode(mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size)))\r\n    return nalus.some((nalu) => {\r\n      const type = nalu[0] & 0x1f\r\n      return type === H264NaluType.kSliceIDR\r\n    })\r\n  }\r\n  else {\r\n    const size = avpacket.size\r\n    let i = 0\r\n    while (i < (size - naluLengthSize)) {\r\n      const type = intread.r8(avpacket.data + (i + naluLengthSize)) & 0x1f\r\n      if (type === H264NaluType.kSliceIDR) {\r\n        return true\r\n      }\r\n      if (naluLengthSize === 4) {\r\n        i += intread.rb32(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 3) {\r\n        i += intread.rb24(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 2) {\r\n        i += intread.rb16(avpacket.data + i)\r\n      }\r\n      else {\r\n        i += intread.r8(avpacket.data + i)\r\n      }\r\n      i += naluLengthSize\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport interface H264SPS {\r\n  profile: number\r\n  level: number\r\n  width: number\r\n  height: number\r\n  chromaFormatIdc: number\r\n  bitDepthLumaMinus8: number\r\n  bitDepthChromaMinus8: number\r\n  frameMbsOnlyFlag: number\r\n  picOrderCntType: number\r\n  log2MaxPicOrderCntLsbMinus4: number\r\n  deltaPicOrderAlwaysZeroFlag: number\r\n  log2MaxFrameNumMinus4: number\r\n  videoDelay: number\r\n}\r\n\r\nexport function parseSPS(sps: Uint8ArrayInterface): H264SPS {\r\n\r\n  if (!sps || sps.length < 3) {\r\n    return\r\n  }\r\n\r\n  let offset = 0\r\n  if (sps[0] === 0x00\r\n    && sps[1] === 0x00\r\n    && sps[2] === 0x00\r\n    && sps[3] === 0x01\r\n  ) {\r\n    offset = 4\r\n  }\r\n\r\n  const buffer = naluUtil.naluUnescape(sps.subarray(offset))\r\n  const bitReader = new BitReader(buffer.length)\r\n  bitReader.appendBuffer(buffer)\r\n\r\n  // forbidden_zero_bit\r\n  bitReader.readU1()\r\n  // nal_ref_idc\r\n  bitReader.readU(2)\r\n  // nal_unit_type\r\n  bitReader.readU(5)\r\n\r\n  const profile = bitReader.readU(8)\r\n\r\n  // constraint_set0_flag\r\n  bitReader.readU1()\r\n  // constraint_set1_flag\r\n  bitReader.readU1()\r\n  // constraint_set2_flag\r\n  bitReader.readU1()\r\n  // constraint_set3_flag\r\n  bitReader.readU1()\r\n  // constraint_set4_flag\r\n  bitReader.readU1()\r\n  // constraint_set4_flag\r\n  bitReader.readU1()\r\n  // reserved_zero_2bits\r\n  bitReader.readU(2)\r\n\r\n  const level = bitReader.readU(8)\r\n\r\n  // seq_parameter_set_id\r\n  expgolomb.readUE(bitReader)\r\n\r\n  // 摄像机出图大部分格式是 4:2:0\r\n  let chromaFormatIdc = 1\r\n  let bitDepthLumaMinus8 = 0\r\n  let bitDepthChromaMinus8 = 0\r\n\r\n  if (profile == 100 || profile == 110 || profile == 122\r\n    || profile == 244 || profile == 44 || profile == 83\r\n    || profile == 86 || profile == 118 || profile == 128\r\n    || profile == 138 || profile == 139 || profile == 134 || profile == 135\r\n  ) {\r\n    chromaFormatIdc = expgolomb.readUE(bitReader)\r\n    if (chromaFormatIdc === 3) {\r\n      // separate_colour_plane_flag\r\n      bitReader.readU1()\r\n    }\r\n    // bit_depth_luma_minus8\r\n    bitDepthLumaMinus8 = expgolomb.readUE(bitReader)\r\n    // bit_depth_chroma_minus8\r\n    bitDepthChromaMinus8 = expgolomb.readUE(bitReader)\r\n    // qpprime_y_zero_transform_bypass_flag\r\n    bitReader.readU1()\r\n\r\n    function skipScalingList(sizeOfScalingList: number) {\r\n      let lastScale = 8\r\n      let nextScale = 8\r\n      let deltaScale: number\r\n      for (let j = 0; j < sizeOfScalingList; j++) {\r\n        if (nextScale !== 0) {\r\n          deltaScale = expgolomb.readSE(bitReader)\r\n          nextScale = (lastScale + deltaScale + 256) % 256\r\n        }\r\n        lastScale = (nextScale === 0) ? lastScale : nextScale\r\n      }\r\n    }\r\n    let seqScalingMatrixPresentFlag = bitReader.readU1()\r\n    if (seqScalingMatrixPresentFlag) {\r\n      const seqScalingListPresentFlag = new Array(8)\r\n      for (let i = 0; i < ((chromaFormatIdc != 3) ? 8 : 12); i++) {\r\n        seqScalingListPresentFlag[i] = bitReader.readU1()\r\n        if (seqScalingListPresentFlag[i]) {\r\n          if (i < 6) {\r\n            skipScalingList(16)\r\n          }\r\n          else {\r\n            skipScalingList(64)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // log2_max_frame_num_minus4\r\n  const log2MaxFrameNumMinus4 = expgolomb.readUE(bitReader)\r\n\r\n  const picOrderCntType = expgolomb.readUE(bitReader)\r\n  let log2MaxPicOrderCntLsbMinus4 = 0\r\n  let deltaPicOrderAlwaysZeroFlag = 0\r\n\r\n  if (picOrderCntType === 0) {\r\n    // log2_max_pic_order_cnt_lsb_minus4\r\n    log2MaxPicOrderCntLsbMinus4 = expgolomb.readUE(bitReader)\r\n  }\r\n  else if (picOrderCntType === 1) {\r\n    // delta_pic_order_always_zero_flag\r\n    deltaPicOrderAlwaysZeroFlag = bitReader.readU1()\r\n\r\n    // offset_for_non_ref_pic\r\n    expgolomb.readSE(bitReader)\r\n    // offset_for_top_to_bottom_field\r\n    expgolomb.readSE(bitReader)\r\n\r\n    const numRefFramesInPicOrderCntCycle = expgolomb.readUE(bitReader)\r\n    for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\r\n      expgolomb.readSE(bitReader)\r\n    }\r\n  }\r\n\r\n  // max_num_ref_frames\r\n  expgolomb.readUE(bitReader)\r\n  // gaps_in_frame_num_value_allowed_flag\r\n  bitReader.readU1()\r\n\r\n  const picWidthInMbsMinus1 = expgolomb.readUE(bitReader)\r\n  const picHeightInMapUnitsMinus1 = expgolomb.readUE(bitReader)\r\n  const frameMbsOnlyFlag = bitReader.readU1()\r\n\r\n  let width = (picWidthInMbsMinus1 + 1) * 16\r\n  let height = (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16\r\n\r\n  if (!frameMbsOnlyFlag) {\r\n    // mb_adaptive_frame_field_flag\r\n    bitReader.readU1()\r\n  }\r\n\r\n  // direct_8x8_inference_flag\r\n  bitReader.readU1()\r\n\r\n  const frameCroppingFlag = bitReader.readU1()\r\n  if (frameCroppingFlag) {\r\n    const frameCropLeftOffset = expgolomb.readUE(bitReader)\r\n    const frameCropRightOffset = expgolomb.readUE(bitReader)\r\n    const frameCropTopOffset = expgolomb.readUE(bitReader)\r\n    const frameCropBottomOffset = expgolomb.readUE(bitReader)\r\n\r\n    let cropUnitX = 1\r\n    let cropUnitY = 2 - frameCroppingFlag\r\n\r\n    if (chromaFormatIdc === 1) {\r\n      cropUnitX = 2\r\n      cropUnitY = 2 * (2 - frameCroppingFlag)\r\n    }\r\n    else if (frameCroppingFlag === 2) {\r\n      cropUnitX = 2\r\n      cropUnitY = 2 - frameCroppingFlag\r\n    }\r\n\r\n    width -= cropUnitX * (frameCropLeftOffset + frameCropRightOffset)\r\n    height -= cropUnitY * (frameCropTopOffset + frameCropBottomOffset)\r\n\r\n  }\r\n\r\n  let videoDelay = 0\r\n\r\n  const vuiParametersPresentFlag = bitReader.readU1()\r\n  if (vuiParametersPresentFlag) {\r\n    // aspect_ratio_info_present_flag\r\n    let flag = bitReader.readU1()\r\n    if (flag) {\r\n      const aspectRatioIdc = bitReader.readU(8)\r\n      if (aspectRatioIdc >= 17) {\r\n        // sar.num\r\n        bitReader.readU(16)\r\n        // sar.num\r\n        bitReader.readU(16)\r\n      }\r\n    }\r\n    // overscan_info_present_flag\r\n    flag = bitReader.readU1()\r\n    if (flag) {\r\n      // overscan_appropriate_flag\r\n      bitReader.readU1()\r\n    }\r\n    // video_signal_type_present_flag\r\n    flag = bitReader.readU1()\r\n    if (flag) {\r\n      // video_format\r\n      bitReader.readU(3)\r\n      // video_full_range_flag\r\n      bitReader.readU1()\r\n      // colour_description_present_flag\r\n      flag = bitReader.readU1()\r\n      if (flag) {\r\n        // colour_primaries\r\n        bitReader.readU(8)\r\n        // transfer_characteristics\r\n        bitReader.readU(8)\r\n        // matrix_coeffs\r\n        bitReader.readU(8)\r\n      }\r\n    }\r\n    // chroma_loc_info_present_flag\r\n    flag = bitReader.readU1()\r\n    if (flag) {\r\n      // chroma_sample_loc_type_top_field\r\n      expgolomb.readUE(bitReader)\r\n      // chroma_sample_loc_type_bottom_field\r\n      expgolomb.readUE(bitReader)\r\n    }\r\n    // timing_info_present_flag\r\n    flag = bitReader.readU1()\r\n    if (flag) {\r\n      // num_units_in_tick\r\n      bitReader.readU(32)\r\n      // time_scale\r\n      bitReader.readU(32)\r\n      // fixed_frame_rate_flag\r\n      bitReader.readU1()\r\n    }\r\n    function parseHrdParameters() {\r\n      const cpbCount = expgolomb.readUE(bitReader) + 1\r\n      // bit_rate_scale\r\n      bitReader.readU(4)\r\n      // cpb_size_scale\r\n      bitReader.readU(4)\r\n      for (let i = 0; i < cpbCount; i++) {\r\n        // bit_rate_value\r\n        expgolomb.readUE(bitReader)\r\n        // cpb_size_value\r\n        expgolomb.readUE(bitReader)\r\n        // cpr_flag\r\n        bitReader.readU1()\r\n      }\r\n      // initial_cpb_removal_delay_length\r\n      bitReader.readU(5)\r\n      // cpb_removal_delay_length\r\n      bitReader.readU(5)\r\n      // dpb_output_delay_length\r\n      bitReader.readU(5)\r\n      // time_offset_length\r\n      bitReader.readU(5)\r\n    }\r\n    // nal_hrd_parameters_present_flag\r\n    let flag1 = bitReader.readU1()\r\n    if (flag1) {\r\n      parseHrdParameters()\r\n    }\r\n    // vcl_hrd_parameters_present_flag\r\n    let flag2 = bitReader.readU1()\r\n    if (flag2) {\r\n      parseHrdParameters()\r\n    }\r\n    if (flag1 || flag2) {\r\n      // low_delay_hrd_flag\r\n      bitReader.readU1()\r\n    }\r\n    // pic_struct_present_flag\r\n    bitReader.readU1()\r\n    // bitstream_restriction_flag\r\n    flag = bitReader.readU1()\r\n    if (flag) {\r\n      // motion_vectors_over_pic_boundaries_flag\r\n      bitReader.readU1()\r\n      // max_bytes_per_pic_denom\r\n      expgolomb.readUE(bitReader)\r\n      // max_bits_per_mb_denom\r\n      expgolomb.readUE(bitReader)\r\n      // log2_max_mv_length_horizontal\r\n      expgolomb.readUE(bitReader)\r\n      // log2_max_mv_length_vertical\r\n      expgolomb.readUE(bitReader)\r\n\r\n      videoDelay = Math.min(expgolomb.readUE(bitReader), H264_MAX_DPB_FRAMES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    width,\r\n    height,\r\n    chromaFormatIdc,\r\n    bitDepthLumaMinus8,\r\n    bitDepthChromaMinus8,\r\n    frameMbsOnlyFlag,\r\n    picOrderCntType,\r\n    log2MaxPicOrderCntLsbMinus4,\r\n    deltaPicOrderAlwaysZeroFlag,\r\n    log2MaxFrameNumMinus4,\r\n    videoDelay\r\n  }\r\n}\r\n","/*\r\n * libmedia hevc util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as array from 'common/util/array'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport BitReader from 'common/io/BitReader'\r\nimport AVStream from '../AVStream'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport * as naluUtil from '../util/nalu'\r\nimport { avMalloc } from '../util/mem'\r\nimport * as expgolomb from '../util/expgolomb'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport * as intread from '../util/intread'\r\nimport * as intwrite from '../util/intwrite'\r\nimport { AVPixelFormat } from '../pixfmt'\r\n\r\nexport const HEVC_MAX_DPB_FRAMES = 16\r\n\r\nexport const enum HEVCProfile {\r\n  Main = 1,\r\n  Main10,\r\n  MainStillPicture,\r\n  Main444\r\n}\r\n\r\nexport const HEVCProfile2Name: Record<HEVCProfile, string> = {\r\n  [HEVCProfile.Main]: 'Main',\r\n  [HEVCProfile.Main10]: 'Main10',\r\n  [HEVCProfile.MainStillPicture]: 'MainStillPicture',\r\n  [HEVCProfile.Main444]: 'Main444'\r\n}\r\n\r\nexport const LevelCapabilities = [\r\n  { level: 10, maxLumaSamplesPerSecond: 552960, maxLumaPictureSize: 36864, maxBitRate: { main: 128, main10: 150 } },\r\n  { level: 20, maxLumaSamplesPerSecond: 3686400, maxLumaPictureSize: 122880, maxBitRate: { main: 1500, main10: 1875 } },\r\n  { level: 21, maxLumaSamplesPerSecond: 7372800, maxLumaPictureSize: 245760, maxBitRate: { main: 3000, main10: 3750 } },\r\n  { level: 30, maxLumaSamplesPerSecond: 16588800, maxLumaPictureSize: 552960, maxBitRate: { main: 6000, main10: 7500 } },\r\n  { level: 31, maxLumaSamplesPerSecond: 33177600, maxLumaPictureSize: 983040, maxBitRate: { main: 10000, main10: 12500 } },\r\n  { level: 40, maxLumaSamplesPerSecond: 66846720, maxLumaPictureSize: 2228224, maxBitRate: { main: 12000, main10: 15000 } },\r\n  { level: 41, maxLumaSamplesPerSecond: 133693440, maxLumaPictureSize: 2228224, maxBitRate: { main: 20000, main10: 25000 } },\r\n  { level: 50, maxLumaSamplesPerSecond: 267386880, maxLumaPictureSize: 8912896, maxBitRate: { main: 25000, main10: 40000 } },\r\n  { level: 51, maxLumaSamplesPerSecond: 534773760, maxLumaPictureSize: 8912896, maxBitRate: { main: 40000, main10: 60000 } },\r\n  { level: 52, maxLumaSamplesPerSecond: 1069547520, maxLumaPictureSize: 35651584, maxBitRate: { main: 60000, main10: 100000 } },\r\n  { level: 60, maxLumaSamplesPerSecond: 1069547520, maxLumaPictureSize: 35651584, maxBitRate: { main: 60000, main10: 100000 } },\r\n  { level: 61, maxLumaSamplesPerSecond: 2139095040, maxLumaPictureSize: 89128960, maxBitRate: { main: 120000, main10: 240000 } },\r\n  { level: 62, maxLumaSamplesPerSecond: 4278190080, maxLumaPictureSize: 356515840, maxBitRate: { main: 240000, main10: 480000 } }\r\n]\r\n\r\nexport function getLevelByResolution(profile: number, width: number, height: number, fps: number, bitrate: number) {\r\n\r\n  bitrate /= 1000\r\n\r\n  const selectedProfile = profile === HEVCProfile.Main ? 'main' : 'main10'\r\n  const lumaSamplesPerSecond = width * height * fps\r\n  for (const level of LevelCapabilities) {\r\n    if (lumaSamplesPerSecond <= level.maxLumaSamplesPerSecond && width * height <= level.maxLumaPictureSize && bitrate <= level.maxBitRate[selectedProfile]) {\r\n      return level.level\r\n    }\r\n  }\r\n}\r\n\r\nconst NALULengthSizeMinusOne = 3\r\n\r\nexport const enum HEVCNaluType {\r\n  kSliceTRAIL_N = 0,\r\n  kSliceTRAIL_R = 1,\r\n  kSliceTSA_N = 2,\r\n  kSliceTSA_R = 3,\r\n  kSliceSTSA_N = 4,\r\n  kSliceSTSA_R = 5,\r\n  kSliceRADL_N = 6,\r\n  kSliceRADL_R = 7,\r\n  kSliceRASL_N = 8,\r\n  kSliceRASL_R = 9,\r\n  kSliceBLA_W_LP = 16,\r\n  kSliceBLA_W_RADL = 17,\r\n  kSliceBLA_N_LP = 18,\r\n  kSliceIDR_W_RADL = 19,\r\n  kSliceIDR_N_LP = 20,\r\n  kSliceCRA_NUT = 21,\r\n  kSliceVPS = 32,\r\n  kSliceSPS = 33,\r\n  kSlicePPS = 34,\r\n  kSliceAUD = 35,\r\n  kSliceEOS_NUT = 36,\r\n  kSliceEOB_NUT = 37,\r\n  kSliceFD_NUT = 38,\r\n  kSliceSEI_PREFIX = 39,\r\n  kSliceSEI_SUFFIX = 40\r\n}\r\n\r\n\r\nexport const enum HEVCSliceType {\r\n  kSliceNone = -1,\r\n  kSliceB = 0,\r\n  kSliceP = 1,\r\n  kSliceI = 2\r\n}\r\n\r\n/**\r\n * \r\n * avcc 格式的 extradata 转 annexb vps sps pps\r\n * \r\n * bits    \r\n * - 8   configurationVersion( 固定   1)\r\n * - 2   general_profile_space\r\n * - 1   general_tier_flag\r\n * - 5   general_profile_idc\r\n * - 32  general_profile_compatibility_flags\r\n * - 48  general_constraint_indicator_flags (6 个 字节）\r\n * - 8   general_level_idc\r\n * - 4   reserved1 (1111)\r\n * - 4   min_spatial_segmentation_idc_L\r\n * - 8   min_spatial_segmentation_idc_H\r\n * - 6   reserved2 (111111)\r\n * - 2   parallelismType\r\n * - 6   reserved3 (111111)\r\n * - 2   chromaFormat\r\n * - 5   reserved4 (11111)\r\n * - 3   bitDepthLumaMinus8\r\n * - 5   reserved5(11111)\r\n * - 3   bitDepthChromaMinus8\r\n * - 16  avgFrameRate\r\n * - 2   constantFrameRate\r\n * - 3   numTemporalLayers\r\n * - 1   temporalIdNested\r\n * - 2   lengthSizeMinusOne\r\n * - 8   numOfArrays\r\n * - repeated of array (vps/sps/pps)\r\n * - 1   array_completeness\r\n * - 1   reserved (0)\r\n * - 6   NAL_unit_type\r\n * - 16  numNalus\r\n * - repeated once per NAL\r\n * - 16  nalUnitLength\r\n * - N   NALU data\r\n * \r\n */\r\nexport function extradata2VpsSpsPps(extradata: Uint8ArrayInterface) {\r\n  const bufferReader = new BufferReader(extradata, true)\r\n  bufferReader.skip(22)\r\n\r\n  let vpss: Uint8ArrayInterface[] = []\r\n  let spss: Uint8ArrayInterface[] = []\r\n  let ppss: Uint8ArrayInterface[] = []\r\n\r\n  const arrayLen = bufferReader.readUint8()\r\n\r\n  for (let i = 0; i < arrayLen; i++) {\r\n    const naluType = bufferReader.readUint8() & 0x3f\r\n    const count = bufferReader.readUint16()\r\n    const list = []\r\n\r\n    for (let j = 0; j < count; j++) {\r\n      const len = bufferReader.readUint16()\r\n      list.push(bufferReader.readBuffer(len))\r\n    }\r\n\r\n    if (naluType === HEVCNaluType.kSliceVPS) {\r\n      vpss = list\r\n    }\r\n    else if (naluType === HEVCNaluType.kSliceSPS) {\r\n      spss = list\r\n    }\r\n    else if (naluType === HEVCNaluType.kSlicePPS) {\r\n      ppss = list\r\n    }\r\n  }\r\n\r\n  return {\r\n    vpss,\r\n    spss,\r\n    ppss\r\n  }\r\n}\r\n\r\n/**\r\n * annexb vps sps pps 转 avcc 格式的 extradata\r\n * \r\n * @param vpss \r\n * @param spss \r\n * @param ppss \r\n * @returns \r\n */\r\nexport function vpsSpsPps2Extradata(vpss: Uint8ArrayInterface[], spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[]) {\r\n\r\n  const sps = spss[0]\r\n\r\n  let length = 23\r\n\r\n\r\n  if (vpss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = vpss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  if (spss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = spss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  if (ppss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = ppss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  const buffer = new Uint8Array(length)\r\n  const bufferWriter = new BufferWriter(buffer, true)\r\n  const spsData = parseSPS(sps)\r\n\r\n  bufferWriter.writeUint8(0x01)\r\n  bufferWriter.writeUint8(sps[1])\r\n  bufferWriter.writeUint8(sps[2])\r\n  bufferWriter.writeUint8(sps[3])\r\n  bufferWriter.writeUint8(sps[4])\r\n  bufferWriter.writeUint8(sps[5])\r\n\r\n  // general_constraint_indicator_flags\r\n  bufferWriter.writeUint8(sps[6])\r\n  bufferWriter.writeUint8(sps[7])\r\n  bufferWriter.writeUint8(sps[8])\r\n  bufferWriter.writeUint8(sps[9])\r\n  bufferWriter.writeUint8(sps[10])\r\n  bufferWriter.writeUint8(sps[11])\r\n\r\n  bufferWriter.writeUint8(spsData.level)\r\n\r\n  // min_spatial_segmentation_idc\r\n  bufferWriter.writeUint8((0xff << 2) | 0)\r\n  bufferWriter.writeUint8(0)\r\n\r\n  // parallelismType\r\n  bufferWriter.writeUint8((0xff << 6) | 0)\r\n\r\n  // chromaFormat\r\n  bufferWriter.writeUint8((0xff << 6) | spsData.chroma_format_idc)\r\n\r\n  // bitDepthLumaMinus8\r\n  bufferWriter.writeUint8((0xff << 5) | spsData.bit_depth_luma_minus8)\r\n\r\n  // bitDepthChromaMinus8\r\n  bufferWriter.writeUint8((0xff << 5) | spsData.bit_depth_chroma_minus8)\r\n\r\n  // avgFrameRate\r\n  bufferWriter.writeUint16(0)\r\n\r\n  // constantFrameRate numTemporalLayers temporalIdNested lengthSizeMinusOne\r\n  bufferWriter.writeUint8((0 << 6) | (1 << 3) | ((sps[0] & 0x01) << 2) | NALULengthSizeMinusOne)\r\n\r\n  // numOfArrays\r\n  let numOfArrays = 0\r\n  if (vpss.length) {\r\n    numOfArrays++\r\n  }\r\n  if (spss.length) {\r\n    numOfArrays++\r\n  }\r\n  if (ppss.length) {\r\n    numOfArrays++\r\n  }\r\n  bufferWriter.writeUint8(numOfArrays)\r\n\r\n  // vps\r\n  if (vpss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSliceVPS)\r\n    bufferWriter.writeUint16(vpss.length)\r\n    array.each(vpss, (vps) => {\r\n      bufferWriter.writeUint16(vps.length)\r\n      bufferWriter.writeBuffer(vps)\r\n    })\r\n  }\r\n\r\n  // sps\r\n  if (spss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSliceSPS)\r\n    bufferWriter.writeUint16(spss.length)\r\n    array.each(spss, (sps) => {\r\n      bufferWriter.writeUint16(sps.length)\r\n      bufferWriter.writeBuffer(sps)\r\n    })\r\n  }\r\n\r\n  // pps\r\n  if (ppss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSlicePPS)\r\n    bufferWriter.writeUint16(ppss.length)\r\n    array.each(ppss, (pps) => {\r\n      bufferWriter.writeUint16(pps.length)\r\n      bufferWriter.writeBuffer(pps)\r\n    })\r\n  }\r\n\r\n  return buffer\r\n}\r\n\r\n/**\r\n * annexb extradata 转 avcc extradata\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length >= 2) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceVPS) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      return vpsSpsPps2Extradata(vpss, spss, ppss)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 从 annexb 码流里面生成 annexb extradata\r\n * \r\n * 提取出 vps、 sps 和 pps\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function generateAnnexbExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length >= 2) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceVPS) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      const nalus = [spss[0], ppss[0]]\r\n      if (vpss.length) {\r\n        nalus.unshift(vpss[0])\r\n      }\r\n      return naluUtil.joinNaluByStartCode(nalus, 0)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * annexb 格式的 NALU 转 avcc NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n */\r\nexport function annexb2Avcc(data: Uint8ArrayInterface, reverseSps: boolean = false) {\r\n\r\n  let extradata: Uint8Array\r\n  let key: boolean = false\r\n\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceVPS) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      if (type === HEVCNaluType.kSliceIDR_W_RADL\r\n        || type === HEVCNaluType.kSliceIDR_N_LP\r\n        || type === HEVCNaluType.kSliceCRA_NUT\r\n      ) {\r\n        key = true\r\n      }\r\n    })\r\n    if (spss.length && ppss.length) {\r\n      extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = (nalu[0] >>> 1) & 0x3f\r\n        return reverseSps\r\n          ? type !== HEVCNaluType.kSliceAUD\r\n          : (type !== HEVCNaluType.kSliceVPS\r\n            && type !== HEVCNaluType.kSliceSPS\r\n            && type !== HEVCNaluType.kSlicePPS\r\n            && type !== HEVCNaluType.kSliceAUD)\r\n      })\r\n    }\r\n    else {\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = (nalu[0] >>> 1) & 0x3f\r\n        return type !== HEVCNaluType.kSliceAUD\r\n      })\r\n    }\r\n  }\r\n\r\n  const length = nalus.reduce((prev, nalu) => {\r\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length)\r\n  const buffer = mapUint8Array(bufferPointer, length)\r\n\r\n  naluUtil.joinNaluByLength(nalus, NALULengthSizeMinusOne, buffer)\r\n\r\n  return {\r\n    bufferPointer,\r\n    length,\r\n    extradata,\r\n    key\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n * @param vpss \r\n * @param spss \r\n * @param ppss \r\n * @param nalus \r\n * @returns \r\n */\r\nexport function nalus2Annexb(\r\n  vpss: Uint8ArrayInterface[],\r\n  spss: Uint8ArrayInterface[],\r\n  ppss: Uint8ArrayInterface[],\r\n  nalus: Uint8ArrayInterface[]\r\n) {\r\n  const lengths = [\r\n    naluUtil.joinNaluByStartCodeLength(vpss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(spss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(ppss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(nalus, 2)\r\n  ]\r\n\r\n  let length = lengths.reduce((prev, length) => {\r\n    return prev + length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length + 7)\r\n  let offset = bufferPointer\r\n\r\n  // AUD\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 1)\r\n  intwrite.w8(offset++, HEVCNaluType.kSliceAUD << 1)\r\n  intwrite.w8(offset++, 0x01)\r\n  intwrite.w8(offset++, 0x50)\r\n\r\n  if (vpss.length) {\r\n    naluUtil.joinNaluByStartCode(vpss, 0, mapUint8Array(offset, lengths[0]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[0])\r\n  }\r\n  if (spss.length) {\r\n    naluUtil.joinNaluByStartCode(spss, 0, mapUint8Array(offset, lengths[1]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[1])\r\n  }\r\n  if (ppss.length) {\r\n    naluUtil.joinNaluByStartCode(ppss, 0, mapUint8Array(offset, lengths[2]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[2])\r\n  }\r\n  if (nalus.length) {\r\n    naluUtil.joinNaluByStartCode(nalus, 2, mapUint8Array(offset, lengths[3]))\r\n  }\r\n\r\n  return {\r\n    bufferPointer,\r\n    length: length + 7,\r\n  }\r\n}\r\n\r\n/**\r\n * annexb 添加 sps pps\r\n * \r\n * @param data \r\n * @param extradata \r\n */\r\nexport function annexbAddExtradata(data: Uint8ArrayInterface, extradata: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data).concat(naluUtil.splitNaluByStartCode(extradata))\r\n  if (nalus.length) {\r\n    let vpss: Uint8ArrayInterface[] = []\r\n    let spss: Uint8ArrayInterface[] = []\r\n    let ppss: Uint8ArrayInterface[] = []\r\n    let others: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceVPS) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSliceSPS) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === HEVCNaluType.kSlicePPS) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type !== HEVCNaluType.kSliceAUD) {\r\n        others.push(nalu)\r\n      }\r\n    })\r\n    return nalus2Annexb(vpss, spss, ppss, others)\r\n  }\r\n}\r\n\r\n/**\r\n * avcc 格式的 NALU 转 annexb NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n */\r\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\r\n  const naluLengthSizeMinusOne = extradata ? (extradata[21] & 0x03) : NALULengthSizeMinusOne\r\n\r\n  let vpss: Uint8ArrayInterface[] = []\r\n  let spss: Uint8ArrayInterface[] = []\r\n  let ppss: Uint8ArrayInterface[] = []\r\n  let key = false\r\n\r\n  if (extradata) {\r\n    const result = extradata2VpsSpsPps(extradata)\r\n    vpss = result.vpss\r\n    spss = result.spss\r\n    ppss = result.ppss\r\n    key = true\r\n  }\r\n\r\n  const nalus = naluUtil.splitNaluByLength(data, naluLengthSizeMinusOne).filter((nalu) => {\r\n    const type = (nalu[0] >>> 1) & 0x3f\r\n    return type !== HEVCNaluType.kSliceAUD\r\n  })\r\n\r\n  return {\r\n    ...nalus2Annexb(vpss, spss, ppss, nalus),\r\n    key\r\n  }\r\n}\r\n\r\n/* eslint-disable camelcase */\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  let sps: Uint8ArrayInterface\r\n  if (extradata && naluUtil.isAnnexb(extradata)) {\r\n    array.each(naluUtil.splitNaluByStartCode(extradata), (nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceSPS) {\r\n        sps = nalu\r\n        return false\r\n      }\r\n    })\r\n  }\r\n  else if (extradata && extradata.length >= 6) {\r\n    stream.metadata.naluLengthSizeMinusOne = (extradata[21] & 0x03)\r\n    const { spss } = extradata2VpsSpsPps(extradata)\r\n    if (spss.length) {\r\n      sps = spss[0]\r\n    }\r\n  }\r\n  if (sps) {\r\n    const { profile, level, width, height, video_delay, chroma_format_idc, bit_depth_luma_minus8 } = parseSPS(sps)\r\n    stream.codecpar.profile = profile\r\n    stream.codecpar.level = level\r\n    stream.codecpar.width = width\r\n    stream.codecpar.height = height\r\n    stream.codecpar.videoDelay = video_delay\r\n\r\n    switch (bit_depth_luma_minus8) {\r\n      case 0:\r\n        if (chroma_format_idc === 3) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P\r\n        }\r\n        else if (chroma_format_idc === 2) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P\r\n        }\r\n        else {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P\r\n        }\r\n        break\r\n      case 2:\r\n        if (chroma_format_idc === 3) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P10LE\r\n        }\r\n        else if (chroma_format_idc === 2) {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P10LE\r\n        }\r\n        else {\r\n          stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P10LE\r\n        }\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nexport function isIDR(avpacket: pointer<AVPacket>, naluLengthSize: int32 = 4) {\r\n  if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB) {\r\n    let nalus = naluUtil.splitNaluByStartCode(mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size)))\r\n    return nalus.some((nalu) => {\r\n      const type = (nalu[0] >>> 1) & 0x3f\r\n      return type === HEVCNaluType.kSliceIDR_N_LP || type === HEVCNaluType.kSliceIDR_W_RADL\r\n    })\r\n  }\r\n  else {\r\n    const size = avpacket.size\r\n    let i = 0\r\n    while (i < (size - naluLengthSize)) {\r\n      const type = (intread.r8(avpacket.data + (i + naluLengthSize)) >>> 1) & 0x3f\r\n      if (type === HEVCNaluType.kSliceIDR_N_LP || type === HEVCNaluType.kSliceIDR_W_RADL) {\r\n        return true\r\n      }\r\n      if (naluLengthSize === 4) {\r\n        i += intread.rb32(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 3) {\r\n        i += intread.rb24(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 2) {\r\n        i += intread.rb16(avpacket.data + i)\r\n      }\r\n      else {\r\n        i += intread.r8(avpacket.data + i)\r\n      }\r\n      i += naluLengthSize\r\n    }\r\n    return false\r\n  }\r\n}\r\nexport interface HevcSPS {\r\n  profile: number\r\n  level: number\r\n  width: number\r\n  height: number\r\n  chroma_format_idc: number\r\n  bit_depth_luma_minus8: number\r\n  bit_depth_chroma_minus8: number\r\n  general_profile_space: number\r\n  general_tier_flag: number\r\n  general_profile_compatibility_flags: number\r\n  constraint_flags: number\r\n  separate_colour_plane_flag: number\r\n  log2_min_cb_size: number\r\n  log2_diff_max_min_coding_block_size: number\r\n  log2_min_tb_size: number\r\n  log2_diff_max_min_transform_block_size: number\r\n  log2_max_trafo_size: number\r\n  log2_ctb_size: number\r\n  log2_min_pu_size: number\r\n  ctb_width: number\r\n  ctb_height: number\r\n  ctb_size: number\r\n  min_cb_width: number\r\n  min_cb_height: number\r\n  min_tb_width: number\r\n  min_tb_height: number\r\n  min_pu_width: number\r\n  min_pu_height: number\r\n  log2_max_poc_lsb: number\r\n  video_delay: number\r\n}\r\n\r\nexport function parseSPS(sps: Uint8ArrayInterface): HevcSPS {\r\n\r\n  if (!sps || sps.length < 3) {\r\n    return\r\n  }\r\n\r\n  let offset = 0\r\n  if (sps[0] === 0x00\r\n    && sps[1] === 0x00\r\n    && sps[2] === 0x00\r\n    && sps[3] === 0x01\r\n  ) {\r\n    offset = 4\r\n  }\r\n\r\n  let profile = 0\r\n  let level = 0\r\n  let width = 0\r\n  let height = 0\r\n  let bit_depth_luma_minus8 = 0\r\n  let bit_depth_chroma_minus8 = 0\r\n  let chroma_format_idc = 1\r\n  let general_profile_space = 0\r\n  let general_tier_flag = 0\r\n  let general_profile_compatibility_flags = 0\r\n  let constraint_flags = 0\r\n\r\n  const buffer = naluUtil.naluUnescape(sps.subarray(offset))\r\n  const bitReader = new BitReader(buffer.length)\r\n  bitReader.appendBuffer(buffer)\r\n\r\n  // forbidden_zero_bit\r\n  bitReader.readU1()\r\n\r\n  // nalu type\r\n  bitReader.readU(6)\r\n\r\n  // layerId\r\n  bitReader.readU(6)\r\n\r\n  // tid\r\n  bitReader.readU(3)\r\n\r\n  // sps_video_parameter_set_id\r\n  bitReader.readU(4)\r\n\r\n  // The value of sps_max_sub_layers_minus1 shall be in the range of 0 to 6, inclusive.\r\n  const spsMaxSubLayersMinus1 = bitReader.readU(3)\r\n\r\n  // sps_temporal_id_nesting_flag\r\n  bitReader.readU1()\r\n\r\n  let separate_colour_plane_flag = 0\r\n\r\n  if (spsMaxSubLayersMinus1 <= 6) {\r\n    // profile_tier_level(sps_max_sub_layers_minus1)\r\n\r\n    // general_profile_space\r\n    general_profile_space = bitReader.readU(2)\r\n    // general_tier_flag\r\n    general_tier_flag = bitReader.readU1()\r\n    // general_profile_idc\r\n    profile = bitReader.readU(5)\r\n    // general_profile_compatibility_flag[32]\r\n    general_profile_compatibility_flags = bitReader.readU(32)\r\n\r\n    /**\r\n     * 1 general_progressive_source_flag\r\n     * 1 general_interlaced_source_flag\r\n     * 1 general_non_packed_constraint_flag\r\n     * 1 general_frame_only_constraint_flag\r\n     * 44 general_reserved_zero_44bits\r\n     */\r\n    constraint_flags = bitReader.readU(48)\r\n\r\n    // general_level_idc\r\n    level = bitReader.readU(8)\r\n\r\n    const subLayerProfilePresentFlag = new Array(6)\r\n    const subLayerLevelPresentFlag = new Array(6)\r\n    for (let i = 0; i < spsMaxSubLayersMinus1; i++) {\r\n      subLayerProfilePresentFlag[i] = bitReader.readU1()\r\n      subLayerLevelPresentFlag[i] = bitReader.readU1()\r\n    }\r\n\r\n    if (spsMaxSubLayersMinus1 > 0) {\r\n      for (let i = spsMaxSubLayersMinus1; i < 8; i++) {\r\n        // reserved_zero_2bits\r\n        bitReader.readU(2)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < spsMaxSubLayersMinus1; i++) {\r\n      if (subLayerProfilePresentFlag[i]) {\r\n        // sub_layer_profile_space[i]\r\n        bitReader.readU(2)\r\n        // sub_layer_tier_flag[i]\r\n        bitReader.readU(1)\r\n        // sub_layer_profile_idc[i]\r\n        bitReader.readU(5)\r\n        // sub_layer_profile_compatibility_flag[i][32]\r\n        bitReader.readU(32)\r\n        // sub_layer_progressive_source_flag[i]\r\n        bitReader.readU(1)\r\n        // sub_layer_interlaced_source_flag[i]\r\n        bitReader.readU(1)\r\n        // sub_layer_non_packed_constraint_flag[i]\r\n        bitReader.readU(1)\r\n        // sub_layer_frame_only_constraint_flag[i]\r\n        bitReader.readU(1)\r\n        // sub_layer_reserved_zero_44bits[i]\r\n        bitReader.readU(44)\r\n      }\r\n\r\n      if (subLayerLevelPresentFlag[i]) {\r\n        // sub_layer_level_idc[i]\r\n        bitReader.readU(8)\r\n      }\r\n    }\r\n\r\n    // \"The  value  of sps_seq_parameter_set_id shall be in the range of 0 to 15, inclusive.\"\r\n    expgolomb.readUE(bitReader)\r\n    chroma_format_idc = expgolomb.readUE(bitReader)\r\n\r\n    if (chroma_format_idc === 3) {\r\n      // separate_colour_plane_flag\r\n      separate_colour_plane_flag = bitReader.readU(1)\r\n    }\r\n\r\n    width = expgolomb.readUE(bitReader)\r\n    height = expgolomb.readUE(bitReader)\r\n\r\n    const conformanceWindowFlag = bitReader.readU1()\r\n\r\n    let confWinLeftOffset = 0\r\n    let confWinRightOffset = 0\r\n    let confWinTopOffset = 0\r\n    let confWinBottomOffset = 0\r\n\r\n    if (conformanceWindowFlag) {\r\n      confWinLeftOffset = expgolomb.readUE(bitReader)\r\n      confWinRightOffset = expgolomb.readUE(bitReader)\r\n      confWinTopOffset = expgolomb.readUE(bitReader)\r\n      confWinBottomOffset = expgolomb.readUE(bitReader)\r\n    }\r\n\r\n    bit_depth_luma_minus8 = expgolomb.readUE(bitReader)\r\n    bit_depth_chroma_minus8 = expgolomb.readUE(bitReader)\r\n\r\n\r\n    let SubWidthC = 2\r\n    let SubHeightC = 2\r\n\r\n    if (chroma_format_idc === 0) {\r\n      SubWidthC = SubHeightC = 0\r\n    }\r\n    else if (chroma_format_idc === 2) {\r\n      SubWidthC = 2\r\n      SubHeightC = 1\r\n    }\r\n    else if (chroma_format_idc === 3) {\r\n      SubWidthC = SubHeightC = 1\r\n    }\r\n\r\n    const cropUnitX = SubWidthC * (1 << (bit_depth_luma_minus8 + 1))\r\n    const cropUnitY = SubHeightC * (1 << (bit_depth_luma_minus8 + 1))\r\n\r\n    width -= cropUnitX * (confWinLeftOffset + confWinRightOffset)\r\n    height -= cropUnitY * (confWinTopOffset + confWinBottomOffset)\r\n  }\r\n\r\n  const log2_max_poc_lsb = expgolomb.readUE(bitReader) + 4\r\n\r\n  const sublayer_ordering_info_flag = bitReader.readU1()\r\n  const start = sublayer_ordering_info_flag ? 0 : spsMaxSubLayersMinus1\r\n  let video_delay = 0\r\n  for (let i = start; i < (spsMaxSubLayersMinus1 + 1); i++) {\r\n    // max_dec_pic_buffering\r\n    expgolomb.readUE(bitReader)\r\n    // num_reorder_pics\r\n    video_delay = Math.max(video_delay, Math.min(expgolomb.readUE(bitReader), HEVC_MAX_DPB_FRAMES))\r\n    // max_latency_increase\r\n    expgolomb.readUE(bitReader)\r\n  }\r\n\r\n  const log2_min_cb_size = expgolomb.readUE(bitReader) + 3\r\n  const log2_diff_max_min_coding_block_size = expgolomb.readUE(bitReader)\r\n  const log2_min_tb_size = expgolomb.readUE(bitReader) + 2\r\n  const log2_diff_max_min_transform_block_size = expgolomb.readUE(bitReader)\r\n  const log2_max_trafo_size = log2_diff_max_min_transform_block_size + log2_min_tb_size\r\n\r\n  const log2_ctb_size = log2_min_cb_size + log2_diff_max_min_coding_block_size\r\n  const log2_min_pu_size = log2_min_cb_size - 1\r\n\r\n  const ctb_width  = (width  + (1 << log2_ctb_size) - 1) >> log2_ctb_size\r\n  const ctb_height = (height + (1 << log2_ctb_size) - 1) >> log2_ctb_size\r\n  const ctb_size   = ctb_width * ctb_height\r\n\r\n  const min_cb_width  = width  >> log2_min_cb_size\r\n  const min_cb_height = height >> log2_min_cb_size\r\n  const min_tb_width  = width  >> log2_min_tb_size\r\n  const min_tb_height = height >> log2_min_tb_size\r\n  const min_pu_width  = width  >> log2_min_pu_size\r\n  const min_pu_height = height >> log2_min_pu_size\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    width,\r\n    height,\r\n    chroma_format_idc,\r\n    bit_depth_luma_minus8,\r\n    bit_depth_chroma_minus8,\r\n    general_profile_space,\r\n    general_tier_flag,\r\n    general_profile_compatibility_flags,\r\n    constraint_flags,\r\n    separate_colour_plane_flag,\r\n    log2_min_cb_size,\r\n    log2_diff_max_min_coding_block_size,\r\n    log2_min_tb_size,\r\n    log2_diff_max_min_transform_block_size,\r\n    log2_max_trafo_size,\r\n    log2_ctb_size,\r\n    log2_min_pu_size,\r\n    ctb_width,\r\n    ctb_height,\r\n    ctb_size,\r\n    min_cb_width,\r\n    min_cb_height,\r\n    min_tb_width,\r\n    min_tb_height,\r\n    min_pu_width,\r\n    min_pu_height,\r\n    log2_max_poc_lsb,\r\n    video_delay\r\n  }\r\n}\r\n\r\nexport interface HevcPPS {\r\n  pps_pic_parameter_set_id: number\r\n  pps_seq_parameter_set_id: number\r\n  dependent_slice_segment_flag: number\r\n  output_flag_present_flag: number\r\n  num_extra_slice_header_bits: number\r\n}\r\n\r\nexport function parsePPS(pps: Uint8ArrayInterface): HevcPPS {\r\n  if (!pps || pps.length < 3) {\r\n    return\r\n  }\r\n\r\n  let offset = 0\r\n  if (pps[0] === 0x00\r\n    && pps[1] === 0x00\r\n    && pps[2] === 0x00\r\n    && pps[3] === 0x01\r\n  ) {\r\n    offset = 4\r\n  }\r\n\r\n  const buffer = naluUtil.naluUnescape(pps.subarray(offset))\r\n  const bitReader = new BitReader(buffer.length)\r\n  bitReader.appendBuffer(buffer)\r\n\r\n  const pps_pic_parameter_set_id = expgolomb.readUE(bitReader)\r\n  const pps_seq_parameter_set_id = expgolomb.readUE(bitReader)\r\n  const dependent_slice_segment_flag = bitReader.readU1()\r\n  const output_flag_present_flag = bitReader.readU1()\r\n  const num_extra_slice_header_bits = bitReader.readU(3)\r\n\r\n  return {\r\n    pps_pic_parameter_set_id,\r\n    pps_seq_parameter_set_id,\r\n    dependent_slice_segment_flag,\r\n    output_flag_present_flag,\r\n    num_extra_slice_header_bits\r\n  }\r\n}\r\n","/*\r\n * libmedia mp3 util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport AVStream from '../AVStream'\r\nimport { NOPTS_VALUE } from '../constant'\r\n\r\nconst MpegAudioV10SampleRateTable = [44100, 48000, 32000, 0]\r\n\r\nconst MpegAudioV20SampleRateTable = [22050, 24000, 16000, 0]\r\n\r\nconst MpegAudioV25SampleRateTable = [11025, 12000, 8000, 0]\r\n\r\nconst MpegAudioV10FrameSizeTable = [0, 1152, 1152, 384]\r\n\r\nconst MpegAudioV20FrameSizeTable = [0, 576, 1152, 384]\r\n\r\nconst MpegAudioV25FrameSizeTable = [0, 576, 1152, 384]\r\n\r\nconst MpegAudioV1L1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1]\r\n\r\nconst MpegAudioV1L2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1]\r\n\r\nconst MpegAudioV1L3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1]\r\n\r\nconst MpegAudioV2L1BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, -1]\r\n\r\nconst MpegAudioV2L2L3BitRateTable = [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1]\r\n\r\nexport function getSampleRateByVersionIndex(version: number, samplingFreqIndex: number) {\r\n  switch (version) {\r\n    case 0:\r\n      // MPEG 2.5\r\n      return MpegAudioV25SampleRateTable[samplingFreqIndex]\r\n    case 2:\r\n      // MPEG 2\r\n      return MpegAudioV20SampleRateTable[samplingFreqIndex]\r\n    case 3:\r\n      // MPEG 1\r\n      return MpegAudioV10SampleRateTable[samplingFreqIndex]\r\n  }\r\n  return NOPTS_VALUE\r\n}\r\n\r\nexport function getFrameSizeByVersionLayer(version: number, layer: number) {\r\n  switch (version) {\r\n    case 0:\r\n      // MPEG 2.5\r\n      return MpegAudioV25FrameSizeTable[layer]\r\n    case 2:\r\n      // MPEG 2\r\n      return MpegAudioV20FrameSizeTable[layer]\r\n    case 3:\r\n      // MPEG 1\r\n      return MpegAudioV10FrameSizeTable[layer]\r\n  }\r\n  return NOPTS_VALUE\r\n}\r\n\r\nexport function getBitRateByVersionLayerIndex(version: number, layer: number, index: number) {\r\n\r\n  switch (layer) {\r\n    // layer3\r\n    case 1:\r\n      switch (version) {\r\n        case 0:\r\n        case 2:\r\n          return MpegAudioV2L2L3BitRateTable[index]\r\n        case 3:\r\n          return MpegAudioV1L3BitRateTable[index]\r\n      }\r\n      break\r\n    // layer2\r\n    case 2:\r\n      switch (version) {\r\n        case 0:\r\n        case 2:\r\n          return MpegAudioV2L2L3BitRateTable[index]\r\n        case 3:\r\n          return MpegAudioV1L2BitRateTable[index]\r\n      }\r\n    // layer1\r\n    case 3:\r\n      switch (version) {\r\n        case 0:\r\n        case 2:\r\n          return MpegAudioV2L1BitRateTable[index]\r\n        case 3:\r\n          return MpegAudioV1L1BitRateTable[index]\r\n      }\r\n  }\r\n  return NOPTS_VALUE\r\n}\r\n\r\nexport function getProfileByLayer(layer: number) {\r\n  switch (layer) {\r\n    case 1:\r\n      // Layer 3\r\n      return 34\r\n    case 2:\r\n      // Layer 2\r\n      return 33\r\n    case 3:\r\n      // Layer 1\r\n      return 32\r\n  }\r\n  return NOPTS_VALUE\r\n}\r\n\r\nexport const enum MP3Profile {\r\n  Layer1 = 32,\r\n  Layer2 = 33,\r\n  Layer3 = 34\r\n}\r\n\r\nexport const MP3Profile2Name: Record<MP3Profile, string> = {\r\n  [MP3Profile.Layer1]: 'Layer1',\r\n  [MP3Profile.Layer2]: 'Layer2',\r\n  [MP3Profile.Layer3]: 'Layer3'\r\n}\r\n\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, buffer: Uint8ArrayInterface) {\r\n  if (buffer && buffer.length >= 4) {\r\n    const ver = (buffer[1] >>> 3) & 0x03\r\n    const layer = (buffer[1] & 0x06) >> 1\r\n    // const bitrateIndex = (buffer[2] & 0xF0) >>> 4\r\n    const samplingFreqIndex = (buffer[2] & 0x0C) >>> 2\r\n\r\n    const channelMode = (buffer[3] >>> 6) & 0x03\r\n\r\n    const channelCount = channelMode !== 3 ? 2 : 1\r\n    const profile = getProfileByLayer(layer)\r\n    const sampleRate = getSampleRateByVersionIndex(ver, samplingFreqIndex)\r\n\r\n    stream.codecpar.profile = profile\r\n    stream.codecpar.sampleRate = sampleRate\r\n    stream.codecpar.chLayout.nbChannels = channelCount\r\n  }\r\n}\r\n","/*\r\n * libmedia opus util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport AVStream from '../AVStream'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport { avRescaleQ } from '../util/rational'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\n\r\nexport const durations = [\r\n  /* Silk NB */\r\n  480, 960, 1920, 2880,\r\n  /* Silk MB */\r\n  480, 960, 1920, 2880,\r\n  /* Silk WB */\r\n  480, 960, 1920, 2880,\r\n  /* Hybrid SWB */\r\n  480, 960,\r\n  /* Hybrid FB */\r\n  480, 960,\r\n  /* CELT NB */\r\n  120, 240, 480, 960,\r\n  /* CELT NB */\r\n  120, 240, 480, 960,\r\n  /* CELT NB */\r\n  120, 240, 480, 960,\r\n  /* CELT NB */\r\n  120, 240, 480, 960\r\n]\r\n\r\n\r\nexport function getBufferSamples(buffer: Uint8Array) {\r\n  let toc = 0, frameDuration = 0, nframes = 0\r\n\r\n  if (buffer.length < 1) {\r\n    return 0\r\n  }\r\n\r\n  toc = buffer[0]\r\n\r\n  frameDuration = durations[toc >> 3]\r\n\r\n  switch (toc & 3) {\r\n    case 0:\r\n      nframes = 1\r\n      break\r\n    case 1:\r\n      nframes = 2\r\n      break\r\n    case 2:\r\n      nframes = 2\r\n      break\r\n    case 3:\r\n      if (buffer.length < 2) {\r\n        return 0\r\n      }\r\n      nframes = buffer[1] & 63\r\n      break\r\n  }\r\n  return nframes * frameDuration\r\n}\r\n\r\n/**\r\n * opus extradata\r\n * \r\n * - 8 bytes Magic Signature: OpusHead\r\n * - 1 bytes unsigned, 对应值 0x01 version\r\n * - 1 bytes unsigned, channels 它可能和编码声道数不一致， 它可能被修改成 packet-by-packet, 对应值 0x01\r\n * - 2 bytes unsigned, preSkip 这是要从开始播放时的解码器输出， 从页面的颗粒位置减去以计算其 PCM 样本位置。\r\n * - 4 bytes unsigned, sampleRate 原始输入采样率\r\n * - 2 bytes signed, outputGain 这是解码时要应用的增益， 20 * log10 缩放解码器输出以实现所需的播放音量\r\n * - 1 bytes unsigned, channelMappingFamily 指示输出渠道的顺序和语音含义。该八位位组的每个当前指定的值表示一个映射系列，它定义了一组允许的通道数，以及每个允许的通道数的通道名称的有序集合\r\n * - channelMappingTable 可选， 当 Channel Mapping Family 为 0 时被省略。\r\n *  - 1 bytes, streamCount, unsigned ogg packet 里面编码了多少路 stream\r\n *  - 1 bytes, coupledStreamCount, unsigned 标识有多少路流是双声声道，必须小于 streamCount\r\n *  - C bytes, C 为总输出声道数 coupledStreamCount + streamCount\r\n * \r\n */\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  if (extradata && extradata.length >= 19) {\r\n    const reader = new BufferReader(extradata, false)\r\n    reader.skip(9)\r\n    stream.codecpar.chLayout.nbChannels = reader.readUint8()\r\n    stream.codecpar.initialPadding = reader.readUint16()\r\n    stream.codecpar.sampleRate = reader.readUint32()\r\n\r\n    stream.codecpar.seekPreroll = Number(avRescaleQ(\r\n      80n,\r\n      {\r\n        den: 1000,\r\n        num: 1\r\n      },\r\n      {\r\n        den: 48000,\r\n        num: 1\r\n      }\r\n    ))\r\n  }\r\n}\r\n\r\nexport function avCodecParameters2Extradata(codecpar: AVCodecParameters) {\r\n  const extradata = new Uint8Array(19)\r\n\r\n  const writer = new BufferWriter(extradata, false)\r\n\r\n  writer.writeString('OpusHead')\r\n  writer.writeUint8(0x01)\r\n  writer.writeUint8(codecpar.chLayout.nbChannels)\r\n  writer.writeUint16(codecpar.initialPadding)\r\n  writer.writeUint32(codecpar.sampleRate)\r\n\r\n  return extradata\r\n}\r\n","/*\r\n * libmedia vp8 util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVStream from '../AVStream'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport AVPacket from '../struct/avpacket'\r\nimport BitReader from 'common/io/BitReader'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  if (extradata && extradata.length >= 6) {\r\n    const params = parseExtraData(extradata)\r\n    stream.codecpar.profile = params.profile\r\n    stream.codecpar.level = params.level\r\n  }\r\n}\r\n\r\n/**\r\n * - 1 byte profile\r\n * - 1 byte level\r\n * - 4 bit bitdepth\r\n * - 3 bit chroma_subsampling\r\n * - 1 bit full_range_flag\r\n * - 1 byte color_primaries\r\n * - 1 byte color_trc\r\n * - 1 byte color_space\r\n * \r\n * @param extradata \r\n */\r\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\r\n  const bitReader = new BitReader(extradata.length)\r\n  bitReader.appendBuffer(extradata.subarray(4))\r\n  const profile = bitReader.readU(8)\r\n  const level = bitReader.readU(8)\r\n  let bitDepth = bitReader.readU(4)\r\n  const chromaSubsampling = bitReader.readU(3)\r\n  const fullRangeFlag = bitReader.readU1()\r\n  const colorPrimaries = bitReader.readU(8)\r\n  const colorTrc = bitReader.readU(8)\r\n  const colorSpace = bitReader.readU(8)\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    bitDepth,\r\n    chromaSubsampling,\r\n    fullRangeFlag,\r\n    colorPrimaries,\r\n    colorTrc,\r\n    colorSpace\r\n  }\r\n}\r\n\r\nexport function isIDR(avpacket: pointer<AVPacket>) {\r\n  const first = accessof(avpacket.data)\r\n  return !(first >>> 7)\r\n}\r\n","/*\r\n * libmedia vp9 util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVStream from '../AVStream'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport BitReader from 'common/io/BitReader'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport { NOPTS_VALUE } from '../constant'\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport { avQ2D } from '../util/rational'\r\nimport { AVChromaLocation, AVColorRange, AVPixelFormat } from '../pixfmt'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport AVPacket from '../struct/avpacket'\r\n\r\nexport const enum VP9Profile {\r\n  Profile0,\r\n  Profile1,\r\n  Profile2,\r\n  Profile3\r\n}\r\n\r\nexport const VP9Profile2Name: Record<VP9Profile, string> = {\r\n  [VP9Profile.Profile0]: 'Profile0',\r\n  [VP9Profile.Profile1]: 'Profile1',\r\n  [VP9Profile.Profile2]: 'Profile2',\r\n  [VP9Profile.Profile3]: 'Profile3'\r\n}\r\n\r\nexport const LevelCapabilities = [\r\n  { level: 10, maxResolution: 512 * 384, maxFrameRate: 30 },\r\n  { level: 11, maxResolution: 512 * 384, maxFrameRate: 60 },\r\n  { level: 20, maxResolution: 960 * 540, maxFrameRate: 30 },\r\n  { level: 21, maxResolution: 960 * 540, maxFrameRate: 60 },\r\n  { level: 30, maxResolution: 1920 * 1080, maxFrameRate: 30 },\r\n  { level: 31, maxResolution: 1920 * 1080, maxFrameRate: 60 },\r\n  { level: 40, maxResolution: 2560 * 1440, maxFrameRate: 30 },\r\n  { level: 41, maxResolution: 2560 * 1440, maxFrameRate: 60 },\r\n  { level: 50, maxResolution: 3840 * 2160, maxFrameRate: 30 },\r\n  { level: 51, maxResolution: 3840 * 2160, maxFrameRate: 60 },\r\n  { level: 60, maxResolution: 4096 * 2160, maxFrameRate: 30 },\r\n  { level: 61, maxResolution: 4096 * 2160, maxFrameRate: 60 },\r\n  { level: 70, maxResolution: 8192 * 4320, maxFrameRate: 30 },\r\n  { level: 71, maxResolution: 8192 * 4320, maxFrameRate: 60 }\r\n]\r\n\r\nexport function getLevelByResolution(width: number, height: number, fps: number) {\r\n  const resolution = width * height\r\n  for (const level of LevelCapabilities) {\r\n    if (resolution <= level.maxResolution && fps <= level.maxFrameRate) {\r\n      return level.level\r\n    }\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  if (extradata && extradata.length >= 6) {\r\n    const params = parseExtraData(extradata)\r\n    stream.codecpar.profile = params.profile\r\n    stream.codecpar.level = params.level\r\n  }\r\n}\r\n\r\n/**\r\n * - 1 byte profile\r\n * - 1 byte level\r\n * - 4 bit bitdepth\r\n * - 3 bit chroma_subsampling\r\n * - 1 bit full_range_flag\r\n * - 1 byte color_primaries\r\n * - 1 byte color_trc\r\n * - 1 byte color_space\r\n * \r\n * @param extradata \r\n */\r\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\r\n  const bitReader = new BitReader(extradata.length)\r\n  bitReader.appendBuffer(extradata)\r\n  const profile = bitReader.readU(8)\r\n  const level = bitReader.readU(8)\r\n  let bitDepth = bitReader.readU(4)\r\n  const chromaSubsampling = bitReader.readU(3)\r\n  const fullRangeFlag = bitReader.readU1()\r\n  const colorPrimaries = bitReader.readU(8)\r\n  const colorTrc = bitReader.readU(8)\r\n  const colorSpace = bitReader.readU(8)\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    bitDepth,\r\n    chromaSubsampling,\r\n    fullRangeFlag,\r\n    colorPrimaries,\r\n    colorTrc,\r\n    colorSpace\r\n  }\r\n}\r\n\r\nconst enum VPX_CHROMA_SUBSAMPLING {\r\n  VPX_SUBSAMPLING_420_VERTICAL = 0,\r\n  VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA = 1,\r\n  VPX_SUBSAMPLING_422 = 2,\r\n  VPX_SUBSAMPLING_444 = 3\r\n}\r\n\r\nfunction getVpccFeature(codecpar: pointer<AVCodecParameters>) {\r\n  let profile = codecpar.profile\r\n  let level = codecpar.level\r\n  if (level === NOPTS_VALUE) {\r\n    level = getLevelByResolution(codecpar.width, codecpar.height, avQ2D(codecpar.framerate))\r\n  }\r\n  const desc = getAVPixelFormatDescriptor(codecpar.format as AVPixelFormat)\r\n\r\n  let bitDepth = codecpar.bitsPerCodedSample\r\n  let chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA\r\n  if (desc) {\r\n    bitDepth = desc.comp[0].depth\r\n    if (desc.log2ChromaW === 1 && desc.log2ChromaH === 1) {\r\n      if (codecpar.chromaLocation === AVChromaLocation.AVCHROMA_LOC_LEFT) {\r\n        chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_VERTICAL\r\n      }\r\n    }\r\n    else if (desc.log2ChromaW === 1 && desc.log2ChromaH === 0) {\r\n      chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_422\r\n    }\r\n    else if (desc.log2ChromaW === 0 && desc.log2ChromaH === 0) {\r\n      chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_444\r\n    }\r\n  }\r\n  const fullRange = codecpar.colorRange === AVColorRange.AVCOL_RANGE_JPEG ? 1 : 0\r\n\r\n  if (profile === NOPTS_VALUE && bitDepth) {\r\n    if (chromaSubsampling == VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_VERTICAL\r\n      || chromaSubsampling == VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA\r\n    ) {\r\n      profile = (bitDepth == 8) ? VP9Profile.Profile0 : VP9Profile.Profile2\r\n    }\r\n    else {\r\n      profile = (bitDepth == 8) ? VP9Profile.Profile1 : VP9Profile.Profile3\r\n    }\r\n  }\r\n  return {\r\n    profile,\r\n    level,\r\n    bitDepth,\r\n    chromaSubsampling,\r\n    fullRange\r\n  }\r\n}\r\n\r\nexport function generateExtradata(codecpar: pointer<AVCodecParameters>) {\r\n  const ioWriter = new BufferWriter(new Uint8Array(8))\r\n  const vpcc = getVpccFeature(codecpar)\r\n  ioWriter.writeUint8(vpcc.profile)\r\n  ioWriter.writeUint8(vpcc.level)\r\n  ioWriter.writeUint8((vpcc.bitDepth << 4) | (vpcc.chromaSubsampling << 1) | vpcc.fullRange)\r\n  ioWriter.writeUint8(codecpar.colorPrimaries)\r\n  ioWriter.writeUint8(codecpar.colorTrc)\r\n  ioWriter.writeUint8(codecpar.colorSpace)\r\n  ioWriter.writeUint16(0)\r\n  return ioWriter.getWroteBuffer()\r\n}\r\n\r\nexport function isIDR(avpacket: pointer<AVPacket>) {\r\n  const first = accessof(avpacket.data)\r\n\r\n  const version = (first >>> 5) & 0x01\r\n  const high = (first >>> 4) & 0x01\r\n  const profile = (high << 1) + version\r\n\r\n  const showExistingFrame = (first >>> (profile === VP9Profile.Profile3 ? 2 : 3)) & 0x01\r\n\r\n  if (showExistingFrame) {\r\n    return false\r\n  }\r\n\r\n  return !((first >>> (profile === VP9Profile.Profile3 ? 1 : 2)) & 0x01)\r\n}\r\n","/*\r\n * libmedia vvc util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as array from 'common/util/array'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport BitReader from 'common/io/BitReader'\r\nimport AVStream from '../AVStream'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport * as naluUtil from '../util/nalu'\r\nimport { avMalloc } from '../util/mem'\r\nimport * as expgolomb from '../util/expgolomb'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport BitWriter from 'common/io/BitWriter'\r\nimport { Data } from 'common/types/type'\r\nimport * as intread from '../util/intread'\r\nimport * as intwrite from '../util/intwrite'\r\nimport { AVPixelFormat } from '../pixfmt'\r\n\r\nconst NALULengthSizeMinusOne = 3\r\n\r\nexport const enum VVCNaluType {\r\n  kTRAIL_NUT      = 0,\r\n  kSTSA_NUT       = 1,\r\n  kRADL_NUT       = 2,\r\n  kRASL_NUT       = 3,\r\n  kRSV_VCL_4      = 4,\r\n  kRSV_VCL_5      = 5,\r\n  kRSV_VCL_6      = 6,\r\n  kIDR_W_RADL     = 7,\r\n  kIDR_N_LP       = 8,\r\n  kCRA_NUT        = 9,\r\n  kGDR_NUT        = 10,\r\n  kRSV_IRAP_11    = 11,\r\n  kOPI_NUT        = 12,\r\n  kDCI_NUT        = 13,\r\n  kVPS_NUT        = 14,\r\n  kSPS_NUT        = 15,\r\n  kPPS_NUT        = 16,\r\n  kPREFIX_APS_NUT = 17,\r\n  kSUFFIX_APS_NUT = 18,\r\n  kPH_NUT         = 19,\r\n  kAUD_NUT        = 20,\r\n  kEOS_NUT        = 21,\r\n  kEOB_NUT        = 22,\r\n  kPREFIX_SEI_NUT = 23,\r\n  kSUFFIX_SEI_NUT = 24,\r\n  kFD_NUT         = 25,\r\n  kRSV_NVCL_26    = 26,\r\n  kRSV_NVCL_27    = 27,\r\n  kUNSPEC_28      = 28,\r\n  kUNSPEC_29      = 29,\r\n  kUNSPEC_30      = 30,\r\n  kUNSPEC_31      = 31,\r\n}\r\n\r\nexport const enum VVCSliceType {\r\n  kSliceNone = -1,\r\n  kSliceB = 0,\r\n  kSliceP = 1,\r\n  kSliceI = 2\r\n}\r\n\r\nexport const enum VVCAPSType {\r\n  kALF     = 0,\r\n  kLMCS    = 1,\r\n  kSCALING = 2\r\n}\r\n\r\n/* eslint-disable camelcase */\r\nfunction parsePTL(bitReader: BitReader) {\r\n  const olsIdx = bitReader.readU(9)\r\n  const numSublayers = bitReader.readU(3)\r\n  const constantFrameRate = bitReader.readU(2)\r\n  const chromaFormatIdc = bitReader.readU(2)\r\n  const bitDepthMinus8 = bitReader.readU(3)\r\n  bitReader.readU(5)\r\n\r\n  // VvcPTLRecord\r\n  bitReader.readU(2)\r\n  const num_bytes_constraint_info = bitReader.readU(6)\r\n  const generalProfileIdc = bitReader.readU(7)\r\n  const generalTierFlag = bitReader.readU(1)\r\n  const generalLevelIdc = bitReader.readU(8)\r\n  const ptlFrameOnlyConstraintFlag = bitReader.readU(1)\r\n  const ptlMultilayerEnabledFlag = bitReader.readU(1)\r\n  const generalConstraintInfo = []\r\n  const sublayerLevelIdc = []\r\n\r\n  if (num_bytes_constraint_info) {\r\n    for (let i = 0; i < num_bytes_constraint_info - 1; i++) {\r\n      generalConstraintInfo[i] = bitReader.readU(8)\r\n    }\r\n    generalConstraintInfo[num_bytes_constraint_info - 1] = bitReader.readU(6)\r\n  }\r\n  else {\r\n    bitReader.readU(6)\r\n  }\r\n  if (numSublayers > 1) {\r\n    let ptl_sublayer_present_mask = 0\r\n    for (let j = numSublayers - 2; j >= 0; --j) {\r\n      const val = bitReader.readU(1)\r\n      ptl_sublayer_present_mask |= val << j\r\n    }\r\n    for (let j = numSublayers; j <= 8 && numSublayers > 1; ++j) {\r\n      bitReader.readU(1)\r\n    }\r\n\r\n    for (let j = numSublayers - 2; j >= 0; --j) {\r\n      if (ptl_sublayer_present_mask & (1 << j)) {\r\n        sublayerLevelIdc[j] = bitReader.readU(8)\r\n      }\r\n    }\r\n  }\r\n  const ptl_num_sub_profiles = bitReader.readU(8)\r\n  const generalSubProfileIdc = []\r\n  if (ptl_num_sub_profiles) {\r\n    for (let i = 0; i < ptl_num_sub_profiles; i++) {\r\n      generalSubProfileIdc.push(bitReader.readU(8))\r\n    }\r\n  }\r\n\r\n  const maxPictureWidth = bitReader.readU(16)\r\n  const maxPictureHeight = bitReader.readU(16)\r\n  const avgFramerate = bitReader.readU(16)\r\n\r\n  return {\r\n    olsIdx,\r\n    numSublayers,\r\n    bitDepthMinus8,\r\n    chromaFormatIdc,\r\n    constantFrameRate,\r\n    generalProfileIdc,\r\n    generalTierFlag,\r\n    generalLevelIdc,\r\n    ptlFrameOnlyConstraintFlag,\r\n    ptlMultilayerEnabledFlag,\r\n    generalConstraintInfo,\r\n    sublayerLevelIdc,\r\n    generalSubProfileIdc,\r\n    maxPictureWidth,\r\n    maxPictureHeight,\r\n    avgFramerate\r\n  }\r\n}\r\n/* eslint-enable camelcase */\r\n\r\n/**\r\n * \r\n * vvcc 格式的 extradata 转 annexb vps sps pps\r\n * \r\n * bits    \r\n * - 5   reserved (11111)\r\n * - 2   lengthSizeMinusOne\r\n * - 1   ptl_present_flag\r\n * if ptl_present_flag\r\n *   - 9   ols_idx\r\n *   - 3  num_sublayers\r\n *   - 2  constant_frame_rate\r\n *   - 2  chroma_format_idc\r\n *   - 3  bit_depth_minus8\r\n *   - 5  reserved (11111)\r\n *   VvcPTLRecord\r\n *   - 2 reserved (11)\r\n *   - 6 num_bytes_constraint_info\r\n *   - 7 general_profile_idc\r\n *   - 1 general_tier_flag\r\n *   - 8 general_level_idc\r\n *   - 1 general_level_idc\r\n *   - 1 ptl_multilayer_enabled_flag\r\n *   if num_bytes_constraint_info > 0\r\n *      for (i = 0; i < num_bytes_constraint_info - 1; i++)\r\n *        - 8 general_constraint_info[i]\r\n *      - 6 general_constraint_info[num_bytes_constraint_info - 1]\r\n *   else\r\n *      - 6 reserved\r\n *   if num_sublayers > 1\r\n *      - num_sublayers - 2 ptl_sublayer_level_present_flag\r\n *      - 8 - num_sublayers + 1 ptl_reserved_zero_bit\r\n *      for (i = num_sublayers -2; i >= 0; i--)\r\n *        if ptl_sublayer_present_mask & (1 << i)\r\n *          - 8 sublayer_level_idc[i]\r\n *    - 8 ptl_num_sub_profiles\r\n *    if ptl_num_sub_profiles\r\n *      for (i = 0; i < ptl_num_sub_profiles; i++)\r\n *        - 32 general_sub_profile_idc[i]\r\n *    - 16 max_picture_width\r\n *    - 16 max_picture_height\r\n *    - 16 avg_frame_rate\r\n * - 8   numOfArrays\r\n * - repeated of array (vps/sps/pps)\r\n * - 1   array_completeness\r\n * - 2   reserved (0)\r\n * - 5   NAL_unit_type\r\n * if nalu_type != VVC_NALU_DEC_PARAM && nalu_type != VVC_NALU_OPI\r\n *    - 16  numNalus\r\n * else\r\n *   numNalus = 1\r\n * - repeated once per NAL\r\n * - 16  nalUnitLength\r\n * - N   NALU data\r\n * \r\n */\r\nexport function extradata2VpsSpsPps(extradata: Uint8ArrayInterface) {\r\n\r\n  const bufferReader = new BufferReader(extradata, true)\r\n\r\n  const ptlPresentFlag = bufferReader.readUint8() & 0x01\r\n\r\n  if (ptlPresentFlag) {\r\n    const bitReader = new BitReader()\r\n    bitReader.appendBuffer(extradata.subarray(1))\r\n    parsePTL(bitReader)\r\n    bufferReader.skip(bitReader.getPointer())\r\n  }\r\n\r\n  let vpss: Uint8ArrayInterface[] = []\r\n  let spss: Uint8ArrayInterface[] = []\r\n  let ppss: Uint8ArrayInterface[] = []\r\n\r\n  const arrayLen = bufferReader.readUint8()\r\n\r\n  for (let i = 0; i < arrayLen; i++) {\r\n    const naluType = bufferReader.readUint8() & 0x1f\r\n    let count = 1\r\n\r\n    if (naluType !== VVCNaluType.kDCI_NUT && naluType !== VVCNaluType.kOPI_NUT) {\r\n      count = bufferReader.readUint16()\r\n    }\r\n    const list = []\r\n\r\n    for (let j = 0; j < count; j++) {\r\n      const len = bufferReader.readUint16()\r\n      list.push(bufferReader.readBuffer(len))\r\n    }\r\n\r\n    if (naluType === VVCNaluType.kVPS_NUT) {\r\n      vpss = list\r\n    }\r\n    else if (naluType === VVCNaluType.kSPS_NUT) {\r\n      spss = list\r\n    }\r\n    else if (naluType === VVCNaluType.kPPS_NUT) {\r\n      ppss = list\r\n    }\r\n  }\r\n\r\n  return {\r\n    vpss,\r\n    spss,\r\n    ppss\r\n  }\r\n}\r\n\r\n/**\r\n * annexb vps sps pps 转 avcc 格式的 extradata\r\n * \r\n * @param vpss \r\n * @param spss \r\n * @param ppss \r\n * @returns \r\n */\r\nexport function vpsSpsPps2Extradata(vpss: Uint8ArrayInterface[], spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[]) {\r\n\r\n  const sps = spss[0]\r\n  let ptl: Uint8Array\r\n  if (sps) {\r\n    const spsParams = parseSPS(sps)\r\n    let generalConstraintInfo = spsParams.generalConstraintInfo\r\n    if (!generalConstraintInfo.length) {\r\n      generalConstraintInfo = new Array(12).fill(0)\r\n    }\r\n    const biWriter = new BitWriter()\r\n    biWriter.writeU(9, 0)\r\n    biWriter.writeU(3, spsParams.spsMaxSublayersMinus1 + 1)\r\n    biWriter.writeU(2, 1)\r\n    biWriter.writeU(2, spsParams.chromaFormatIdc)\r\n    biWriter.writeU(3, spsParams.bitDepthMinus8)\r\n    biWriter.writeU(5, 0b11111)\r\n    biWriter.writeU(2, 0)\r\n    biWriter.writeU(6, generalConstraintInfo.length)\r\n    biWriter.writeU(7, spsParams.profile)\r\n    biWriter.writeU1(spsParams.tierFlag)\r\n    biWriter.writeU(8, spsParams.level)\r\n    biWriter.writeU1(spsParams.ptlFrameOnlyConstraintFlag)\r\n    biWriter.writeU1(spsParams.ptlMultilayerEnabledFlag)\r\n\r\n    if (generalConstraintInfo.length) {\r\n      for (let i = 0; i < generalConstraintInfo.length - 1; i++) {\r\n        biWriter.writeU(8, generalConstraintInfo[i])\r\n      }\r\n      biWriter.writeU(6, generalConstraintInfo[generalConstraintInfo.length - 1])\r\n    }\r\n    else {\r\n      biWriter.writeU(6, 0b111111)\r\n    }\r\n\r\n    if (spsParams.spsMaxSublayersMinus1 + 1 > 1) {\r\n      let ptlSubLayerLevelPresentFlags = 0\r\n      for (let i = spsParams.spsMaxSublayersMinus1 - 1; i >= 0; i--) {\r\n        ptlSubLayerLevelPresentFlags = (ptlSubLayerLevelPresentFlags << 1 | spsParams.ptlSublayerLevelPresentFlag[i])\r\n      }\r\n      biWriter.writeU(spsParams.spsMaxSublayersMinus1, ptlSubLayerLevelPresentFlags)\r\n\r\n      for (let j = spsParams.spsMaxSublayersMinus1 + 1; j <= 8 && spsParams.spsMaxSublayersMinus1 > 0; ++j) {\r\n        biWriter.writeU1(0)\r\n      }\r\n      for (let i = spsParams.spsMaxSublayersMinus1 - 1; i >= 0; i--) {\r\n        if (spsParams.ptlSublayerLevelPresentFlag[i]) {\r\n          biWriter.writeU(8, spsParams.sublayerLevelIdc[i])\r\n        }\r\n      }\r\n    }\r\n    biWriter.writeU(8, spsParams.generalSubProfileIdc.length)\r\n    for (let i = 0; i < spsParams.generalSubProfileIdc.length; i++) {\r\n      biWriter.writeU(8, spsParams.sublayerLevelIdc[i])\r\n    }\r\n    biWriter.writeU(16, spsParams.width)\r\n    biWriter.writeU(16, spsParams.height)\r\n    biWriter.writeU(16, 0)\r\n    biWriter.padding()\r\n    ptl = biWriter.getBuffer().subarray(0, biWriter.getPointer())\r\n  }\r\n\r\n  let length = 2 + (ptl ? ptl.length : 0)\r\n\r\n  if (vpss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = vpss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  if (spss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = spss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  if (ppss.length) {\r\n    // type + count\r\n    length += 3\r\n    length = ppss.reduce((prev, value) => {\r\n      // length + data\r\n      return prev + 2 + value.length\r\n    }, length)\r\n  }\r\n\r\n  const buffer = new Uint8Array(length)\r\n  const bufferWriter = new BufferWriter(buffer, true)\r\n\r\n  bufferWriter.writeUint8(NALULengthSizeMinusOne << 1 | (ptl ? 1 : 0) | 0xf8)\r\n\r\n  if (ptl) {\r\n    bufferWriter.writeBuffer(ptl)\r\n  }\r\n\r\n  // numOfArrays\r\n  let numOfArrays = 0\r\n  if (vpss.length) {\r\n    numOfArrays++\r\n  }\r\n  if (spss.length) {\r\n    numOfArrays++\r\n  }\r\n  if (ppss.length) {\r\n    numOfArrays++\r\n  }\r\n  bufferWriter.writeUint8(numOfArrays)\r\n\r\n  // vps\r\n  if (vpss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kVPS_NUT)\r\n    bufferWriter.writeUint16(vpss.length)\r\n    array.each(vpss, (vps) => {\r\n      bufferWriter.writeUint16(vps.length)\r\n      bufferWriter.writeBuffer(vps)\r\n    })\r\n  }\r\n\r\n  // sps\r\n  if (spss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kSPS_NUT)\r\n    bufferWriter.writeUint16(spss.length)\r\n    array.each(spss, (sps) => {\r\n      bufferWriter.writeUint16(sps.length)\r\n      bufferWriter.writeBuffer(sps)\r\n    })\r\n  }\r\n\r\n  // pps\r\n  if (ppss.length) {\r\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kPPS_NUT)\r\n    bufferWriter.writeUint16(ppss.length)\r\n    array.each(ppss, (pps) => {\r\n      bufferWriter.writeUint16(pps.length)\r\n      bufferWriter.writeBuffer(pps)\r\n    })\r\n  }\r\n\r\n  return buffer\r\n}\r\n\r\n/**\r\n * annexb extradata 转 avcc extradata\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length >= 2) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kVPS_NUT) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kSPS_NUT) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kPPS_NUT) {\r\n        ppss.push(nalu)\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      return vpsSpsPps2Extradata(vpss, spss, ppss)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 从 annexb 码流里面生成 annexb extradata\r\n * \r\n * 提取出 vps、 sps 和 pps\r\n * \r\n * @param data \r\n * @returns \r\n */\r\nexport function generateAnnexbExtradata(data: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length >= 2) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kVPS_NUT) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kSPS_NUT) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kPPS_NUT) {\r\n        ppss.push(nalu)\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      const nalus = [spss[0], ppss[0]]\r\n      if (vpss.length) {\r\n        nalus.unshift(vpss[0])\r\n      }\r\n      return naluUtil.joinNaluByStartCode(nalus, 0)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * annexb 格式的 NALU 转 avcc NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n */\r\nexport function annexb2Avcc(data: Uint8ArrayInterface, reverseSps: boolean = false) {\r\n  let extradata: Uint8Array\r\n  let key: boolean = false\r\n\r\n  let nalus = naluUtil.splitNaluByStartCode(data)\r\n\r\n  if (nalus.length) {\r\n    const vpss: Uint8ArrayInterface[] = []\r\n    const spss: Uint8ArrayInterface[] = []\r\n    const ppss: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kVPS_NUT) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kSPS_NUT) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kPPS_NUT) {\r\n        ppss.push(nalu)\r\n      }\r\n      if (type === VVCNaluType.kIDR_N_LP\r\n        || type === VVCNaluType.kIDR_W_RADL\r\n        || type === VVCNaluType.kCRA_NUT\r\n        || type === VVCNaluType.kGDR_NUT\r\n      ) {\r\n        key = true\r\n      }\r\n    })\r\n\r\n    if (spss.length && ppss.length) {\r\n      extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = (nalu[1] >>> 3) & 0x1f\r\n        return reverseSps\r\n          ? type !== VVCNaluType.kAUD_NUT\r\n          : (type !== VVCNaluType.kVPS_NUT\r\n            && type !== VVCNaluType.kSPS_NUT\r\n            && type !== VVCNaluType.kPPS_NUT\r\n            && type !== VVCNaluType.kAUD_NUT)\r\n      })\r\n    }\r\n    else {\r\n      nalus = nalus.filter((nalu) => {\r\n        const type = (nalu[1] >>> 3) & 0x1f\r\n        return type !== VVCNaluType.kAUD_NUT\r\n      })\r\n    }\r\n  }\r\n\r\n  const length = nalus.reduce((prev, nalu) => {\r\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length)\r\n  const buffer = mapUint8Array(bufferPointer, length)\r\n\r\n  naluUtil.joinNaluByLength(nalus, NALULengthSizeMinusOne, buffer)\r\n\r\n  return {\r\n    bufferPointer,\r\n    length,\r\n    extradata,\r\n    key\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n * @param vpss \r\n * @param spss \r\n * @param ppss \r\n * @param nalus \r\n * @returns \r\n */\r\nexport function nalus2Annexb(\r\n  vpss: Uint8ArrayInterface[],\r\n  spss: Uint8ArrayInterface[],\r\n  ppss: Uint8ArrayInterface[],\r\n  nalus: Uint8ArrayInterface[],\r\n  key: boolean\r\n) {\r\n  const lengths = [\r\n    naluUtil.joinNaluByStartCodeLength(vpss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(spss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(ppss, 0),\r\n    naluUtil.joinNaluByStartCodeLength(nalus, 2)\r\n  ]\r\n\r\n  let length = lengths.reduce((prev, length) => {\r\n    return prev + length\r\n  }, 0)\r\n\r\n  const bufferPointer: pointer<uint8> = avMalloc(length + 7)\r\n\r\n  let offset = bufferPointer\r\n\r\n  // AUD\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, 1)\r\n  intwrite.w8(offset++, 0)\r\n  intwrite.w8(offset++, (VVCNaluType.kAUD_NUT << 3) | 1)\r\n  intwrite.w8(offset++, (key ? 1 : 0) << 7 | 0x28)\r\n\r\n  if (vpss.length) {\r\n    naluUtil.joinNaluByStartCode(vpss, 0, mapUint8Array(offset, lengths[0]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[0])\r\n  }\r\n  if (spss.length) {\r\n    naluUtil.joinNaluByStartCode(spss, 0, mapUint8Array(offset, lengths[1]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[1])\r\n  }\r\n  if (ppss.length) {\r\n    naluUtil.joinNaluByStartCode(ppss, 0, mapUint8Array(offset, lengths[2]))\r\n    offset = reinterpret_cast<pointer<uint8>>(offset + lengths[2])\r\n  }\r\n  if (nalus.length) {\r\n    naluUtil.joinNaluByStartCode(nalus, 2, mapUint8Array(offset, lengths[3]))\r\n  }\r\n\r\n  return {\r\n    bufferPointer,\r\n    length: length + 7\r\n  }\r\n}\r\n\r\n/**\r\n * annexb 添加 sps pps\r\n * \r\n * @param data \r\n * @param extradata \r\n */\r\nexport function annexbAddExtradata(data: Uint8ArrayInterface, extradata: Uint8ArrayInterface) {\r\n  let nalus = naluUtil.splitNaluByStartCode(data).concat(naluUtil.splitNaluByStartCode(extradata))\r\n  if (nalus.length) {\r\n    let vpss: Uint8ArrayInterface[] = []\r\n    let spss: Uint8ArrayInterface[] = []\r\n    let ppss: Uint8ArrayInterface[] = []\r\n    let others: Uint8ArrayInterface[] = []\r\n\r\n    nalus.forEach((nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kVPS_NUT) {\r\n        vpss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kSPS_NUT) {\r\n        spss.push(nalu)\r\n      }\r\n      else if (type === VVCNaluType.kPPS_NUT) {\r\n        ppss.push(nalu)\r\n      }\r\n      else if (type !== VVCNaluType.kAUD_NUT) {\r\n        others.push(nalu)\r\n      }\r\n    })\r\n    return nalus2Annexb(vpss, spss, ppss, others, true)\r\n  }\r\n}\r\n\r\n/**\r\n * avcc 格式的 NALU 转 annexb NALU \r\n * \r\n * 需要保证 data 是 safe 的\r\n * \r\n */\r\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\r\n  const naluLengthSizeMinusOne = extradata ? ((extradata[0] >>> 1) & 0x03) : NALULengthSizeMinusOne\r\n\r\n  let vpss: Uint8ArrayInterface[] = []\r\n  let spss: Uint8ArrayInterface[] = []\r\n  let ppss: Uint8ArrayInterface[] = []\r\n  let key = false\r\n\r\n  if (extradata) {\r\n    const result = extradata2VpsSpsPps(extradata)\r\n    vpss = result.vpss\r\n    spss = result.spss\r\n    ppss = result.ppss\r\n    key = true\r\n  }\r\n\r\n  const nalus = naluUtil.splitNaluByLength(data, naluLengthSizeMinusOne).filter((nalu) => {\r\n    const type = (nalu[1] >>> 3) & 0x1f\r\n    return type !== VVCNaluType.kAUD_NUT\r\n  })\r\n\r\n  return {\r\n    ...nalus2Annexb(vpss, spss, ppss, nalus, key),\r\n    key\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParametersBySps(stream: AVStream, sps: Uint8ArrayInterface) {\r\n  const { profile, level, width, height, videoDelay, chromaFormatIdc, bitDepthMinus8 } = parseSPS(sps)\r\n  stream.codecpar.profile = profile\r\n  stream.codecpar.level = level\r\n  stream.codecpar.width = width\r\n  stream.codecpar.height = height\r\n  stream.codecpar.videoDelay = videoDelay\r\n\r\n  switch (bitDepthMinus8) {\r\n    case 0:\r\n      if (chromaFormatIdc === 3) {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P\r\n      }\r\n      else if (chromaFormatIdc === 2) {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P\r\n      }\r\n      else {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P\r\n      }\r\n      break\r\n    case 2:\r\n      if (chromaFormatIdc === 3) {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV444P10LE\r\n      }\r\n      else if (chromaFormatIdc === 2) {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV422P10LE\r\n      }\r\n      else {\r\n        stream.codecpar.format = AVPixelFormat.AV_PIX_FMT_YUV420P10LE\r\n      }\r\n      break\r\n  }\r\n}\r\n\r\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\r\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\r\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\r\n  }\r\n  let sps: Uint8ArrayInterface\r\n  if (extradata && naluUtil.isAnnexb(extradata)) {\r\n    array.each(naluUtil.splitNaluByStartCode(extradata), (nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kSPS_NUT) {\r\n        sps = nalu\r\n        return false\r\n      }\r\n    })\r\n  }\r\n  else if (extradata && extradata.length >= 6) {\r\n\r\n    stream.metadata.naluLengthSizeMinusOne = (extradata[0] >>> 1) & 0x03\r\n\r\n    const { spss } = extradata2VpsSpsPps(extradata)\r\n\r\n    if (spss.length) {\r\n      sps = spss[0]\r\n    }\r\n  }\r\n  if (sps) {\r\n    parseAVCodecParametersBySps(stream, sps)\r\n  }\r\n}\r\n\r\nexport function isIDR(avpacket: pointer<AVPacket>, naluLengthSize: int32 = 4) {\r\n  if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_H26X_ANNEXB) {\r\n    let nalus = naluUtil.splitNaluByStartCode(mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size)))\r\n    return nalus.some((nalu) => {\r\n      const type = (nalu[1] >>> 3) & 0x1f\r\n      return type === VVCNaluType.kIDR_N_LP || type === VVCNaluType.kIDR_W_RADL\r\n    })\r\n  }\r\n  else {\r\n    const size = avpacket.size\r\n    let i = 0\r\n    while (i < (size - naluLengthSize)) {\r\n      const type = (intread.r8(avpacket.data + (i + naluLengthSize + 1)) >>> 3) & 0x1f\r\n      if (type === VVCNaluType.kIDR_N_LP || type === VVCNaluType.kIDR_W_RADL) {\r\n        return true\r\n      }\r\n      if (naluLengthSize === 4) {\r\n        i += intread.rb32(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 3) {\r\n        i += intread.rb24(avpacket.data + i)\r\n      }\r\n      else if (naluLengthSize === 2) {\r\n        i += intread.rb16(avpacket.data + i)\r\n      }\r\n      else {\r\n        i += intread.r8(avpacket.data + i)\r\n      }\r\n      i += naluLengthSize\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n/* eslint-disable camelcase */\r\nexport interface VvcSPS {\r\n  profile: number\r\n  level: number\r\n  width: number\r\n  height: number\r\n  videoDelay: number\r\n  chromaFormatIdc: number\r\n  bitDepthMinus8: number\r\n  generalProfileSpace: number\r\n  tierFlag: number\r\n  generalConstraintInfo: number[]\r\n  generalSubProfileIdc: number[]\r\n  ptlFrameOnlyConstraintFlag: number\r\n  ptlMultilayerEnabledFlag: number\r\n  spsMaxSublayersMinus1: number\r\n  ptlSublayerLevelPresentFlag: number[]\r\n  sublayerLevelIdc: number[]\r\n  sps_log2_max_pic_order_cnt_lsb_minus4: number\r\n  sps_poc_msb_cycle_flag: number\r\n  sps_poc_msb_cycle_len_minus1: number\r\n  sps_num_extra_ph_bytes: number\r\n  sps_extra_ph_bit_present_flag: number[]\r\n}\r\n\r\nexport function parseSPS(sps: Uint8ArrayInterface): VvcSPS {\r\n  if (!sps || sps.length < 3) {\r\n    return\r\n  }\r\n\r\n  let offset = 0\r\n  if (sps[0] === 0x00\r\n    && sps[1] === 0x00\r\n    && sps[2] === 0x00\r\n    && sps[3] === 0x01\r\n  ) {\r\n    offset = 4\r\n  }\r\n\r\n  let profile = 0\r\n  let level = 0\r\n  let width = 0\r\n  let height = 0\r\n  let bitDepthMinus8 = 0\r\n  let chromaFormatIdc = 1\r\n  let generalProfileSpace = 0\r\n  let tierFlag = 0\r\n  let ptlFrameOnlyConstraintFlag = 0\r\n  let ptlMultilayerEnabledFlag = 0\r\n\r\n  const generalConstraintInfo = []\r\n  const ptlSublayerLevelPresentFlag = []\r\n  const sublayerLevelIdc = []\r\n  const generalSubProfileIdc = []\r\n\r\n  const buffer = naluUtil.naluUnescape(sps.subarray(offset))\r\n  const bitReader = new BitReader(buffer.length)\r\n  bitReader.appendBuffer(buffer)\r\n\r\n  // forbidden_zero_bit\r\n  bitReader.readU1()\r\n  // nuh_reserved_zero_bit\r\n  bitReader.readU1()\r\n  // layerId\r\n  bitReader.readU(6)\r\n  // nalu type\r\n  bitReader.readU(5)\r\n  // tid\r\n  bitReader.readU(3)\r\n\r\n  // sps_seq_parameter_set_id && sps_video_parameter_set_id\r\n  bitReader.readU(8)\r\n\r\n  const spsMaxSublayersMinus1 = bitReader.readU(3)\r\n  chromaFormatIdc = bitReader.readU(2)\r\n  const sps_log2_ctu_size_minus5 = bitReader.readU(2)\r\n  const sps_ptl_dpb_hrd_params_present_flag = bitReader.readU(1)\r\n  if (sps_ptl_dpb_hrd_params_present_flag) {\r\n    profile = bitReader.readU(7)\r\n    tierFlag = bitReader.readU(1)\r\n    level = bitReader.readU(8)\r\n    ptlFrameOnlyConstraintFlag = bitReader.readU(1)\r\n    ptlMultilayerEnabledFlag = bitReader.readU(1)\r\n    const gci_present_flag = bitReader.readU(1)\r\n    if (gci_present_flag) {\r\n      for (let j = 0; j < 8; j++) {\r\n        generalConstraintInfo[j] = bitReader.readU(8)\r\n      }\r\n      generalConstraintInfo[8] = bitReader.readU(7)\r\n      const gci_num_reserved_bits = bitReader.readU(8)\r\n      bitReader.readU(gci_num_reserved_bits)\r\n    }\r\n    bitReader.skipPadding()\r\n    for (let i = spsMaxSublayersMinus1 - 1; i >= 0; i--) {\r\n      ptlSublayerLevelPresentFlag[i] = bitReader.readU(1)\r\n    }\r\n    bitReader.skipPadding()\r\n    for (let i = spsMaxSublayersMinus1 - 1; i >= 0; i--) {\r\n      if (ptlSublayerLevelPresentFlag[i]) {\r\n        sublayerLevelIdc[i] = bitReader.readU(8)\r\n      }\r\n    }\r\n\r\n    const ptl_num_sub_profiles = bitReader.readU(8)\r\n    if (ptl_num_sub_profiles) {\r\n      for (let i = 0; i < ptl_num_sub_profiles; i++) {\r\n        generalSubProfileIdc[i] = bitReader.readU(32)\r\n      }\r\n    }\r\n  }\r\n\r\n  // sps_gdr_enabled_flag\r\n  bitReader.readU1()\r\n  const sps_ref_pic_resampling_enabled_flag = bitReader.readU1()\r\n  if (sps_ref_pic_resampling_enabled_flag) {\r\n    // sps_res_change_in_clvs_allowed_flag\r\n    bitReader.readU1()\r\n  }\r\n\r\n  const sps_pic_width_max_in_luma_samples = width = expgolomb.readUE(bitReader)\r\n  const sps_pic_height_max_in_luma_samples = height = expgolomb.readUE(bitReader)\r\n\r\n  if (bitReader.readU1()) {\r\n    // sps_conf_win_left_offset\r\n    expgolomb.readUE(bitReader)\r\n    // sps_conf_win_right_offset\r\n    expgolomb.readUE(bitReader)\r\n    // sps_conf_win_top_offset\r\n    expgolomb.readUE(bitReader)\r\n    // sps_conf_win_bottom_offset\r\n    expgolomb.readUE(bitReader)\r\n  }\r\n\r\n  if (bitReader.readU1()) {\r\n    const sps_num_subpics_minus1 = expgolomb.readUE(bitReader)\r\n    const ctb_log2_size_y = sps_log2_ctu_size_minus5 + 5\r\n    const ctb_size_y      = 1 << ctb_log2_size_y\r\n    const tmp_width_val   = sps_pic_width_max_in_luma_samples / (1 << ctb_log2_size_y)\r\n    const tmp_height_val  = sps_pic_height_max_in_luma_samples / (1 << ctb_log2_size_y)\r\n    const wlen            = Math.ceil(Math.log2(tmp_width_val))\r\n    const hlen            = Math.ceil(Math.log2(tmp_height_val))\r\n\r\n    let sps_subpic_id_len = 0\r\n    let sps_subpic_same_size_flag = 0\r\n    let sps_independent_subpics_flag = 0\r\n    // sps_num_subpics_minus1\r\n    if (sps_num_subpics_minus1 > 0) {\r\n      sps_independent_subpics_flag = bitReader.readU1()\r\n      sps_subpic_same_size_flag = bitReader.readU1()\r\n    }\r\n    for (let i = 0; sps_num_subpics_minus1 > 0 && i <= sps_num_subpics_minus1; i++) {\r\n      if (!sps_subpic_same_size_flag || i == 0) {\r\n        if (i > 0 && sps_pic_width_max_in_luma_samples > ctb_size_y) {\r\n          bitReader.readU(wlen)\r\n        }\r\n        if (i > 0 && sps_pic_height_max_in_luma_samples > ctb_size_y) {\r\n          bitReader.readU(hlen)\r\n        }\r\n        if (i < sps_num_subpics_minus1 && sps_pic_width_max_in_luma_samples > ctb_size_y) {\r\n          bitReader.readU(wlen)\r\n        }\r\n        if (i < sps_num_subpics_minus1 && sps_pic_height_max_in_luma_samples > ctb_size_y) {\r\n          bitReader.readU(hlen)\r\n        }\r\n      }\r\n      if (!sps_independent_subpics_flag) {\r\n        // sps_subpic_treated_as_pic_flag && sps_loop_filter_across_subpic_enabled_flag\r\n        bitReader.readU(2)\r\n      }\r\n    }\r\n    sps_subpic_id_len = expgolomb.readUE(bitReader) + 1\r\n    // sps_subpic_id_mapping_explicitly_signalled_flag\r\n    if (bitReader.readU(1)) {\r\n      // sps_subpic_id_mapping_present_flag\r\n      if (bitReader.readU(1)) {\r\n        for (let i = 0; i <= sps_num_subpics_minus1; i++) {\r\n          // sps_subpic_id[i]\r\n          bitReader.readU(sps_subpic_id_len)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  bitDepthMinus8 = expgolomb.readUE(bitReader)\r\n\r\n  // sps_entropy_coding_sync_enabled_flag\r\n  bitReader.readU(1)\r\n  // sps_entry_point_offsets_present_flag\r\n  bitReader.readU(1)\r\n\r\n  const sps_log2_max_pic_order_cnt_lsb_minus4 = bitReader.readU(4)\r\n  const sps_poc_msb_cycle_flag = bitReader.readU(1)\r\n  let sps_poc_msb_cycle_len_minus1 = 0\r\n  if (sps_poc_msb_cycle_flag) {\r\n    sps_poc_msb_cycle_len_minus1 = expgolomb.readUE(bitReader)\r\n  }\r\n  const sps_extra_ph_bit_present_flag: number[] = []\r\n  const sps_num_extra_ph_bytes = bitReader.readU(2)\r\n  for (let i = 0; i < (sps_num_extra_ph_bytes * 8); i++) {\r\n    sps_extra_ph_bit_present_flag[i] = bitReader.readU(1)\r\n  }\r\n\r\n  const videoDelay = (spsMaxSublayersMinus1 + 1)  > 2 ? 2 : spsMaxSublayersMinus1\r\n\r\n  return {\r\n    profile,\r\n    level,\r\n    width,\r\n    height,\r\n    videoDelay,\r\n    chromaFormatIdc,\r\n    bitDepthMinus8,\r\n    generalProfileSpace,\r\n    tierFlag,\r\n    generalConstraintInfo,\r\n    generalSubProfileIdc,\r\n    ptlFrameOnlyConstraintFlag,\r\n    ptlMultilayerEnabledFlag,\r\n    spsMaxSublayersMinus1,\r\n    ptlSublayerLevelPresentFlag,\r\n    sublayerLevelIdc,\r\n    sps_log2_max_pic_order_cnt_lsb_minus4,\r\n    sps_poc_msb_cycle_flag,\r\n    sps_poc_msb_cycle_len_minus1,\r\n    sps_num_extra_ph_bytes,\r\n    sps_extra_ph_bit_present_flag\r\n  }\r\n}\r\n\r\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\r\n\r\n  if (naluUtil.isAnnexb(extradata)) {\r\n    extradata = annexbExtradata2AvccExtradata(extradata)\r\n  }\r\n\r\n  const bitReader = new BitReader()\r\n  bitReader.appendBuffer(extradata)\r\n  const ptlPresentFlag = bitReader.readU(8) & 0x01\r\n  if (ptlPresentFlag) {\r\n    return parsePTL(bitReader)\r\n  }\r\n  return {} as Data\r\n}\r\n","/*\r\n * libmedia constant\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Rational } from './struct/rational'\r\n\r\nexport const NOPTS_VALUE_BIGINT: int64 = -1n\r\n\r\nexport const NOPTS_VALUE: int32 = -1\r\n\r\nexport const AV_TIME_BASE: int32 = 1000000\r\n\r\nexport const AV_MILLI_TIME_BASE: int32 = 1000\r\n\r\nexport const AV_NANO_TIME_BASE: int32 = 1000000000\r\n\r\nexport const NTP_OFFSET = 2208988800n\r\nexport const NTP_OFFSET_US = (NTP_OFFSET * 1000000n)\r\n\r\n/**\r\n * 微秒时间基\r\n */\r\nexport const AV_TIME_BASE_Q = new Rational({den: AV_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 毫秒时间基\r\n */\r\nexport const AV_MILLI_TIME_BASE_Q = new Rational({den: AV_MILLI_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 纳秒时间基\r\n */\r\nexport const AV_NANO_TIME_BASE_Q = new Rational({den: AV_NANO_TIME_BASE, num: 1})\r\n\r\n/**\r\n * 秒时间基\r\n */\r\nexport const AV_TIME_BASE1_Q = new Rational({den: 1, num: 1})\r\n\r\nexport const INT8_MAX: int8 = 127\r\nexport const INT16_MAX: int16 = 32767\r\nexport const INT32_MAX: int32 = 2147483647\r\nexport const INT64_MAX: int64 = 9223372036854775807n\r\n\r\nexport const INT8_MIN: int8  = -128\r\nexport const INT16_MIN: int16 = -32768\r\nexport const INT32_MIN: int32 = -INT32_MAX - 1\r\n\r\nexport const UINT8_MAX: uint8 = 255\r\nexport const UINT16_MAX: uint16 = 65535\r\nexport const UINT32_MAX: uint32 = 4294967295\r\nexport const UINT64_MAX: uint64 = 18446744073709551615n\r\n","\r\n/*\r\n * libmedia error defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport const FORMAT_NOT_SUPPORT = -1\r\n\r\nexport const DATA_INVALID = -2\r\n\r\nexport const INVALID_ARGUMENT = -3\r\n\r\nexport const NO_MEMORY = -4\r\n\r\nexport const INVALID_OPERATE = -5\r\n\r\nexport const EAGAIN = -6\r\n\r\nexport const EOF = -7\r\n\r\nexport const CODEC_NOT_SUPPORT = -8\r\n\r\nexport const OPERATE_NOT_SUPPORT = -9\r\n\r\nexport const INVALID_PARAMETERS = -10\r\n","/*\r\n * libmedia analyzeAVFormat\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVFormat } from '../avformat'\r\nimport IOReader from 'common/io/IOReader'\r\n\r\nexport default async function analyzeAVFormat(ioReader: IOReader, defaultFormat: AVFormat = AVFormat.UNKNOWN): Promise<AVFormat> {\r\n  let magic = await ioReader.peekString(8)\r\n  if (/^FLV/.test(magic)) {\r\n    return AVFormat.FLV\r\n  }\r\n  else if (/^DKIF/.test(magic)) {\r\n    return AVFormat.IVF\r\n  }\r\n  else if (/^ftyp/.test(magic.slice(4, 8))) {\r\n    return AVFormat.MP4\r\n  }\r\n  else if (/^OggS/.test(magic)) {\r\n    return AVFormat.OGG\r\n  }\r\n  else if (/^ID3/.test(magic)) {\r\n    return AVFormat.MP3\r\n  }\r\n  else if (/^fLaC/.test(magic)) {\r\n    return AVFormat.FLAC\r\n  }\r\n  else if (/^RIFF/.test(magic)) {\r\n    const dataType = (await ioReader.peekString(12)).slice(8)\r\n    if (/^WAVE/.test(dataType)) {\r\n      return AVFormat.WAV\r\n    }\r\n    else if (/^AVI/.test(dataType)) {\r\n      return AVFormat.AVI\r\n    }\r\n  }\r\n  else if (/^ADIF/.test(magic)) {\r\n    return AVFormat.AAC\r\n  }\r\n  else if ((await ioReader.peekUint32()) === 0x1A45DFA3) {\r\n    return AVFormat.MATROSKA\r\n  }\r\n  else if (/^WEBVTT/.test(magic)) {\r\n    return AVFormat.WEBVTT\r\n  }\r\n  // 私有的 magic\r\n  else if (/^LIMA/.test(magic)) {\r\n    await ioReader.skip(4)\r\n    return await ioReader.readUint16() as AVFormat\r\n  }\r\n  else {\r\n    const buf = await ioReader.peekBuffer(2)\r\n    switch (buf[0]) {\r\n      case 0x56:\r\n        if ((buf[1] & 0xe0) === 0xe0) {\r\n          return AVFormat.AAC\r\n        }\r\n        break\r\n      case 0xff:\r\n        if ((buf[1] & 0xf6) === 0xf0) {\r\n          return AVFormat.AAC\r\n        }\r\n        else if ([0xf2, 0xf4, 0xf6, 0xfa, 0xfc].includes(buf[1] & 0xfe)) {\r\n          return AVFormat.MP3\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return defaultFormat\r\n}\r\n","/* libmedia check is ioloader protocol\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { IOType } from '../avformat'\r\nimport { Ext2IOLoader } from '../stringEnum'\r\nimport concatTypeArray from 'common/function/concatTypeArray'\r\nimport { Data, HttpOptions } from 'common/types/type'\r\nimport * as object from 'common/util/object'\r\nimport * as text from 'common/util/text'\r\nimport * as urlUtils from 'common/util/url'\r\nimport * as array from 'common/util/array'\r\n\r\nconst RestExt = ['php', 'asp', 'aspx', 'jsp', 'do', 'pl']\r\n\r\nasync function analyzeUrlFileExt(url: string, httpOptions: HttpOptions = {}) {\r\n  const params: RequestInit = {\r\n    method: 'GET',\r\n    headers: {},\r\n    mode: 'cors',\r\n    cache: 'default',\r\n    referrerPolicy: 'no-referrer-when-downgrade'\r\n  }\r\n  if (httpOptions.headers) {\r\n    object.each(httpOptions.headers, (value, key) => {\r\n      params.headers[key] = value\r\n    })\r\n  }\r\n  if (httpOptions.credentials) {\r\n    params.credentials = httpOptions.credentials\r\n  }\r\n  if (httpOptions.referrerPolicy) {\r\n    params.referrerPolicy = httpOptions.referrerPolicy\r\n  }\r\n  let abortController: AbortController\r\n  if (typeof AbortController === 'function') {\r\n    abortController = new AbortController()\r\n    params.signal = abortController.signal\r\n  }\r\n  const res = await fetch(url, params)\r\n  if (res.ok && (res.status >= 200 && res.status <= 299)) {\r\n    const reader = res.body.getReader()\r\n    const buffers: Uint8Array[] = []\r\n    let len = 0\r\n    while (true) {\r\n      let result = await reader.read()\r\n      if (result.done) {\r\n        break\r\n      }\r\n      len += result.value.length\r\n      buffers.push(result.value)\r\n      if (len >= 100) {\r\n        break\r\n      }\r\n    }\r\n    if (abortController) {\r\n      abortController.abort()\r\n    }\r\n    if (buffers.length) {\r\n      const buffer = buffers.length > 1 ? concatTypeArray(Uint8Array, buffers) : buffers[0]\r\n      if (buffer.length) {\r\n        const context = text.decode(buffer.subarray(0, 100))\r\n        if (/<\\?xml/.test(context)) {\r\n          if (context.indexOf('<MPD') > -1) {\r\n            return 'mpd'\r\n          }\r\n        }\r\n        else if (/#EXTM3U/.test(context)) {\r\n          return 'm3u8'\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nexport default async function analyzeUrlIOLoader(source: string, defaultExt: string = '', httpOptions: HttpOptions = {}) {\r\n  let type: IOType\r\n  let ext: string = ''\r\n  let info: Data = {\r\n    url: source\r\n  }\r\n\r\n  if (defined(ENABLE_PROTOCOL_RTSP) && /^rtsp/.test(source)\r\n    || defined(ENABLE_PROTOCOL_RTMP) && /^rtmp/.test(source)\r\n  ) {\r\n    if (defined(ENABLE_PROTOCOL_RTSP) && /^rtsp/.test(source)) {\r\n      ext = 'rtsp'\r\n    }\r\n    else if (defined(ENABLE_PROTOCOL_RTMP) && /^rtmp/.test(source)) {\r\n      ext = 'rtmp'\r\n    }\r\n    type = IOType.WEBSOCKET\r\n    const protocol = urlUtils.parse(source).protocol\r\n    const subProtocol = protocol.split('+')[1] || 'wss'\r\n    if (subProtocol === 'wss' || subProtocol === 'ws') {\r\n      type = IOType.WEBSOCKET\r\n    }\r\n    else if (subProtocol === 'webtransport') {\r\n      type = IOType.WEBTRANSPORT\r\n    }\r\n    info.url = info.url.replace(/^\\S+:\\/\\//, subProtocol + '://')\r\n    if (ext === 'rtmp') {\r\n      info.subProtocol = type\r\n      type = IOType.RTMP\r\n    }\r\n  }\r\n  else {\r\n\r\n    const protocol = urlUtils.parse(source).protocol\r\n\r\n    ext = defaultExt || urlUtils.parse(source).file.split('.').pop()\r\n    // 没有文件后缀，我们需要分析是不是 m3u8 和 mpd 文件\r\n    // 这两种格式需要提前知道来创建指定的 ioloader\r\n    if ((!ext || array.has(RestExt, ext)) && /^https?/.test(protocol)) {\r\n      ext = await analyzeUrlFileExt(source, httpOptions)\r\n    }\r\n\r\n    let defaultType: IOType = IOType.Fetch\r\n    if (protocol === 'wss' || protocol === 'ws') {\r\n      defaultType = IOType.WEBSOCKET\r\n    }\r\n    else if (protocol === 'webtransport') {\r\n      defaultType = IOType.WEBTRANSPORT\r\n    }\r\n    type = Ext2IOLoader[ext] ?? defaultType\r\n  }\r\n\r\n  return {\r\n    type,\r\n    ext,\r\n    info\r\n  }\r\n}\r\n","/* libmedia AudioData to AVFrame utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { createAVFrame, getAudioBuffer } from '../util/avframe'\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\nimport AVFrame from '../struct/avframe'\r\nimport { sampleFormatIsPlanar } from '../util/sample'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport { AV_TIME_BASE, NOPTS_VALUE_BIGINT } from '../constant'\r\n\r\nfunction mapFormat(format: AudioSampleFormat) {\r\n  switch (format) {\r\n    case 'u8':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_U8\r\n    case 's16':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_S16\r\n    case 's32':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_S32\r\n    case 'f32':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_FLT\r\n    case 'u8-planar':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_U8P\r\n    case 's16-planar':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_S16P\r\n    case 's32-planar':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_S32P\r\n    case 'f32-planar':\r\n      return AVSampleFormat.AV_SAMPLE_FMT_FLTP\r\n    default:\r\n      throw new Error('not support')\r\n  }\r\n}\r\n\r\nexport function audioData2AVFrame(audioData: AudioData, avframe: pointer<AVFrame> = nullptr) {\r\n  if (avframe === nullptr) {\r\n    avframe = createAVFrame()\r\n  }\r\n\r\n  avframe.sampleRate = audioData.sampleRate\r\n  avframe.nbSamples = audioData.numberOfFrames\r\n  avframe.chLayout.nbChannels = audioData.numberOfChannels\r\n  avframe.format = mapFormat(audioData.format)\r\n  avframe.pts = audioData.timestamp < 0 ? NOPTS_VALUE_BIGINT : static_cast<int64>(audioData.timestamp)\r\n  avframe.duration = static_cast<int64>(audioData.duration)\r\n  avframe.timeBase.den = AV_TIME_BASE\r\n  avframe.timeBase.num = 1\r\n\r\n  getAudioBuffer(avframe)\r\n\r\n  const planar = sampleFormatIsPlanar(avframe.format)\r\n  const planes = planar ? avframe.chLayout.nbChannels : 1\r\n\r\n  for (let i = 0; i < planes; i++) {\r\n    audioData.copyTo(mapUint8Array(avframe.extendedData[i], reinterpret_cast<size>(avframe.linesize[0])), {\r\n      planeIndex: i\r\n    })\r\n  }\r\n\r\n  return avframe\r\n}\r\n","/*\r\n * libmedia AVFrame to AudioData utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { mapFloat32Array, mapInt16Array, mapInt32Array, mapUint8Array } from 'cheap/std/memory'\r\nimport AVFrame from '../struct/avframe'\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\nimport { getBytesPerSample, sampleFormatIsPlanar } from '../util/sample'\r\nimport { avRescaleQ2 } from '../util/rational'\r\nimport { AV_TIME_BASE_Q, NOPTS_VALUE_BIGINT } from '../constant'\r\n\r\nfunction mapFormat(avframe: pointer<AVFrame>) {\r\n  switch (avframe.format) {\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8:\r\n      return 'u8'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16:\r\n      return 's16'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32:\r\n      return 's32'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLT:\r\n      return 'f32'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8P:\r\n      return 'u8-planar'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16P:\r\n      return 's16-planar'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32P:\r\n      return 's32-planar'\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLTP:\r\n      return 'f32-planar'\r\n    default:\r\n      throw new Error('not support')\r\n  }\r\n}\r\n\r\nfunction mapBuffer(format: AVSampleFormat, data: Uint8Array) {\r\n  switch (format) {\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8P:\r\n      return data\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16P:\r\n      return new Int16Array(data.buffer)\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32P:\r\n      return new Int32Array(data.buffer)\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLT:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLTP:\r\n      return new Float32Array(data.buffer)\r\n    default:\r\n      throw new Error('not support')\r\n  }\r\n}\r\n\r\nfunction mapTypeBuffer(format: AVSampleFormat, pointer: pointer<void>, size: int32) {\r\n  switch (format) {\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_U8P:\r\n      return mapUint8Array(pointer, reinterpret_cast<size>(size))\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S16P:\r\n      return mapInt16Array(reinterpret_cast<pointer<int16>>(pointer), size >>> 1)\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_S32P:\r\n      return mapInt32Array(reinterpret_cast<pointer<int32>>(pointer), size >>> 2)\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLT:\r\n    case AVSampleFormat.AV_SAMPLE_FMT_FLTP:\r\n      return mapFloat32Array(reinterpret_cast<pointer<float>>(pointer), size >>> 2)\r\n    default:\r\n      throw new Error('not support')\r\n  }\r\n}\r\n\r\nexport function avframe2AudioData(avframe: pointer<AVFrame>, pts?: int64) {\r\n\r\n  const planar = sampleFormatIsPlanar(avframe.format)\r\n  const planes = planar ? avframe.chLayout.nbChannels : 1\r\n\r\n  let data: ArrayBufferView\r\n\r\n  const sampleSize = getBytesPerSample(avframe.format)\r\n\r\n  if (planar) {\r\n    const linesize = avframe.nbSamples *  sampleSize\r\n    const buffer = new Uint8Array(planes * linesize)\r\n    let offset = 0\r\n    for (let i = 0; i < planes; i++) {\r\n      buffer.set(mapUint8Array(avframe.data[i], linesize), offset)\r\n      offset += linesize\r\n    }\r\n    data = mapBuffer(avframe.format, buffer)\r\n  }\r\n  else {\r\n    data = mapTypeBuffer(avframe.format, avframe.data[0], sampleSize * avframe.nbSamples * avframe.chLayout.nbChannels)\r\n  }\r\n\r\n  const audioData = new AudioData({\r\n    data,\r\n    format: mapFormat(avframe),\r\n    sampleRate: avframe.sampleRate,\r\n    numberOfFrames: avframe.nbSamples,\r\n    numberOfChannels: avframe.chLayout.nbChannels,\r\n    timestamp: pts\r\n      ? static_cast<double>(pts)\r\n      : (avframe.pts === NOPTS_VALUE_BIGINT\r\n        ? -1\r\n        : static_cast<double>(avRescaleQ2(avframe.pts, addressof(avframe.timeBase), AV_TIME_BASE_Q))\r\n      )\r\n  })\r\n  return audioData\r\n}\r\n","/*\r\n * libmedia AVFrame to VideoFrame utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVFrame from '../struct/avframe'\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport { AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVPixelFormat } from '../pixfmt'\r\nimport { avRescaleQ2 } from '../util/rational'\r\nimport { AV_TIME_BASE_Q } from '../constant'\r\nimport { getHeap } from 'cheap/heap'\r\nimport * as object from 'common/util/object'\r\n\r\nexport function avPixelFormat2Format(pixfmt: AVPixelFormat) {\r\n  switch (pixfmt) {\r\n    case AVPixelFormat.AV_PIX_FMT_YUV420P:\r\n      return 'I420'\r\n    case AVPixelFormat.AV_PIX_FMT_YUVA420P:\r\n      return 'I420A'\r\n    case AVPixelFormat.AV_PIX_FMT_YUV422P:\r\n      return 'I422'\r\n    case AVPixelFormat.AV_PIX_FMT_YUV444P:\r\n      return 'I444'\r\n    case AVPixelFormat.AV_PIX_FMT_BGRA:\r\n      return 'BGRA'\r\n    case AVPixelFormat.AV_PIX_FMT_RGBA:\r\n      return 'RGBA'\r\n    case AVPixelFormat.AV_PIX_FMT_NV12:\r\n      return 'NV12'\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nexport function getVideoColorSpaceInit(avframe: pointer<AVFrame>) {\r\n  const init: VideoColorSpaceInit = {\r\n    fullRange: false,\r\n    matrix: null,\r\n    primaries: null,\r\n    transfer: null\r\n  }\r\n\r\n  switch (avframe.colorSpace) {\r\n    case AVColorSpace.AVCOL_SPC_BT709:\r\n      init.matrix = 'bt709'\r\n      break\r\n    case AVColorSpace.AVCOL_SPC_SMPTE170M:\r\n      init.matrix = 'smpte170m'\r\n      break\r\n    case AVColorSpace.AVCOL_SPC_BT470BG:\r\n      init.matrix = 'bt470bg'\r\n      break\r\n    case AVColorSpace.AVCOL_SPC_RGB:\r\n      init.matrix = 'rgb'\r\n      break\r\n    default:\r\n      init.matrix = 'bt709'\r\n      break\r\n  }\r\n\r\n  switch (avframe.colorPrimaries) {\r\n    case AVColorPrimaries.AVCOL_PRI_BT709:\r\n      init.primaries = 'bt709'\r\n      break\r\n    case AVColorPrimaries.AVCOL_PRI_BT470BG:\r\n      init.primaries = 'bt470bg'\r\n      break\r\n    case AVColorPrimaries.AVCOL_PRI_SMPTE170M:\r\n      init.primaries = 'smpte170m'\r\n      break\r\n    default:\r\n      init.primaries = 'bt709'\r\n      break\r\n  }\r\n\r\n  switch (avframe.colorTrc) {\r\n    case AVColorTransferCharacteristic.AVCOL_TRC_BT709:\r\n      init.transfer = 'bt709'\r\n      break\r\n    case AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_1:\r\n      init.transfer = 'iec61966-2-1'\r\n      break\r\n    case AVColorTransferCharacteristic.AVCOL_TRC_SMPTE170M:\r\n      init.transfer = 'smpte170m'\r\n      break\r\n    default:\r\n      init.transfer = 'bt709'\r\n      break\r\n  }\r\n\r\n  if (avframe.colorRange === AVColorRange.AVCOL_RANGE_JPEG) {\r\n    init.fullRange = true\r\n  }\r\n\r\n  return init\r\n}\r\n\r\nexport function avframe2VideoFrame(avframe: pointer<AVFrame>, pts?: int64, videoFrameInit: Partial<VideoFrameBufferInit> = {}) {\r\n\r\n  let height = avframe.height\r\n\r\n  const des = getAVPixelFormatDescriptor(avframe.format as AVPixelFormat)\r\n\r\n  const layout: PlaneLayout[] = []\r\n\r\n  for (let i = 0; i < des.comp.length; i++) {\r\n    layout.push({\r\n      offset: reinterpret_cast<double>(avframe.data[i]),\r\n      stride: avframe.linesize[i]\r\n    })\r\n  }\r\n\r\n  const init: VideoFrameBufferInit = object.extend({\r\n    codedWidth: avframe.width,\r\n    codedHeight: height,\r\n    timestamp: pts ? static_cast<double>(pts) : static_cast<double>(avRescaleQ2(avframe.pts, addressof(avframe.timeBase), AV_TIME_BASE_Q)),\r\n    format: avPixelFormat2Format(avframe.format),\r\n    duration: static_cast<double>(avRescaleQ2(avframe.duration, addressof(avframe.timeBase), AV_TIME_BASE_Q)),\r\n    layout,\r\n    colorSpace: getVideoColorSpaceInit(avframe),\r\n    visibleRect: {\r\n      x: reinterpret_cast<double>(avframe.cropLeft),\r\n      y: reinterpret_cast<double>(avframe.cropTop),\r\n      width: avframe.width - reinterpret_cast<int32>((avframe.cropLeft + avframe.cropRight) as size),\r\n      height: avframe.height - reinterpret_cast<int32>((avframe.cropTop + avframe.cropBottom) as size)\r\n    }\r\n  }, videoFrameInit)\r\n  return new VideoFrame(getHeap(), init)\r\n}\r\n","/* libmedia AVPacket to EncodedAudioChunk utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { avRescaleQ2 } from '../util/rational'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport { AV_TIME_BASE_Q, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\r\n\r\nexport default function avpacket2EncodedAudioChunk(avpacket: pointer<AVPacket>) {\r\n  const key = avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY\r\n  return new EncodedAudioChunk({\r\n    type: key ? 'key' : 'delta',\r\n    timestamp: avpacket.pts === NOPTS_VALUE_BIGINT ? NOPTS_VALUE : static_cast<double>(avRescaleQ2(avpacket.pts, addressof(avpacket.timeBase), AV_TIME_BASE_Q)),\r\n    data: mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size))\r\n  })\r\n}\r\n","/* libmedia AVPacket to EncodedVideoChunk utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { avRescaleQ2 } from '../util/rational'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport { AV_TIME_BASE_Q, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\r\n\r\nexport default function avpacket2EncodedVideoChunk(avpacket: pointer<AVPacket>) {\r\n  const key = avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY\r\n  return new EncodedVideoChunk({\r\n    type: key ? 'key' : 'delta',\r\n    timestamp: avpacket.pts === NOPTS_VALUE_BIGINT ? NOPTS_VALUE : static_cast<double>(avRescaleQ2(avpacket.pts, addressof(avpacket.timeBase), AV_TIME_BASE_Q)),\r\n    data: mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size))\r\n  })\r\n}\r\n","/* libmedia compile resource\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport * as cheapConfig from 'cheap/config'\r\nimport compile, { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport * as is from 'common/util/is'\r\n\r\nexport default async function compileResource(wasmUrl: string | ArrayBuffer | WebAssemblyResource, thread: boolean = false) {\r\n  let resource: WebAssemblyResource\r\n\r\n  if (is.string(wasmUrl) || is.arrayBuffer(wasmUrl)) {\r\n    resource = await compile({\r\n      source: wasmUrl\r\n    })\r\n    if (cheapConfig.USE_THREADS && defined(ENABLE_THREADS) && thread) {\r\n      resource.threadModule = await compile(\r\n        {\r\n          source: resource.buffer\r\n        },\r\n        {\r\n          child: true\r\n        }\r\n      )\r\n    }\r\n    delete resource.buffer\r\n  }\r\n  else {\r\n    resource = wasmUrl\r\n  }\r\n\r\n  return resource\r\n}\r\n","/* libmedia EncodedAudioChunk to AVPacket utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { addAVPacketData, addAVPacketSideData, createAVPacket } from '../util/avpacket'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport { avMalloc } from '../util/mem'\r\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport { AV_TIME_BASE } from '../constant'\r\nimport { AVPacketSideDataType } from '../codec'\r\n\r\nexport default function encodedAudioChunk2AVPacket(chunk: EncodedAudioChunk, avpacket: pointer<AVPacket> = nullptr, metadata?: EncodedAudioChunkMetadata) {\r\n  if (avpacket === nullptr) {\r\n    avpacket = createAVPacket()\r\n  }\r\n\r\n  avpacket.pts = avpacket.dts = static_cast<int64>(chunk.timestamp)\r\n  avpacket.duration = static_cast<int64>(chunk.duration || 0)\r\n  avpacket.timeBase.den = AV_TIME_BASE\r\n  avpacket.timeBase.num = 1\r\n  avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\r\n  const data: pointer<uint8> = avMalloc(chunk.byteLength)\r\n  chunk.copyTo(mapUint8Array(data, chunk.byteLength))\r\n  addAVPacketData(avpacket, data, chunk.byteLength)\r\n\r\n  if (metadata) {\r\n    if (metadata.decoderConfig?.description) {\r\n      let buffer: Uint8Array\r\n      if (metadata.decoderConfig.description instanceof ArrayBuffer) {\r\n        buffer = new Uint8Array(metadata.decoderConfig.description)\r\n      }\r\n      else {\r\n        buffer = new Uint8Array(metadata.decoderConfig.description.buffer)\r\n      }\r\n      const extradata = avMalloc(buffer.length)\r\n      memcpyFromUint8Array(extradata, buffer.length, buffer)\r\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradata, buffer.length)\r\n    }\r\n  }\r\n}\r\n","/* libmedia EncodedVideoChunk to AVPacket utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { addAVPacketData, addAVPacketSideData, createAVPacket } from '../util/avpacket'\r\nimport AVPacket, { AVPacketFlags } from '../struct/avpacket'\r\nimport { avMalloc } from '../util/mem'\r\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\r\nimport { AV_TIME_BASE } from '../constant'\r\nimport { AVPacketSideDataType } from '../codec'\r\n\r\nexport default function encodedVideoChunk2AVPacket(chunk: EncodedVideoChunk, avpacket: pointer<AVPacket> = nullptr, metadata?: EncodedVideoChunkMetadata & {\r\n  svc?: {\r\n    temporalLayerId: number\r\n  }\r\n  alphaSideData?: BufferSource\r\n}) {\r\n  if (avpacket === nullptr) {\r\n    avpacket = createAVPacket()\r\n  }\r\n\r\n  avpacket.pts = static_cast<int64>(chunk.timestamp)\r\n  avpacket.timeBase.den = AV_TIME_BASE\r\n  avpacket.timeBase.num = 1\r\n  avpacket.duration = static_cast<int64>(chunk.duration)\r\n  const data: pointer<uint8> = avMalloc(chunk.byteLength)\r\n  chunk.copyTo(mapUint8Array(data, chunk.byteLength))\r\n\r\n  addAVPacketData(avpacket, data, chunk.byteLength)\r\n\r\n  if (metadata) {\r\n    if (metadata.decoderConfig?.description) {\r\n      let buffer: Uint8Array\r\n      if (metadata.decoderConfig.description instanceof ArrayBuffer) {\r\n        buffer = new Uint8Array(metadata.decoderConfig.description)\r\n      }\r\n      else {\r\n        buffer = new Uint8Array(metadata.decoderConfig.description.buffer)\r\n      }\r\n      const extradata = avMalloc(buffer.length)\r\n      memcpyFromUint8Array(extradata, buffer.length, buffer)\r\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradata, buffer.length)\r\n    }\r\n    if (metadata.alphaSideData) {\r\n      const extradata = avMalloc(metadata.alphaSideData.byteLength)\r\n      let buffer: Uint8Array\r\n      if (metadata.alphaSideData instanceof ArrayBuffer) {\r\n        buffer = new Uint8Array(metadata.alphaSideData)\r\n      }\r\n      else {\r\n        buffer = new Uint8Array(metadata.alphaSideData.buffer)\r\n      }\r\n      memcpyFromUint8Array(extradata, buffer.length, buffer)\r\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL, extradata, buffer.length)\r\n    }\r\n  }\r\n\r\n  if (chunk.type === 'key') {\r\n    avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\r\n  }\r\n}\r\n","/*\r\n * libmedia generate audio codec string\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID } from '../codec'\r\nimport { CodecId2MimeType } from '../stringEnum'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\n\r\nexport default function getAudioCodec(codecpar: pointer<AVCodecParameters>) {\r\n\r\n  const codecId = codecpar.codecId\r\n  let profile = codecpar.profile\r\n\r\n  let codec = CodecId2MimeType[codecId]\r\n\r\n  if (codecId === AVCodecID.AV_CODEC_ID_AAC) {\r\n    /*\r\n     * mp4a.40.profile\r\n     * url: https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#iso_base_media_file_format_mp4_quicktime_and_3gp\r\n     */\r\n    codec = `${codec}.${profile}`\r\n  }\r\n  return codec || 'unknown'\r\n}\r\n","/*\r\n * libmedia webcodec hardware preference different chrome version\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport browser from 'common/util/browser'\r\n\r\nexport function getHardwarePreference(enable: boolean): HardwareAcceleration {\r\n  if (enable) {\r\n    if (!browser.chrome || browser.checkVersion(browser.majorVersion, '94', true)) {\r\n      return 'prefer-hardware'\r\n    }\r\n    else {\r\n      return 'allow' as HardwareAcceleration\r\n    }\r\n  }\r\n  else {\r\n    if (!browser.chrome || browser.checkVersion(browser.majorVersion, '94', true)) {\r\n      return 'prefer-software'\r\n    }\r\n    else {\r\n      return 'deny' as HardwareAcceleration\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia generate video codec string\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID } from '../codec'\r\nimport { CodecId2MimeType } from '../stringEnum'\r\nimport { H264Profile } from '../codecs/h264'\r\nimport * as av1 from '../codecs/av1'\r\nimport * as vp8 from '../codecs/vp8'\r\nimport * as vp9 from '../codecs/vp9'\r\nimport * as vvc from '../codecs/vvc'\r\nimport * as hevc from '../codecs/hevc'\r\nimport * as string from 'common/util/string'\r\nimport { NOPTS_VALUE } from '../constant'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport { mapUint8Array } from 'cheap/std/memory'\r\nimport * as base32 from 'common/util/base32'\r\nimport * as naluUtil from '../util/nalu'\r\n\r\nexport default function getVideoCodec(codecpar: pointer<AVCodecParameters>, extradata?: Uint8Array) {\r\n  const codecId = codecpar.codecId\r\n  let profile = codecpar.profile\r\n  let level = codecpar.level\r\n  if (!extradata && codecpar.extradata !== nullptr && codecpar.extradataSize) {\r\n    extradata = mapUint8Array(codecpar.extradata, reinterpret_cast<size>(codecpar.extradataSize))\r\n  }\r\n\r\n  let entry = CodecId2MimeType[codecId]\r\n  let codec = ''\r\n\r\n  if (codecId === AVCodecID.AV_CODEC_ID_H264) {\r\n    /*\r\n     * avc1.profile_idc.constraint_set.level_idc\r\n     * 每个参数 1 个字节转成 16 进制\r\n     * url: https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#iso_base_media_file_format_mp4_quicktime_and_3gp\r\n     */\r\n\r\n    // High 10 Profile 会提示不支持，但是能解码出来\r\n    if (profile === H264Profile.kHigh10) {\r\n      profile = H264Profile.kHigh\r\n    }\r\n    codec = string.format(\r\n      '%s.%02x00%02x',\r\n      entry,\r\n      profile & 0xff,\r\n      level & 0xff\r\n    )\r\n  }\r\n  else if (codecId === AVCodecID.AV_CODEC_ID_HEVC) {\r\n    /**\r\n     * \r\n     * hev1.[general_profile_space?general_profile_idc].[general_profile_compatibility_flags( 十六进制）][general_tier_flag general_level_idc][constraint_flags( 十六进制）]\r\n     * general_profile_space:\r\n     *  A -> 1\r\n     *  B -> 2\r\n     *  C -> 3\r\n     * empty -> 0\r\n     * \r\n     * general_tier_flag:\r\n     *  L -> 0\r\n     *  H -> 1\r\n     * \r\n     */\r\n\r\n    let generalProfileSpace = 0\r\n    let generalProfileCompatibilityFlags = 0\r\n    let generalTierFlag = 0\r\n    let constraintFlags = 0\r\n\r\n    if (extradata) {\r\n      if (naluUtil.isAnnexb(extradata)) {\r\n        extradata = hevc.annexbExtradata2AvccExtradata(extradata)\r\n      }\r\n      if (extradata.length > 13) {\r\n        generalProfileSpace = (extradata[1] >>> 6) & 0x03\r\n        generalTierFlag = (extradata[1] >>> 5) & 0x01\r\n        generalProfileCompatibilityFlags = extradata[2] | (extradata[3] << 8) | (extradata[4] << 16) | (extradata[5] << 24)\r\n        // constraintFlags 目前只能使用 4 个 bit\r\n        constraintFlags = extradata[6] & 0xf0\r\n      }\r\n    }\r\n\r\n    const generalProfileSpaceMap = {\r\n      0: '',\r\n      1: 'A',\r\n      2: 'B',\r\n      3: 'C'\r\n    }\r\n\r\n    codec = string.format(\r\n      '%s.%s%d.%x.%s%d.%x',\r\n      entry,\r\n      generalProfileSpaceMap[generalProfileSpace],\r\n      profile,\r\n      generalProfileCompatibilityFlags,\r\n      generalTierFlag === 0 ? 'L' : 'H',\r\n      level,\r\n      constraintFlags\r\n    )\r\n  }\r\n  else if (codecId === AVCodecID.AV_CODEC_ID_VVC) {\r\n    /**\r\n     * \r\n     * vvc1.<sample entry 4CC>.<general_profile_idc>.[LH]<op_level_idc>{.C<general_constraint_info>}{.S<general_sub_profile_idc>}{.O{<OlsIdx>}{+<MaxTid>}}\r\n     */\r\n\r\n    let generalTierFlag = 0\r\n\r\n    if (extradata?.length > 13) {\r\n      generalTierFlag = extradata[5] & 0x01\r\n    }\r\n\r\n    codec = string.format(\r\n      '%s.%d.%s%d',\r\n      entry,\r\n      profile,\r\n      generalTierFlag === 0 ? 'L' : 'H',\r\n      level\r\n    )\r\n\r\n    if (extradata) {\r\n\r\n      if (naluUtil.isAnnexb(extradata)) {\r\n        extradata = vvc.annexbExtradata2AvccExtradata(extradata)\r\n      }\r\n\r\n      const params = vvc.parseExtraData(extradata)\r\n      if (params.generalConstraintInfo.length) {\r\n        let index = params.generalConstraintInfo.length - 1\r\n        while (index > 0 && params.generalConstraintInfo[index] === 0) {\r\n          index--\r\n        }\r\n        const generalConstraintInfo = (params.generalConstraintInfo as number[]).slice(0, index + 1)\r\n        if (generalConstraintInfo.length) {\r\n          codec += `.C${base32.encode(new Uint8Array(generalConstraintInfo), false)}`\r\n        }\r\n      }\r\n      if (params.generalSubProfileIdc.length) {\r\n        codec += `.S${params.generalSubProfileIdc.map((profile: number) => profile.toString(16)).join('+')}`\r\n      }\r\n      codec += `.O${params.olsIdx}+${params.numSublayers}`\r\n    }\r\n  }\r\n  else if (codecId === AVCodecID.AV_CODEC_ID_AV1) {\r\n    /*\r\n     * av01.profile.level+seqTier.bitDepth[.monochrome[.chromaSubsampling[.colorPrimaries[.colorPrimaries[.matrixCoefficients]]]]]\r\n     * url: https://aomediacodec.github.io/av1-isobmff/#codecsparam\r\n     * url: https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#av1\r\n     */\r\n\r\n    if (extradata) {\r\n      const params = av1.parseExtraData(extradata)\r\n      codec = string.format(\r\n        '%s.%d.%02d%s.%02d.%d.%d%d%d',\r\n        entry,\r\n        params.profile,\r\n        params.level,\r\n        params.tier ? 'H' : 'M',\r\n        params.bitDepth,\r\n        params.monochrome,\r\n        params.chromaSubsamplingX,\r\n        params.chromaSubsamplingY,\r\n        params.chromaSamplePosition\r\n      )\r\n    }\r\n    else {\r\n      codec = string.format('%s.%d.%02dM.08', entry, profile, level)\r\n    }\r\n  }\r\n  else if (codecId === AVCodecID.AV_CODEC_ID_VP8) {\r\n    /*\r\n     * url: https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#videowebmcodecsvp08.00.41.08vorbis\r\n     */\r\n    if (extradata) {\r\n      const params = vp8.parseExtraData(extradata)\r\n      codec = string.format(\r\n        '%s.%02d.%02d.%02d',\r\n        entry,\r\n        params.profile,\r\n        params.level,\r\n        params.bitDepth\r\n      )\r\n    }\r\n    else if (profile !== NOPTS_VALUE && level !== NOPTS_VALUE) {\r\n      codec = string.format('%s.%02d.%02d.08', entry, profile, level)\r\n    }\r\n    else {\r\n      codec = entry\r\n    }\r\n  }\r\n  else if (codecId === AVCodecID.AV_CODEC_ID_VP9) {\r\n    /*\r\n     * vp09.profile.level.colorDepth.chromaSubsampling[.colorPrimaries[.transferCharacteristics[.matrixCoefficients[.blackLevel and color range]]]]\r\n     * url: https://www.webmproject.org/vp9/mp4/#CodecsParameterString\r\n     * url: https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#webm\r\n     */\r\n    if (extradata) {\r\n      const params = vp9.parseExtraData(extradata)\r\n      codec = string.format(\r\n        '%s.%02d.%02d.%02d.%02d.%02d.%02d.%02d.%02d',\r\n        entry,\r\n        params.profile,\r\n        params.level,\r\n        params.bitDepth,\r\n        params.chromaSubsampling,\r\n        params.colorPrimaries,\r\n        params.colorTrc,\r\n        params.colorSpace,\r\n        params.fullRangeFlag\r\n      )\r\n    }\r\n    else if (profile !== NOPTS_VALUE && level !== NOPTS_VALUE) {\r\n      codec = string.format('%s.%02d.%02d.08.00', entry, profile, level)\r\n    }\r\n    else {\r\n      codec = string.format('%s.%02d.%02d.08.00', entry, 0, 40)\r\n    }\r\n  }\r\n  else {\r\n    codec = entry || 'unknown'\r\n  }\r\n\r\n  return codec\r\n}\r\n","import { base64ToUint8Array } from 'common/util/base64'\r\nimport { AVCodecID } from '../codec'\r\n\r\nlet supportAtomic = WebAssembly.validate(base64ToUint8Array('AGFzbQEAAAABBgFgAX8BfwISAQNlbnYGbWVtb3J5AgMBgIACAwIBAAcJAQVsb2FkOAAACgoBCAAgAP4SAAAL'))\r\nlet supportSimd = WebAssembly.validate(base64ToUint8Array('AGFzbQEAAAABBQFgAAF7AhIBA2VudgZtZW1vcnkCAwGAgAIDAgEACgoBCABBAP0ABAAL'))\r\n\r\nexport default function getWasmUrl(baseUrl: string, type: 'decoder' | 'encoder' | 'resampler' | 'scaler' | 'stretchpitcher', codecId?: AVCodecID): string {\r\n\r\n  let tag = defined(WASM_64) ? '-64' : (supportSimd ? '-simd' : (supportAtomic ? '-atomic' : ''))\r\n\r\n  switch (type) {\r\n    case 'decoder': {\r\n\r\n      if (codecId > AVCodecID.AV_CODEC_ID_FIRST_AUDIO && codecId <= AVCodecID.AV_CODEC_ID_PCM_SGA) {\r\n        return `${baseUrl}/decode/pcm${tag}.wasm`\r\n      }\r\n      else if (codecId >= AVCodecID.AV_CODEC_ID_ADPCM_IMA_QT && codecId <= AVCodecID.AV_CODEC_ID_ADPCM_XMD) {\r\n        return `${baseUrl}/decode/adpcm${tag}.wasm`\r\n      }\r\n\r\n      switch (codecId) {\r\n        // mpeg1/2\r\n        case AVCodecID.AV_CODEC_ID_MPEG2VIDEO:\r\n          return `${baseUrl}/decode/mpeg2video${tag}.wasm`\r\n        // H264\r\n        case AVCodecID.AV_CODEC_ID_H264:\r\n          return `${baseUrl}/decode/h264${tag}.wasm`\r\n        // theora\r\n        case AVCodecID.AV_CODEC_ID_THEORA:\r\n          return `${baseUrl}/decode/theora${tag}.wasm`\r\n        // AAC\r\n        case AVCodecID.AV_CODEC_ID_AAC:\r\n          return `${baseUrl}/decode/aac${tag}.wasm`\r\n        // ac3\r\n        case AVCodecID.AV_CODEC_ID_AC3:\r\n          return `${baseUrl}/decode/ac3${tag}.wasm`\r\n        // eac3\r\n        case AVCodecID.AV_CODEC_ID_EAC3:\r\n          return `${baseUrl}/decode/eac3${tag}.wasm`\r\n        // dts\r\n        case AVCodecID.AV_CODEC_ID_DTS:\r\n          return `${baseUrl}/decode/dca${tag}.wasm`\r\n        // MP3\r\n        case AVCodecID.AV_CODEC_ID_MP3:\r\n          return `${baseUrl}/decode/mp3${tag}.wasm`\r\n        // HEVC\r\n        case AVCodecID.AV_CODEC_ID_HEVC:\r\n          return `${baseUrl}/decode/hevc${tag}.wasm`\r\n        // VVC\r\n        case AVCodecID.AV_CODEC_ID_VVC:\r\n          return `${baseUrl}/decode/vvc${tag}.wasm`\r\n        // Mpeg4\r\n        case AVCodecID.AV_CODEC_ID_MPEG4:\r\n          return `${baseUrl}/decode/mpeg4${tag}.wasm`\r\n        // AV1\r\n        case AVCodecID.AV_CODEC_ID_AV1:\r\n          return `${baseUrl}/decode/av1${tag}.wasm`\r\n        // Speex\r\n        case AVCodecID.AV_CODEC_ID_SPEEX:\r\n          return `${baseUrl}/decode/speex${tag}.wasm`\r\n        // Opus\r\n        case AVCodecID.AV_CODEC_ID_OPUS:\r\n          return `${baseUrl}/decode/opus${tag}.wasm`\r\n        // flac\r\n        case AVCodecID.AV_CODEC_ID_FLAC:\r\n          return `${baseUrl}/decode/flac${tag}.wasm`\r\n        // vorbis\r\n        case AVCodecID.AV_CODEC_ID_VORBIS:\r\n          return `${baseUrl}/decode/vorbis${tag}.wasm`\r\n        // vp8\r\n        case AVCodecID.AV_CODEC_ID_VP8:\r\n          return `${baseUrl}/decode/vp8${tag}.wasm`\r\n        // vp9\r\n        case AVCodecID.AV_CODEC_ID_VP9:\r\n          return `${baseUrl}/decode/vp9${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_DVAUDIO:\r\n          return `${baseUrl}/decode/dvaudio${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_DVVIDEO:\r\n          return `${baseUrl}/decode/dvvideo${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_H261:\r\n          return `${baseUrl}/decode/h261${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_H263:\r\n        case AVCodecID.AV_CODEC_ID_H263I:\r\n        case AVCodecID.AV_CODEC_ID_H263P:\r\n          return `${baseUrl}/decode/h263${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_MSMPEG4V1:\r\n        case AVCodecID.AV_CODEC_ID_MSMPEG4V2:\r\n        case AVCodecID.AV_CODEC_ID_MSMPEG4V3:\r\n          return `${baseUrl}/decode/msmpeg4${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_RV10:\r\n        case AVCodecID.AV_CODEC_ID_RV20:\r\n        case AVCodecID.AV_CODEC_ID_RV30:\r\n        case AVCodecID.AV_CODEC_ID_RV40:\r\n          return `${baseUrl}/decode/msmpeg4${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_COOK:\r\n        case AVCodecID.AV_CODEC_ID_SIPR:\r\n        case AVCodecID.AV_CODEC_ID_RALF:\r\n          return `${baseUrl}/decode/ra${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_WMAV1:\r\n        case AVCodecID.AV_CODEC_ID_WMAV2:\r\n        case AVCodecID.AV_CODEC_ID_WMAVOICE:\r\n        case AVCodecID.AV_CODEC_ID_WMALOSSLESS:\r\n        case AVCodecID.AV_CODEC_ID_WMAPRO:\r\n          return `${baseUrl}/decode/wma${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_WMV1:\r\n        case AVCodecID.AV_CODEC_ID_WMV2:\r\n        case AVCodecID.AV_CODEC_ID_WMV3:\r\n          return `${baseUrl}/decode/wmv${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_MJPEG:\r\n          return `${baseUrl}/decode/mjpeg${tag}.wasm`\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    case 'encoder': {\r\n\r\n      if (codecId > AVCodecID.AV_CODEC_ID_FIRST_AUDIO && codecId <= AVCodecID.AV_CODEC_ID_PCM_SGA) {\r\n        return `${baseUrl}/encode/pcm${tag}.wasm`\r\n      }\r\n\r\n      switch (codecId) {\r\n        // H264\r\n        case AVCodecID.AV_CODEC_ID_H264:\r\n          return `${baseUrl}/encode/x264${tag}.wasm`\r\n        // theora\r\n        case AVCodecID.AV_CODEC_ID_THEORA:\r\n          return `${baseUrl}/encode/theora${tag}.wasm`\r\n        // AAC\r\n        case AVCodecID.AV_CODEC_ID_AAC:\r\n          return `${baseUrl}/encode/aac${tag}.wasm`\r\n        // ac3\r\n        case AVCodecID.AV_CODEC_ID_AC3:\r\n          return `${baseUrl}/encode/ac3${tag}.wasm`\r\n        // eac3\r\n        case AVCodecID.AV_CODEC_ID_EAC3:\r\n          return `${baseUrl}/encode/eac3${tag}.wasm`\r\n        // dts\r\n        case AVCodecID.AV_CODEC_ID_DTS:\r\n          return `${baseUrl}/encode/dca${tag}.wasm`\r\n          // MP3\r\n        case AVCodecID.AV_CODEC_ID_MP3:\r\n          return `${baseUrl}/encode/mp3lame${tag}.wasm`\r\n        // HEVC\r\n        case AVCodecID.AV_CODEC_ID_HEVC:\r\n          return `${baseUrl}/encode/x265${tag}.wasm`\r\n        case AVCodecID.AV_CODEC_ID_MPEG4:\r\n          return `${baseUrl}/encode/mpeg4${tag}.wasm`\r\n        // AV1\r\n        case AVCodecID.AV_CODEC_ID_AV1:\r\n          return `${baseUrl}/encode/av1${tag}.wasm`\r\n        // Speex\r\n        case AVCodecID.AV_CODEC_ID_SPEEX:\r\n          return `${baseUrl}/encode/speex${tag}.wasm`\r\n        // Opus\r\n        case AVCodecID.AV_CODEC_ID_OPUS:\r\n          return `${baseUrl}/encode/opus${tag}.wasm`\r\n        // flac\r\n        case AVCodecID.AV_CODEC_ID_FLAC:\r\n          return `${baseUrl}/encode/flac${tag}.wasm`\r\n        // vorbis\r\n        case AVCodecID.AV_CODEC_ID_VORBIS:\r\n          return `${baseUrl}/encode/vorbis${tag}.wasm`\r\n        // vp8\r\n        case AVCodecID.AV_CODEC_ID_VP8:\r\n          return `${baseUrl}/encode/vp8${tag}.wasm`\r\n        // vp9\r\n        case AVCodecID.AV_CODEC_ID_VP9:\r\n          return `${baseUrl}/encode/vp9${tag}.wasm`\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    case 'resampler':\r\n      return `${baseUrl}/resample/resample${tag}.wasm`\r\n    case 'scaler':\r\n      return `${baseUrl}/scale/scale${tag}.wasm`\r\n    case 'stretchpitcher':\r\n      return `${baseUrl}/stretchpitch/stretchpitch${tag}.wasm`\r\n  }\r\n}\r\n","/*\r\n * libmedia hasAlphaChannel\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { getAVPixelFormatDescriptor, AVPixelFormatFlags } from '../pixelFormatDescriptor'\r\nimport { AVMediaType } from '../codec'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport { AVPixelFormat } from '../pixfmt'\r\n\r\nexport default function hasAlphaChannel(parameters: pointer<AVCodecParameters>) {\r\n  if (parameters.codecType !== AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n    return false\r\n  }\r\n  const descriptor = getAVPixelFormatDescriptor(parameters.format as AVPixelFormat)\r\n  return descriptor && (descriptor.flags & AVPixelFormatFlags.ALPHA)\r\n}\r\n","/*\r\n * libmedia isHdr\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport { AVMediaType } from '../codec'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport { AVColorTransferCharacteristic, AVPixelFormat } from '../pixfmt'\r\n\r\nexport default function isHdr(parameters: pointer<AVCodecParameters>) {\r\n  if (parameters.codecType !== AVMediaType.AVMEDIA_TYPE_VIDEO) {\r\n    return false\r\n  }\r\n\r\n  const descriptor = getAVPixelFormatDescriptor(parameters.format as AVPixelFormat)\r\n  if (!descriptor || descriptor.comp[0].depth <= 8) {\r\n    return false\r\n  }\r\n\r\n  return parameters.colorTrc === AVColorTransferCharacteristic.AVCOL_TRC_ARIB_STD_B67\r\n    || parameters.colorTrc === AVColorTransferCharacteristic.AVCOL_TRC_SMPTE2084\r\n}\r\n","/* libmedia VideoFrame to AVFrame utils\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { createAVFrame, getVideoBuffer, unrefAVFrame } from '../util/avframe'\r\nimport AVFrame from '../struct/avframe'\r\nimport { AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVPixelFormat } from '../pixfmt'\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport { getHeap } from 'cheap/heap'\r\nimport { AV_TIME_BASE } from '../constant'\r\n\r\nexport function mapFormat(format: VideoPixelFormat) {\r\n  switch (format) {\r\n    case 'BGRA':\r\n      return AVPixelFormat.AV_PIX_FMT_BGRA\r\n    case 'BGRX':\r\n      return AVPixelFormat.AV_PIX_FMT_BGR0\r\n    case 'I420':\r\n      return AVPixelFormat.AV_PIX_FMT_YUV420P\r\n    case 'I420A':\r\n      return AVPixelFormat.AV_PIX_FMT_YUVA420P\r\n    case 'I422':\r\n      return AVPixelFormat.AV_PIX_FMT_YUV422P\r\n    case 'I444':\r\n      return AVPixelFormat.AV_PIX_FMT_YUV444P\r\n    case 'NV12':\r\n      return AVPixelFormat.AV_PIX_FMT_NV12\r\n    case 'RGBA':\r\n      return AVPixelFormat.AV_PIX_FMT_RGBA\r\n    case 'RGBX':\r\n      return AVPixelFormat.AV_PIX_FMT_RGB0\r\n    default:\r\n      return AVPixelFormat.AV_PIX_FMT_NONE\r\n  }\r\n}\r\n\r\nexport function mapColorSpace(colorSpace: string) {\r\n  switch (colorSpace) {\r\n    case 'bt709' :\r\n      return AVColorSpace.AVCOL_SPC_BT709\r\n    case 'smpte170m':\r\n      return AVColorSpace.AVCOL_SPC_SMPTE170M\r\n    case 'bt470bg':\r\n      return AVColorSpace.AVCOL_SPC_BT470BG\r\n    case 'rgb':\r\n      return AVColorSpace.AVCOL_SPC_RGB\r\n    default:\r\n      return AVColorSpace.AVCOL_SPC_BT709\r\n  }\r\n}\r\n\r\nexport function mapColorPrimaries(colorPrimaries: string) {\r\n  switch (colorPrimaries) {\r\n    case 'bt709':\r\n      return AVColorPrimaries.AVCOL_PRI_BT709\r\n    case 'bt470bg':\r\n      return AVColorPrimaries.AVCOL_PRI_BT470BG\r\n    case 'smpte170m':\r\n      return AVColorPrimaries.AVCOL_PRI_SMPTE170M\r\n    default:\r\n      return AVColorPrimaries.AVCOL_PRI_BT709\r\n  }\r\n}\r\n\r\nexport function mapColorTrc(colorTrc: string) {\r\n  switch (colorTrc) {\r\n    case 'bt709':\r\n      return AVColorTransferCharacteristic.AVCOL_TRC_BT709\r\n    case 'iec61966-2-1':\r\n      return AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_1\r\n    case 'smpte170m':\r\n      return AVColorTransferCharacteristic.AVCOL_TRC_SMPTE170M\r\n    default:\r\n      return AVColorTransferCharacteristic.AVCOL_TRC_BT709\r\n  }\r\n}\r\n\r\nexport async function videoFrame2AVFrame(videoFrame: VideoFrame, avframe: pointer<AVFrame> = nullptr) {\r\n  if (avframe === nullptr) {\r\n    avframe = createAVFrame()\r\n  }\r\n  else {\r\n    unrefAVFrame(avframe)\r\n  }\r\n\r\n  avframe.format = mapFormat(videoFrame.format)\r\n  avframe.pts = static_cast<int64>(videoFrame.timestamp)\r\n  avframe.bestEffortTimestamp = avframe.pts\r\n  avframe.width = videoFrame.codedWidth\r\n  avframe.height = videoFrame.codedHeight\r\n  avframe.duration = static_cast<int64>(videoFrame.duration)\r\n  avframe.timeBase.den = AV_TIME_BASE\r\n  avframe.timeBase.num = 1\r\n\r\n  avframe.colorSpace = mapColorSpace(videoFrame.colorSpace.matrix)\r\n  avframe.colorPrimaries = mapColorPrimaries(videoFrame.colorSpace.primaries)\r\n  avframe.colorTrc = mapColorTrc(videoFrame.colorSpace.transfer)\r\n  avframe.colorRange = videoFrame.colorSpace.fullRange ? AVColorRange.AVCOL_RANGE_JPEG : AVColorRange.AVCOL_RANGE_MPEG\r\n\r\n  if (videoFrame.visibleRect) {\r\n    avframe.cropLeft = reinterpret_cast<size>(videoFrame.visibleRect.left)\r\n    avframe.cropRight = reinterpret_cast<size>(videoFrame.codedWidth - videoFrame.visibleRect.right)\r\n    avframe.cropTop = reinterpret_cast<size>(videoFrame.visibleRect.top)\r\n    avframe.cropBottom = reinterpret_cast<size>(videoFrame.codedHeight - videoFrame.visibleRect.bottom)\r\n  }\r\n\r\n  getVideoBuffer(avframe)\r\n\r\n  const des = getAVPixelFormatDescriptor(avframe.format as AVPixelFormat)\r\n  const layout: PlaneLayout[] = []\r\n  for (let i = 0; i < des.comp.length; i++) {\r\n    if (des.comp[i].plane >= i) {\r\n      layout.push({\r\n        offset: reinterpret_cast<double>(avframe.data[i]),\r\n        stride: avframe.linesize[i]\r\n      })\r\n    }\r\n  }\r\n  await videoFrame.copyTo(getHeap(), {\r\n    layout\r\n  })\r\n\r\n  return avframe\r\n}\r\n","/*\r\n * libmedia AVFrame pool implement\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVFramePool, AVFrameRef } from '../struct/avframe'\r\nimport List from 'cheap/std/collection/List'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport * as atomics from 'cheap/thread/atomics'\r\nimport * as mutex from 'cheap/thread/mutex'\r\nimport { avMallocz } from '../util/mem'\r\nimport { getAVFrameDefault, unrefAVFrame } from '../util/avframe'\r\n\r\nexport default class AVFramePoolImpl implements AVFramePool {\r\n\r\n  private list: List<pointer<AVFrameRef>>\r\n\r\n  private mutex: pointer<Mutex>\r\n\r\n  constructor(list: List<pointer<AVFrameRef>>, mutex?: pointer<Mutex>) {\r\n    this.list = list\r\n    this.mutex = mutex\r\n  }\r\n\r\n  public alloc(): pointer<AVFrameRef> {\r\n    let avframe = this.list.find((avframe) => {\r\n      return atomics.compareExchange(addressof(avframe.refCount), -1, 1) === -1\r\n    })\r\n    if (!avframe) {\r\n      avframe = avMallocz(sizeof(AVFrameRef))\r\n\r\n      getAVFrameDefault(avframe)\r\n\r\n      atomics.store(addressof(avframe.refCount), 1)\r\n\r\n      if (defined(ENABLE_THREADS)) {\r\n        assert(this.mutex)\r\n        mutex.lock(this.mutex)\r\n      }\r\n\r\n      this.list.push(avframe)\r\n\r\n      if (defined(ENABLE_THREADS)) {\r\n        mutex.unlock(this.mutex)\r\n      }\r\n    }\r\n\r\n    return avframe\r\n  }\r\n  public release(avframe: pointer<AVFrameRef>): void {\r\n    if (atomics.load(addressof(avframe.refCount)) <= 0) {\r\n      return\r\n    }\r\n    if (atomics.sub(addressof(avframe.refCount), 1) === 1) {\r\n      unrefAVFrame(avframe)\r\n      atomics.store(addressof(avframe.refCount), -1)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia AVPacket pool implement\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport List from 'cheap/std/collection/List'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\nimport * as atomics from 'cheap/thread/atomics'\r\nimport * as mutex from 'cheap/thread/mutex'\r\nimport { avMallocz } from '../util/mem'\r\nimport { AVPacketPool, AVPacketRef } from '../struct/avpacket'\r\nimport { getAVPacketDefault, unrefAVPacket } from '../util/avpacket'\r\n\r\nexport default class AVPacketPoolImpl implements AVPacketPool {\r\n\r\n  private list: List<pointer<AVPacketRef>>\r\n\r\n  private mutex: pointer<Mutex>\r\n\r\n  constructor(list: List<pointer<AVPacketRef>>, mutex?: pointer<Mutex>) {\r\n    this.list = list\r\n    this.mutex = mutex\r\n  }\r\n\r\n  public alloc(): pointer<AVPacketRef> {\r\n    let avpacket = this.list.find((avpacket) => {\r\n      return atomics.compareExchange(addressof(avpacket.refCount), -1, 1) === -1\r\n    })\r\n    if (!avpacket) {\r\n      avpacket = avMallocz(sizeof(AVPacketRef))\r\n      getAVPacketDefault(avpacket)\r\n\r\n      atomics.store(addressof(avpacket.refCount), 1)\r\n\r\n      if (defined(ENABLE_THREADS)) {\r\n        assert(this.mutex)\r\n        mutex.lock(this.mutex)\r\n      }\r\n\r\n      this.list.push(avpacket)\r\n\r\n      if (defined(ENABLE_THREADS)) {\r\n        mutex.unlock(this.mutex)\r\n      }\r\n    }\r\n\r\n    return avpacket\r\n  }\r\n  public release(avpacket: pointer<AVPacketRef>): void {\r\n    if (atomics.load(addressof(avpacket.refCount)) <= 0) {\r\n      return\r\n    }\r\n    if (atomics.sub(addressof(avpacket.refCount), 1) === 1) {\r\n      unrefAVPacket(avpacket)\r\n      atomics.store(addressof(avpacket.refCount), -1)\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia pixel format descriptor\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPixelFormat } from './pixfmt'\r\n\r\nexport const enum AVPixelFormatFlags {\r\n  /**\r\n   * Pixel format is big-endian.\r\n   */\r\n  BIG_ENDIAN = 1 << 0,\r\n  /**\r\n   * Pixel format has a palette in data[1], values are indexes in this palette.\r\n   */\r\n  PALETTE = 1 << 1,\r\n  /**\r\n   * All values of a component are bit-wise packed end to end.\r\n   */\r\n  BIT_STREAM = 1 << 2,\r\n  /**\r\n   * At least one pixel component is not in the first data plane.\r\n   */\r\n  PLANER = 1 << 4,\r\n  /**\r\n   * The pixel format contains RGB-like data (as opposed to YUV/grayscale).\r\n   */\r\n  RGB = 1 << 5,\r\n  /**\r\n   * The pixel format has an alpha channel. This is set on all formats that\r\n   * support alpha in some way, including AV_PIX_FMT_PAL8. The alpha is always\r\n   * straight, never pre-multiplied.\r\n   *\r\n   * If a codec or a filter does not support alpha, it should set all alpha to\r\n   * opaque, or use the equivalent pixel formats without alpha component, e.g.\r\n   * AV_PIX_FMT_RGB0 (or AV_PIX_FMT_RGB24 etc.) instead of AV_PIX_FMT_RGBA.\r\n   */\r\n  ALPHA = 1 << 7,\r\n  /**\r\n   * The pixel format is following a Bayer pattern\r\n   */\r\n  BAYER = 1 << 8,\r\n  /**\r\n   * The pixel format contains IEEE-754 floating point values. Precision (double,\r\n   * single, or half) should be determined by the pixel size (64, 32, or 16 bits).\r\n   */\r\n  FLOAT = 1 << 9\r\n}\r\n\r\nexport type AVPixelFormatDescriptor = {\r\n  /**\r\n   * Amount to shift the luma width right to find the chroma width.\r\n   * For YV12 this is 1 for example.\r\n   * chroma_width = AV_CEIL_RSHIFT(luma_width, log2_chroma_w)\r\n   * The note above is needed to ensure rounding up.\r\n   * This value only refers to the chroma components.\r\n   */\r\n  log2ChromaW: number\r\n\r\n  /**\r\n   * Amount to shift the luma height right to find the chroma height.\r\n   * For YV12 this is 1 for example.\r\n   * chroma_height= AV_CEIL_RSHIFT(luma_height, log2_chroma_h)\r\n   * The note above is needed to ensure rounding up.\r\n   * This value only refers to the chroma components.\r\n   */\r\n  log2ChromaH: number\r\n\r\n  /**\r\n   * Combination of AV_PIX_FMT_FLAG_... flags.\r\n   */\r\n  flags: number\r\n\r\n  /**\r\n   * Parameters that describe how pixels are packed.\r\n   * If the format has 1 or 2 components, then luma is 0.\r\n   * If the format has 3 or 4 components:\r\n   *   if the RGB flag is set then 0 is red, 1 is green and 2 is blue;\r\n   *   otherwise 0 is luma, 1 is chroma-U and 2 is chroma-V.\r\n   *\r\n   * If present, the Alpha channel is always the last component.\r\n   */\r\n  comp: {\r\n    /**\r\n     * Which of the 4 planes contains the component.\r\n     */\r\n    plane: number\r\n    /**\r\n     * Number of elements between 2 horizontally consecutive pixels.\r\n     * Elements are bits for bitstream formats, bytes otherwise.\r\n     */\r\n    step: number\r\n\r\n    /**\r\n     * Number of elements before the component of the first pixel.\r\n     * Elements are bits for bitstream formats, bytes otherwise.\r\n     */\r\n    offset: number\r\n\r\n    /**\r\n     * Number of least significant bits that must be shifted away\r\n     * to get the value.\r\n     */\r\n    shift: number\r\n\r\n    /**\r\n     * Number of bits in the component.\r\n     */\r\n    depth: number\r\n  }[]\r\n}\r\n\r\nconst cache: Map<AVPixelFormat, AVPixelFormatDescriptor> = new Map()\r\n\r\nexport function getAVPixelFormatDescriptor(format: AVPixelFormat) {\r\n  if (cache.has(format)) {\r\n    return cache.get(format)\r\n  }\r\n  const data = AVPixelFormatDescriptorsData[format]\r\n  if (!data) {\r\n    return\r\n  }\r\n  const descriptor: AVPixelFormatDescriptor = {\r\n    log2ChromaW: data[0],\r\n    log2ChromaH: data[1],\r\n    flags: data[2],\r\n    comp: data[3].map((com) => {\r\n      return {\r\n        plane: com[0],\r\n        step: com[1],\r\n        offset: com[2],\r\n        shift: com[3],\r\n        depth: com[4]\r\n      }\r\n    })\r\n  }\r\n  cache.set(format, descriptor)\r\n  return descriptor\r\n}\r\n\r\ntype DescriptorPlane = [\r\n  plane: number,\r\n  step: number,\r\n  offset: number,\r\n  shift: number,\r\n  depth: number\r\n]\r\n\r\ntype DescriptorData = [\r\n  log2ChromaW: number,\r\n  log2ChromaH: number,\r\n  flags: number,\r\n  comp: DescriptorPlane[]\r\n]\r\n\r\nconst PlaneYUV8: DescriptorPlane[] = [\r\n  [0, 1, 0, 0, 8],\r\n  [1, 1, 0, 0, 8],\r\n  [2, 1, 0, 0, 8]\r\n]\r\nconst PlaneYUVA8: DescriptorPlane[] = [\r\n  ...PlaneYUV8,\r\n  [3, 1, 0, 0, 8]\r\n]\r\nconst PlaneYUV9: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 9],\r\n  [1, 2, 0, 0, 9],\r\n  [2, 2, 0, 0, 9]\r\n]\r\nconst PlaneYUVA9: DescriptorPlane[] = [\r\n  ...PlaneYUV9,\r\n  [3, 2, 0, 0, 9]\r\n]\r\nconst PlaneYUV10: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 10],\r\n  [1, 2, 0, 0, 10],\r\n  [2, 2, 0, 0, 10]\r\n]\r\nconst PlaneYUVA10: DescriptorPlane[] = [\r\n  ...PlaneYUV10,\r\n  [3, 2, 0, 0, 10]\r\n]\r\nconst PlaneYUV12: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 12],\r\n  [1, 2, 0, 0, 12],\r\n  [2, 2, 0, 0, 12]\r\n]\r\nconst PlaneYUVA12: DescriptorPlane[] = [\r\n  ...PlaneYUV12,\r\n  [3, 2, 0, 0, 12]\r\n]\r\nconst PlaneYUV14: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 14],\r\n  [1, 2, 0, 0, 14],\r\n  [2, 2, 0, 0, 14]\r\n]\r\nconst PlaneYUV16: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 16],\r\n  [1, 2, 0, 0, 16],\r\n  [2, 2, 0, 0, 16]\r\n]\r\nconst PlaneYUVA16: DescriptorPlane[] = [\r\n  ...PlaneYUV16,\r\n  [3, 2, 0, 0, 16]\r\n]\r\nconst PlaneNV12: DescriptorPlane[] = [\r\n  [0, 1, 0, 0, 8],\r\n  [1, 2, 0, 0, 8],\r\n  [1, 2, 1, 0, 8]\r\n]\r\nconst PlaneNV21: DescriptorPlane[] = [\r\n  [0, 1, 0, 0, 8],\r\n  [1, 2, 1, 0, 8],\r\n  [1, 2, 0, 0, 8]\r\n]\r\nconst PlaneAYUV16: DescriptorPlane[] = [\r\n  [0, 8, 2, 0, 16],\r\n  [0, 8, 4, 0, 16],\r\n  [0, 8, 6, 0, 16],\r\n  [0, 8, 0, 0, 16]\r\n]\r\nconst PlaneP010: DescriptorPlane[] = [\r\n  [0, 2, 0, 6, 10],\r\n  [1, 4, 0, 6, 10 ],\r\n  [1, 4, 2, 6, 10]\r\n]\r\nconst PlaneP012: DescriptorPlane[] = [\r\n  [0, 2, 0, 4, 12],\r\n  [1, 4, 0, 4, 12],\r\n  [1, 4, 2, 4, 12]\r\n]\r\nconst PlaneP016: DescriptorPlane[] = [\r\n  [0, 2, 0, 0, 16],\r\n  [1, 4, 0, 0, 16],\r\n  [1, 4, 2, 0, 16]\r\n]\r\nconst PlaneRGBA8: DescriptorPlane[] = [\r\n  [0, 4, 0, 0, 8],\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 2, 0, 8],\r\n  [0, 4, 3, 0, 8]\r\n]\r\nconst PlaneRGB8: DescriptorPlane[] = [\r\n  [0, 3, 0, 0, 8],\r\n  [0, 3, 1, 0, 8],\r\n  [0, 3, 2, 0, 8]\r\n]\r\nconst PlaneRGB08: DescriptorPlane[] = [\r\n  [0, 4, 0, 0, 8],\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 2, 0, 8]\r\n]\r\nconst PlaneRGBA16: DescriptorPlane[] = [\r\n  [0, 8, 0, 0, 16],\r\n  [0, 8, 2, 0, 16],\r\n  [0, 8, 4, 0, 16],\r\n  [0, 8, 6, 0, 16]\r\n]\r\nconst PlaneARGB8: DescriptorPlane[] = [\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 2, 0, 8],\r\n  [0, 4, 3, 0, 8],\r\n  [0, 4, 0, 0, 8]\r\n]\r\nconst PlaneBGRA8: DescriptorPlane[] = [\r\n  [0, 4, 2, 0, 8],\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 0, 0, 8],\r\n  [0, 4, 3, 0, 8]\r\n]\r\nconst PlaneBGR8: DescriptorPlane[] = [\r\n  [0, 3, 2, 0, 8],\r\n  [0, 3, 1, 0, 8],\r\n  [0, 3, 0, 0, 8],\r\n]\r\nconst PlaneBGR08: DescriptorPlane[] = [\r\n  [0, 4, 2, 0, 8],\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 0, 0, 8],\r\n]\r\nconst PlaneBGRA16: DescriptorPlane[] = [\r\n  [0, 8, 4, 0, 16],\r\n  [0, 8, 2, 0, 16],\r\n  [0, 8, 0, 0, 16],\r\n  [0, 8, 6, 0, 16]\r\n]\r\nconst PlaneABGR8: DescriptorPlane[] = [\r\n  [0, 4, 3, 0, 8],\r\n  [0, 4, 2, 0, 8],\r\n  [0, 4, 1, 0, 8],\r\n  [0, 4, 0, 0, 8]\r\n]\r\nconst PlaneBGRP8: DescriptorPlane[] = [\r\n  [2, 1, 0, 0, 8],\r\n  [0, 1, 0, 0, 8],\r\n  [1, 1, 0, 0, 8]\r\n]\r\nconst PlaneBGRAP8: DescriptorPlane[] = [\r\n  [2, 1, 0, 0, 8],\r\n  [0, 1, 0, 0, 8],\r\n  [1, 1, 0, 0, 8],\r\n  [3, 1, 0, 0, 8]\r\n]\r\nconst PlaneBGRP9: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 9],\r\n  [0, 2, 0, 0, 9],\r\n  [1, 2, 0, 0, 9]\r\n]\r\nconst PlaneBGRP10: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 10],\r\n  [0, 2, 0, 0, 10],\r\n  [1, 2, 0, 0, 10]\r\n]\r\nconst PlaneBGRP12: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 12],\r\n  [0, 2, 0, 0, 12],\r\n  [1, 2, 0, 0, 12]\r\n]\r\nconst PlaneBGRP14: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 14],\r\n  [0, 2, 0, 0, 14],\r\n  [1, 2, 0, 0, 14]\r\n]\r\nconst PlaneBGRP16: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 16],\r\n  [0, 2, 0, 0, 16],\r\n  [1, 2, 0, 0, 16]\r\n]\r\nconst PlaneBGRAP16: DescriptorPlane[] = [\r\n  [2, 2, 0, 0, 16],\r\n  [0, 2, 0, 0, 16],\r\n  [1, 2, 0, 0, 16],\r\n  [3, 2, 0, 0, 16]\r\n]\r\n\r\nconst AVPixelFormatDescriptorsData: Partial<Record<AVPixelFormat, DescriptorData>> = {\r\n  [AVPixelFormat.AV_PIX_FMT_YUV410P]: [\r\n    2, 2, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVJ420P]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVJ422P]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVJ444P]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_NV12]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneNV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_NV21]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneNV21\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_NV24]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneNV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_NV42]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneNV21\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P9BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P9LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P9BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P9LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P9BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P9LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P10BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P10LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P10BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P10LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P10BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P10LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P12BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P12LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P12BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P12LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P12BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P12LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P14BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P14LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P14BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P14LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P14BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P14LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P16BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV420P16LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P16BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV422P16LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P16BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUV444P16LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER,\r\n    PlaneYUV16\r\n  ],\r\n\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P]: [\r\n    1, 1, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P]: [\r\n    1, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P9BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P9LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P9BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P9LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P9BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P9LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P10BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P10LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P10BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P10LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P10BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P10LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P12BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P12LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P12BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P12LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P16BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P16LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P16BE]: [\r\n    1, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA422P16LE]: [\r\n    1, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P16BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YUVA444P16LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.ALPHA,\r\n    PlaneYUVA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_AYUV64BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.ALPHA,\r\n    PlaneAYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_AYUV64LE]: [\r\n    0, 0, AVPixelFormatFlags.ALPHA,\r\n    PlaneAYUV16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P010BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneP010\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P010LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneP010\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P012BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneP012\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P012LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneP012\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P016BE]: [\r\n    1, 1, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.PLANER,\r\n    PlaneP016\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_P016LE]: [\r\n    1, 1, AVPixelFormatFlags.PLANER,\r\n    PlaneP016\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GRAY8]: [\r\n    0, 0, 0,\r\n    [\r\n      [0, 1, 0, 0, 8]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GRAY16BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN,\r\n    [\r\n      [0, 2, 0, 0, 16]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GRAY16LE]: [\r\n    0, 0, 0,\r\n    [\r\n      [0, 2, 0, 0, 16]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YA8]: [\r\n    0, 0, AVPixelFormatFlags.ALPHA,\r\n    [\r\n      [0, 2, 0, 0, 8],\r\n      [0, 2, 1, 0, 8]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YA16BE]: [\r\n    0, 0, AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.ALPHA,\r\n    [\r\n      [0, 4, 0, 0, 16],\r\n      [0, 4, 2, 0, 16]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_YA16LE]: [\r\n    0, 0, AVPixelFormatFlags.ALPHA,\r\n    [\r\n      [0, 4, 0, 0, 16],\r\n      [0, 4, 2, 0, 16]\r\n    ]\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_RGBA]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneRGBA8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_ARGB]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneARGB8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_RGBA64BE]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneRGBA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_RGBA64LE]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneRGBA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_BGRA]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneBGRA8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_ABGR]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneABGR8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_BGRA64BE]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_BGRA64LE]: [\r\n    0, 0, AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneBGRA16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_RGB24]: [\r\n    0, 0, AVPixelFormatFlags.RGB,\r\n    PlaneRGB8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_BGR24]: [\r\n    0, 0, AVPixelFormatFlags.RGB,\r\n    PlaneBGR8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_RGB0]: [\r\n    0, 0, AVPixelFormatFlags.RGB,\r\n    PlaneRGB08\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_BGR0]: [\r\n    0, 0, AVPixelFormatFlags.RGB,\r\n    PlaneBGR08\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRAP]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneBGRAP8\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP9BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRP9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP9LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP9\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP10BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRP10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP10LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP10\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP12BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRP12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP12LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP12\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP14BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRP14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP14LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP14\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP16BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN,\r\n    PlaneBGRP16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRP16LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB,\r\n    PlaneBGRP16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRAP16BE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.BIG_ENDIAN | AVPixelFormatFlags.ALPHA,\r\n    PlaneBGRAP16\r\n  ],\r\n  [AVPixelFormat.AV_PIX_FMT_GBRAP16LE]: [\r\n    0, 0, AVPixelFormatFlags.PLANER | AVPixelFormatFlags.RGB | AVPixelFormatFlags.ALPHA,\r\n    PlaneBGRAP16\r\n  ]\r\n}\r\n","import { AVSampleFormat } from './audiosamplefmt'\r\n\r\nexport interface AVSampleFormatDescriptor {\r\n  bits: number\r\n  planar: boolean\r\n}\r\n\r\nexport const AVSampleFormatDescriptors: Partial<Record<AVSampleFormat, AVSampleFormatDescriptor>> = {\r\n  [AVSampleFormat.AV_SAMPLE_FMT_U8]: {\r\n    bits: 8,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S16]: {\r\n    bits: 16,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S32]: {\r\n    bits: 32,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S64]: {\r\n    bits: 64,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_FLT]: {\r\n    bits: 32,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_DBL]: {\r\n    bits: 64,\r\n    planar: false\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_U8P]: {\r\n    bits: 8,\r\n    planar: true\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S16P]: {\r\n    bits: 16,\r\n    planar: true\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S32P]: {\r\n    bits: 32,\r\n    planar: true\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_S64P]: {\r\n    bits: 64,\r\n    planar: true\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_FLTP]: {\r\n    bits: 32,\r\n    planar: true\r\n  },\r\n  [AVSampleFormat.AV_SAMPLE_FMT_DBLP]: {\r\n    bits: 64,\r\n    planar: true\r\n  },\r\n}\r\n","import { AVFormat, IOType } from './avformat'\r\nimport { AVCodecID, AVMediaType } from './codec'\r\nimport { AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVPixelFormat } from './pixfmt'\r\nimport { AVChannelLayout, AVSampleFormat } from './audiosamplefmt'\r\nimport { AVDisposition } from './AVStream'\r\n\r\nexport const CodecId2MimeType = {\r\n  [AVCodecID.AV_CODEC_ID_MP3]: 'mp3',\r\n  [AVCodecID.AV_CODEC_ID_AAC]: 'mp4a.40',\r\n  [AVCodecID.AV_CODEC_ID_VORBIS]: 'vorbis',\r\n  [AVCodecID.AV_CODEC_ID_FLAC]: 'flac',\r\n  [AVCodecID.AV_CODEC_ID_OPUS]: 'opus',\r\n  [AVCodecID.AV_CODEC_ID_PCM_MULAW]: 'ulaw',\r\n  [AVCodecID.AV_CODEC_ID_PCM_ALAW]: 'alaw',\r\n  [AVCodecID.AV_CODEC_ID_AC3]: 'ac-3',\r\n  [AVCodecID.AV_CODEC_ID_EAC3]: 'ec-3',\r\n  [AVCodecID.AV_CODEC_ID_DTS]: 'dtsc',\r\n\r\n  [AVCodecID.AV_CODEC_ID_AV1]: 'av01',\r\n  [AVCodecID.AV_CODEC_ID_H264]: 'avc1',\r\n  [AVCodecID.AV_CODEC_ID_HEVC]: 'hev1',\r\n  [AVCodecID.AV_CODEC_ID_VVC]: 'vvc1',\r\n  [AVCodecID.AV_CODEC_ID_VP8]: 'vp8',\r\n  [AVCodecID.AV_CODEC_ID_VP9]: 'vp09',\r\n  [AVCodecID.AV_CODEC_ID_MPEG4]: 'mp4v'\r\n}\r\n\r\nexport const Ext2Format: Record<string, AVFormat> = {\r\n  'flv': AVFormat.FLV,\r\n  'mp4': AVFormat.MOV,\r\n  'm4s': AVFormat.MOV,\r\n  'mov': AVFormat.MOV,\r\n  'ts': AVFormat.MPEGTS,\r\n  'mts': AVFormat.MPEGTS,\r\n  'm2ts': AVFormat.MPEGTS,\r\n  'ivf': AVFormat.IVF,\r\n  'opus': AVFormat.OGG,\r\n  'oggs': AVFormat.OGG,\r\n  'ogg': AVFormat.OGG,\r\n  'm3u8': AVFormat.MPEGTS,\r\n  'm3u': AVFormat.MPEGTS,\r\n  'mpd': AVFormat.MOV,\r\n  'mp3': AVFormat.MP3,\r\n  'mkv': AVFormat.MATROSKA,\r\n  'mka': AVFormat.MATROSKA,\r\n  'webm': AVFormat.WEBM,\r\n  'aac': AVFormat.AAC,\r\n  'flac': AVFormat.FLAC,\r\n  'wav': AVFormat.WAV,\r\n  'srt': AVFormat.SUBRIP,\r\n  'vtt': AVFormat.WEBVTT,\r\n  'ssa': AVFormat.ASS,\r\n  'ass': AVFormat.ASS,\r\n  'xml': AVFormat.TTML,\r\n  'ttml': AVFormat.TTML,\r\n  'h264': AVFormat.H264,\r\n  '264': AVFormat.H264,\r\n  'avc': AVFormat.H264,\r\n  'h265': AVFormat.HEVC,\r\n  '265': AVFormat.HEVC,\r\n  'hevc': AVFormat.HEVC,\r\n  'h266': AVFormat.VVC,\r\n  '266': AVFormat.VVC,\r\n  'vvc': AVFormat.VVC,\r\n  'mpeg': AVFormat.MPEGPS,\r\n  'mpg': AVFormat.MPEGPS,\r\n  'rtsp': AVFormat.RTSP,\r\n  'rtmp': AVFormat.RTMP,\r\n  'avi': AVFormat.AVI\r\n}\r\n\r\nexport const Ext2IOLoader: Record<string, IOType> = {\r\n  'm3u8': IOType.HLS,\r\n  'm3u': IOType.HLS,\r\n  'mpd': IOType.DASH\r\n}\r\n\r\nexport const VideoCodecString2CodecId = {\r\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\r\n  'h264': AVCodecID.AV_CODEC_ID_H264,\r\n  'h261': AVCodecID.AV_CODEC_ID_H261,\r\n  'h263': AVCodecID.AV_CODEC_ID_H263,\r\n  'h263i': AVCodecID.AV_CODEC_ID_H263I,\r\n  'h263p': AVCodecID.AV_CODEC_ID_H263P,\r\n  'mjpeg': AVCodecID.AV_CODEC_ID_MJPEG,\r\n  'wmv1': AVCodecID.AV_CODEC_ID_WMV1,\r\n  'wmv2': AVCodecID.AV_CODEC_ID_WMV2,\r\n  'wmv3': AVCodecID.AV_CODEC_ID_WMV3,\r\n  'avc': AVCodecID.AV_CODEC_ID_H264,\r\n  'hevc': AVCodecID.AV_CODEC_ID_HEVC,\r\n  'h265': AVCodecID.AV_CODEC_ID_HEVC,\r\n  'vvc': AVCodecID.AV_CODEC_ID_VVC,\r\n  'h266': AVCodecID.AV_CODEC_ID_VVC,\r\n  'av1': AVCodecID.AV_CODEC_ID_AV1,\r\n  'vp9': AVCodecID.AV_CODEC_ID_VP9,\r\n  'vp8': AVCodecID.AV_CODEC_ID_VP8,\r\n  'mpeg4': AVCodecID.AV_CODEC_ID_MPEG4,\r\n  'theora': AVCodecID.AV_CODEC_ID_THEORA,\r\n  'mpeg2video': AVCodecID.AV_CODEC_ID_MPEG2VIDEO,\r\n  'rv10': AVCodecID.AV_CODEC_ID_RV10,\r\n  'rv20': AVCodecID.AV_CODEC_ID_RV20,\r\n  'rv30': AVCodecID.AV_CODEC_ID_RV30,\r\n  'rv40': AVCodecID.AV_CODEC_ID_RV40\r\n}\r\n\r\nexport const AudioCodecString2CodecId = {\r\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\r\n  'aac': AVCodecID.AV_CODEC_ID_AAC,\r\n  'ac3': AVCodecID.AV_CODEC_ID_AC3,\r\n  'eac3': AVCodecID.AV_CODEC_ID_EAC3,\r\n  'dts': AVCodecID.AV_CODEC_ID_DTS,\r\n  'mp3': AVCodecID.AV_CODEC_ID_MP3,\r\n  'opus': AVCodecID.AV_CODEC_ID_OPUS,\r\n  'flac': AVCodecID.AV_CODEC_ID_FLAC,\r\n  'speex': AVCodecID.AV_CODEC_ID_SPEEX,\r\n  'vorbis': AVCodecID.AV_CODEC_ID_VORBIS,\r\n  'pcm_alaw': AVCodecID.AV_CODEC_ID_PCM_ALAW,\r\n  'pcm_mulaw': AVCodecID.AV_CODEC_ID_PCM_MULAW,\r\n  'wmav1': AVCodecID.AV_CODEC_ID_WMAV1,\r\n  'wmav2': AVCodecID.AV_CODEC_ID_WMAV2,\r\n  'cook': AVCodecID.AV_CODEC_ID_COOK,\r\n  'sipr': AVCodecID.AV_CODEC_ID_SIPR,\r\n  'ralf': AVCodecID.AV_CODEC_ID_RALF\r\n}\r\n\r\nexport const SubtitleCodecString2CodecId = {\r\n  'webvtt': AVCodecID.AV_CODEC_ID_WEBVTT,\r\n  'subrip': AVCodecID.AV_CODEC_ID_SUBRIP,\r\n  'ass': AVCodecID.AV_CODEC_ID_ASS,\r\n  'ttml': AVCodecID.AV_CODEC_ID_TTML,\r\n  'mov_text': AVCodecID.AV_CODEC_ID_MOV_TEXT,\r\n  'hdmv_pgs': AVCodecID.AV_CODEC_ID_HDMV_PGS_SUBTITLE,\r\n  'hdmv_text': AVCodecID.AV_CODEC_ID_HDMV_TEXT_SUBTITLE,\r\n  'dvd': AVCodecID.AV_CODEC_ID_DVD_SUBTITLE,\r\n  'dvb': AVCodecID.AV_CODEC_ID_DVB_SUBTITLE,\r\n  'eia_608': AVCodecID.AV_CODEC_ID_EIA_608\r\n}\r\n\r\nexport const PixfmtString2AVPixelFormat = {\r\n  'yuv420p': AVPixelFormat.AV_PIX_FMT_YUV420P,\r\n  'yuv422p': AVPixelFormat.AV_PIX_FMT_YUV422P,\r\n  'yuv444p': AVPixelFormat.AV_PIX_FMT_YUV444P,\r\n  'yuva420p': AVPixelFormat.AV_PIX_FMT_YUVA420P,\r\n  'yuva422p': AVPixelFormat.AV_PIX_FMT_YUVA422P,\r\n  'yuva444p': AVPixelFormat.AV_PIX_FMT_YUVA444P,\r\n  'yuvj420p': AVPixelFormat.AV_PIX_FMT_YUVJ420P,\r\n  'yuvj422p': AVPixelFormat.AV_PIX_FMT_YUVJ422P,\r\n  'yuvj444p': AVPixelFormat.AV_PIX_FMT_YUVJ444P,\r\n\r\n  'yuv420p10le': AVPixelFormat.AV_PIX_FMT_YUV420P10LE,\r\n  'yuv422p10le': AVPixelFormat.AV_PIX_FMT_YUV422P10LE,\r\n  'yuv444p10le': AVPixelFormat.AV_PIX_FMT_YUV444P10LE,\r\n  'yuva420p10le': AVPixelFormat.AV_PIX_FMT_YUVA420P10LE,\r\n  'yuva422p10le': AVPixelFormat.AV_PIX_FMT_YUVA422P10LE,\r\n  'yuva444p10le': AVPixelFormat.AV_PIX_FMT_YUVA444P10LE,\r\n\r\n  'yuv420p10be': AVPixelFormat.AV_PIX_FMT_YUV420P10BE,\r\n  'yuv422p10be': AVPixelFormat.AV_PIX_FMT_YUV422P10BE,\r\n  'yuv444p10be': AVPixelFormat.AV_PIX_FMT_YUV444P10BE,\r\n  'yuva420p10be': AVPixelFormat.AV_PIX_FMT_YUVA420P10BE,\r\n  'yuva422p10be': AVPixelFormat.AV_PIX_FMT_YUVA422P10BE,\r\n  'yuva444p10be': AVPixelFormat.AV_PIX_FMT_YUVA444P10BE,\r\n}\r\n\r\nexport const SampleFmtString2SampleFormat = {\r\n  'u8': AVSampleFormat.AV_SAMPLE_FMT_U8,\r\n  'u8-planar': AVSampleFormat.AV_SAMPLE_FMT_U8P,\r\n  's16': AVSampleFormat.AV_SAMPLE_FMT_S16,\r\n  's16-planar': AVSampleFormat.AV_SAMPLE_FMT_S16P,\r\n  's32': AVSampleFormat.AV_SAMPLE_FMT_S32,\r\n  's32-planar': AVSampleFormat.AV_SAMPLE_FMT_S32P,\r\n  's64': AVSampleFormat.AV_SAMPLE_FMT_S64,\r\n  's64-planar': AVSampleFormat.AV_SAMPLE_FMT_S64P,\r\n  'float': AVSampleFormat.AV_SAMPLE_FMT_FLT,\r\n  'float-planar': AVSampleFormat.AV_SAMPLE_FMT_FLTP,\r\n  'double': AVSampleFormat.AV_SAMPLE_FMT_DBL,\r\n  'double-planar': AVSampleFormat.AV_SAMPLE_FMT_DBLP,\r\n}\r\n\r\nexport const Format2AVFormat: Record<string, AVFormat> = {\r\n  'flv': AVFormat.FLV,\r\n  'mp4': AVFormat.MOV,\r\n  'mov': AVFormat.MOV,\r\n  'ts': AVFormat.MPEGTS,\r\n  'mpegts': AVFormat.MPEGTS,\r\n  'mpeg': AVFormat.MPEGPS,\r\n  'ivf': AVFormat.IVF,\r\n  'ogg': AVFormat.OGG,\r\n  'opus': AVFormat.OGG,\r\n  'm3u8': AVFormat.MPEGTS,\r\n  'm3u': AVFormat.MPEGTS,\r\n  'mpd': AVFormat.MOV,\r\n  'mp3': AVFormat.MP3,\r\n  'mkv': AVFormat.MATROSKA,\r\n  'matroska': AVFormat.MATROSKA,\r\n  'mka': AVFormat.MATROSKA,\r\n  'webm': AVFormat.WEBM,\r\n  'aac': AVFormat.AAC,\r\n  'flac': AVFormat.FLAC,\r\n  'wav': AVFormat.WAV,\r\n  'raw_h264': AVFormat.H264,\r\n  'raw_h265': AVFormat.HEVC,\r\n  'raw_vvc': AVFormat.VVC,\r\n  'rtsp': AVFormat.RTSP,\r\n  'rtmp': AVFormat.RTMP,\r\n  'avi': AVFormat.AVI\r\n}\r\n\r\nexport const colorRange2AVColorRange: Record<string, AVColorRange> = {\r\n  'tv': AVColorRange.AVCOL_RANGE_MPEG,\r\n  'pc': AVColorRange.AVCOL_RANGE_JPEG\r\n}\r\n\r\nexport const colorSpace2AVColorSpace: Record<string, AVColorSpace> = {\r\n  'bt709': AVColorSpace.AVCOL_SPC_BT709,\r\n  'fcc': AVColorSpace.AVCOL_SPC_FCC,\r\n  'bt470bg': AVColorSpace.AVCOL_SPC_BT470BG,\r\n  'smpte170m': AVColorSpace.AVCOL_SPC_SMPTE170M,\r\n  'smpte240m': AVColorSpace.AVCOL_SPC_SMPTE240M,\r\n  'ycgco': AVColorSpace.AVCOL_SPC_YCGCO,\r\n  'gbr': AVColorSpace.AVCOL_SPC_RGB,\r\n  'bt2020nc': AVColorSpace.AVCOL_SPC_BT2020_NCL\r\n}\r\n\r\nexport const colorPrimaries2AVColorPrimaries: Record<string, AVColorPrimaries> = {\r\n  'bt709': AVColorPrimaries.AVCOL_PRI_BT709,\r\n  'bt470m': AVColorPrimaries.AVCOL_PRI_BT470M,\r\n  'bt470bg': AVColorPrimaries.AVCOL_PRI_BT470BG,\r\n  'smpte170m': AVColorPrimaries.AVCOL_PRI_SMPTE170M,\r\n  'smpte240m': AVColorPrimaries.AVCOL_PRI_SMPTE240M,\r\n  'smpte428': AVColorPrimaries.AVCOL_PRI_SMPTE428,\r\n  'film': AVColorPrimaries.AVCOL_PRI_FILM,\r\n  'smpte431': AVColorPrimaries.AVCOL_PRI_SMPTE431,\r\n  'smpte432': AVColorPrimaries.AVCOL_PRI_SMPTE432,\r\n  'bt2020': AVColorPrimaries.AVCOL_PRI_BT2020,\r\n  'jedec-p22': AVColorPrimaries.AVCOL_PRI_JEDEC_P22,\r\n  'ebu3213': AVColorPrimaries.AVCOL_PRI_EBU3213\r\n}\r\n\r\nexport const colorTrc2AVColorTransferCharacteristic: Record<string, AVColorTransferCharacteristic> = {\r\n  'bt709': AVColorTransferCharacteristic.AVCOL_TRC_BT709,\r\n  'gamma22': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA22,\r\n  'gamma28': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA28,\r\n  'smpte170m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE170M,\r\n  'smpte240m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE240M,\r\n  'srgb': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_1,\r\n  'xvycc': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_4,\r\n  'bt2020-10': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_10,\r\n  'bt2020-12': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_12,\r\n  'smpte2084': AVColorTransferCharacteristic.AVCOL_TRC_SMPTEST2084,\r\n  'arib-std-b67': AVColorTransferCharacteristic.AVCOL_TRC_ARIB_STD_B67\r\n}\r\n\r\nexport const mediaType2AVMediaType: Record<string, AVMediaType> = {\r\n  'Audio': AVMediaType.AVMEDIA_TYPE_AUDIO,\r\n  'Video': AVMediaType.AVMEDIA_TYPE_VIDEO,\r\n  'Subtitle': AVMediaType.AVMEDIA_TYPE_SUBTITLE,\r\n  'Attachment': AVMediaType.AVMEDIA_TYPE_ATTACHMENT,\r\n  'Data': AVMediaType.AVMEDIA_TYPE_DATA\r\n}\r\n\r\nexport const disposition2AVDisposition: Record<string, AVDisposition> = {\r\n  'default': AVDisposition.DEFAULT,\r\n  'dub': AVDisposition.DUB,\r\n  'original': AVDisposition.ORIGINAL,\r\n  'comment': AVDisposition.COMMENT,\r\n  'lyrics': AVDisposition.LYRICS,\r\n  'karaoke': AVDisposition.KARAOKE,\r\n  'forced': AVDisposition.FORCED,\r\n  'hearing impaired': AVDisposition.HEARING_IMPAIRED,\r\n  'visual impaired': AVDisposition.VISUAL_IMPAIRED,\r\n  'clean effects': AVDisposition.CLEAN_EFFECTS,\r\n  'attached pic': AVDisposition.ATTACHED_PIC,\r\n  'timed thumbnails': AVDisposition.TIMED_THUMBNAILS,\r\n  'captions': AVDisposition.CAPTIONS,\r\n  'descriptions': AVDisposition.DESCRIPTIONS,\r\n  'metadata': AVDisposition.METADATA,\r\n  'dependent': AVDisposition.DEPENDENT,\r\n  'still image': AVDisposition.STILL_IMAGE\r\n}\r\n\r\nexport const layoutName2AVChannelLayout: Record<string, AVChannelLayout> = {\r\n  'mono': AVChannelLayout.AV_CHANNEL_LAYOUT_MONO,\r\n  'stereo': AVChannelLayout.AV_CHANNEL_LAYOUT_STEREO,\r\n  '2.1': AVChannelLayout.AV_CHANNEL_LAYOUT_2POINT1,\r\n  '3.0': AVChannelLayout.AV_CHANNEL_LAYOUT_SURROUND,\r\n  '3.0(back)': AVChannelLayout.AV_CHANNEL_LAYOUT_2_1,\r\n  '4.0': AVChannelLayout.AV_CHANNEL_LAYOUT_4POINT0,\r\n  'quad': AVChannelLayout.AV_CHANNEL_LAYOUT_QUAD,\r\n  'quad(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_2_2,\r\n  '3.1': AVChannelLayout.AV_CHANNEL_LAYOUT_3POINT1,\r\n  '5.0': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT0_BACK,\r\n  '5.0(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT0,\r\n  '4.1': AVChannelLayout.AV_CHANNEL_LAYOUT_4POINT1,\r\n  '5.1': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1_BACK,\r\n  '5.1(side)': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1,\r\n  '6.0': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT0,\r\n  '6.0(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT0_FRONT,\r\n  '3.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_3POINT1POINT2,\r\n  'hexagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_HEXAGONAL,\r\n  '6.1': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1,\r\n  '6.1(back)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1_BACK,\r\n  '6.1(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_6POINT1_FRONT,\r\n  '7.0': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT0,\r\n  '7.0(front)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT0_FRONT,\r\n  '7.1': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1,\r\n  '7.1(wide)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1_WIDE_BACK,\r\n  '7.1(wide-side)': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1_WIDE,\r\n  '5.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1POINT2_BACK,\r\n  'octagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_OCTAGONAL,\r\n  'cube': AVChannelLayout.AV_CHANNEL_LAYOUT_CUBE,\r\n  '5.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_5POINT1POINT4_BACK,\r\n  '7.1.2': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1POINT2,\r\n  '7.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT1POINT4_BACK,\r\n  '7.2.3': AVChannelLayout.AV_CHANNEL_LAYOUT_7POINT2POINT3,\r\n  '9.1.4': AVChannelLayout.AV_CHANNEL_LAYOUT_9POINT1POINT4_BACK,\r\n  'hexadecagonal': AVChannelLayout.AV_CHANNEL_LAYOUT_HEXADECAGONAL,\r\n  'downmix': AVChannelLayout.AV_CHANNEL_LAYOUT_STEREO_DOWNMIX,\r\n  '22.2': AVChannelLayout.AV_CHANNEL_LAYOUT_22POINT2\r\n}\r\n","/*\r\n * libmedia AVChannelLayout\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVChannel, AVChannelOrder } from '../audiosamplefmt'\r\n\r\n@struct\r\nexport class AVChannelCustom {\r\n  id: AVChannel\r\n  name: array<char, 16>\r\n  opaque: pointer<void>\r\n}\r\n\r\n@struct\r\nexport class AVChannelLayout {\r\n  /**\r\n   * Channel order used in this layout.\r\n   * This is a mandatory field.\r\n   */\r\n  order: AVChannelOrder\r\n\r\n  /**\r\n   * Number of channels in this layout. Mandatory field.\r\n   */\r\n  nbChannels: int32\r\n\r\n  /**\r\n   * Details about which channels are present in this layout.\r\n   * For AV_CHANNEL_ORDER_UNSPEC, this field is undefined and must not be\r\n   * used.\r\n   */\r\n  u: union<{\r\n    /**\r\n     * This member must be used for AV_CHANNEL_ORDER_NATIVE, and may be used\r\n     * for AV_CHANNEL_ORDER_AMBISONIC to signal non-diegetic channels.\r\n     * It is a bitmask, where the position of each set bit means that the\r\n     * AVChannel with the corresponding value is present.\r\n     *\r\n     * I.e. when (mask & (1 << AV_CHAN_FOO)) is non-zero, then AV_CHAN_FOO\r\n     * is present in the layout. Otherwise it is not present.\r\n     *\r\n     * @note when a channel layout using a bitmask is constructed or\r\n     * modified manually (i.e.  not using any of the av_channel_layout_*\r\n     * functions), the code doing it must ensure that the number of set bits\r\n     * is equal to nb_channels.\r\n     */\r\n    mask: uint64\r\n\r\n    /**\r\n     * This member must be used when the channel order is\r\n     * AV_CHANNEL_ORDER_CUSTOM. It is a nb_channels-sized array, with each\r\n     * element signalling the presence of the AVChannel with the\r\n     * corresponding value in map[i].id.\r\n     *\r\n     * I.e. when map[i].id is equal to AV_CHAN_FOO, then AV_CH_FOO is the\r\n     * i-th channel in the audio data.\r\n     *\r\n     * When map[i].id is in the range between AV_CHAN_AMBISONIC_BASE and\r\n     * AV_CHAN_AMBISONIC_END (inclusive), the channel contains an ambisonic\r\n     * component with ACN index (as defined above)\r\n     * n = map[i].id - AV_CHAN_AMBISONIC_BASE.\r\n     *\r\n     * map[i].name may be filled with a 0-terminated string, in which case\r\n     * it will be used for the purpose of identifying the channel with the\r\n     * convenience functions below. Otherwise it must be zeroed.\r\n     */\r\n    map: pointer<AVChannelCustom>\r\n  }>\r\n\r\n  /**\r\n   * For some private data of the user.\r\n   */\r\n  opaque: pointer<void>\r\n}\r\n","/*\r\n * libmedia AVBuffer defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { avFree } from '../util/mem'\r\nimport { Mutex } from 'cheap/thread/mutex'\r\n\r\nexport const enum AVBufferFlags {\r\n  NONE = 0,\r\n  READONLY = 1 << 0\r\n}\r\n\r\n@struct\r\nexport class AVBuffer {\r\n  /**\r\n   * data described by this buffer\r\n   */\r\n  data: pointer<uint8> = nullptr\r\n\r\n  /**\r\n   * size of data in bytes\r\n   */\r\n  size: size = 0\r\n\r\n  /**\r\n   *  number of existing AVBufferRef instances referring to this buffer\r\n   */\r\n  refcount: atomic_uint32 = 0\r\n\r\n  /**\r\n   * a callback for freeing the data\r\n   */\r\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr\r\n\r\n  /**\r\n   * an opaque pointer, to be used by the freeing callback\r\n   */\r\n  opaque: pointer<void> = nullptr\r\n\r\n  /**\r\n   * A combination of AV_BUFFER_FLAG_*\r\n   */\r\n  flags: AVBufferFlags = AVBufferFlags.NONE\r\n\r\n  /**\r\n   * A combination of BUFFER_FLAG_*\r\n   */\r\n  flagsInternal: int32 = 0\r\n}\r\n\r\nfunction avbufferDefaultFree(opaque: pointer<void>, data: pointer<uint8>) {\r\n  avFree(data)\r\n}\r\n\r\n@struct\r\nexport class AVBufferRef {\r\n  buffer: pointer<AVBuffer> = nullptr\r\n\r\n  /**\r\n   * The data buffer. It is considered writable if and only if\r\n   * this is the only reference to the buffer, in which case\r\n   * av_buffer_is_writable() returns 1.\r\n   */\r\n  data: pointer<uint8> = nullptr\r\n\r\n  /**\r\n   * Size of data in bytes.\r\n   */\r\n  size: size = 0\r\n}\r\n\r\n@struct\r\nexport class AVBufferPool {\r\n  mutex: Mutex\r\n\r\n  pool: pointer<BufferPoolEntry> = nullptr\r\n\r\n  /**\r\n   *  number of existing AVBufferRef instances referring to this buffer\r\n   */\r\n  refcount: atomic_uint32 = 0\r\n\r\n  /**\r\n   * Size of data in bytes.\r\n   */\r\n  size: size = 0\r\n\r\n  /**\r\n   * an opaque pointer, to be used by the freeing callback\r\n   */\r\n  opaque: pointer<void> = nullptr\r\n  alloc: pointer<(size: size) => AVBufferRef> = nullptr\r\n  alloc2: pointer<(opaque: pointer<void>, size: size) => AVBufferRef> = nullptr\r\n  poolFree: pointer<(opaque: pointer<void>) => void> = nullptr\r\n}\r\n\r\n@struct\r\nexport class BufferPoolEntry {\r\n  data: pointer<uint8> = nullptr\r\n  /**\r\n   * an opaque pointer, to be used by the freeing callback\r\n   */\r\n  opaque: pointer<void> = nullptr\r\n\r\n  /**\r\n   * a callback for freeing the data\r\n   */\r\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr\r\n\r\n  pool: pointer<AVBufferPool> = nullptr\r\n\r\n  next: pointer<BufferPoolEntry> = nullptr\r\n  /*\r\n   * An AVBuffer structure to (re)use as AVBuffer for subsequent uses\r\n   * of this BufferPoolEntry.\r\n   */\r\n  buffer: AVBuffer\r\n}\r\n","/*\r\n * libmedia AVCodecParameters defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { NOPTS_VALUE } from '../constant'\r\nimport { AVCodecID, AVMediaType } from '../codec'\r\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange, AVColorSpace,\r\n  AVColorTransferCharacteristic, AVFieldOrder, AVPixelFormat\r\n} from '../pixfmt'\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\nimport { Rational } from './rational'\r\nimport { AVPacketSideData } from './avpacket'\r\nimport { AVChannelLayout } from './audiosample'\r\nimport { freeCodecParameters } from '../util/codecparameters'\r\nimport { symbolStructAddress } from 'cheap/symbol'\r\n\r\nexport const enum AVCodecParameterFlags {\r\n  /**\r\n   * 对于 h264/h265/h266 标记是否是 annexb 码流格式，未置此标志则为 avcc 格式\r\n   */\r\n  AV_CODECPAR_FLAG_H26X_ANNEXB = 1,\r\n\r\n  /**\r\n   * 解封装层没有 pts\r\n   */\r\n  AV_CODECPAR_FLAG_NO_PTS = 2,\r\n\r\n  /**\r\n   * 解封装层没有 dts\r\n   */\r\n  AV_CODECPAR_FLAG_NO_DTS = 4\r\n}\r\n\r\n/**\r\n * FFmpeg AVCodecParameters 定义\r\n */\r\n@struct\r\nexport default class AVCodecParameters {\r\n  /**\r\n   * General type of the encoded data.\r\n   */\r\n  codecType: AVMediaType = AVMediaType.AVMEDIA_TYPE_UNKNOWN\r\n  /**\r\n   * Specific type of the encoded data (the codec used).\r\n   */\r\n  codecId: AVCodecID = AVCodecID.AV_CODEC_ID_NONE\r\n  /**\r\n   * Additional information about the codec (corresponds to the AVI FOURCC).\r\n   */\r\n  codecTag: uint32 = 0\r\n\r\n  /**\r\n   * Extra binary data needed for initializing the decoder, codec-dependent.\r\n   *\r\n   * Must be allocated with av_malloc() and will be freed by\r\n   * avcodec_parameters_free(). The allocated size of extradata must be at\r\n   * least extradata_size + AV_INPUT_BUFFER_PADDING_SIZE, with the padding\r\n   * bytes zeroed.\r\n   */\r\n  extradata: pointer<uint8> = nullptr\r\n  extradataSize: int32 = 0\r\n\r\n  /**\r\n   * Additional data associated with the entire stream.\r\n   *\r\n   * Should be allocated with av_packet_side_data_new() or\r\n   * av_packet_side_data_add(), and will be freed by avcodec_parameters_free().\r\n   */\r\n  codedSideData: pointer<AVPacketSideData> = nullptr\r\n\r\n  /**\r\n   * Amount of entries in @ref coded_side_data.\r\n   */\r\n  nbCodedSideData: int32 = 0\r\n\r\n  /**\r\n   * - video: the pixel format, the value corresponds to enum AVPixelFormat.\r\n   * - audio: the sample format, the value corresponds to enum AVSampleFormat.\r\n   */\r\n  format: AVPixelFormat | AVSampleFormat = NOPTS_VALUE\r\n\r\n  /**\r\n   * The average bitrate of the encoded data (in bits per second).\r\n   */\r\n  bitrate: int64 = 0n\r\n\r\n  /**\r\n   * The number of bits per sample in the codedwords.\r\n   *\r\n   * This is basically the bitrate per sample. It is mandatory for a bunch of\r\n   * formats to actually decode them. It's the number of bits for one sample in\r\n   * the actual coded bitstream.\r\n   *\r\n   * This could be for example 4 for ADPCM\r\n   * For PCM formats this matches bits_per_raw_sample\r\n   * Can be 0\r\n   */\r\n  bitsPerCodedSample: int32 = 0\r\n  /**\r\n   * This is the number of valid bits in each output sample. If the\r\n   * sample format has more bits, the least significant bits are additional\r\n   * padding bits, which are always 0. Use right shifts to reduce the sample\r\n   * to its actual size. For example, audio formats with 24 bit samples will\r\n   * have bits_per_raw_sample set to 24, and format set to AV_SAMPLE_FMT_S32.\r\n   * To get the original sample use \"(int32_t)sample >> 8\".\"\r\n   *\r\n   * For ADPCM this might be 12 or 16 or similar\r\n   * Can be 0\r\n   */\r\n  bitsPerRawSample: int32 = 0\r\n\r\n  /**\r\n   * Codec-specific bitstream restrictions that the stream conforms to.\r\n   */\r\n  profile: int32 = NOPTS_VALUE\r\n  level: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * Video only. The dimensions of the video frame in pixels.\r\n   */\r\n  width: int32 = 0\r\n  height: int32 = 0\r\n\r\n  /**\r\n   * Video only. The aspect ratio (width / height) which a single pixel\r\n   * should have when displayed.\r\n   *\r\n   * When the aspect ratio is unknown / undefined, the numerator should be\r\n   * set to 0 (the denominator may have any value).\r\n   */\r\n  sampleAspectRatio: Rational = new Rational({den: 1, num: 1})\r\n\r\n  /**\r\n   * Video only. Number of frames per second, for streams with constant frame\r\n   * durations. Should be set to { 0, 1 } when some frames have differing\r\n   * durations or if the value is not known.\r\n   *\r\n   * @note This field correponds to values that are stored in codec-level\r\n   * headers and is typically overridden by container/transport-layer\r\n   * timestamps, when available. It should thus be used only as a last resort,\r\n   * when no higher-level timing information is available.\r\n   */\r\n  framerate: Rational = new Rational({den: 1, num: 0})\r\n\r\n  /**\r\n   * Video only. The order of the fields in interlaced video.\r\n   */\r\n  fieldOrder: AVFieldOrder = AVFieldOrder.AV_FIELD_UNKNOWN\r\n\r\n  /**\r\n   * Video only. Additional colorspace characteristics.\r\n   */\r\n  colorRange: AVColorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\r\n  colorPrimaries: AVColorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\r\n  colorTrc: AVColorTransferCharacteristic = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\r\n  colorSpace: AVColorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\r\n  chromaLocation: AVChromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\r\n\r\n  /**\r\n   * Video only. Number of delayed frames.\r\n   */\r\n  videoDelay: int32 = 0\r\n\r\n  /**\r\n   * Audio only. The channel layout and number of channels.\r\n   */\r\n  chLayout: AVChannelLayout\r\n\r\n  /**\r\n   * Audio only. The number of audio samples per second.\r\n   */\r\n  sampleRate: int32 = NOPTS_VALUE\r\n  /**\r\n   * Audio only. The number of bytes per coded audio frame, required by some\r\n   * formats.\r\n   *\r\n   * Corresponds to nBlockAlign in WAVEFORMATEX.\r\n   */\r\n  blockAlign: int32 = 0\r\n\r\n  /**\r\n   * Audio only. Audio frame size, if known. Required by some formats to be static.\r\n   */\r\n  frameSize: int32 = 0\r\n\r\n  /**\r\n   * Audio only. The amount of padding (in samples) inserted by the encoder at\r\n   * the beginning of the audio. I.e. this number of leading decoded samples\r\n   * must be discarded by the caller to get the original audio without leading\r\n   * padding.\r\n   */\r\n  initialPadding: int32 = 0\r\n\r\n  /**\r\n   * Audio only. The amount of padding (in samples) appended by the encoder to\r\n   * the end of the audio. I.e. this number of decoded samples must be\r\n   * discarded by the caller from the end of the stream to get the original\r\n   * audio without any trailing padding.\r\n   */\r\n  trailingPadding: int32 = 0\r\n  /**\r\n   * Audio only. Number of samples to skip after a discontinuity.\r\n   */\r\n  seekPreroll: int32 = 0\r\n\r\n  /**\r\n   * 一些标志\r\n   */\r\n  flags: int32 = 0\r\n\r\n  destroy() {\r\n    freeCodecParameters(addressof(this as AVCodecParameters))\r\n    this[symbolStructAddress] = nullptr\r\n  }\r\n}\r\n","/*\r\n * libmedia AVDictionary defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport const enum AVDictFlags {\r\n  MATCH_CASE = 1,\r\n  IGNORE_SUFFIX = 2,\r\n  DONT_OVERWRITE = 16,\r\n  APPEND = 32,\r\n  MULTIKEY = 64\r\n}\r\n\r\n@struct\r\nexport class AVDictionaryEntry {\r\n  key: pointer<void> = nullptr\r\n  value: pointer<void> = nullptr\r\n}\r\n\r\n@struct\r\nexport class AVDictionary {\r\n  count: int32 = 0\r\n  elems: pointer<AVDictionaryEntry> = nullptr\r\n}\r\n","/*\r\n * libmedia AVFrame defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\r\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic } from '../pixfmt'\r\nimport { AVBufferRef } from './avbuffer'\r\nimport { unrefAVFrame } from '../util/avframe'\r\nimport { AVDictionary } from './avdict'\r\nimport { Rational } from './rational'\r\nimport { symbolStructAddress } from 'cheap/symbol'\r\nimport { AVChannelLayout } from './audiosample'\r\n\r\nexport const AV_NUM_DATA_POINTERS = 8\r\n\r\nexport const enum AVFrameFlags {\r\n  AV_FRAME_FLAG_NONE = 0,\r\n  /**\r\n   * The frame data may be corrupted, e.g. due to decoding errors.\r\n   */\r\n  AV_FRAME_FLAG_CORRUPT = 1 << 0,\r\n  /**\r\n   * A flag to mark frames that are keyframes.\r\n   */\r\n  AV_FRAME_FLAG_KEY = 1 << 1,\r\n  /**\r\n   * A flag to mark the frames which need to be decoded, but shouldn't be output.\r\n   */\r\n  AV_FRAME_FLAG_DISCARD = 1 << 2,\r\n  /**\r\n   * A flag to mark frames whose content is interlaced.\r\n   */\r\n  AV_FRAME_FLAG_INTERLACED = 1 << 3,\r\n  /**\r\n   * A flag to mark frames where the top field is displayed first if the content\r\n   * is interlaced.\r\n   */\r\n  AV_FRAME_FLAG_TOP_FIELD_FIRST = 1 << 4\r\n}\r\n\r\nexport const enum FFDecodeError {\r\n  NONE = 0,\r\n  INVALID_BITSTREAM = 1,\r\n  MISSING_REFERENCE = 2,\r\n  CONCEALMENT_ACTIVE = 4,\r\n  DECODE_SLICES = 8\r\n}\r\n\r\nexport const enum AVPictureType {\r\n  /**\r\n   * Undefined\r\n   */\r\n  AV_PICTURE_TYPE_NONE = 0,\r\n  /**\r\n   * Intra\r\n   */\r\n  AV_PICTURE_TYPE_I,\r\n  /**\r\n   * Predicted\r\n   */\r\n  AV_PICTURE_TYPE_P,\r\n  /**\r\n   * Bi-dir predicted\r\n   */\r\n  AV_PICTURE_TYPE_B,\r\n  /**\r\n   * S(GMC)-VOP MPEG-4\r\n   */\r\n  AV_PICTURE_TYPE_S,\r\n  /**\r\n   * Switching Intra\r\n   */\r\n  AV_PICTURE_TYPE_SI,\r\n  /**\r\n   * Switching Predicted\r\n   */\r\n  AV_PICTURE_TYPE_SP,\r\n  /**\r\n   * BI type\r\n   */\r\n  AV_PICTURE_TYPE_BI\r\n}\r\n\r\n/**\r\n * @defgroup lavu_frame AVFrame\r\n * @ingroup lavu_data\r\n *\r\n * @{\r\n * AVFrame is an abstraction for reference-counted raw multimedia data.\r\n */\r\n\r\nexport const enum AVFrameSideDataType {\r\n  /**\r\n   * The data is the AVPanScan struct defined in libavcodec.\r\n   */\r\n  AV_FRAME_DATA_PANSCAN,\r\n  /**\r\n   * ATSC A53 Part 4 Closed Captions.\r\n   * A53 CC bitstream is stored as uint8_t in AVFrameSideData.data.\r\n   * The number of bytes of CC data is AVFrameSideData.size.\r\n   */\r\n  AV_FRAME_DATA_A53_CC,\r\n  /**\r\n   * Stereoscopic 3d metadata.\r\n   * The data is the AVStereo3D struct defined in libcommon/stereo3d.h.\r\n   */\r\n  AV_FRAME_DATA_STEREO3D,\r\n  /**\r\n   * The data is the AVMatrixEncoding enum defined in libcommon/channel_layout.h.\r\n   */\r\n  AV_FRAME_DATA_MATRIXENCODING,\r\n  /**\r\n   * Metadata relevant to a downmix procedure.\r\n   * The data is the AVDownmixInfo struct defined in libcommon/downmix_info.h.\r\n   */\r\n  AV_FRAME_DATA_DOWNMIX_INFO,\r\n  /**\r\n   * ReplayGain information in the form of the AVReplayGain struct.\r\n   */\r\n  AV_FRAME_DATA_REPLAYGAIN,\r\n  /**\r\n   * This side data contains a 3x3 transformation matrix describing an affine\r\n   * transformation that needs to be applied to the frame for correct\r\n   * presentation.\r\n   *\r\n   * See libcommon/display.h for a detailed description of the data.\r\n   */\r\n  AV_FRAME_DATA_DISPLAYMATRIX,\r\n  /**\r\n   * Active Format Description data consisting of a single byte as specified\r\n   * in ETSI TS 101 154 using AVActiveFormatDescription enum.\r\n   */\r\n  AV_FRAME_DATA_AFD,\r\n  /**\r\n   * Motion vectors exported by some codecs (on demand through the export_mvs\r\n   * flag set in the libavcodec AVCodecContext flags2 option).\r\n   * The data is the AVMotionVector struct defined in\r\n   * libcommon/motion_vector.h.\r\n   */\r\n  AV_FRAME_DATA_MOTION_VECTORS,\r\n  /**\r\n   * Recommmends skipping the specified number of samples. This is exported\r\n   * only if the \"skip_manual\" AVOption is set in libavcodec.\r\n   * This has the same format as AV_PKT_DATA_SKIP_SAMPLES.\r\n   * @code\r\n   * u32le number of samples to skip from start of this packet\r\n   * u32le number of samples to skip from end of this packet\r\n   * u8    reason for start skip\r\n   * u8    reason for end   skip (0=padding silence, 1=convergence)\r\n   * @endcode\r\n   */\r\n  AV_FRAME_DATA_SKIP_SAMPLES,\r\n  /**\r\n   * This side data must be associated with an audio frame and corresponds to\r\n   * enum AVAudioServiceType defined in avcodec.h.\r\n   */\r\n  AV_FRAME_DATA_AUDIO_SERVICE_TYPE,\r\n  /**\r\n   * Mastering display metadata associated with a video frame. The payload is\r\n   * an AVMasteringDisplayMetadata type and contains information about the\r\n   * mastering display color volume.\r\n   */\r\n  AV_FRAME_DATA_MASTERING_DISPLAY_METADATA,\r\n  /**\r\n   * The GOP timecode in 25 bit timecode format. Data format is 64-bit integer.\r\n   * This is set on the first frame of a GOP that has a temporal reference of 0.\r\n   */\r\n  AV_FRAME_DATA_GOP_TIMECODE,\r\n\r\n  /**\r\n   * The data represents the AVSphericalMapping structure defined in\r\n   * libcommon/spherical.h.\r\n   */\r\n  AV_FRAME_DATA_SPHERICAL,\r\n\r\n  /**\r\n   * Content light level (based on CTA-861.3). This payload contains data in\r\n   * the form of the AVContentLightMetadata struct.\r\n   */\r\n  AV_FRAME_DATA_CONTENT_LIGHT_LEVEL,\r\n\r\n  /**\r\n   * The data contains an ICC profile as an opaque octet buffer following the\r\n   * format described by ISO 15076-1 with an optional name defined in the\r\n   * metadata key entry \"name\".\r\n   */\r\n  AV_FRAME_DATA_ICC_PROFILE,\r\n\r\n  /**\r\n   * Timecode which conforms to SMPTE ST 12-1. The data is an array of 4 uint32_t\r\n   * where the first uint32_t describes how many (1-3) of the other timecodes are used.\r\n   * The timecode format is described in the documentation of av_timecode_get_smpte_from_framenum()\r\n   * function in libcommon/timecode.h.\r\n   */\r\n  AV_FRAME_DATA_S12M_TIMECODE,\r\n\r\n  /**\r\n   * HDR dynamic metadata associated with a video frame. The payload is\r\n   * an AVDynamicHDRPlus type and contains information for color\r\n   * volume transform - application 4 of SMPTE 2094-40:2016 standard.\r\n   */\r\n  AV_FRAME_DATA_DYNAMIC_HDR_PLUS,\r\n\r\n  /**\r\n   * Regions Of Interest, the data is an array of AVRegionOfInterest type, the number of\r\n   * array element is implied by AVFrameSideData.size / AVRegionOfInterest.self_size.\r\n   */\r\n  AV_FRAME_DATA_REGIONS_OF_INTEREST,\r\n\r\n  /**\r\n   * Encoding parameters for a video frame, as described by AVVideoEncParams.\r\n   */\r\n  AV_FRAME_DATA_VIDEO_ENC_PARAMS,\r\n\r\n  /**\r\n   * User data unregistered metadata associated with a video frame.\r\n   * This is the H.26[45] UDU SEI message, and shouldn't be used for any other purpose\r\n   * The data is stored as uint8_t in AVFrameSideData.data which is 16 bytes of\r\n   * uuid_iso_iec_11578 followed by AVFrameSideData.size - 16 bytes of user_data_payload_byte.\r\n   */\r\n  AV_FRAME_DATA_SEI_UNREGISTERED,\r\n\r\n  /**\r\n   * Film grain parameters for a frame, described by AVFilmGrainParams.\r\n   * Must be present for every frame which should have film grain applied.\r\n   */\r\n  AV_FRAME_DATA_FILM_GRAIN_PARAMS,\r\n\r\n  /**\r\n   * Bounding boxes for object detection and classification,\r\n   * as described by AVDetectionBBoxHeader.\r\n   */\r\n  AV_FRAME_DATA_DETECTION_BBOXES\r\n}\r\n\r\n@struct\r\nexport class AVFrameSideData {\r\n  type: AVFrameSideDataType = 0\r\n\r\n  data: pointer<uint8> = nullptr\r\n\r\n  size: size = 0\r\n\r\n  metadata: pointer<AVDictionary> = nullptr\r\n\r\n  buf: pointer<AVBufferRef> = nullptr\r\n}\r\n\r\n@struct\r\nexport class AVMasteringDisplayMetadata {\r\n  /**\r\n   * CIE 1931 xy chromaticity coords of color primaries (r, g, b order).\r\n   */\r\n  displayPrimaries: array<array<Rational, 2>, 3>\r\n  /**\r\n   * CIE 1931 xy chromaticity coords of white point.\r\n   */\r\n  whitePoint: array<Rational, 2>\r\n  /**\r\n   * Min luminance of mastering display (cd/m^2).\r\n   */\r\n  minLuminance: Rational\r\n  /**\r\n   * Max luminance of mastering display (cd/m^2).\r\n   */\r\n  maxLuminance: Rational\r\n  /**\r\n   * Flag indicating whether the display primaries (and white point) are set.\r\n   */\r\n  hasPrimaries: int32\r\n  /**\r\n   * Flag indicating whether the luminance (min_ and max_) have been set.\r\n   */\r\n  hasLuminance: int32\r\n}\r\n\r\n@struct\r\nexport class AVContentLightMetadata {\r\n  /**\r\n   * Max content light level (cd/m^2).\r\n   */\r\n  maxCLL: uint32\r\n  /**\r\n   * Max average light level per frame (cd/m^2).\r\n   */\r\n  maxFALL: uint32\r\n}\r\n\r\n/**\r\n * FFmpeg AVFrame 定义\r\n */\r\n@struct\r\nexport default class AVFrame {\r\n  /**\r\n   * pointer to the picture/channel planes.\r\n   * This might be different from the first allocated byte\r\n   *\r\n   * Some decoders access areas outside 0,0 - width, height, please\r\n   * see avcodec_align_dimensions2(). Some filters and swscale can read\r\n   * up to 16 bytes beyond the planes, if these filters are to be used,\r\n   * then 16 extra bytes must be allocated.\r\n   *\r\n   * NOTE: Except for hwaccel formats, pointers not needed by the format\r\n   * MUST be set to NULL.\r\n   */\r\n  data: array<pointer<uint8>, typeof AV_NUM_DATA_POINTERS> = new Array(AV_NUM_DATA_POINTERS).fill(nullptr, 0, AV_NUM_DATA_POINTERS)\r\n\r\n  /**\r\n   * For video, size in bytes of each picture line.\r\n   * For audio, size in bytes of each plane.\r\n   *\r\n   * For audio, only linesize[0] may be set. For planar audio, each channel\r\n   * plane must be the same size.\r\n   *\r\n   * For video the linesizes should be multiples of the CPUs alignment\r\n   * preference, this is 16 or 32 for modern desktop CPUs.\r\n   * Some code requires such alignment other code can be slower without\r\n   * correct alignment, for yet other it makes no difference.\r\n   *\r\n   * @note The linesize may be larger than the size of usable data -- there\r\n   * may be extra padding present for performance reasons.\r\n   */\r\n  linesize: array<int32, typeof AV_NUM_DATA_POINTERS> = new Array(AV_NUM_DATA_POINTERS).fill(0, 0, AV_NUM_DATA_POINTERS)\r\n\r\n  /**\r\n   * pointers to the data planes/channels.\r\n   *\r\n   * For video, this should simply point to data[].\r\n   *\r\n   * For planar audio, each channel has a separate data pointer, and\r\n   * linesize[0] contains the size of each channel buffer.\r\n   * For packed audio, there is just one data pointer, and linesize[0]\r\n   * contains the total size of the buffer for all channels.\r\n   *\r\n   * Note: Both data and extended_data should always be set in a valid frame,\r\n   * but for planar audio with more channels that can fit in data,\r\n   * extended_data must be used in order to access all channels.\r\n   */\r\n  extendedData: pointer<pointer<uint8>> = nullptr\r\n\r\n  /**\r\n   * @name Video dimensions\r\n   * Video frames only. The coded dimensions (in pixels) of the video frame,\r\n   * i.e. the size of the rectangle that contains some well-defined values.\r\n   *\r\n   * @note The part of the frame intended for display/presentation is further\r\n   * restricted by the @ref cropping \"Cropping rectangle\".\r\n   * \r\n   */\r\n  width: int32 = NOPTS_VALUE\r\n  height: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * number of audio samples (per channel) described by this frame\r\n   */\r\n  nbSamples: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * format of the frame, -1 if unknown or unset\r\n   * Values correspond to enum AVPixelFormat for video frames,\r\n   * enum AVSampleFormat for audio)\r\n   */\r\n  format: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * 1 -> keyframe, 0-> not\r\n   *\r\n   * @deprecated Use AV_FRAME_FLAG_KEY instead\r\n   */\r\n  @ignore(!defined(API_FRAME_KEY))\r\n  keyFrame: int32 = 0\r\n\r\n  /**\r\n   * Picture type of the frame.\r\n   */\r\n  pictType: AVPictureType = AVPictureType.AV_PICTURE_TYPE_NONE\r\n\r\n  /**\r\n   * Sample aspect ratio for the video frame, 0/1 if unknown/unspecified.\r\n   */\r\n  sampleAspectRatio: Rational = new Rational({den: 1, num: 0})\r\n\r\n  /**\r\n   * Presentation timestamp in time_base units (time when frame should be shown to user).\r\n   */\r\n  pts: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * DTS copied from the AVPacket that triggered returning this frame. (if frame threading isn't used)\r\n   * This is also the Presentation time of this AVFrame calculated from\r\n   * only AVPacket.dts values without pts values.\r\n   */\r\n  pktDts: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * Time base for the timestamps in this frame.\r\n   * In the future, this field may be set on frames output by decoders or\r\n   * filters, but its value will be by default ignored on input to encoders\r\n   * or filters.\r\n   */\r\n  timeBase: Rational\r\n\r\n  /**\r\n   * quality (between 1 (good) and FF_LAMBDA_MAX (bad))\r\n   */\r\n  quality: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * Frame owner's private data.\r\n   *\r\n   * This field may be set by the code that allocates/owns the frame data.\r\n   * It is then not touched by any library functions, except:\r\n   * - it is copied to other references by av_frame_copy_props() (and hence by\r\n   *   av_frame_ref());\r\n   * - it is set to NULL when the frame is cleared by av_frame_unref()\r\n   * - on the caller's explicit request. E.g. libavcodec encoders/decoders\r\n   *   will copy this field to/from @ref AVPacket \"AVPackets\" if the caller sets\r\n   *   @ref AV_CODEC_FLAG_COPY_OPAQUE.\r\n   *\r\n   * @see opaque_ref the reference-counted analogue\r\n   */\r\n  opaque: pointer<void> = nullptr\r\n\r\n  /**\r\n   * Number of fields in this frame which should be repeated, i.e. the total\r\n   * duration of this frame should be repeat_pict + 2 normal field durations.\r\n   *\r\n   * For interlaced frames this field may be set to 1, which signals that this\r\n   * frame should be presented as 3 fields: beginning with the first field (as\r\n   * determined by AV_FRAME_FLAG_TOP_FIELD_FIRST being set or not), followed\r\n   * by the second field, and then the first field again.\r\n   *\r\n   * For progressive frames this field may be set to a multiple of 2, which\r\n   * signals that this frame's duration should be (repeat_pict + 2) / 2\r\n   * normal frame durations.\r\n   *\r\n   * @note This field is computed from MPEG2 repeat_first_field flag and its\r\n   * associated flags, H.264 pic_struct from picture timing SEI, and\r\n   * their analogues in other codecs. Typically it should only be used when\r\n   * higher-layer timing information is not available.\r\n   */\r\n  repeatPict: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * The content of the picture is interlaced.\r\n   *\r\n   * @deprecated Use AV_FRAME_FLAG_INTERLACED instead\r\n   */\r\n  @ignore(!defined(API_INTERLACED_FRAME))\r\n  interlacedFrame: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * If the content is interlaced, is top field displayed first.\r\n   *\r\n   * @deprecated Use AV_FRAME_FLAG_TOP_FIELD_FIRST instead\r\n   */\r\n  @ignore(!defined(API_INTERLACED_FRAME))\r\n  topFieldFirst: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * Tell user application that palette has changed from previous frame.\r\n   *  @deprecated\r\n   */\r\n  @ignore(!defined(API_PALETTE_HAS_CHANGED))\r\n  paletteHasChanged: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * Sample rate of the audio data.\r\n   */\r\n  sampleRate: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * AVBuffer references backing the data for this frame. If all elements of\r\n   * this array are NULL, then this frame is not reference counted. This array\r\n   * must be filled contiguously -- if buf[i] is non-NULL then buf[j] must\r\n   * also be non-NULL for all j < i.\r\n   *\r\n   * There may be at most one AVBuffer per data plane, so for video this array\r\n   * always contains all the references. For planar audio with more than\r\n   * AV_NUM_DATA_POINTERS channels, there may be more buffers than can fit in\r\n   * this array. Then the extra AVBufferRef pointers are stored in the\r\n   * extended_buf array.\r\n   */\r\n  buf: array<pointer<AVBufferRef>, typeof AV_NUM_DATA_POINTERS> = new Array(AV_NUM_DATA_POINTERS).fill(nullptr, 0, AV_NUM_DATA_POINTERS)\r\n\r\n  /**\r\n   * For planar audio which requires more than AV_NUM_DATA_POINTERS\r\n   * AVBufferRef pointers, this array will hold all the references which\r\n   * cannot fit into AVFrame.buf.\r\n   *\r\n   * Note that this is different from AVFrame.extended_data, which always\r\n   * contains all the pointers. This array only contains the extra pointers,\r\n   * which cannot fit into AVFrame.buf.\r\n   *\r\n   * This array is always allocated using av_malloc() by whoever constructs\r\n   * the frame. It is freed in av_frame_unref().\r\n   */\r\n  extendedBuf: pointer<pointer<AVBufferRef>> = nullptr\r\n\r\n  /**\r\n   * Number of elements in extended_buf.\r\n   */\r\n  nbExtendedBuf: int32 = 0\r\n\r\n  sideData: pointer<pointer<AVFrameSideData>> = nullptr\r\n\r\n  nbSideData: int32 = 0\r\n\r\n  /**\r\n   * Frame flags, a combination of @ref lavu_frame_flags\r\n   */\r\n  flags: AVFrameFlags = AVFrameFlags.AV_FRAME_FLAG_NONE\r\n\r\n  /**\r\n   * MPEG vs JPEG YUV range.\r\n   * - encoding: Set by user\r\n   * - decoding: Set by libavcodec\r\n   */\r\n  colorRange: AVColorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\r\n  colorPrimaries: AVColorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\r\n  colorTrc: AVColorTransferCharacteristic = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\r\n\r\n  /**\r\n   * YUV colorspace type.\r\n   * - encoding: Set by user\r\n   * - decoding: Set by libavcodec\r\n   */\r\n  colorSpace: AVColorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\r\n  chromaLocation: AVChromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\r\n\r\n  /**\r\n   * frame timestamp estimated using various heuristics, in stream time base\r\n   * - encoding: unused\r\n   * - decoding: set by libavcodec, read by user.\r\n   */\r\n  bestEffortTimestamp: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * reordered pos from the last AVPacket that has been input into the decoder\r\n   * - encoding: unused\r\n   * - decoding: Read by user.\r\n   * @deprecated use AV_CODEC_FLAG_COPY_OPAQUE to pass through arbitrary user\r\n   *             data from packets to frames\r\n   */\r\n  @ignore(!defined(API_FRAME_PKT))\r\n  pktPos: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * metadata.\r\n   * - encoding: Set by user.\r\n   * - decoding: Set by libavcodec.\r\n   */\r\n  metadata: pointer<AVDictionary> = nullptr\r\n\r\n  /**\r\n   * decode error flags of the frame, set to a combination of\r\n   * FF_DECODE_ERROR_xxx flags if the decoder produced a frame, but there\r\n   * were errors during the decoding.\r\n   * - encoding: unused\r\n   * - decoding: set by libavcodec, read by user.\r\n   */\r\n  decodeErrorFlags: FFDecodeError = FFDecodeError.NONE\r\n\r\n  /**\r\n   * size of the corresponding packet containing the compressed\r\n   * frame.\r\n   * It is set to a negative value if unknown.\r\n   * - encoding: unused\r\n   * - decoding: set by libavcodec, read by user.\r\n   * @deprecated use AV_CODEC_FLAG_COPY_OPAQUE to pass through arbitrary user\r\n   *             data from packets to frames\r\n   */\r\n  @ignore(!defined(API_FRAME_PKT))\r\n  pktSize: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * For hwaccel-format frames, this should be a reference to the\r\n   * AVHWFramesContext describing the frame.\r\n   */\r\n  hwFramesCtx: pointer<AVBufferRef> = nullptr\r\n\r\n  /**\r\n   * AVBufferRef for free use by the API user. FFmpeg will never check the\r\n   * contents of the buffer ref. FFmpeg calls av_buffer_unref() on it when\r\n   * the frame is unreferenced. av_frame_copy_props() calls create a new\r\n   * reference with av_buffer_ref() for the target frame's opaque_ref field.\r\n   *\r\n   * This is unrelated to the opaque field, although it serves a similar\r\n   * purpose.\r\n   */\r\n  opaqueRef: pointer<AVBufferRef> = nullptr\r\n\r\n  /**\r\n   * @anchor cropping\r\n   * @name Cropping\r\n   * Video frames only. The number of pixels to discard from the the\r\n   * top/bottom/left/right border of the frame to obtain the sub-rectangle of\r\n   * the frame intended for presentation.\r\n   */\r\n  cropTop: size = 0\r\n\r\n  cropBottom: size = 0\r\n\r\n  cropLeft: size = 0\r\n\r\n  cropRight: size = 0\r\n\r\n  /**\r\n   * AVBufferRef for internal use by a single libav* library.\r\n   * Must not be used to transfer data between libraries.\r\n   * Has to be NULL when ownership of the frame leaves the respective library.\r\n   *\r\n   * Code outside the FFmpeg libs should never check or change the contents of the buffer ref.\r\n   *\r\n   * FFmpeg calls av_buffer_unref() on it when the frame is unreferenced.\r\n   * av_frame_copy_props() calls create a new reference with av_buffer_ref()\r\n   * for the target frame's private_ref field.\r\n   */\r\n  privateRef: pointer<AVBufferRef> = nullptr\r\n\r\n  /**\r\n   * Channel layout of the audio data.\r\n   */\r\n  chLayout: AVChannelLayout\r\n\r\n  /**\r\n   * Duration of the frame, in the same units as pts. 0 if unknown.\r\n   */\r\n  duration: int64 = 0n\r\n\r\n  public close() {\r\n    unrefAVFrame(this[symbolStructAddress])\r\n    unmake(this)\r\n  }\r\n}\r\n\r\n@struct\r\nexport class AVFrameRef extends AVFrame {\r\n  refCount: atomic_int32\r\n}\r\n\r\nexport interface AVFramePool {\r\n  alloc: () => pointer<AVFrameRef>\r\n  release: (avframe: pointer<AVFrameRef>) => void\r\n}\r\n","/*\r\n * libmedia AVPacket defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport { AV_TIME_BASE, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\r\nimport { AVBufferRef } from './avbuffer'\r\nimport { Rational } from './rational'\r\n\r\nexport const enum AVPacketType {\r\n  AUDIO,\r\n  VIDEO\r\n}\r\n\r\nexport const enum AVPacketFlags {\r\n  /**\r\n   * The packet contains a keyframe\r\n   */\r\n  AV_PKT_FLAG_KEY = 1,\r\n  /**\r\n   * The packet content is corrupted\r\n   */\r\n  AV_PKT_FLAG_CORRUPT = 2,\r\n  /**\r\n   * Flag is used to discard packets which are required to maintain valid\r\n   * decoder state but are not required for output and should be dropped\r\n   * after decoding.\r\n   */\r\n  AV_PKT_FLAG_DISCARD = 4,\r\n  /**\r\n   * The packet comes from a trusted source.\r\n   *\r\n   * Otherwise-unsafe constructs such as arbitrary pointers to data\r\n   * outside the packet may be followed.\r\n   */\r\n  AV_PKT_FLAG_TRUSTED = 8,\r\n  /**\r\n   * Flag is used to indicate packets that contain frames that can\r\n   * be discarded by the decoder.  I.e. Non-reference frames.\r\n   */\r\n  AV_PKT_FLAG_DISPOSABLE = 16,\r\n\r\n  /**\r\n   * The stream is end\r\n   */\r\n  AV_PKT_FLAG_END = 32,\r\n\r\n  /**\r\n   * 对于 h264/h265/h266 标记是否是 annexb 码流格式，未置此标志则为 avcc 格式\r\n   */\r\n  AV_PKT_FLAG_H26X_ANNEXB = 64\r\n}\r\n\r\n@struct\r\nexport class AVPacketSideData {\r\n  data: pointer<uint8> = nullptr\r\n\r\n  size: size = 0\r\n\r\n  type: AVPacketSideDataType = AVPacketSideDataType.AV_PKT_DATA_UNKNOWN\r\n}\r\n\r\n@struct\r\nexport class AVProducerReferenceTime {\r\n  wallclock: int64\r\n  flags: int32\r\n}\r\n\r\n\r\n/**\r\n * FFmpeg AVPacket 定义\r\n */\r\n@struct\r\nexport default class AVPacket {\r\n  /**\r\n   * A reference to the reference-counted buffer where the packet data is\r\n   * stored.\r\n   * May be NULL, then the packet data is not reference-counted.\r\n   */\r\n  buf: pointer<AVBufferRef> = nullptr\r\n\r\n  /**\r\n   * Presentation timestamp in AVStream->time_base units; the time at which\r\n   * the decompressed packet will be presented to the user.\r\n   * Can be AV_NOPTS_VALUE if it is not stored in the file.\r\n   * pts MUST be larger or equal to dts as presentation cannot happen before\r\n   * decompression, unless one wants to view hex dumps. Some formats misuse\r\n   * the terms dts and pts/cts to mean something different. Such timestamps\r\n   * must be converted to true pts/dts before they are stored in AVPacket.\r\n   */\r\n  pts: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * Decompression timestamp in AVStream->time_base units; the time at which\r\n   * the packet is decompressed.\r\n   * Can be AV_NOPTS_VALUE if it is not stored in the file.\r\n   */\r\n  dts: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  data: pointer<uint8> = nullptr\r\n\r\n  size: int32 = 0\r\n\r\n  streamIndex: int32 = NOPTS_VALUE\r\n\r\n  /**\r\n   * A combination of @AVPacketFlags values\r\n   */\r\n  flags: int32 = 0\r\n\r\n  /**\r\n   * Additional packet data that can be provided by the container.\r\n   * Packet can contain several types of side information.\r\n   */\r\n  sideData: pointer<AVPacketSideData> = nullptr\r\n  sideDataElems: int32 = 0\r\n\r\n  /**\r\n   * Duration of this packet in AVStream->time_base units, 0 if unknown.\r\n   * Equals next_pts - this_pts in presentation order.\r\n   */\r\n  duration: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  pos: int64 = NOPTS_VALUE_BIGINT\r\n\r\n  /**\r\n   * for some private data of the user\r\n   */\r\n  opaque: pointer<void> = nullptr\r\n\r\n  /**\r\n   * AVBufferRef for free use by the API user. FFmpeg will never check the\r\n   * contents of the buffer ref. FFmpeg calls av_buffer_unref() on it when\r\n   * the packet is unreferenced. av_packet_copy_props() calls create a new\r\n   * reference with av_buffer_ref() for the target packet's opaque_ref field.\r\n   *\r\n   * This is unrelated to the opaque field, although it serves a similar\r\n   * purpose.\r\n   */\r\n  opaqueRef: pointer<AVBufferRef> = nullptr\r\n\r\n  /**\r\n   * Time base of the packet's timestamps.\r\n   */\r\n  timeBase: Rational = new Rational({ den: AV_TIME_BASE, num: 1 })\r\n\r\n}\r\n\r\n@struct\r\nexport class AVPacketRef extends AVPacket {\r\n  refCount: atomic_int32\r\n}\r\n\r\nexport interface AVPacketPool {\r\n  alloc: () => pointer<AVPacketRef>\r\n  release: (avpacket: pointer<AVPacketRef>) => void\r\n}\r\n","/*\r\n * libmedia AVPCMBuffer defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\n\r\n@struct\r\nexport default class AVPCMBuffer {\r\n  /**\r\n   * pcm 数据\r\n   * 可同时存放多个 channel 数据\r\n   */\r\n  data: pointer<pointer<uint8>>\r\n  /**\r\n   * data 每一个 channel 的缓冲区大小\r\n   */\r\n  linesize: int32\r\n  /**\r\n   * 当前存放了多少个采样点\r\n   */\r\n  nbSamples: int32\r\n  /**\r\n   * 当前 data 每个 channel 能存放的最大采样点数\r\n   */\r\n  maxnbSamples: int32\r\n  /**\r\n   * 声道数\r\n   */\r\n  channels: int32\r\n  /**\r\n   * 采样率\r\n   */\r\n  sampleRate: int32\r\n  /**\r\n   * pcm 格式\r\n   */\r\n  format: AVSampleFormat\r\n  /**\r\n   * pts\r\n   */\r\n  timestamp: int64\r\n  /**\r\n   * 时长\r\n   */\r\n  duration: double\r\n}\r\n\r\n@struct\r\nexport class AVPCMBufferRef extends AVPCMBuffer {\r\n  refCount: atomic_int32\r\n}\r\n\r\nexport interface AVPCMBufferPool {\r\n  alloc: () => pointer<AVPCMBufferRef>\r\n  release: (buffer: pointer<AVPCMBufferRef>) => void\r\n}\r\n","/*\r\n * libmedia Rational defined\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n@struct\r\nexport class Rational {\r\n  /**\r\n   * 分子\r\n   */\r\n  num: int32 = 1\r\n  /**\r\n   * 分母\r\n   */\r\n  den: int32 = 1\r\n\r\n  constructor(init?: {den: number, num: number}) {\r\n    if (init) {\r\n      this.den = init.den\r\n      this.num = init.num\r\n    }\r\n  }\r\n}\r\n","/*\r\n * libmedia av1 syntax util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport BitReader from 'common/io/BitReader'\r\n\r\nexport function f(bitReader: BitReader, n: number) {\r\n  let x = 0\r\n  for (let i = 0; i < n; i++ ) {\r\n    x = 2 * x + bitReader.readU1()\r\n  }\r\n  return x\r\n}\r\n\r\nexport function uvlc(bitReader: BitReader) {\r\n  let leadingZeros = 0\r\n  while (true) {\r\n    let done = f(bitReader, 1)\r\n    if (done) {\r\n      break\r\n    }\r\n    leadingZeros++\r\n  }\r\n  if (leadingZeros >= 32) {\r\n    return (1 << 32) - 1\r\n  }\r\n  const value =\tf(bitReader, leadingZeros)\r\n  return value + (1 << leadingZeros) - 1\r\n}\r\n\r\nexport function le(bitReader: BitReader, n: number) {\r\n  let t = 0\r\n  for (let i = 0; i < n; i++) {\r\n    let byte = f(bitReader, 8)\r\n    t += (byte << (i * 8))\r\n  }\r\n  return t\r\n}\r\n\r\nexport function leb128(bitReader: BitReader) {\r\n  let value = 0\r\n  for (let i = 0; i < 8; i++ ) {\r\n    let next = f(bitReader, 8)\r\n    value |= ((next & 0x7f) << (i * 7))\r\n    if (!(next & 0x80)) {\r\n      break\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function su(bitReader: BitReader, n: number) {\r\n  let value = f(bitReader, n)\r\n  let signMask = 1 << (n - 1)\r\n  if (value & signMask) {\r\n    value = value - 2 * signMask\r\n  }\r\n  return value\r\n}\r\n\r\nexport function ns(bitReader: BitReader, n: number) {\r\n  let w = Math.floor(Math.log2(n)) + 1\r\n  let m = (1 << w) - n\r\n  let v =\tf(bitReader, w - 1)\r\n  if (v < m) {\r\n    return v\r\n  }\r\n  let extraBit =\tf(bitReader, 1)\r\n  return (v << 1) - m + extraBit\r\n}\r\n\r\nexport function L(bitReader: BitReader, n: number) {\r\n  let x = 0\r\n  for (let i = 0 ; i < n; i++ ) {\r\n    x = 2 * x + bitReader.readU1()\r\n  }\r\n  return x\r\n}\r\n\r\nexport function NS(bitReader: BitReader, n: number) {\r\n  let w = Math.floor(Math.log2(n)) + 1\r\n  let m = (1 << w) - n\r\n  let v =\tL(bitReader, w - 1)\r\n  if (v < m) {\r\n    return v\r\n  }\r\n  let extraBit = L(bitReader, 1)\r\n  return (v << 1) - m + extraBit\r\n}\r\n","/*\r\n * libmedia avbuffer util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { avFree, avFreep, avMalloc, avMallocz, avRealloc } from './mem'\r\nimport * as atomics from 'cheap/thread/atomics'\r\nimport { memcpy, memset } from 'cheap/std/memory'\r\nimport { AVBuffer, AVBufferPool, AVBufferRef, AVBufferFlags, BufferPoolEntry } from '../struct/avbuffer'\r\nimport * as mutex from 'cheap/thread/mutex'\r\nimport * as stack from 'cheap/stack'\r\n\r\nconst BUFFER_FLAG_REALLOCATABLE = 1\r\n\r\nconst enum BufferFlags {\r\n  BUFFER_FLAG_REALLOCATABLE = 1,\r\n  BUFFER_FLAG_NO_FREE = 2\r\n}\r\n\r\nexport function bufferCreate(\r\n  buf: pointer<AVBuffer>,\r\n  data: pointer<uint8>,\r\n  size: size,\r\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr,\r\n  opaque: pointer<void> = nullptr,\r\n  flags: int32 = 0\r\n): pointer<AVBufferRef> {\r\n  buf.data = data\r\n  buf.size = size\r\n  buf.free = free\r\n  buf.opaque = opaque\r\n\r\n  atomics.store(addressof(buf.refcount), 1)\r\n  buf.flags = flags\r\n\r\n  const ref = avMallocz(sizeof(AVBufferRef)) as pointer<AVBufferRef>\r\n\r\n  if (!ref) {\r\n    return nullptr\r\n  }\r\n\r\n  ref.buffer = buf\r\n  ref.data = data\r\n  ref.size = size\r\n  return ref\r\n}\r\n\r\nexport function avbufferCreate(\r\n  data: pointer<uint8>,\r\n  size: size,\r\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr,\r\n  opaque: pointer<void> = nullptr,\r\n  flags: int32 = 0\r\n): pointer<AVBufferRef> {\r\n  const buf = avMallocz(sizeof(AVBuffer)) as pointer<AVBuffer>\r\n  if (!buf) {\r\n    return nullptr\r\n  }\r\n\r\n  const ref = bufferCreate(buf, data, size, free, opaque, flags)\r\n\r\n  if (!ref) {\r\n    avFree(buf)\r\n    return nullptr\r\n  }\r\n\r\n  return ref\r\n}\r\n\r\nexport function avbufferAlloc(size: size) {\r\n  const data = reinterpret_cast<pointer<uint8>>(avMalloc(size))\r\n  return avbufferCreate(data, size)\r\n}\r\n\r\nexport function avbufferAllocz(size: size) {\r\n  const p = avbufferAlloc(size)\r\n  memset(p.data, 0, size)\r\n  return p\r\n}\r\n\r\nexport function avbufferRef(buf: pointer<AVBufferRef>) {\r\n  const ref: pointer<AVBufferRef> = reinterpret_cast<pointer<AVBufferRef>>(avMallocz(sizeof(AVBufferRef)))\r\n  // @ts-ignore\r\n  accessof(ref) <- accessof(buf)\r\n  atomics.add(addressof(buf.buffer.refcount), 1)\r\n  return ref\r\n}\r\n\r\nexport function bufferReplace(dst: pointer<pointer<AVBufferRef>>, src: pointer<pointer<AVBufferRef>>) {\r\n  const buf = accessof(dst).buffer\r\n  if (src) {\r\n    // @ts-ignore\r\n    accessof(accessof(dst)) <- accessof(accessof(src))\r\n    avFreep(src)\r\n  }\r\n  else {\r\n    avFreep(dst)\r\n  }\r\n  if (atomics.sub(addressof(buf.refcount), 1) === 1) {\r\n    const freeAVBuffer = !(buf.flagsInternal & BufferFlags.BUFFER_FLAG_NO_FREE)\r\n    if (buf.opaque) {\r\n      poolReleaseBuffer(buf.opaque, buf.data)\r\n    }\r\n    else {\r\n      avFree(buf.data)\r\n    }\r\n    if (freeAVBuffer) {\r\n      avFree(buf)\r\n    }\r\n  }\r\n}\r\n\r\nexport function avbufferUnref(buf: pointer<pointer<AVBufferRef>>) {\r\n  if (!buf || !accessof(buf)) {\r\n    return\r\n  }\r\n  bufferReplace(buf, nullptr)\r\n}\r\n\r\nexport function avbufferIsWritable(buf: pointer<AVBufferRef>) {\r\n  if (buf.buffer.flags & AVBufferFlags.READONLY) {\r\n    return 0\r\n  }\r\n  return atomics.load(addressof(buf.buffer.refcount)) === 1 ? 1 : 0\r\n}\r\n\r\nexport function avbufferGetOpaque(buf: pointer<AVBufferRef>) {\r\n  return buf.buffer.opaque\r\n}\r\n\r\nexport function avbufferGetRefCount(buf: pointer<AVBufferRef>) {\r\n  return atomics.load(addressof(buf.buffer.refcount))\r\n}\r\n\r\nexport function avbufferMakeWritable(pbuf: pointer<pointer<AVBufferRef>>) {\r\n\r\n  const buf = accessof(pbuf)\r\n\r\n  if (!buf) {\r\n    return -1\r\n  }\r\n\r\n  if (avbufferIsWritable(buf)) {\r\n    return 0\r\n  }\r\n\r\n  const newbuf = avbufferAlloc(buf.size)\r\n\r\n  memcpy(newbuf.data, buf.data, buf.size)\r\n\r\n  let newbufp = reinterpret_cast<pointer<pointer<AVBufferRef>>>(stack.malloc(sizeof(pointer)))\r\n  accessof(newbufp) <- newbuf\r\n\r\n  bufferReplace(pbuf, newbufp)\r\n\r\n  stack.free(sizeof(pointer))\r\n\r\n  return 0\r\n}\r\n\r\nexport function avbufferReplace(pdst: pointer<pointer<AVBufferRef>>, src: pointer<AVBufferRef>) {\r\n  const dst = accessof(pdst)\r\n\r\n  if (!src) {\r\n    avbufferUnref(pdst)\r\n    return 0\r\n  }\r\n\r\n  if (dst && dst.data === src.data) {\r\n    dst.data = src.data\r\n    dst.size = src.size\r\n    return 0\r\n  }\r\n\r\n  const tmp = avbufferRef(src)\r\n\r\n  avbufferUnref(pdst)\r\n\r\n  accessof(pdst) <- tmp\r\n\r\n  return 0\r\n}\r\n\r\nexport function avbufferRealloc(pdst: pointer<pointer<AVBufferRef>>, size: size) {\r\n  if (!accessof(pdst)) {\r\n    const data = reinterpret_cast<pointer<uint8>>(avRealloc(nullptr, size))\r\n\r\n    const buf = avbufferCreate(data, size)\r\n\r\n    accessof(pdst) <- buf\r\n\r\n    buf.buffer.flagsInternal |= BUFFER_FLAG_REALLOCATABLE\r\n\r\n    return 0\r\n  }\r\n\r\n  const ref = accessof(pdst)\r\n  const buf = ref.buffer\r\n\r\n  if (ref.size === size) {\r\n    return 0\r\n  }\r\n\r\n  if (!(buf.flagsInternal & BUFFER_FLAG_REALLOCATABLE)\r\n    || !avbufferIsWritable(ref)\r\n    || ref.data !== buf.data\r\n  ) {\r\n    let newRef = reinterpret_cast<pointer<pointer<AVBufferRef>>>(stack.malloc(sizeof(pointer)))\r\n    accessof(newRef) <- nullptr\r\n\r\n    const ret = avbufferRealloc(newRef, size)\r\n    if (ret < 0) {\r\n      stack.free(sizeof(pointer))\r\n      return ret\r\n    }\r\n    memcpy(accessof(newRef).data, buf.data, Math.min(size, buf.size))\r\n\r\n    bufferReplace(pdst, newRef)\r\n\r\n    stack.free(sizeof(pointer))\r\n    return 0\r\n  }\r\n\r\n  const tmp = reinterpret_cast<pointer<uint8>>(avRealloc(buf.data, size))\r\n\r\n  ref.data = buf.data = tmp\r\n  ref.size = buf.size = size\r\n\r\n  return 0\r\n}\r\n\r\nexport function bufferPoolFlush(pool: pointer<AVBufferPool>) {\r\n  while (pool.pool) {\r\n    const buf = reinterpret_cast<pointer<BufferPoolEntry>>(pool.pool)\r\n    pool.pool = buf.next\r\n\r\n    if (buf.opaque) {\r\n      poolReleaseBuffer(buf.opaque, buf.data)\r\n    }\r\n    else {\r\n      avFree(buf.data)\r\n    }\r\n    avFree(buf)\r\n  }\r\n}\r\n\r\nexport function bufferPoolFree(pool: pointer<AVBufferPool>) {\r\n  bufferPoolFlush(pool)\r\n\r\n  mutex.destroy(addressof(pool.mutex))\r\n\r\n  avFree(pool)\r\n}\r\n\r\nexport function poolReleaseBuffer(opaque: pointer<void>, data: pointer<void>) {\r\n  const buf = reinterpret_cast<pointer<BufferPoolEntry>>(opaque)\r\n  const pool = buf.pool\r\n\r\n  mutex.lock(addressof(pool.mutex))\r\n\r\n  buf.next = pool.pool\r\n  pool.pool = buf\r\n\r\n  mutex.unlock(addressof(pool.mutex))\r\n\r\n  if (atomics.sub(addressof(pool.refcount), 1) === 1) {\r\n    bufferPoolFree(pool)\r\n  }\r\n}\r\n","/*\r\n * libmedia avdict util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { readCString, writeCString } from 'cheap/std/memory'\r\nimport { AVDictFlags, AVDictionary, AVDictionaryEntry } from '../struct/avdict'\r\nimport { avFreep, avMallocz } from './mem'\r\nimport * as is from 'common/util/is'\r\nimport toString from 'common/function/toString'\r\n\r\nexport function freeAVDict(pm: pointer<pointer<AVDictionary>>) {\r\n  freeAVDict2(accessof(pm))\r\n  avFreep(pm)\r\n}\r\n\r\nexport function freeAVDict2(m: pointer<AVDictionary>) {\r\n  if (m) {\r\n    while (m.count--) {\r\n      avFreep(addressof(m.elems[m.count].key))\r\n      avFreep(addressof(m.elems[m.count].value))\r\n    }\r\n    avFreep(addressof(m.elems))\r\n  }\r\n}\r\n\r\nexport function avDictCount(m: pointer<AVDictionary>) {\r\n  return m ? m.count : 0\r\n}\r\n\r\nexport function avDictIterate(m: pointer<AVDictionary>, prev: pointer<AVDictionaryEntry>): pointer<AVDictionaryEntry> {\r\n\r\n  let i = 0\r\n  if (!m) {\r\n    return nullptr\r\n  }\r\n  if (prev) {\r\n    i = prev - m.elems + 1\r\n  }\r\n\r\n  assert(i >= 0)\r\n\r\n  if (i >= m.count) {\r\n    return nullptr\r\n  }\r\n  return addressof(m.elems[i])\r\n}\r\n\r\nexport function avDictGet(m: pointer<AVDictionary>, key: string, prev: pointer<AVDictionaryEntry> = nullptr, flags: int32 = 0): pointer<AVDictionaryEntry> {\r\n\r\n  if (!m) {\r\n    return nullptr\r\n  }\r\n\r\n  let entry: pointer<AVDictionaryEntry> = prev\r\n\r\n  if (!key) {\r\n    return nullptr\r\n  }\r\n\r\n  while ((entry = avDictIterate(m, entry))) {\r\n    let s = readCString(reinterpret_cast<pointer<char>>(entry.key))\r\n    if (flags & AVDictFlags.MATCH_CASE) {\r\n      s.toLocaleLowerCase()\r\n      key.toLocaleLowerCase()\r\n    }\r\n    if (s === key\r\n      || (\r\n        (flags & AVDictFlags.IGNORE_SUFFIX)\r\n        && s.indexOf(key) === 0\r\n      )\r\n    ) {\r\n      return entry\r\n    }\r\n  }\r\n}\r\n\r\nexport function avDictSet(m: pointer<AVDictionary>, key: string, value: string, flags: int32 = 0) {\r\n  if (!m) {\r\n    throw new Error('m is nullptr')\r\n  }\r\n\r\n  let tag: pointer<AVDictionaryEntry> = nullptr\r\n\r\n  if (flags & AVDictFlags.MULTIKEY) {\r\n    tag = avDictGet(m, key, nullptr, flags)\r\n  }\r\n\r\n  if (tag) {\r\n    if (flags & AVDictFlags.DONT_OVERWRITE) {\r\n      return 0\r\n    }\r\n    if (flags & AVDictFlags.APPEND) {\r\n      value = `${readCString(reinterpret_cast<pointer<char>>(tag.value))},${value}`\r\n    }\r\n    free(tag.value)\r\n    tag.value = malloc(value.length + 1)\r\n    writeCString(tag.value, value, value.length)\r\n  }\r\n  else {\r\n    if (!is.string(value)) {\r\n      value = toString(value)\r\n    }\r\n    let tmp = reinterpret_cast<pointer<AVDictionaryEntry>>(realloc(m.elems, (m.count + 1) * reinterpret_cast<int32>(sizeof(AVDictionaryEntry))))\r\n    m.elems = tmp\r\n\r\n    m.elems[m.count].key = malloc(key.length + 1)\r\n    m.elems[m.count].value = malloc(value.length + 1)\r\n\r\n    writeCString(m.elems[m.count].key, key, key.length)\r\n    writeCString(m.elems[m.count].value, value, value.length)\r\n\r\n    m.count++\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nfunction avDictSet2(pm: pointer<pointer<AVDictionary>>, key: string, value: string, flags: int32 = 0) {\r\n  let m = accessof(pm)\r\n  if (!m) {\r\n    m = reinterpret_cast<pointer<AVDictionary>>(avMallocz(sizeof(accessof(m))))\r\n    accessof(pm) <- m\r\n  }\r\n  return avDictSet(m, key, value, flags)\r\n}\r\n\r\nexport function avDictCopy(dst: pointer<pointer<AVDictionary>>, src: pointer<AVDictionary>, flags: int32) {\r\n  if (!src) {\r\n    return -1\r\n  }\r\n\r\n  let t: pointer<AVDictionaryEntry> = nullptr\r\n\r\n  while ((t = avDictIterate(src, t))) {\r\n    let ret = avDictSet2(dst, readCString(reinterpret_cast<pointer<char>>(t.key)), readCString(reinterpret_cast<pointer<char>>(t.value)), flags)\r\n    if (ret < 0) {\r\n      return ret\r\n    }\r\n  }\r\n\r\n  return 0\r\n}\r\n","/*\r\n * libmedia avframe util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVFrame, { AVFrameSideData, AVFrameSideDataType, AV_NUM_DATA_POINTERS } from '../struct/avframe'\r\nimport { avFree, avFreep, avMalloc, avMallocz, avRealloc } from './mem'\r\nimport { memcpy, memset } from 'cheap/std/memory'\r\nimport { INT32_MAX, NOPTS_VALUE_BIGINT } from '../constant'\r\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic } from '../pixfmt'\r\nimport { avbufferAlloc, avbufferRef, avbufferReplace, avbufferUnref } from './avbuffer'\r\nimport { avDictCopy, freeAVDict } from './avdict'\r\nimport { INVALID_ARGUMENT, NO_MEMORY } from '../error'\r\nimport { getChannelLayoutNBChannels, unInitChannelLayout } from './channel'\r\nimport { sampleFormatGetLinesize, sampleFormatIsPlanar } from './sample'\r\nimport { AVBufferRef } from '../struct/avbuffer'\r\nimport * as errorType from '../error'\r\nimport { getAVPixelFormatDescriptor } from '../pixelFormatDescriptor'\r\nimport * as stack from 'cheap/stack'\r\nimport { pixelFillLinesizes, pixelFillPlaneSizes, pixelFillPointer } from './pixel'\r\nimport alignFunc from 'common/math/align'\r\n\r\nexport enum AV_FRAME_SIDE_DATA_FLAG {\r\n  UNIQUE = 1\r\n}\r\n\r\nexport function createAVFrame(): pointer<AVFrame> {\r\n  const frame = reinterpret_cast<pointer<AVFrame>>(avMallocz(sizeof(AVFrame)))\r\n  getAVFrameDefault(frame)\r\n  return frame\r\n}\r\n\r\nexport function destroyAVFrame(frame: pointer<AVFrame>) {\r\n  unrefAVFrame(frame)\r\n  avFree(frame)\r\n}\r\n\r\nexport function freeSideData(ptr: pointer<pointer<AVFrameSideData>>) {\r\n  const sideData = accessof(ptr)\r\n  avbufferUnref(addressof(sideData.buf))\r\n  freeAVDict(addressof(sideData.metadata))\r\n  avFreep(ptr)\r\n}\r\n\r\nexport function wipeSideData(sideData: pointer<pointer<pointer<AVFrameSideData>>>, nbSideData: pointer<int32>) {\r\n  const count = accessof(nbSideData)\r\n  const data = accessof(sideData)\r\n  for (let i = 0; i < count; i++) {\r\n    freeSideData(addressof(data[i]))\r\n  }\r\n  accessof(nbSideData) <- reinterpret_cast<int32>(0)\r\n  avFreep(reinterpret_cast<pointer<pointer<void>>>(sideData))\r\n}\r\n\r\nexport function wipeAVFrameSideData(frame: pointer<AVFrame>) {\r\n  wipeSideData(addressof(frame.sideData), addressof(frame.nbSideData))\r\n}\r\n\r\nexport function removeAVFrameSideData(sideData: pointer<pointer<pointer<AVFrameSideData>>>, nbSideData: pointer<int32>, type: AVFrameSideDataType) {\r\n  const data = accessof(sideData)\r\n  for (let i = accessof(nbSideData) - 1; i >= 0; i--) {\r\n    if (data[i].type !== type) {\r\n      continue\r\n    }\r\n    freeSideData(addressof(data[i]))\r\n    data[i] = data[accessof(nbSideData) - 1]\r\n    accessof(nbSideData) <- reinterpret_cast<int32>(accessof(nbSideData) - 1)\r\n  }\r\n}\r\n\r\nfunction addAVFrameSideDataFromExt(\r\n  sideData: pointer<pointer<pointer<AVFrameSideData>>>,\r\n  nbSideData: pointer<int32>,\r\n  type: AVFrameSideDataType,\r\n  buf: pointer<AVBufferRef>,\r\n  data: pointer<uint8>,\r\n  size: size\r\n): pointer<AVFrameSideData> {\r\n  const tmp = reinterpret_cast<pointer<pointer<AVFrameSideData>>>(avRealloc(\r\n    accessof(sideData),\r\n    sizeof(accessof(accessof(sideData))) * static_cast<size>(accessof(nbSideData) + 1)\r\n  ))\r\n  accessof(sideData) <- tmp\r\n\r\n  const ret = reinterpret_cast<pointer<AVFrameSideData>>(avMallocz(sizeof(AVFrameSideData)))\r\n  ret.buf = buf\r\n  ret.data = data\r\n  ret.size = size\r\n  ret.type = type\r\n\r\n  tmp[accessof(nbSideData)] = ret\r\n  accessof(nbSideData) <- reinterpret_cast<int32>(accessof(nbSideData) + 1)\r\n\r\n  return ret\r\n}\r\n\r\nfunction addAVFrameSideDataFromBuf(\r\n  sideData: pointer<pointer<pointer<AVFrameSideData>>>,\r\n  nbSideData: pointer<int32>,\r\n  type: AVFrameSideDataType,\r\n  buf: pointer<AVBufferRef>\r\n): pointer<AVFrameSideData> {\r\n  if (!buf) {\r\n    return nullptr\r\n  }\r\n  return addAVFrameSideDataFromExt(sideData, nbSideData, type, buf, buf.data, buf.size)\r\n}\r\n\r\nexport function newAVFrameSideData(\r\n  sideData: pointer<pointer<pointer<AVFrameSideData>>>,\r\n  nbSideData: pointer<int32>,\r\n  type: AVFrameSideDataType,\r\n  size: size,\r\n  flags: uint32\r\n) {\r\n  const buf = avbufferAlloc(size)\r\n  if (flags & AV_FRAME_SIDE_DATA_FLAG.UNIQUE) {\r\n    removeAVFrameSideData(sideData, nbSideData, type)\r\n  }\r\n  return addAVFrameSideDataFromBuf(sideData, nbSideData, type, buf)\r\n}\r\n\r\nexport function getAVFrameSideData(frame: pointer<AVFrame>, type: AVFrameSideDataType): pointer<AVFrameSideData> {\r\n  for (let i = 0; i < frame.nbSideData; i++) {\r\n    if (frame.sideData[i].type === type) {\r\n      return frame.sideData[i]\r\n    }\r\n  }\r\n  return nullptr\r\n}\r\n\r\nexport function getAVFrameDefault(frame: pointer<AVFrame>) {\r\n  if (frame.extendedData !== addressof(frame.data)) {\r\n    avFreep(reinterpret_cast<pointer<pointer<void>>>(addressof(frame.extendedData)))\r\n  }\r\n  unInitChannelLayout(addressof(frame.chLayout))\r\n\r\n  memset(frame, 0, sizeof(AVFrame))\r\n\r\n  frame.pts = NOPTS_VALUE_BIGINT\r\n  frame.pktDts = NOPTS_VALUE_BIGINT\r\n  frame.bestEffortTimestamp = NOPTS_VALUE_BIGINT\r\n\r\n  if (defined(API_FRAME_PKT)) {\r\n    frame.pktPos = NOPTS_VALUE_BIGINT\r\n    frame.pktSize = -1\r\n  }\r\n  if (defined(API_FRAME_KEY)) {\r\n    frame.keyFrame = 1\r\n  }\r\n\r\n  frame.sampleAspectRatio.num = 0\r\n  frame.sampleAspectRatio.den = 1\r\n  frame.format = -1\r\n  frame.extendedData = addressof(frame.data)\r\n  frame.colorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\r\n  frame.colorTrc = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\r\n  frame.colorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\r\n  frame.colorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\r\n  frame.chromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\r\n  frame.flags = 0\r\n}\r\n\r\nexport function getVideoBuffer(frame: pointer<AVFrame>, algin: int32 = 0) {\r\n  const desc = getAVPixelFormatDescriptor(frame.format)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const linesizes = reinterpret_cast<pointer<int32>>(stack.malloc(sizeof(int32) * 4))\r\n  const sizes = reinterpret_cast<pointer<size>>(stack.malloc(sizeof(size) * 4))\r\n\r\n  const planePadding = Math.max(16 + 16, algin)\r\n  let ret = 0\r\n\r\n  if (!frame.linesize[0]) {\r\n    if (algin <= 0) {\r\n      algin = 32\r\n    }\r\n\r\n    for (let i = 1; i < algin; i += i) {\r\n      ret = pixelFillLinesizes(addressof(frame.linesize), frame.format, alignFunc(frame.width, i))\r\n\r\n      if (ret < 0) {\r\n        defer()\r\n        return ret\r\n      }\r\n\r\n      if (!(frame.linesize[0] & (algin - 1))) {\r\n        break\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 4 && frame.linesize[i]; i++) {\r\n      frame.linesize[i] = alignFunc(frame.linesize[i], algin)\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    linesizes[i] = frame.linesize[i]\r\n  }\r\n\r\n  const paddingHeight = alignFunc(frame.height, 32)\r\n\r\n  if ((ret = pixelFillPlaneSizes(sizes, frame.format, paddingHeight, linesizes)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  let totalSize: size = 4 * planePadding\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (sizes[i] > reinterpret_cast<size>(INT32_MAX) - totalSize) {\r\n      errorType.INVALID_ARGUMENT\r\n    }\r\n    totalSize += sizes[i]\r\n  }\r\n\r\n  frame.buf[0] = avbufferAlloc(totalSize)\r\n\r\n  if (!frame.buf[0]) {\r\n    unrefAVFrame(frame)\r\n    defer()\r\n    return errorType.NO_MEMORY\r\n  }\r\n\r\n  if ((ret = pixelFillPointer(addressof(frame.data), frame.format, paddingHeight, frame.buf[0].data, linesizes)) < 0) {\r\n    unrefAVFrame(frame)\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  for (let i = 1; i < 4; i++) {\r\n    if (frame.data[i]) {\r\n      frame.data[i] = reinterpret_cast<pointer<uint8>>(frame.data[i] + i * planePadding)\r\n    }\r\n  }\r\n\r\n  frame.extendedData = addressof(frame.data)\r\n\r\n  defer()\r\n  return 0\r\n\r\n  function defer() {\r\n    stack.free(sizeof(int32) * 4)\r\n    stack.free(sizeof(size) * 4)\r\n  }\r\n}\r\n\r\nexport function getAudioBuffer(frame: pointer<AVFrame>, algin?: int32) {\r\n  const planar = sampleFormatIsPlanar(frame.format)\r\n  const channels = frame.chLayout.nbChannels\r\n  const planes = planar ? channels : 1\r\n\r\n  let ret = 0\r\n\r\n  if (!frame.linesize[0]) {\r\n    ret = sampleFormatGetLinesize(frame.format, channels, frame.nbSamples, algin)\r\n\r\n    if (ret < 0) {\r\n      return ret\r\n    }\r\n    frame.linesize[0] = ret\r\n  }\r\n\r\n  if (planes > AV_NUM_DATA_POINTERS) {\r\n    frame.extendedData = reinterpret_cast<pointer<pointer<uint8>>>(avMalloc(planes * reinterpret_cast<int32>(sizeof(accessof(frame.extendedData)))))\r\n    frame.extendedBuf = reinterpret_cast<pointer<pointer<AVBufferRef>>>(avMalloc(planes * reinterpret_cast<int32>(sizeof(accessof(frame.extendedBuf)))))\r\n\r\n    if (!frame.extendedBuf || !frame.extendedData) {\r\n      avFreep(reinterpret_cast<pointer<pointer<uint8>>>(addressof(frame.extendedData)))\r\n      avFreep(reinterpret_cast<pointer<pointer<uint8>>>(addressof(frame.extendedBuf)))\r\n      return errorType.NO_MEMORY\r\n    }\r\n    frame.nbExtendedBuf = planes - AV_NUM_DATA_POINTERS\r\n  }\r\n  else {\r\n    frame.extendedData = addressof(frame.data)\r\n  }\r\n\r\n  for (let i = 0; i < Math.min(planes, AV_NUM_DATA_POINTERS); i++) {\r\n    frame.buf[i] = avbufferAlloc(reinterpret_cast<size>(frame.linesize[0]))\r\n    if (!frame.buf[i]) {\r\n      unrefAVFrame(frame)\r\n      return errorType.NO_MEMORY\r\n    }\r\n    frame.extendedData[i] = frame.data[i] = frame.buf[i].data\r\n  }\r\n\r\n  for (let i = 0; i < planes - AV_NUM_DATA_POINTERS; i++) {\r\n    frame.extendedBuf[i] = avbufferAlloc(reinterpret_cast<size>(frame.linesize[0]))\r\n    if (!frame.extendedBuf[i]) {\r\n      unrefAVFrame(frame)\r\n      return errorType.NO_MEMORY\r\n    }\r\n    frame.extendedData[i + AV_NUM_DATA_POINTERS] = frame.extendedBuf[i].data\r\n  }\r\n}\r\n\r\nexport function getBuffer(frame: pointer<AVFrame>, algin?: int32) {\r\n  if (frame.format < 0) {\r\n    return INVALID_ARGUMENT\r\n  }\r\n\r\n  if (frame.width > 0 && frame.height > 0) {\r\n    return getVideoBuffer(frame, algin)\r\n  }\r\n  else if (frame.nbSamples > 0 && (frame.chLayout.u.mask || frame.chLayout.nbChannels > 0)) {\r\n    return getAudioBuffer(frame, algin)\r\n  }\r\n\r\n  return INVALID_ARGUMENT\r\n}\r\n\r\nexport function refAVFrame(dst: pointer<AVFrame>, src: pointer<AVFrame>) {\r\n  dst.format = src.format\r\n  dst.width = src.width\r\n  dst.height = src.height\r\n\r\n  dst.chLayout = src.chLayout\r\n\r\n  dst.nbSamples = src.nbSamples\r\n\r\n  let ret = copyAVFrameProps(dst, src)\r\n  if (ret < 0) {\r\n    return ret\r\n  }\r\n\r\n  if (!src.buf[0]) {\r\n    for (let i = 0; i < reinterpret_cast<int32>(sizeof(src.data)) / reinterpret_cast<int32>(sizeof(src.data[0])); i++) {\r\n      if (!src.data[i] || !src.linesize[i]) {\r\n        continue\r\n      }\r\n      let size: int32 = src.linesize[i] * reinterpret_cast<int32>(sizeof(accessof(src.data[0])))\r\n\r\n      dst.data[i] = avMalloc(reinterpret_cast<size>(size))\r\n      if (!dst.data[i]) {\r\n        unrefAVFrame(dst)\r\n        return NO_MEMORY\r\n      }\r\n      memcpy(dst.data[i], src.data[i], reinterpret_cast<size>(size))\r\n    }\r\n    return 0\r\n  }\r\n\r\n  for (let i = 0; i < reinterpret_cast<int32>(sizeof(src.buf)) / reinterpret_cast<int32>(sizeof(src.buf[0])); i++) {\r\n    if (!src.buf[i]) {\r\n      continue\r\n    }\r\n    dst.buf[i] = avbufferRef(src.buf[i])\r\n    if (!dst.buf[i]) {\r\n      unrefAVFrame(dst)\r\n      return NO_MEMORY\r\n    }\r\n  }\r\n\r\n  if (src.extendedBuf) {\r\n    dst.extendedBuf = reinterpret_cast<pointer<pointer<AVBufferRef>>>(avMallocz(reinterpret_cast<int32>(sizeof(accessof(dst.extendedBuf))) * src.nbExtendedBuf))\r\n    if (!dst.extendedBuf) {\r\n      unrefAVFrame(dst)\r\n      return NO_MEMORY\r\n    }\r\n    dst.nbExtendedBuf = src.nbExtendedBuf\r\n\r\n    for (let i = 0; i < src.nbExtendedBuf; i++) {\r\n      dst.extendedBuf[i] = avbufferRef(src.extendedBuf[i])\r\n      if (!dst.extendedBuf[i]) {\r\n        unrefAVFrame(dst)\r\n        return NO_MEMORY\r\n      }\r\n    }\r\n  }\r\n\r\n  if (src.extendedData !== addressof(src.data)) {\r\n    let ch = src.chLayout.nbChannels\r\n    if (!ch) {\r\n      unrefAVFrame(dst)\r\n      return INVALID_ARGUMENT\r\n    }\r\n\r\n    assert(!src.chLayout.u.mask || src.chLayout.nbChannels == getChannelLayoutNBChannels(src.chLayout.u.mask))\r\n\r\n    dst.extendedData = avMallocz(reinterpret_cast<int32>(sizeof(accessof(dst.extendedData))) * ch)\r\n    if (!dst.extendedData) {\r\n      unrefAVFrame(dst)\r\n      return NO_MEMORY\r\n    }\r\n\r\n    memcpy(dst.extendedData, src.extendedData, reinterpret_cast<int32>(sizeof(accessof(dst.extendedData))) * ch)\r\n  }\r\n  else {\r\n    dst.extendedData = addressof(dst.data)\r\n  }\r\n\r\n  memcpy(addressof(dst.data), addressof(src.data), sizeof(src.data))\r\n  memcpy(addressof(dst.linesize), addressof(src.linesize), sizeof(src.linesize))\r\n\r\n  return 0\r\n}\r\n\r\nexport function unrefAVFrame(frame: pointer<AVFrame>) {\r\n\r\n  if (!frame) {\r\n    return\r\n  }\r\n\r\n  wipeAVFrameSideData(frame)\r\n\r\n  for (let i = 0; i < (reinterpret_cast<int32>(sizeof(frame.buf)) / reinterpret_cast<int32>(sizeof(frame.buf[0]))); i++) {\r\n    avbufferUnref(addressof(frame.buf[i]))\r\n  }\r\n  for (let i = 0; i < frame.nbExtendedBuf; i++) {\r\n    avbufferUnref(addressof(frame.extendedBuf[i]))\r\n  }\r\n\r\n  avFreep(reinterpret_cast<pointer<pointer<void>>>(addressof(frame.extendedBuf)))\r\n  freeAVDict(addressof(frame.metadata))\r\n  avbufferUnref(addressof(frame.hwFramesCtx))\r\n  avbufferUnref(addressof(frame.opaqueRef))\r\n  avbufferUnref(addressof(frame.privateRef))\r\n\r\n  getAVFrameDefault(frame)\r\n\r\n}\r\n\r\nexport function copyAVFrameProps(dst: pointer<AVFrame>, src: pointer<AVFrame>) {\r\n  if (defined(API_FRAME_KEY)) {\r\n    dst.keyFrame = src.keyFrame\r\n  }\r\n  dst.pictType = src.pictType\r\n  dst.sampleAspectRatio = src.sampleAspectRatio\r\n  dst.cropTop = src.cropTop\r\n  dst.cropBottom = src.cropBottom\r\n  dst.cropLeft = src.cropLeft\r\n  dst.cropRight = src.cropRight\r\n  dst.pts = src.pts\r\n  dst.duration = src.duration\r\n  dst.repeatPict = src.repeatPict\r\n  if (defined(API_INTERLACED_FRAME)) {\r\n    dst.interlacedFrame = src.interlacedFrame\r\n    dst.topFieldFirst = src.topFieldFirst\r\n  }\r\n  if (defined(API_PALETTE_HAS_CHANGED)) {\r\n    dst.paletteHasChanged = src.paletteHasChanged\r\n  }\r\n  dst.sampleRate = src.sampleRate\r\n  dst.opaque = src.opaque\r\n  dst.pktDts = src.pktDts\r\n  if (defined(API_FRAME_PKT)) {\r\n    dst.pktPos = src.pktPos\r\n    dst.pktSize = src.pktSize\r\n  }\r\n  dst.timeBase = src.timeBase\r\n  dst.quality = src.quality\r\n  dst.bestEffortTimestamp = src.bestEffortTimestamp\r\n\r\n  dst.flags = src.flags\r\n  dst.decodeErrorFlags = src.decodeErrorFlags\r\n  dst.colorPrimaries = src.colorPrimaries\r\n  dst.colorTrc = src.colorTrc\r\n  dst.colorSpace = src.colorSpace\r\n  dst.colorRange = src.colorRange\r\n  dst.chromaLocation = src.chromaLocation\r\n\r\n  avDictCopy(addressof(dst.metadata), src.metadata, 0)\r\n\r\n  for (let i = 0; i < src.nbSideData; i++) {\r\n    const sdSrc = src.sideData[i]\r\n    const ref = avbufferRef(sdSrc.buf)\r\n    const sdDst = addAVFrameSideDataFromBuf(\r\n      addressof(dst.sideData),\r\n      addressof(dst.nbSideData),\r\n      sdSrc.type,\r\n      ref\r\n    )\r\n    avDictCopy(addressof(sdDst.metadata), sdSrc.metadata, 0)\r\n  }\r\n\r\n  let ret = avbufferReplace(addressof(dst.opaqueRef), src.opaqueRef)\r\n  ret |= avbufferReplace(addressof(dst.privateRef), src.privateRef)\r\n\r\n  return ret\r\n}\r\n\r\nexport function cloneAVFrame(frame: pointer<AVFrame>) {\r\n  const ret = createAVFrame()\r\n\r\n  refAVFrame(ret, frame)\r\n\r\n  return ret\r\n}\r\n","/*\r\n * libmedia avpacket util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVPacket, { AVPacketSideData } from '../struct/avpacket'\r\nimport { memcpy, memset, mapUint8Array, mapSafeUint8Array } from 'cheap/std/memory'\r\nimport { AVPacketSideDataType } from '../codec'\r\nimport { avFree, avFreep, avMalloc, avMallocz } from './mem'\r\nimport { AV_TIME_BASE, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\r\nimport { avbufferCreate, avbufferRealloc, avbufferRef, avbufferReplace, avbufferUnref } from './avbuffer'\r\nimport { AVBufferRef } from '../struct/avbuffer'\r\nimport SafeUint8Array from 'cheap/std/buffer/SafeUint8Array'\r\n\r\nconst AV_INPUT_BUFFER_PADDING_SIZE = 64\r\n\r\nexport function getAVPacketData(avpacket: pointer<AVPacket>): Uint8Array<ArrayBufferLike>\r\nexport function getAVPacketData(avpacket: pointer<AVPacket>, safe: boolean): SafeUint8Array\r\nexport function getAVPacketData(avpacket: pointer<AVPacket>, safe?: boolean) {\r\n  return safe ? mapSafeUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size)) : mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size))\r\n}\r\n\r\nexport function initAVPacketData(avpacket: pointer<AVPacket>, length: size) {\r\n  avpacket.data = avMalloc(length)\r\n  avpacket.size = static_cast<int32>(length)\r\n  return mapUint8Array(avpacket.data, reinterpret_cast<size>(avpacket.size))\r\n}\r\n\r\nexport function getSideData(psd: pointer<pointer<AVPacketSideData>>, pnbSd: pointer<int32>, type: AVPacketSideDataType): pointer<AVPacketSideData> {\r\n  const sideDataElems = accessof(pnbSd)\r\n  const sideData = accessof(psd)\r\n  for (let i = 0; i < sideDataElems; i++) {\r\n    if (sideData[i].type === type) {\r\n      return addressof(sideData[i])\r\n    }\r\n  }\r\n  return nullptr\r\n}\r\n\r\nexport function getAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType): pointer<AVPacketSideData> {\r\n  return getSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems), type)\r\n}\r\n\r\nexport function hasSideData(psd: pointer<pointer<AVPacketSideData>>, pnbSd: pointer<int32>, type: AVPacketSideDataType) {\r\n  const sideDataElems = accessof(pnbSd)\r\n  const sideData = accessof(psd)\r\n  for (let i = 0; i < sideDataElems; i++) {\r\n    if (sideData[i].type === type) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function hasAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType) {\r\n  return hasSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems), type)\r\n}\r\n\r\nexport function addSideData(psd: pointer<pointer<AVPacketSideData>>, pnbSd: pointer<int32>, type: AVPacketSideDataType, data: pointer<void>, length: size) {\r\n  const sideDataElems = accessof(pnbSd)\r\n  const sideData = accessof(psd)\r\n  for (let i = 0; i < sideDataElems; i++) {\r\n    if (sideData[i].type === type) {\r\n      avFree(sideData[i].data)\r\n      sideData[i].data = reinterpret_cast<pointer<uint8>>(data)\r\n      sideData[i].size = length\r\n      return\r\n    }\r\n  }\r\n  const len = (sideDataElems + 1) * reinterpret_cast<int32>(sizeof(AVPacketSideData))\r\n  const newSideData = avMallocz(len) as pointer<AVPacketSideData>\r\n\r\n  if (sideDataElems) {\r\n    for (let i = 0; i < sideDataElems; i++) {\r\n      newSideData[i] = sideData[i]\r\n    }\r\n  }\r\n\r\n  const ele = addressof(newSideData[sideDataElems])\r\n  ele.data = reinterpret_cast<pointer<uint8>>(data)\r\n  ele.type = type\r\n  ele.size = length\r\n\r\n  if (sideData) {\r\n    avFree(sideData)\r\n  }\r\n\r\n  accessof(psd) <- newSideData\r\n  accessof(pnbSd) <- reinterpret_cast<int32>(sideDataElems + 1)\r\n\r\n  return ele\r\n}\r\n\r\nexport function newSideData(psd: pointer<pointer<AVPacketSideData>>, pnbSd: pointer<int32>, type: AVPacketSideDataType, size: size) {\r\n  const data = avMalloc(size + static_cast<size>(AV_INPUT_BUFFER_PADDING_SIZE as uint32))\r\n  memset(reinterpret_cast<pointer<uint8>>(data + size), 0, AV_INPUT_BUFFER_PADDING_SIZE)\r\n  return addSideData(psd, pnbSd, type, data, size)\r\n}\r\n\r\nexport function addAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType, data: pointer<void>, length: size) {\r\n  addSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems), type, data, length)\r\n}\r\n\r\nexport function deleteAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType) {\r\n  let index = -1\r\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\r\n    if (avpacket.sideData[i].type === type) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index > -1) {\r\n    if (avpacket.sideDataElems === 1) {\r\n      avFree(avpacket.sideData[0].data)\r\n      avFree(avpacket.sideData)\r\n      avpacket.sideData = nullptr\r\n      avpacket.sideDataElems = 0\r\n    }\r\n    else {\r\n      const len = (avpacket.sideDataElems - 1) * reinterpret_cast<int32>(sizeof(AVPacketSideData))\r\n      const sideData = avMallocz(len) as pointer<AVPacketSideData>\r\n      for (let i = 0; i < avpacket.sideDataElems; i++) {\r\n        if (i !== index) {\r\n          sideData[i] = avpacket.sideData[i]\r\n        }\r\n        else {\r\n          avFree(avpacket.sideData[i].data)\r\n        }\r\n      }\r\n      avFree(avpacket.sideData)\r\n      avpacket.sideData = sideData\r\n      avpacket.sideDataElems--\r\n    }\r\n  }\r\n}\r\n\r\nexport function createAVPacket(): pointer<AVPacket> {\r\n  const avpacket = reinterpret_cast<pointer<AVPacket>>(avMallocz(sizeof(AVPacket)))\r\n  getAVPacketDefault(avpacket)\r\n  return avpacket\r\n}\r\n\r\nexport function destroyAVPacket(avpacket: pointer<AVPacket>) {\r\n  unrefAVPacket(avpacket)\r\n  avFree(avpacket)\r\n}\r\n\r\nexport function freeAVPacketSideData(pSideData: pointer<pointer<AVPacketSideData>>, pnbSideData: pointer<int32>) {\r\n\r\n  const sideData = accessof(pSideData)\r\n  const nbSideData = accessof(pnbSideData)\r\n\r\n  if (sideData) {\r\n    for (let i = 0; i < nbSideData; i++) {\r\n      avFree(sideData[i].data)\r\n    }\r\n    avFreep(pSideData)\r\n    accessof(pnbSideData) <- static_cast<int32>(0)\r\n  }\r\n}\r\n\r\nexport function getAVPacketDefault(avpacket: pointer<AVPacket>) {\r\n  avpacket.data = nullptr\r\n  avpacket.size = 0\r\n  avpacket.sideData = nullptr\r\n  avpacket.sideDataElems = 0\r\n  avpacket.streamIndex = NOPTS_VALUE\r\n  avpacket.pos = NOPTS_VALUE_BIGINT\r\n  avpacket.duration = NOPTS_VALUE_BIGINT\r\n  avpacket.flags = 0\r\n  avpacket.dts = NOPTS_VALUE_BIGINT\r\n  avpacket.pts = NOPTS_VALUE_BIGINT\r\n  avpacket.timeBase.den = AV_TIME_BASE\r\n  avpacket.timeBase.num = 1\r\n\r\n  avpacket.buf = nullptr\r\n}\r\n\r\nexport function copyAVPacketSideData(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\r\n  freeAVPacketSideData(addressof(dst.sideData), addressof(dst.sideDataElems))\r\n  if (src.sideDataElems) {\r\n    let size = reinterpret_cast<int32>(sizeof(AVPacketSideData))\r\n    dst.sideData = reinterpret_cast<pointer<AVPacketSideData>>(avMallocz(size * src.sideDataElems))\r\n    for (let i = 0; i < src.sideDataElems; i++) {\r\n      dst.sideData[i].size = src.sideData[i].size\r\n      dst.sideData[i].type = src.sideData[i].type\r\n      dst.sideData[i].data = avMalloc(src.sideData[i].size)\r\n      memcpy(dst.sideData[i].data, src.sideData[i].data, src.sideData[i].size)\r\n    }\r\n    dst.sideDataElems = src.sideDataElems\r\n  }\r\n}\r\n\r\nexport function copyAVPacketProps(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\r\n  dst.streamIndex = src.streamIndex\r\n  dst.pos = src.pos\r\n  dst.duration = src.duration\r\n  dst.flags = src.flags\r\n  dst.dts = src.dts\r\n  dst.pts = src.pts\r\n  dst.opaque = src.opaque\r\n  dst.timeBase.den = src.timeBase.den\r\n  dst.timeBase.num = src.timeBase.num\r\n\r\n  dst.opaqueRef = nullptr\r\n\r\n  avbufferReplace(addressof(dst.opaqueRef), src.opaqueRef)\r\n\r\n  copyAVPacketSideData(dst, src)\r\n\r\n  return 0\r\n}\r\n\r\nfunction allocAVPacket(buf: pointer<pointer<AVBufferRef>>, size: size) {\r\n  avbufferRealloc(buf, size + static_cast<size>(AV_INPUT_BUFFER_PADDING_SIZE as uint32))\r\n  memset(accessof(buf).data + size, 0, AV_INPUT_BUFFER_PADDING_SIZE)\r\n  return 0\r\n}\r\n\r\nexport function refAVPacket(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\r\n  if (dst.buf) {\r\n    avbufferUnref(addressof(dst.buf))\r\n  }\r\n  dst.buf = nullptr\r\n  copyAVPacketProps(dst, src)\r\n\r\n  if (!src.buf && src.size) {\r\n    allocAVPacket(addressof(dst.buf), reinterpret_cast<size>(src.size))\r\n    if (src.size) {\r\n      memcpy(dst.buf.data, src.data, reinterpret_cast<size>(src.size))\r\n    }\r\n    dst.data = dst.buf.data\r\n  }\r\n  else if (src.buf) {\r\n    dst.buf = avbufferRef(src.buf)\r\n    dst.data = src.data\r\n  }\r\n  dst.size = src.size\r\n\r\n  return 0\r\n}\r\n\r\nexport function unrefAVPacket(avpacket: pointer<AVPacket>) {\r\n  freeAVPacketSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems))\r\n  avbufferUnref(addressof(avpacket.opaqueRef))\r\n\r\n  if (avpacket.buf) {\r\n    avbufferUnref(addressof(avpacket.buf))\r\n  }\r\n  else if (avpacket.data) {\r\n    avFree(avpacket.data)\r\n  }\r\n  getAVPacketDefault(avpacket)\r\n}\r\n\r\nexport function copyAVPacketData(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\r\n  if (dst.buf) {\r\n    avbufferUnref(addressof(dst.buf))\r\n  }\r\n  dst.buf = nullptr\r\n  if (!src.buf && src.size) {\r\n    allocAVPacket(addressof(dst.buf), reinterpret_cast<size>(src.size))\r\n    if (src.size) {\r\n      memcpy(dst.buf.data, src.data, reinterpret_cast<size>(src.size))\r\n    }\r\n    dst.data = dst.buf.data\r\n  }\r\n  else if (src.buf) {\r\n    dst.buf = avbufferRef(src.buf)\r\n    dst.data = src.data\r\n  }\r\n  dst.size = src.size\r\n}\r\n\r\nexport function addAVPacketData(avpacket: pointer<AVPacket>, data: pointer<uint8>, size: int32) {\r\n\r\n  if (avpacket.buf) {\r\n    avbufferUnref(addressof(avpacket.buf))\r\n  }\r\n  else if (avpacket.data) {\r\n    avFree(avpacket.data)\r\n  }\r\n\r\n  avpacket.buf = avbufferCreate(data, size + AV_INPUT_BUFFER_PADDING_SIZE)\r\n  avpacket.data = data\r\n  avpacket.size = size\r\n}\r\n","/*\r\n * libmedia channel util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVChannelCustom, AVChannelLayout } from '../struct/audiosample'\r\nimport { popCount64 } from './common'\r\nimport { AVChannel, AVChannelOrder } from '../audiosamplefmt'\r\nimport { avFreep, avMallocz } from './mem'\r\nimport { memset } from 'cheap/std/memory'\r\nimport * as error from '../error'\r\n\r\nexport function getChannelLayoutNBChannels(layout: uint64) {\r\n  return popCount64(layout)\r\n}\r\n\r\nexport function unInitChannelLayout(channelLayout: pointer<AVChannelLayout>) {\r\n  if (channelLayout.order == AVChannelOrder.AV_CHANNEL_ORDER_CUSTOM) {\r\n    avFreep(addressof(channelLayout.u.map))\r\n  }\r\n  memset(channelLayout, 0, sizeof(accessof(channelLayout)))\r\n}\r\n\r\nexport function setChannelLayoutFromMask(channelLayout: pointer<AVChannelLayout>, mask: uint64) {\r\n  if (!mask) {\r\n    return error.INVALID_ARGUMENT\r\n  }\r\n  channelLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_NATIVE\r\n  channelLayout.nbChannels = popCount64(static_cast<uint64>(mask))\r\n  channelLayout.u.mask = mask\r\n  return 0\r\n}\r\n\r\nexport function initCustomChannelLayout(channelLayout: pointer<AVChannelLayout>, channels: int32) {\r\n  if (channels <= 0) {\r\n    throw new Error('invalid channels')\r\n  }\r\n  const map: pointer<AVChannelCustom> = avMallocz(reinterpret_cast<size>(reinterpret_cast<size>(channels) * sizeof(accessof(channelLayout.u.map))))\r\n  for (let i = 0; i < channels; i++) {\r\n    map[i].id = AVChannel.AV_CHANNEL_UNKNOWN\r\n  }\r\n  channelLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_CUSTOM\r\n  channelLayout.nbChannels = channels\r\n  channelLayout.u.map = map\r\n}\r\n","/*\r\n * libmedia codecparameters util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\nimport { memcpy, memset } from 'cheap/std/memory'\r\nimport { avFree, avFreep, avMalloc, avMallocz } from './mem'\r\nimport { unInitChannelLayout } from './channel'\r\nimport { freeAVPacketSideData } from './avpacket'\r\nimport { AVCodecID, AVMediaType } from '../codec'\r\nimport { AVChannelOrder } from '../audiosamplefmt'\r\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange,\r\n  AVColorSpace, AVColorTransferCharacteristic, AVFieldOrder\r\n} from '../pixfmt'\r\nimport { NOPTS_VALUE } from '../constant'\r\nimport { AVPacketSideData } from '../struct/avpacket'\r\n\r\nfunction copyCodecParametersSideData(\r\n  pDst: pointer<pointer<AVPacketSideData>>,\r\n  pnbDst: pointer<int32>,\r\n  src: pointer<AVPacketSideData>,\r\n  nbSrc: int32\r\n) {\r\n\r\n  if (!src) {\r\n    return\r\n  }\r\n\r\n  const dst = reinterpret_cast<pointer<AVPacketSideData>>(avMallocz(nbSrc * reinterpret_cast<int32>(sizeof(AVPacketSideData))))\r\n\r\n  for (let i = 0; i < nbSrc; i++) {\r\n    dst[i].type = src[i].type\r\n    dst[i].size = src[i].size\r\n    dst[i].data = avMalloc(src[i].size)\r\n    memcpy(dst[i].data, src[i].data, src[i].size)\r\n  }\r\n\r\n  accessof(pnbDst) <- nbSrc\r\n  accessof(pDst) <- dst\r\n\r\n  return 0\r\n}\r\n\r\nexport function copyCodecParameters(dst: pointer<AVCodecParameters>, src: pointer<AVCodecParameters>) {\r\n  dst.codecType = src.codecType\r\n  dst.codecId = src.codecId\r\n  dst.codecTag = src.codecTag\r\n  dst.format = src.format\r\n  dst.bitrate = src.bitrate\r\n  dst.bitsPerCodedSample = src.bitsPerCodedSample\r\n  dst.bitsPerRawSample = src.bitsPerRawSample\r\n  dst.profile = src.profile\r\n  dst.level = src.level\r\n  dst.width = src.width\r\n  dst.height = src.height\r\n  dst.sampleAspectRatio.den = src.sampleAspectRatio.den\r\n  dst.sampleAspectRatio.num = src.sampleAspectRatio.num\r\n  dst.fieldOrder = src.fieldOrder\r\n  dst.colorRange = src.colorRange\r\n  dst.colorPrimaries = src.colorPrimaries\r\n  dst.colorTrc = src.colorTrc\r\n  dst.colorSpace = src.colorSpace\r\n  dst.chromaLocation = src.chromaLocation\r\n  dst.videoDelay = src.videoDelay\r\n  dst.chLayout = src.chLayout\r\n  dst.sampleRate = src.sampleRate\r\n  dst.blockAlign = src.blockAlign\r\n  dst.frameSize = src.frameSize\r\n  dst.initialPadding = src.initialPadding\r\n  dst.trailingPadding = src.trailingPadding\r\n  dst.seekPreroll = src.seekPreroll\r\n  dst.flags = src.flags\r\n\r\n  dst.framerate = src.framerate\r\n\r\n  if (src.extradata) {\r\n    if (dst.extradata) {\r\n      avFree(dst.extradata)\r\n    }\r\n    dst.extradata = avMalloc(reinterpret_cast<size>(src.extradataSize))\r\n    dst.extradataSize = src.extradataSize\r\n    memcpy(dst.extradata, src.extradata, reinterpret_cast<size>(src.extradataSize))\r\n  }\r\n\r\n  if (src.codedSideData) {\r\n    copyCodecParametersSideData(addressof(dst.codedSideData), addressof(dst.nbCodedSideData), src.codedSideData, src.nbCodedSideData)\r\n  }\r\n}\r\n\r\nexport function resetCodecParameters(par: pointer<AVCodecParameters>) {\r\n  if (par.extradata) {\r\n    avFreep(addressof(par.extradata))\r\n  }\r\n  unInitChannelLayout(addressof(par.chLayout))\r\n  freeAVPacketSideData(addressof(par.codedSideData), addressof(par.nbCodedSideData))\r\n  memset(par, 0, sizeof(accessof(par)))\r\n\r\n  par.codecType = AVMediaType.AVMEDIA_TYPE_UNKNOWN\r\n  par.codecId = AVCodecID.AV_CODEC_ID_NONE\r\n  par.format = -1\r\n  par.chLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_UNSPEC\r\n  par.fieldOrder = AVFieldOrder.AV_FIELD_UNKNOWN\r\n  par.colorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\r\n  par.colorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\r\n  par.colorTrc = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\r\n  par.colorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\r\n  par.chromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\r\n  par.sampleAspectRatio.num = 0\r\n  par.sampleAspectRatio.den = 1\r\n  par.framerate.num = 0\r\n  par.framerate.num = 1\r\n  par.profile = NOPTS_VALUE\r\n  par.level = NOPTS_VALUE\r\n  par.flags = 0\r\n}\r\n\r\nexport function freeCodecParameters(par: pointer<AVCodecParameters>) {\r\n  if (!par) {\r\n    return\r\n  }\r\n  resetCodecParameters(par)\r\n  avFree(par)\r\n}\r\n","/*\r\n * libmedia common util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport function popCount(x: uint32) {\r\n  x -= (x >> 1) & 0x55555555\r\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333)\r\n  x = (x + (x >> 4)) & 0x0F0F0F0F\r\n  x += x >> 8\r\n  return (x + (x >> 16)) & 0x3F\r\n}\r\n\r\nexport function popCount64(x: uint64) {\r\n  return popCount(static_cast<uint32>(x)) + popCount(static_cast<uint32>(x >> 32n))\r\n}\r\n\r\nexport function milliSecond2Second(time: int64) {\r\n  const integer = time / 1000n\r\n  const decimal = time - integer * 1000n\r\n  return Number(integer) + Number(decimal) / 1000\r\n}\r\n","/*\r\n * libmedia expgolomb util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport BitReader from 'common/io/BitReader'\r\nimport BitWriter from 'common/io/BitWriter'\r\n\r\nconst UESizeTable = [\r\n  // 0 的二进制所需的比特个数\r\n  1,\r\n  // 1 的二进制所需的比特个数    \r\n  1,\r\n  // 2~3 的二进制所需的比特个数   \r\n  2, 2,\r\n  // 4~7 的二进制所需的比特个数\r\n  3, 3, 3, 3,\r\n  // 8~15 的二进制所需的比特个数\r\n  4, 4, 4, 4, 4, 4, 4, 4,\r\n  // 16~31 的二进制所需的比特个数\r\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\r\n  // 32~63 的二进制所需的比特个数\r\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\r\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\r\n  // 64~127 的二进制所需的比特个数\r\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\r\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\r\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\r\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\r\n  // 128~255 的二进制所需的比特个数\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\r\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\r\n]\r\n\r\n/**\r\n * ue(v) 指数哥伦布解码\r\n */\r\nexport function readUE(bitReader: BitReader) {\r\n  let result = 0\r\n  // leadingZeroBits\r\n  let i = 0\r\n\r\n  while (i < 32 && bitReader.readU1() === 0) {\r\n    i++\r\n  }\r\n  // 计算 read_bits ( leadingZeroBits )\r\n  result = bitReader.readU(i)\r\n  // 计算 codeNum，1 << i 即为 2 的 i 次幂\r\n  result += (1 << i) - 1\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * se(v) 有符号指数哥伦布解码\r\n */\r\nexport function readSE(bitReader: BitReader) {\r\n  let result = readUE(bitReader)\r\n\r\n  // 判断 result 的奇偶性\r\n  if (result & 0x01) {\r\n    // 如果为奇数，说明编码前 > 0\r\n    result = (result + 1) / 2\r\n  }\r\n  else {\r\n    // 如果为偶数，说明编码前 <= 0\r\n    result = -result / 2\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * te(v) 截断指数哥伦布解码\r\n */\r\nexport function readTE(bitReader: BitReader, x: number) {\r\n  let result = 0\r\n  // 判断取值上限\r\n  if (x === 1) {\r\n    // 如果为 1 则将读取到的比特值取反\r\n    result = 1 - bitReader.readU1()\r\n  }\r\n  else if (x > 1) {\r\n    // 否则按照 ue(v) 进行解码\r\n    result = readUE(bitReader)\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * ue(v) 指数哥伦布编码\r\n */\r\nexport function writeUE(bitWriter: BitWriter, value: number) {\r\n  let size = 0\r\n\r\n  if (value === 0) {\r\n    // 0 直接编码为 1\r\n    bitWriter.writeU1(1)\r\n  }\r\n  else {\r\n    let tmp = ++value\r\n    // 判断所需比特个数是否大于 16 位\r\n    if ( tmp >= 0x00010000 ) {\r\n      size += 16\r\n      tmp >>= 16\r\n    }\r\n\r\n    // 判断此时所需比特个数是否大于 8 位\r\n    if ( tmp >= 0x100 ) {\r\n      size += 8\r\n      tmp >>= 8\r\n    }\r\n    // 最终 tmp 移位至 8 位以内，去查表\r\n    size += UESizeTable[tmp]\r\n\r\n    // 最终得出编码 value 所需的总比特数：2 * size - 1\r\n    bitWriter.writeU(2 * size - 1, value)\r\n  }\r\n}\r\n\r\n/**\r\n * se(v) 有符号指数哥伦布编码\r\n */\r\nexport function writeSE(bitWriter: BitWriter, value: number) {\r\n  if (value <= 0) {\r\n    writeUE(bitWriter, -value * 2)\r\n  }\r\n  else {\r\n    writeUE(bitWriter, value * 2 - 1)\r\n  }\r\n}\r\n\r\n/**\r\n * te(v) 截断指数哥伦布编码\r\n */\r\nexport function writeTE(bitWriter: BitWriter, x: number, value: number) {\r\n  if (x === 1) {\r\n    bitWriter.writeU1(1 & ~value)\r\n  }\r\n  else if (x > 1) {\r\n    writeUE(bitWriter, value)\r\n  }\r\n}\r\n","/*\r\n * libmedia int read util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport function r8(p: pointer<void>): uint8 {\r\n  return accessof(reinterpret_cast<pointer<uint8>>(p))\r\n}\r\n\r\nexport function rl16(p: pointer<void>): uint16 {\r\n  return (r8(reinterpret_cast<pointer<uint8>>(p + 1)) << 8) | r8(p)\r\n}\r\n\r\nexport function rb16(p: pointer<void>): uint16 {\r\n  return (r8(p) << 8) | r8(reinterpret_cast<pointer<uint8>>(p + 1))\r\n}\r\n\r\nexport function rl24(p: pointer<void>): int32 {\r\n  return (r8(reinterpret_cast<pointer<uint8>>(p + 2)) << 16) | (r8(reinterpret_cast<pointer<uint8>>(p + 1)) << 8) + r8(p)\r\n}\r\n\r\nexport function rb24(p: pointer<void>): int32 {\r\n  return (r8(p) << 16) | (r8(reinterpret_cast<pointer<uint8>>(p + 1)) << 8) | r8(reinterpret_cast<pointer<uint8>>(p + 2))\r\n}\r\n\r\nexport function rl32(p: pointer<void>): int32 {\r\n  return (rl16(reinterpret_cast<pointer<uint8>>(p + 2)) << 16) | rl16(p)\r\n}\r\n\r\nexport function rb32(p: pointer<void>): int32 {\r\n  return (rb16(p) << 16) | rb16(reinterpret_cast<pointer<uint8>>(p + 2))\r\n}\r\n\r\nexport function rl64(p: pointer<void>): int64 {\r\n  return (BigInt(rl32(reinterpret_cast<pointer<uint8>>(p + 4))) << 32n) | BigInt(rl32(p))\r\n}\r\n\r\nexport function rb64(p: pointer<void>): int64 {\r\n  return (BigInt(rb32(p)) << 32n) | BigInt(rb32(reinterpret_cast<pointer<uint8>>(p + 4)))\r\n}\r\n","\r\n/*\r\n * libmedia int write util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nexport function w8(p: pointer<void>, value: number) {\r\n  accessof(reinterpret_cast<pointer<uint8>>(p)) <- reinterpret_cast<uint8>(value & 0xff)\r\n}\r\n\r\nexport function wl16(p: pointer<void>, value: uint16) {\r\n  w8(p, value)\r\n  w8(p + 1, value >>> 8)\r\n}\r\n\r\nexport function wb16(p: pointer<void>, value: uint16) {\r\n  w8(p, value >>> 8)\r\n  w8(p + 1, value)\r\n}\r\n\r\nexport function wl24(p: pointer<void>, value: uint32) {\r\n  w8(p, value)\r\n  w8(p + 1, value >>> 8)\r\n  w8(p + 2, value >>> 16)\r\n}\r\n\r\nexport function wb24(p: pointer<void>, value: uint32) {\r\n  w8(p, value >>> 16)\r\n  w8(p + 1, value >>> 8)\r\n  w8(p + 2, value)\r\n}\r\n\r\nexport function wl32(p: pointer<void>, value: uint32) {\r\n  wl16(p, value & 0xffff)\r\n  wl16(p + 2, value >>> 16)\r\n}\r\n\r\nexport function wb32(p: pointer<void>, value: uint32) {\r\n  wb16(p, value >>> 16)\r\n  wb16(p + 2, value & 0xffff)\r\n}\r\n\r\nexport function wl64(p: pointer<void>, value: uint64) {\r\n  wl32(p, static_cast<uint32>(value))\r\n  wl32(p + 4, static_cast<uint32>(value >> 32n))\r\n}\r\n\r\nexport function wb64(p: pointer<void>, value: uint64) {\r\n  wb32(p, static_cast<uint32>(value >> 32n))\r\n  wb32(p + 4, static_cast<uint32>(value))\r\n}\r\n","/*\r\n * libmedia mem util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { memset } from 'cheap/std/memory'\r\nimport * as logger from 'common/util/logger'\r\n\r\nexport function avMalloc<T = void>(len: size): pointer<T> {\r\n  const p = malloc(len)\r\n  if (!p) {\r\n    logger.fatal('can not alloc buffer')\r\n  }\r\n  return p as pointer<T>\r\n}\r\n\r\nexport function avMallocz<T = void>(len: size): pointer<T> {\r\n  const p = malloc(len)\r\n  if (!p) {\r\n    logger.fatal('can not alloc buffer')\r\n  }\r\n\r\n  memset(p, 0, len)\r\n  return p as pointer<T>\r\n}\r\n\r\nexport function avFree(p: pointer<void>) {\r\n  assert(p, 'can not free empty pointer')\r\n  free(p)\r\n}\r\n\r\nexport function avFreep(p: pointer<pointer<void>>) {\r\n  assert(p, 'can not free empty pointer')\r\n  free(accessof(p))\r\n  accessof(p) <- nullptr\r\n}\r\n\r\nexport function avRealloc<T = void>(p: pointer<T>, size: size): pointer<T> {\r\n  return realloc(p as pointer<void>, size) as pointer<T>\r\n}\r\n","/*\r\n * libmedia nalu util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport BufferReader from 'common/io/BufferReader'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport * as array from 'common/util/array'\r\n\r\nexport function isAnnexb(data: Uint8ArrayInterface) {\r\n  return data.length > 4\r\n  && data[0] === 0\r\n  && data[1] === 0\r\n  && (\r\n    data[2] === 1\r\n    || data[2] === 0 && data[3] === 1\r\n  )\r\n}\r\n\r\nexport function getNextNaluStart(data: Uint8ArrayInterface, offset: number) {\r\n  let t = 0\r\n  for (let i = offset; i < data.length; i++) {\r\n    switch (data[i]) {\r\n      case 0:\r\n        t++\r\n        break\r\n      case 1:\r\n        if (t >= 2) {\r\n          return {\r\n            offset: i - Math.min(t, 3),\r\n            startCode: Math.min(t + 1, 4)\r\n          }\r\n        }\r\n        t = 0\r\n        break\r\n      default:\r\n        t = 0\r\n    }\r\n  }\r\n  return {\r\n    offset: -1,\r\n    startCode: 0\r\n  }\r\n}\r\n\r\nexport function splitNaluByStartCode<T extends Uint8ArrayInterface>(buffer: T): T[] {\r\n  const list = []\r\n  let offset = 0\r\n  let current = getNextNaluStart(buffer, offset)\r\n  let next = {\r\n    offset: -1,\r\n    startCode: 0\r\n  }\r\n  while (next = getNextNaluStart(buffer, current.offset + current.startCode), next.offset > -1) {\r\n    list.push(buffer.subarray(current.offset + current.startCode, next.offset, true))\r\n    current = next\r\n  }\r\n  list.push(buffer.subarray(current.offset + current.startCode, undefined, true))\r\n\r\n  return list\r\n}\r\n\r\nexport function splitNaluByLength<T extends Uint8ArrayInterface>(buffer: T, naluLengthSizeMinusOne: int32): T[] {\r\n  const list = []\r\n  const bufferReader = new BufferReader(buffer)\r\n  while (bufferReader.remainingSize() > 0) {\r\n    let length = 0\r\n    if (naluLengthSizeMinusOne === 3) {\r\n      length = bufferReader.readUint32()\r\n    }\r\n    else if (naluLengthSizeMinusOne === 2) {\r\n      length = bufferReader.readUint24()\r\n    }\r\n    else if (naluLengthSizeMinusOne === 1) {\r\n      length = bufferReader.readUint16()\r\n    }\r\n    else {\r\n      length = bufferReader.readUint8()\r\n    }\r\n    const nalu = buffer.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length, true)\r\n    bufferReader.skip(length)\r\n    list.push(nalu)\r\n  }\r\n  return list\r\n}\r\n\r\n/**\r\n * \r\n * @param nalus \r\n * @param mode 模式\r\n *  - 0 全使用 0x00000001 分割\r\n *  - 1 全使用 0x000001 分割\r\n *  - 2 第一个使用 0x00000001，后面的使用 0x000001 分割\r\n * @returns \r\n */\r\nexport function joinNaluByStartCodeLength(nalus: Uint8ArrayInterface[], mode: int32) {\r\n  return nalus.reduce((prev, nalu, index) => {\r\n    if (mode === 0) {\r\n      return prev + 4 + nalu.length\r\n    }\r\n    else if ( mode === 1) {\r\n      return prev + 3 + nalu.length\r\n    }\r\n    else {\r\n      return prev + (index ? 3 : 4) + nalu.length\r\n    }\r\n  }, 0)\r\n}\r\n\r\n/**\r\n * \r\n * @param nalus \r\n * @param mode 模式\r\n *  - 0 全使用 0x00000001 分割\r\n *  - 1 全使用 0x000001 分割\r\n *  - 2 第一个使用 0x00000001，后面的使用 0x000001 分割\r\n * @param output \r\n * @returns \r\n */\r\nexport function joinNaluByStartCode(nalus: Uint8ArrayInterface[], mode: int32, output?: Uint8Array): Uint8Array {\r\n  if (!output) {\r\n    let length = nalus.reduce((prev, nalu, index) => {\r\n      if (mode === 0) {\r\n        return prev + 4 + nalu.length\r\n      }\r\n      else if ( mode === 1) {\r\n        return prev + 3 + nalu.length\r\n      }\r\n      else {\r\n        return prev + (index ? 3 : 4) + nalu.length\r\n      }\r\n    }, 0)\r\n    output = new Uint8Array(length)\r\n  }\r\n\r\n  const bufferWriter = new BufferWriter(output)\r\n\r\n  array.each(nalus, (nalu, index) => {\r\n    bufferWriter.writeUint8(0x00)\r\n    bufferWriter.writeUint8(0x00)\r\n    if (mode === 0 || (mode === 2 && !index)) {\r\n      bufferWriter.writeUint8(0x00)\r\n    }\r\n    bufferWriter.writeUint8(0x01)\r\n    bufferWriter.writeBuffer(nalu)\r\n  })\r\n\r\n  return output\r\n}\r\n\r\nexport function joinNaluByLength(nalus: Uint8ArrayInterface[], naluLengthSizeMinusOne: int32, output?: Uint8Array): Uint8Array {\r\n  if (!output) {\r\n    const length = nalus.reduce((prev, nalu) => {\r\n      return prev + naluLengthSizeMinusOne + 1 + nalu.length\r\n    }, 0)\r\n    output = new Uint8Array(length)\r\n  }\r\n  const bufferWriter = new BufferWriter(output)\r\n\r\n  array.each(nalus, (nalu) => {\r\n    if (naluLengthSizeMinusOne === 3) {\r\n      bufferWriter.writeUint32(nalu.length)\r\n    }\r\n    else if (naluLengthSizeMinusOne === 2) {\r\n      bufferWriter.writeUint24(nalu.length)\r\n    }\r\n    else if (naluLengthSizeMinusOne === 1) {\r\n      bufferWriter.writeUint16(nalu.length)\r\n    }\r\n    else {\r\n      bufferWriter.writeUint8(nalu.length)\r\n    }\r\n    bufferWriter.writeBuffer(nalu)\r\n  })\r\n  return output\r\n}\r\n\r\nexport function naluUnescape(data: Uint8Array, start = 0, end?: number) {\r\n\r\n  if (!end) {\r\n    end = data.length\r\n  }\r\n\r\n  const buffer = new Uint8Array(data.length)\r\n\r\n  let zeroCount = 0\r\n  let pos = 0\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (i >= start && i < end) {\r\n      if (data[i] === 0) {\r\n        zeroCount++\r\n      }\r\n      else {\r\n        if (data[i] === 3 && zeroCount === 2 && i + 1 < data.length && data[i + 1] <= 3) {\r\n          i++\r\n          if (i === data.length) {\r\n            break\r\n          }\r\n          else {\r\n            if (data[i] === 0) {\r\n              zeroCount = 1\r\n            }\r\n            else {\r\n              zeroCount = 0\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          zeroCount = 0\r\n        }\r\n      }\r\n    }\r\n    buffer[pos++] = data[i]\r\n  }\r\n\r\n  return buffer.slice(0, pos)\r\n}\r\n\r\nexport function naluEscape(data: Uint8Array, start: number = 0, end?: number) {\r\n  if (!end) {\r\n    end = data.length\r\n  }\r\n\r\n  const indexes = []\r\n  let zeroCount = 0\r\n  for (let i = start; i < end; i++) {\r\n\r\n    if (i >= end) {\r\n      break\r\n    }\r\n\r\n    if (data[i] === 0) {\r\n      zeroCount++\r\n    }\r\n    else {\r\n      if (data[i] <= 3 && zeroCount === 2) {\r\n        indexes.push(i)\r\n      }\r\n      zeroCount = 0\r\n    }\r\n  }\r\n\r\n  if (indexes.length) {\r\n    const buffer = new Uint8Array(data.length + indexes.length)\r\n    let pos = 0\r\n    let subData = data.subarray(0, indexes[0])\r\n    buffer.set(subData, pos)\r\n    pos += subData.length\r\n\r\n    buffer[pos++] = 3\r\n\r\n    for (let i = 1; i < indexes.length; i++) {\r\n      subData = data.subarray(indexes[i - 1], indexes[i])\r\n      buffer.set(subData, pos)\r\n      pos += subData.length\r\n      buffer[pos++] = 3\r\n    }\r\n\r\n    subData = data.subarray(indexes[indexes.length - 1], data.length)\r\n    buffer.set(subData, pos)\r\n    pos += subData.length\r\n\r\n    return buffer\r\n  }\r\n  else {\r\n    return data\r\n  }\r\n}\r\n","/*\r\n * libmedia video pixel util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPixelFormatDescriptor, getAVPixelFormatDescriptor, AVPixelFormatFlags } from '../pixelFormatDescriptor'\r\nimport { AVChromaLocation, AVPixelFormat } from '../pixfmt'\r\nimport * as errorType from '../error'\r\nimport { INT32_MAX } from '../constant'\r\nimport { memset } from 'cheap/std/memory'\r\nimport * as stack from 'cheap/stack'\r\nimport { avFree, avMalloc } from './mem'\r\nimport alignFunc from 'common/math/align'\r\n\r\nexport function chromaLocation2Pos(pos: AVChromaLocation) {\r\n  if (pos <= AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED || pos >= AVChromaLocation.AVCHROMA_LOC_NB) {\r\n    return\r\n  }\r\n  return {\r\n    x: (pos & 1) * 128,\r\n    y: ((pos >>> 1) ^ (pos < 4 ? 1 : 0)) * 128\r\n  }\r\n}\r\n\r\nfunction getMaxPixSteps(desc: AVPixelFormatDescriptor) {\r\n  const maxPixSteps: int32[] = [0, 0, 0, 0]\r\n  const maxPixStepsComps: int32[] = [0, 0, 0, 0]\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (desc.comp[i] && desc.comp[i].step > maxPixSteps[desc.comp[i].plane]) {\r\n      maxPixSteps[desc.comp[i].plane] = desc.comp[i].step\r\n      maxPixStepsComps[desc.comp[i].plane] = i\r\n    }\r\n  }\r\n\r\n  return {\r\n    maxPixSteps,\r\n    maxPixStepsComps\r\n  }\r\n}\r\n\r\nfunction setSystematicPal(pal: pointer<uint32>, pixfmt: AVPixelFormat) {\r\n  for (let i = 0; i < 256; i++) {\r\n    let r: int32, g: int32, b: int32\r\n\r\n    switch (pixfmt) {\r\n      case AVPixelFormat.AV_PIX_FMT_RGB8:\r\n        r = (i >> 5) * 36\r\n        g = ((i >> 2) & 7) * 36\r\n        b = (i & 3) * 85\r\n        break\r\n      case AVPixelFormat.AV_PIX_FMT_BGR8:\r\n        b = (i >> 6) * 85\r\n        g = ((i >> 3) & 7) * 36\r\n        r = (i & 7) * 36\r\n        break\r\n      case AVPixelFormat.AV_PIX_FMT_RGB4_BYTE:\r\n        r = (i >> 3) * 255\r\n        g = ((i >> 1) & 3) * 85\r\n        b = (i & 1) * 255\r\n        break\r\n      case AVPixelFormat.AV_PIX_FMT_BGR4_BYTE:\r\n        b = (i >> 3) * 255\r\n        g = ((i >> 1) & 3) * 85\r\n        r = (i & 1) * 255\r\n        break\r\n      case AVPixelFormat.AV_PIX_FMT_GRAY8:\r\n        r = b = g = i\r\n        break\r\n      default:\r\n        return errorType.INVALID_ARGUMENT\r\n    }\r\n    pal[i] = b + (g << 8) + (r << 16) + (0xFF << 24)\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nfunction pixelGetLinesize_(width: int32, plane: int32, maxStep: int32, maxStepComp: int32, desc: AVPixelFormatDescriptor) {\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  if (width < 0) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const s = (maxStepComp === 1 || maxStepComp === 2) ? desc.log2ChromaW : 0\r\n\r\n  const shiftedW = ((width + (1 << s) - 1)) >>> s\r\n\r\n  if (shiftedW && maxStep > INT32_MAX / shiftedW) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  let linesize = maxStep * shiftedW\r\n\r\n  if (desc.flags & AVPixelFormatFlags.BIT_STREAM) {\r\n    linesize = (linesize + 7) >>> 3\r\n  }\r\n\r\n  return linesize\r\n}\r\n\r\nexport function pixelGetLinesize(pixfmt: AVPixelFormat, width: int32, plane: int32) {\r\n  const desc = getAVPixelFormatDescriptor(pixfmt)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const { maxPixSteps, maxPixStepsComps } = getMaxPixSteps(desc)\r\n\r\n  return pixelGetLinesize_(width, plane, maxPixSteps[plane], maxPixStepsComps[plane], desc)\r\n}\r\n\r\nexport function pixelFillLinesizes(linesizes: pointer<int32>, pixfmt: AVPixelFormat, width: int32) {\r\n  const desc = getAVPixelFormatDescriptor(pixfmt)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const { maxPixSteps, maxPixStepsComps } = getMaxPixSteps(desc)\r\n\r\n  memset(linesizes, 0, 4 * sizeof(linesizes[0]))\r\n\r\n  let ret = 0\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if ((ret = pixelGetLinesize_(width, i, maxPixSteps[i], maxPixStepsComps[i], desc)) < 0) {\r\n      return ret\r\n    }\r\n    linesizes[i] = ret\r\n  }\r\n}\r\n\r\nexport function pixelFillPlaneSizes(sizes: pointer<size>, pixfmt: AVPixelFormat, height: int32, linesizes: pointer<int32>) {\r\n  const hasPlane = [0, 0, 0, 0]\r\n\r\n  const desc = getAVPixelFormatDescriptor(pixfmt)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  memset(sizes, 0, 4 * sizeof(sizes[0]))\r\n\r\n  if (linesizes[0] > INT32_MAX / height) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  sizes[0] = reinterpret_cast<size>(linesizes[0] * height)\r\n\r\n  if (desc.flags & AVPixelFormatFlags.PALETTE) {\r\n    sizes[1] = reinterpret_cast<size>(256 * 4)\r\n    return 0\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (desc.comp[i]) {\r\n      hasPlane[desc.comp[i].plane] = 1\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 4 && hasPlane[i]; i++) {\r\n    let s = (i === 1 || i === 2) ? desc.log2ChromaH : 0\r\n    let h = (height + (1 << s) - 1) >> s\r\n\r\n    if (linesizes[i] > INT32_MAX / h) {\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n\r\n    sizes[i] = reinterpret_cast<size>(h * linesizes[i])\r\n  }\r\n  return 0\r\n}\r\n\r\nexport function pixelFillPointer(\r\n  data: pointer<pointer<uint8>>,\r\n  pixfmt: AVPixelFormat,\r\n  height: int32,\r\n  ptr: pointer<uint8>,\r\n  linesizes: pointer<int32>\r\n) {\r\n  const linesizes1 = reinterpret_cast<pointer<int32>>(stack.malloc(sizeof(linesizes[0]) * 4))\r\n  const sizes = reinterpret_cast<pointer<size>>(stack.malloc(sizeof(size) * 4))\r\n\r\n  memset(data, 0, 4 * sizeof(data[0]))\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    linesizes1[i] = linesizes[i]\r\n  }\r\n\r\n  let ret = pixelFillPlaneSizes(sizes, pixfmt, height, linesizes1)\r\n\r\n  if (ret < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  ret = 0\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (sizes[i] > INT32_MAX - ret) {\r\n      defer()\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n    ret += reinterpret_cast<double>(sizes[i])\r\n  }\r\n\r\n  if (!ptr) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  data[0] = ptr\r\n  for (let i = 1; i < 4 && sizes[i]; i++) {\r\n    data[i] = reinterpret_cast<pointer<uint8>>(data[i - 1] + sizes[i - 1])\r\n  }\r\n\r\n  defer()\r\n  return ret\r\n\r\n  function defer() {\r\n    stack.free(sizeof(linesizes[0]) * 4)\r\n    stack.free(sizeof(size) * 4)\r\n  }\r\n}\r\n\r\nexport function pixelAlloc(\r\n  pointers: pointer<pointer<uint8>>,\r\n  linesizes: pointer<int32>,\r\n  w: int32,\r\n  h: int32,\r\n  pixfmt: AVPixelFormat,\r\n  align: int32 = 1\r\n) {\r\n\r\n  const desc = getAVPixelFormatDescriptor(pixfmt)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const linesizes1 = reinterpret_cast<pointer<int32>>(stack.malloc(sizeof(linesizes[0]) * 4))\r\n  const sizes = reinterpret_cast<pointer<size>>(stack.malloc(sizeof(size) * 4))\r\n\r\n  let ret = 0\r\n\r\n  if ((ret = pixelFillLinesizes(linesizes, pixfmt, align > 7 ? alignFunc(w, 8) : w)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    linesizes[i] = alignFunc(linesizes[i], align)\r\n    linesizes1[i] = linesizes[i]\r\n  }\r\n\r\n  if ((ret = pixelFillPlaneSizes(sizes, pixfmt, h, linesizes1)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  let totalSize: size = static_cast<size>(align)\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (totalSize > static_cast<size>(INT32_MAX) - sizes[i]) {\r\n      defer()\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n    totalSize += sizes[i]\r\n  }\r\n\r\n  const buf: pointer<uint8> = avMalloc(totalSize)\r\n\r\n  if (!buf) {\r\n    defer()\r\n    return errorType.NO_MEMORY\r\n  }\r\n\r\n  if ((ret = pixelFillPointer(pointers, pixfmt, h, buf, linesizes)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  if (desc.flags & AVPixelFormatFlags.PALETTE) {\r\n    if (align < 4) {\r\n      avFree(buf)\r\n      defer()\r\n      return ret\r\n    }\r\n    setSystematicPal(reinterpret_cast<pointer<uint32>>(pointers[1]), pixfmt)\r\n  }\r\n\r\n  if ((desc.flags & AVPixelFormatFlags.PALETTE)\r\n    && pointers[1]\r\n    && pointers[1] - pointers[0] > linesizes[0] * h\r\n  ) {\r\n    /* zero-initialize the padding before the palette */\r\n    memset(pointers[0] + linesizes[0] * h, 0, pointers[1] - pointers[0] - linesizes[0] * h)\r\n  }\r\n\r\n  defer()\r\n  return ret\r\n\r\n  function defer() {\r\n    stack.free(sizeof(linesizes[0]) * 4)\r\n    stack.free(sizeof(size) * 4)\r\n  }\r\n}\r\n\r\nexport function pixelGetSize(pixfmt: AVPixelFormat, width: int32, height: int32, align: int32) {\r\n  const desc = getAVPixelFormatDescriptor(pixfmt)\r\n\r\n  if (!desc) {\r\n    return errorType.INVALID_ARGUMENT\r\n  }\r\n\r\n  const linesizes = reinterpret_cast<pointer<int32>>(stack.malloc(sizeof(int32) * 4))\r\n  const alignedLinesizes = reinterpret_cast<pointer<int32>>(stack.malloc(sizeof(int32) * 4))\r\n  const sizes = reinterpret_cast<pointer<size>>(stack.malloc(sizeof(size) * 4))\r\n\r\n  let ret = 0\r\n\r\n  if ((ret = pixelFillLinesizes(linesizes, pixfmt, width)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    alignedLinesizes[i] = alignFunc(linesizes[i], align)\r\n  }\r\n\r\n  if ((ret = pixelFillPlaneSizes(sizes, pixfmt, height, alignedLinesizes)) < 0) {\r\n    defer()\r\n    return ret\r\n  }\r\n\r\n  let totalSize: size = 0\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (totalSize > reinterpret_cast<size>(INT32_MAX) - sizes[i]) {\r\n      defer()\r\n      return errorType.INVALID_ARGUMENT\r\n    }\r\n    totalSize += sizes[i]\r\n  }\r\n\r\n  defer()\r\n\r\n  return totalSize\r\n\r\n  function defer() {\r\n    stack.free(sizeof(int32) * 4)\r\n    stack.free(sizeof(int32) * 4)\r\n    stack.free(sizeof(size) * 4)\r\n  }\r\n}\r\n","/*\r\n * libmedia rational util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { INT32_MAX } from '../constant'\r\nimport { Rational } from '../struct/rational'\r\nimport gcd from 'common/math/gcd'\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ(a: int64, bq: Rational, cq: Rational) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ2(a: int64, bq: pointer<Rational>, cq: Rational) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ3(a: int64, bq: Rational, cq: pointer<Rational>) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间戳由一个时间基转换到另一个时间基\r\n * \r\n * @param a 待转换时间戳\r\n * @param bp 待转换时间戳的时间基\r\n * @param cq 目标时间基\r\n */\r\nexport function avRescaleQ4(a: int64, bq: pointer<Rational>, cq: pointer<Rational>) {\r\n  const b = a * static_cast<int64>(bq.num as unknown as uint32) * static_cast<int64>(cq.den as unknown as uint32)\r\n  const c = static_cast<int64>(bq.den as unknown as uint32) * static_cast<int64>(cq.num as unknown as uint32)\r\n  return b / c\r\n}\r\n\r\n/**\r\n * 将一个时间基转换成 double\r\n * \r\n * @param a \r\n */\r\nexport function avQ2D(a: Rational) {\r\n  return a.num / a.den\r\n}\r\n\r\n/**\r\n * 将一个时间基转换成 double\r\n * \r\n * @param a \r\n */\r\nexport function avQ2D2(a: pointer<Rational>) {\r\n  return a.num / a.den\r\n}\r\n\r\nexport function avD2Q(d: double, max: int32): Rational {\r\n  if (isNaN(double)) {\r\n    return {\r\n      den: 0,\r\n      num: 0\r\n    }\r\n  }\r\n  if (Math.abs(d) > INT32_MAX + 3) {\r\n    return {\r\n      den: 0,\r\n      num: d < 0 ? -1 : 1\r\n    }\r\n  }\r\n  const q = d > 1\r\n    ? {\r\n      den: Math.floor(max / d + 0.5),\r\n      num: max\r\n    }\r\n    : {\r\n      den: max,\r\n      num: Math.floor(d * max + 0.5)\r\n    }\r\n  avReduce(q)\r\n  return q\r\n}\r\n\r\n/**\r\n * 化简 Rational\r\n * \r\n * @param a \r\n */\r\nexport function avReduce(a: Rational) {\r\n  const gcdValue = gcd(a.num, a.den)\r\n  if (gcdValue <= 1) {\r\n    return\r\n  }\r\n  a.den /= gcdValue\r\n  a.num /= gcdValue\r\n}\r\n\r\n/**\r\n * 化简 Rational\r\n * \r\n * @param a \r\n */\r\nexport function avReduce2(a: pointer<Rational>) {\r\n  const gcdValue = gcd(a.num, a.den)\r\n  if (gcdValue <= 1) {\r\n    return\r\n  }\r\n  a.den /= gcdValue\r\n  a.num /= gcdValue\r\n}\r\n","/*\r\n * libmedia audio sample util\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { memset } from 'cheap/std/memory'\r\nimport { AVSampleFormat } from '../audiosamplefmt'\r\nimport { INT32_MAX } from '../constant'\r\nimport alignFunc from 'common/math/align'\r\nimport { avFree, avMalloc } from '../util/mem'\r\nimport { AVSampleFormatDescriptors } from '../sampleFormatDescriptor'\r\n\r\nexport function getBytesPerSample(format: AVSampleFormat) {\r\n  return (format < 0 || format >= AVSampleFormat.AV_SAMPLE_FMT_NB)\r\n    ? 0\r\n    : AVSampleFormatDescriptors[format].bits >> 3\r\n}\r\n\r\nexport function sampleFormatIsPlanar(format: AVSampleFormat) {\r\n  return (format < 0 || format >= AVSampleFormat.AV_SAMPLE_FMT_NB)\r\n    ? false\r\n    : AVSampleFormatDescriptors[format].planar\r\n}\r\n\r\nexport function sampleFormatGetLinesize(format: AVSampleFormat, channels: int32, nbSamples: int32, align?: int32) {\r\n  const sampleSize = getBytesPerSample(format)\r\n  const planar = sampleFormatIsPlanar(format)\r\n\r\n  if (!sampleSize || nbSamples <= 0 || channels <= 0) {\r\n    return -1\r\n  }\r\n\r\n  if (!align) {\r\n    align = 1\r\n    nbSamples = alignFunc(nbSamples, 32)\r\n  }\r\n\r\n  if (channels > INT32_MAX / align || channels * nbSamples > (INT32_MAX - align * channels) / sampleSize) {\r\n    return -1\r\n  }\r\n\r\n  return planar ? alignFunc(nbSamples * sampleSize, align) : alignFunc(nbSamples * sampleSize * channels, align)\r\n}\r\n\r\nexport function sampleFillArrays(\r\n  audioData: pointer<pointer<uint8>>,\r\n  buf: pointer<uint8>,\r\n  format: AVSampleFormat,\r\n  linesize: int32,\r\n  channels: int32\r\n) {\r\n  const planar = sampleFormatIsPlanar(format)\r\n\r\n  memset(audioData, 0, planar ? reinterpret_cast<int32>(sizeof(accessof(audioData))) * channels : sizeof(accessof(audioData)))\r\n\r\n  if (!buf) {\r\n    return -1\r\n  }\r\n\r\n  audioData[0] = buf\r\n\r\n  if (planar) {\r\n    for (let i = 1; i < channels; i++) {\r\n      audioData[i] = reinterpret_cast<pointer<uint8>>(audioData[i - 1] + linesize)\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nexport function sampleAlloc(\r\n  audioData: pointer<pointer<uint8>>,\r\n  format: AVSampleFormat,\r\n  linesize: int32,\r\n  channels: int32\r\n) {\r\n  const planar = sampleFormatIsPlanar(format)\r\n  const bufSize = planar ? linesize * channels : linesize\r\n\r\n  if (bufSize < 0) {\r\n    return bufSize\r\n  }\r\n\r\n  const buf: pointer<uint8> = avMalloc(bufSize)\r\n\r\n  const ret = sampleFillArrays(audioData, buf, format, linesize, channels)\r\n\r\n  if (ret < 0) {\r\n    avFree(buf)\r\n    return ret\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nexport function sampleSetSilence(\r\n  audioData: pointer<pointer<uint8>>,\r\n  offset: int32,\r\n  format: AVSampleFormat,\r\n  nbSamples: int32,\r\n  channels: int32\r\n) {\r\n  const planar = sampleFormatIsPlanar(format)\r\n  const planes = planar ? channels : 1\r\n  const blockAlign = getBytesPerSample(format) * (planar ? 1 : channels)\r\n  const dataSize = nbSamples * blockAlign\r\n  const fillChar = (format === AVSampleFormat.AV_SAMPLE_FMT_U8 || format === AVSampleFormat.AV_SAMPLE_FMT_U8P)\r\n    ? 0x80\r\n    : 0x00\r\n\r\n  offset *= blockAlign\r\n\r\n  for (let i = 0; i < planes; i++) {\r\n    memset(audioData[i] + offset, fillChar, dataSize)\r\n  }\r\n}\r\n","/*\r\n * libmedia serialize struct\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVCodecID, AVMediaType, AVPacketSideDataType } from '../codec'\r\nimport AVPacket from '../struct/avpacket'\r\nimport { Rational } from '../struct/rational'\r\nimport { mapUint8Array, memcpyFromUint8Array, memset } from 'cheap/std/memory'\r\nimport { addAVPacketData, addAVPacketSideData, addSideData, createAVPacket, freeAVPacketSideData, getAVPacketData } from './avpacket'\r\nimport { avFree, avMalloc } from './mem'\r\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVFieldOrder, AVPixelFormat } from '../pixfmt'\r\nimport { AVChannelOrder, AVSampleFormat } from '../audiosamplefmt'\r\nimport AVCodecParameters from '../struct/avcodecparameters'\r\n\r\nexport interface AVPacketSerialize {\r\n  pts: int64\r\n  dts: int64\r\n  data: Uint8Array\r\n  streamIndex: int32\r\n  flags: int32\r\n  sideData: {\r\n    type: AVPacketSideDataType\r\n    data: Uint8Array\r\n  }[]\r\n  duration: int64\r\n  pos: int64\r\n  timeBase: Rational\r\n}\r\n\r\nexport interface AVCodecParametersSerialize {\r\n  codecType: AVMediaType\r\n  codecId: AVCodecID\r\n  codecTag: uint32\r\n  extradata: Uint8Array\r\n  codedSideData: {\r\n    type: AVPacketSideDataType\r\n    data: Uint8Array\r\n  }[]\r\n  format: AVPixelFormat | AVSampleFormat\r\n  bitrate: int64\r\n  bitsPerCodedSample: int32\r\n  bitsPerRawSample: int32\r\n  profile: int32\r\n  level: int32\r\n  width: int32\r\n  height: int32\r\n  sampleAspectRatio: Rational\r\n  framerate: Rational\r\n  fieldOrder: AVFieldOrder\r\n  colorRange: AVColorRange\r\n  colorPrimaries: AVColorPrimaries\r\n  colorTrc: AVColorTransferCharacteristic\r\n  colorSpace: AVColorSpace\r\n  chromaLocation: AVChromaLocation\r\n  videoDelay: int32\r\n  chLayout: {\r\n    order: AVChannelOrder\r\n    nbChannels: int32\r\n    u: uint64\r\n  }\r\n  sampleRate: int32\r\n  blockAlign: int32\r\n  frameSize: int32\r\n  initialPadding: int32\r\n  trailingPadding: int32\r\n  seekPreroll: int32\r\n  flags: int32\r\n}\r\n\r\nexport function serializeAVPacket(avpacket: pointer<AVPacket>) {\r\n  const serialize: AVPacketSerialize = {\r\n    pts: avpacket.pts,\r\n    dts: avpacket.dts,\r\n    data: getAVPacketData(avpacket).slice(),\r\n    streamIndex: avpacket.streamIndex,\r\n    flags: avpacket.flags,\r\n    sideData: [],\r\n    duration: avpacket.duration,\r\n    pos: avpacket.pos,\r\n    timeBase: {\r\n      den: avpacket.timeBase.den,\r\n      num: avpacket.timeBase.num\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\r\n    const ele = {\r\n      type: avpacket.sideData[i].type,\r\n      data: mapUint8Array(avpacket.sideData[i].data, avpacket.sideData[i].size).slice()\r\n    }\r\n    serialize.sideData.push(ele)\r\n  }\r\n  return serialize\r\n}\r\n\r\nexport function unserializeAVPacket(serialize: AVPacketSerialize, avpacket: pointer<AVPacket> = nullptr) {\r\n  if (!avpacket) {\r\n    avpacket = createAVPacket()\r\n  }\r\n\r\n  avpacket.pts = serialize.pts\r\n  avpacket.dts = serialize.dts\r\n\r\n  const data: pointer<uint8> = avMalloc(serialize.data.length)\r\n  memcpyFromUint8Array(data, serialize.data.length, serialize.data)\r\n  addAVPacketData(avpacket, data, serialize.data.length)\r\n\r\n  avpacket.streamIndex = serialize.streamIndex\r\n  avpacket.flags = serialize.flags\r\n  avpacket.duration = serialize.duration\r\n  avpacket.pos = serialize.pos\r\n  avpacket.timeBase.den = serialize.timeBase.den\r\n  avpacket.timeBase.num = serialize.timeBase.num\r\n\r\n  if (serialize.sideData.length) {\r\n    for (let i = 0; i < serialize.sideData.length; i++) {\r\n      const data = avMalloc(serialize.sideData[i].data.length)\r\n      memcpyFromUint8Array(data, serialize.sideData[i].data.length, serialize.sideData[i].data)\r\n      addAVPacketSideData(avpacket, serialize.sideData[i].type, data, serialize.sideData[i].data.length)\r\n    }\r\n  }\r\n  else {\r\n    freeAVPacketSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems))\r\n  }\r\n\r\n  return avpacket\r\n}\r\n\r\nexport function serializeAVCodecParameters(codecpar: pointer<AVCodecParameters>) {\r\n  const serialize: AVCodecParametersSerialize = {\r\n    codecType: codecpar.codecType,\r\n    codecId: codecpar.codecId,\r\n    codecTag: codecpar.codecTag,\r\n    extradata: null,\r\n    codedSideData: [],\r\n    format: codecpar.format,\r\n    bitrate: codecpar.bitrate,\r\n    bitsPerCodedSample: codecpar.bitsPerCodedSample,\r\n    bitsPerRawSample: codecpar.bitsPerRawSample,\r\n    profile: codecpar.profile,\r\n    level: codecpar.level,\r\n    width: codecpar.width,\r\n    height: codecpar.height,\r\n    sampleAspectRatio: {\r\n      den: codecpar.sampleAspectRatio.den,\r\n      num: codecpar.sampleAspectRatio.num\r\n    },\r\n    framerate: {\r\n      den: codecpar.framerate.den,\r\n      num: codecpar.framerate.num\r\n    },\r\n    fieldOrder: codecpar.fieldOrder,\r\n    colorRange: codecpar.colorRange,\r\n    colorPrimaries: codecpar.colorPrimaries,\r\n    colorTrc: codecpar.colorTrc,\r\n    colorSpace: codecpar.colorSpace,\r\n    chromaLocation: codecpar.chromaLocation,\r\n    videoDelay: codecpar.videoDelay,\r\n    chLayout: {\r\n      order: codecpar.chLayout.order,\r\n      nbChannels: codecpar.chLayout.nbChannels,\r\n      u: codecpar.chLayout.u.mask\r\n    },\r\n    sampleRate: codecpar.sampleRate,\r\n    blockAlign: codecpar.blockAlign,\r\n    frameSize: codecpar.frameSize,\r\n    initialPadding: codecpar.initialPadding,\r\n    trailingPadding: codecpar.trailingPadding,\r\n    seekPreroll: codecpar.seekPreroll,\r\n    flags: codecpar.flags\r\n  }\r\n\r\n  if (codecpar.extradataSize) {\r\n    serialize.extradata = mapUint8Array(codecpar.extradata, reinterpret_cast<size>(codecpar.extradataSize)).slice()\r\n  }\r\n\r\n  for (let i = 0; i < codecpar.nbCodedSideData; i++) {\r\n    const ele = {\r\n      type: codecpar.codedSideData[i].type,\r\n      data: mapUint8Array(codecpar.codedSideData[i].data, codecpar.codedSideData[i].size).slice()\r\n    }\r\n    serialize.codedSideData.push(ele)\r\n  }\r\n\r\n  return serialize\r\n}\r\n\r\nexport function unserializeAVCodecParameters(serialize: AVCodecParametersSerialize, codecpar: pointer<AVCodecParameters> = nullptr) {\r\n  if (!codecpar) {\r\n    codecpar = reinterpret_cast<pointer<AVCodecParameters>>(avMalloc(sizeof(AVCodecParameters)))\r\n    memset(codecpar, 0, sizeof(AVCodecParameters))\r\n  }\r\n\r\n  codecpar.codecType = serialize.codecType\r\n  codecpar.codecId = serialize.codecId\r\n  codecpar.codecTag = serialize.codecTag\r\n\r\n  if (serialize.extradata) {\r\n    if (codecpar.extradata) {\r\n      avFree(codecpar.extradata)\r\n    }\r\n    codecpar.extradata = avMalloc(serialize.extradata.length)\r\n    memcpyFromUint8Array(codecpar.extradata, serialize.extradata.length, serialize.extradata)\r\n    codecpar.extradataSize = serialize.extradata.length\r\n  }\r\n  if (serialize.codedSideData.length) {\r\n    for (let i = 0; i < serialize.codedSideData.length; i++) {\r\n      const data = avMalloc(serialize.codedSideData[i].data.length)\r\n      memcpyFromUint8Array(data, serialize.codedSideData[i].data.length, serialize.codedSideData[i].data)\r\n      addSideData(addressof(codecpar.codedSideData), addressof(codecpar.nbCodedSideData), serialize.codedSideData[i].type, data, serialize.codedSideData[i].data.length)\r\n    }\r\n  }\r\n  else {\r\n    freeAVPacketSideData(addressof(codecpar.codedSideData), addressof(codecpar.nbCodedSideData))\r\n  }\r\n  codecpar.format = serialize.format\r\n  codecpar.bitrate = serialize.bitrate\r\n  codecpar.bitsPerCodedSample = serialize.bitsPerCodedSample\r\n  codecpar.bitsPerRawSample = serialize.bitsPerRawSample\r\n  codecpar.profile = serialize.profile\r\n  codecpar.level = serialize.level\r\n  codecpar.width = serialize.width\r\n  codecpar.height = serialize.height\r\n  codecpar.sampleAspectRatio.den = serialize.sampleAspectRatio.den\r\n  codecpar.sampleAspectRatio.num = serialize.sampleAspectRatio.num\r\n  codecpar.framerate.den = serialize.framerate.den\r\n  codecpar.framerate.num = serialize.framerate.num\r\n  codecpar.fieldOrder = serialize.fieldOrder\r\n  codecpar.colorRange = serialize.colorRange\r\n  codecpar.colorPrimaries = serialize.colorPrimaries\r\n  codecpar.colorTrc = serialize.colorTrc\r\n  codecpar.colorSpace = serialize.colorSpace\r\n  codecpar.chromaLocation = serialize.chromaLocation\r\n  codecpar.videoDelay = serialize.videoDelay\r\n  codecpar.chLayout.order = serialize.chLayout.order\r\n  codecpar.chLayout.nbChannels = serialize.chLayout.nbChannels\r\n  codecpar.chLayout.u.mask = serialize.chLayout.u\r\n  codecpar.sampleRate = serialize.sampleRate\r\n  codecpar.blockAlign = serialize.blockAlign\r\n  codecpar.frameSize = serialize.frameSize\r\n  codecpar.initialPadding = serialize.initialPadding\r\n  codecpar.trailingPadding = serialize.trailingPadding\r\n  codecpar.seekPreroll = serialize.seekPreroll\r\n  codecpar.flags = serialize.flags\r\n\r\n  return codecpar\r\n}\r\n","/**\r\n * 基于 https://github.com/codemix/malloc 修改\r\n * 一个基于跳表的 malloc 算法\r\n * 添加支持自动扩堆，支持多线程和 alignedAlloc\r\n */\r\n\r\nimport Allocator from './Allocator'\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport { lock, unlock } from '../thread/mutex'\r\nimport { heapMutex } from '../staticData'\r\nimport * as logger from 'common/util/logger'\r\n\r\nconst ALIGNMENT_IN_BYTES = 8\r\nconst ALIGNMENT_MASK = ALIGNMENT_IN_BYTES - 1\r\n\r\nconst POINTER_SIZE_IN_BYTES = 4\r\nconst BYTES_TO_QUADS_SHIFT = 2\r\nconst MIN_FREEABLE_SIZE_IN_BYTES = 16\r\nconst MIN_FREEABLE_SIZE_IN_QUADS = bytesToQuads(MIN_FREEABLE_SIZE_IN_BYTES)\r\n\r\nconst MAX_HEIGHT = 32\r\n\r\nconst HEADER_SIZE_IN_QUADS = 1 + (MAX_HEIGHT * 2)\r\nconst HEADER_OFFSET_IN_QUADS = 1\r\n\r\nconst HEIGHT_OFFSET_IN_QUADS = 0\r\nconst NEXT_OFFSET_IN_QUADS = 2\r\n\r\nconst POINTER_SIZE_IN_QUADS = 1\r\nconst POINTER_OVERHEAD_IN_QUADS = 2\r\n\r\nconst FIRST_BLOCK_OFFSET_IN_QUADS = HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS + POINTER_OVERHEAD_IN_QUADS\r\nconst FIRST_BLOCK_OFFSET_IN_BYTES = FIRST_BLOCK_OFFSET_IN_QUADS * POINTER_SIZE_IN_BYTES\r\nconst OVERHEAD_IN_BYTES = (FIRST_BLOCK_OFFSET_IN_QUADS + 1) * POINTER_SIZE_IN_BYTES\r\n\r\ntype ListNode = {\r\n  type: string\r\n  offset: int32\r\n  size: int32\r\n  height: int32\r\n  pointers: int32[]\r\n  block: number\r\n}\r\n\r\ntype InspectionResult = {\r\n  header: ListNode\r\n  blocks: Array<{\r\n    type: string;\r\n    size: int32\r\n    node?: ListNode\r\n  }>\r\n  total: number\r\n  used: number\r\n}\r\n\r\nexport type AllocatorJSOptions = {\r\n  memory?: WebAssembly.Memory\r\n  buffer: ArrayBuffer | SharedArrayBuffer\r\n  byteOffset?: int32\r\n  byteLength?: int32\r\n  growAllowed?: boolean\r\n  growSize?: number\r\n  maxHeapSize?: number\r\n  onResize?: (old: Int32Array, need: number) => { buffer: ArrayBuffer, byteOffset?: number, byteLength?: number }\r\n}\r\n\r\nexport default class AllocatorJS implements Allocator {\r\n\r\n  private buffer: ArrayBuffer | SharedArrayBuffer\r\n\r\n  private byteOffset: int32\r\n\r\n  private heapOffset: int32\r\n\r\n  private heapLength: int32\r\n\r\n  private int32Array: Int32Array\r\n\r\n  private updates: Int32Array\r\n\r\n  private options: AllocatorJSOptions\r\n\r\n  private shared: boolean\r\n\r\n  private handles: ((buffer: ArrayBufferLike) => void)[]\r\n\r\n  constructor(options: AllocatorJSOptions, init: boolean = true) {\r\n    this.options = object.extend({\r\n      growSize: 1 * 1024 * 1024,\r\n      maxHeapSize: 2000 * 1024 * 1024\r\n    }, options)\r\n    this.handles = []\r\n    this.buffer = options.buffer\r\n    this.shared = false\r\n    if (this.options.memory || this.buffer instanceof ArrayBuffer || this.buffer instanceof SharedArrayBuffer) {\r\n      this.byteOffset = options.byteOffset ?? 0\r\n      this.heapOffset = alignHeapOffset(this.byteOffset + quadsToBytes(MAX_HEIGHT), options.byteLength ?? this.buffer.byteLength)\r\n      this.heapLength = alignHeapLength((options.byteLength ?? this.buffer.byteLength) - this.heapOffset)\r\n\r\n      this.int32Array = new Int32Array(this.buffer, this.heapOffset, bytesToQuads(static_cast<int32>(this.heapLength)))\r\n      this.updates = new Int32Array(this.buffer, this.byteOffset, MAX_HEIGHT)\r\n\r\n      if (typeof SharedArrayBuffer === 'function' && this.buffer instanceof SharedArrayBuffer) {\r\n        this.shared = true\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('Expected buffer to be an instance of Buffer or ArrayBuffer')\r\n    }\r\n\r\n    if (init) {\r\n      this.updates.fill(HEADER_OFFSET_IN_QUADS)\r\n      prepare(this.int32Array)\r\n      checkListIntegrity(this.int32Array)\r\n    }\r\n  }\r\n\r\n  public addUpdateHandle(handle: (buffer: ArrayBuffer) => void): void {\r\n    if (!array.has(this.handles, handle)) {\r\n      this.handles.push(handle)\r\n    }\r\n  }\r\n\r\n  public removeUpdateHandle(handle: (buffer: ArrayBuffer) => void): void {\r\n    array.remove(this.handles, handle)\r\n  }\r\n\r\n  private malloc_(size: size): pointer<void> {\r\n    size = reinterpret_cast<size>(align(reinterpret_cast<int32>(size), ALIGNMENT_MASK))\r\n    if (size < MIN_FREEABLE_SIZE_IN_BYTES) {\r\n      size = reinterpret_cast<size>(MIN_FREEABLE_SIZE_IN_BYTES)\r\n    }\r\n\r\n    assert(!(!this.options.growSize && size > this.heapLength - OVERHEAD_IN_BYTES), `malloc size must be between ${MIN_FREEABLE_SIZE_IN_BYTES} bytes and ${this.heapLength - OVERHEAD_IN_BYTES} bytes`)\r\n\r\n    const minimumSize: int32 = bytesToQuads(reinterpret_cast<int32>(size))\r\n    const block: int32 = this.findFreeBlock(this.int32Array, minimumSize)\r\n    if (block <= HEADER_OFFSET_IN_QUADS) {\r\n      return nullptr\r\n    }\r\n    const blockSize: int32 = readSize(this.int32Array, block)\r\n\r\n    if (blockSize - (minimumSize + POINTER_OVERHEAD_IN_QUADS) >= MIN_FREEABLE_SIZE_IN_QUADS) {\r\n      split(this.int32Array, block, minimumSize, blockSize, this.updates)\r\n    }\r\n    else {\r\n      assert(!(blockSize % 2))\r\n      remove(this.int32Array, block, blockSize, this.updates)\r\n    }\r\n\r\n    assert(!((quadsToBytes(block) & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    return quadsToBytes(block) + this.heapOffset\r\n  }\r\n  /**\r\n   * Allocate a given number of bytes and return the offset.\r\n   * If allocation fails, returns 0.\r\n   */\r\n  public malloc(size: size): pointer<void> {\r\n\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n\r\n    const address = this.malloc_(size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private calloc_(num: size, size: size): pointer<void> {\r\n    let numberOfBytes = num * size\r\n\r\n    if (numberOfBytes < MIN_FREEABLE_SIZE_IN_BYTES) {\r\n      numberOfBytes = MIN_FREEABLE_SIZE_IN_BYTES\r\n    }\r\n    else {\r\n      numberOfBytes = align(numberOfBytes, ALIGNMENT_MASK)\r\n    }\r\n\r\n    const address = this.malloc_(numberOfBytes)\r\n    if (address === nullptr) {\r\n      // Not enough space\r\n      return nullptr\r\n    }\r\n    const offset = bytesToQuads(address - this.heapOffset)\r\n    this.int32Array.subarray(offset, offset + bytesToQuads(numberOfBytes)).fill(0)\r\n\r\n    return address\r\n  }\r\n  public calloc(num: size, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n\r\n    const address = this.calloc_(num, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private realloc_(address: pointer<void>, size: size): pointer<void> {\r\n\r\n    if (address === nullptr) {\r\n      return this.malloc_(size)\r\n    }\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    const originAddress = address\r\n\r\n    if (size === 0) {\r\n      this.free_(originAddress)\r\n      return nullptr\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    let originBlock = bytesToQuads(reinterpret_cast<int32>(address))\r\n    let block = originBlock\r\n    let padding = 0\r\n\r\n    if (isAlign(this.int32Array, originBlock)) {\r\n      block = this.int32Array[originBlock - 1]\r\n      padding = originBlock - block\r\n    }\r\n\r\n    const blockSize: int32 = readSize(this.int32Array, block) - padding\r\n    const minimumSize: int32 = bytesToQuads(align(reinterpret_cast<int32>(size), ALIGNMENT_MASK))\r\n\r\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\r\n\r\n    if (blockSize >= minimumSize) {\r\n      return originAddress\r\n    }\r\n    else {\r\n      const newAddress = this.malloc_(size)\r\n      if (newAddress === nullptr) {\r\n        this.free_(originAddress)\r\n        return nullptr\r\n      }\r\n      this.int32Array.set(\r\n        this.int32Array.subarray(originBlock, originBlock + blockSize),\r\n        bytesToQuads(newAddress - this.heapOffset)\r\n      )\r\n      this.free_(originAddress)\r\n      return newAddress\r\n    }\r\n  }\r\n  public realloc(address: pointer<void>, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n\r\n    address = this.realloc_(address, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private alignedAlloc_(alignment: size, size: size): pointer<void> {\r\n\r\n    assert(alignment >= 4, `alignment must not smaller then 4, but got ${alignment}`)\r\n\r\n    assert(!(alignment & (alignment - reinterpret_cast<size>(1))), `alignment must be power of 2, but got ${alignment}`)\r\n\r\n    if (alignment <= ALIGNMENT_IN_BYTES) {\r\n      // malloc 以 ALIGNMENT_IN_BYTES 字节对齐\r\n      return this.malloc_(size)\r\n    }\r\n\r\n    const address = this.malloc_(size + alignment - reinterpret_cast<size>(1) + reinterpret_cast<size>(POINTER_SIZE_IN_BYTES))\r\n\r\n    if (address === nullptr) {\r\n      return nullptr\r\n    }\r\n\r\n    const alignmentAddress: pointer<void> = reinterpret_cast<pointer<void>>((address + alignment - reinterpret_cast<size>(1)\r\n      + reinterpret_cast<size>(POINTER_SIZE_IN_BYTES)) & reinterpret_cast<size>(~(alignment - reinterpret_cast<size>(1))))\r\n\r\n    this.int32Array[bytesToQuads(alignmentAddress - this.heapOffset) - POINTER_SIZE_IN_QUADS] = bytesToQuads(address - this.heapOffset)\r\n\r\n    assert(!(alignmentAddress % alignment))\r\n\r\n    return alignmentAddress\r\n  }\r\n  public alignedAlloc(alignment: size, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n\r\n    const address = this.alignedAlloc_(alignment, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private free_(address: pointer<void>): void {\r\n    if (address === nullptr) {\r\n      return\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    let block = bytesToQuads(reinterpret_cast<int32>(address))\r\n\r\n    if (isAlign(this.int32Array, block)) {\r\n      block = this.int32Array[block - POINTER_SIZE_IN_QUADS]\r\n    }\r\n\r\n    if (isFree(this.int32Array, block)) {\r\n      return\r\n    }\r\n\r\n    const blockSize: int32 = readSize(this.int32Array, block)\r\n\r\n    // 对地址是否合法进行断言\r\n    assert(blockSize === readSize(this.int32Array, block + blockSize + 1))\r\n\r\n    /* istanbul ignore if  */\r\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\r\n\r\n    const preceding: int32 = getFreeBlockBefore(this.int32Array, block)\r\n    const trailing: int32 = getFreeBlockAfter(this.int32Array, block)\r\n\r\n    if (preceding !== nullptr) {\r\n      if (trailing !== nullptr) {\r\n        insertMiddle(this.int32Array, preceding, block, blockSize, trailing, this.updates)\r\n      }\r\n      else {\r\n        insertAfter(this.int32Array, preceding, block, blockSize, this.updates)\r\n      }\r\n    }\r\n    else if (trailing !== nullptr) {\r\n      insertBefore(this.int32Array, trailing, block, blockSize, this.updates)\r\n    }\r\n    else {\r\n      insert(this.int32Array, block, blockSize, this.updates)\r\n    }\r\n  }\r\n  /**\r\n   * Free a number of bytes from the given address.\r\n   */\r\n  public free(address: pointer<void>): void {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n\r\n    this.free_(address)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the size of the block at the given address.\r\n   */\r\n  public sizeof(address: int32): size {\r\n\r\n    if (address === nullptr) {\r\n      return 0\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength || typeof address !== 'number' || isNaN(address)), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of the pointer size (${POINTER_SIZE_IN_BYTES}).`)\r\n\r\n    let block = bytesToQuads(address)\r\n\r\n    if (isAlign(this.int32Array, block)) {\r\n      block = this.int32Array[block - POINTER_SIZE_IN_QUADS]\r\n    }\r\n\r\n    return reinterpret_cast<size>(quadsToBytes(readSize(this.int32Array, block)))\r\n  }\r\n\r\n  /**\r\n   * 获取堆分配信息\r\n   * \r\n   * @returns \r\n   */\r\n  public inspect(): InspectionResult {\r\n    this.checkBuffer()\r\n    return inspect(this.int32Array, this.heapOffset)\r\n  }\r\n\r\n  private findFreeBlock(int32Array: Int32Array, minimumSize: int32): int32 {\r\n    let block: int32 = findFreeBlock(int32Array, minimumSize)\r\n    if (block === HEADER_OFFSET_IN_QUADS) {\r\n      if (this.options.growAllowed && this.heapLength < this.options.maxHeapSize) {\r\n\r\n        const block = this.int32Array.length + 1\r\n\r\n        let int32Array: Int32Array\r\n        let updates: Int32Array\r\n        let byteOffset = 0\r\n        let heapLength = 0\r\n        let heapOffset = 0\r\n\r\n        if (this.options.onResize) {\r\n          const result = this.options.onResize(\r\n            this.int32Array,\r\n            this.int32Array.byteLength + align(Math.max(this.options.growSize, quadsToBytes(minimumSize)), ALIGNMENT_MASK)\r\n          )\r\n          byteOffset = result.byteOffset ?? 0\r\n          heapOffset = alignHeapOffset(byteOffset + quadsToBytes(MAX_HEIGHT), result.byteLength ?? result.buffer.byteLength)\r\n          heapLength = alignHeapLength((result.byteLength ?? result.buffer.byteLength) - heapOffset)\r\n          int32Array = new Int32Array(result.buffer, heapOffset, bytesToQuads(heapLength))\r\n          updates = new Int32Array(result.buffer, byteOffset, MAX_HEIGHT)\r\n        }\r\n        else {\r\n          const buffer = new ArrayBuffer(this.int32Array.length + bytesToQuads(this.options.growSize))\r\n          heapOffset = alignHeapOffset(byteOffset + quadsToBytes(MAX_HEIGHT), buffer.byteLength)\r\n          heapLength = alignHeapLength(buffer.byteLength - heapOffset)\r\n          int32Array = new Int32Array(buffer, heapOffset, bytesToQuads(heapLength))\r\n          int32Array.set(this.int32Array, 0)\r\n          updates = new Int32Array(buffer, byteOffset, MAX_HEIGHT)\r\n        }\r\n\r\n        this.byteOffset = byteOffset\r\n        this.heapOffset = heapOffset\r\n        this.buffer = int32Array.buffer\r\n        this.heapLength = heapLength\r\n        this.int32Array = int32Array\r\n        this.updates = updates\r\n\r\n        const blockSize = int32Array.length - (block - 1) - POINTER_OVERHEAD_IN_QUADS\r\n\r\n        writeFreeBlockSize(int32Array, blockSize, block)\r\n\r\n        const preceding: int32 = getFreeBlockBefore(int32Array, block)\r\n        if (preceding !== nullptr) {\r\n          insertAfter(int32Array, preceding, block, blockSize, this.updates)\r\n        }\r\n        else {\r\n          insert(int32Array, block, blockSize, this.updates)\r\n        }\r\n\r\n        if (this.handles.length) {\r\n          array.each(this.handles, (func) => {\r\n            func(this.buffer)\r\n          })\r\n        }\r\n\r\n        return this.findFreeBlock(this.int32Array, minimumSize)\r\n      }\r\n      return block\r\n    }\r\n    else {\r\n      return block\r\n    }\r\n  }\r\n\r\n  public getBuffer(): ArrayBufferLike {\r\n    return this.buffer\r\n  }\r\n\r\n  public isAlloc(pointer: pointer<void>) {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n      this.checkBuffer()\r\n    }\r\n    const block = bytesToQuads(pointer - this.heapOffset)\r\n    let next: int32 = this.int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS]\r\n    // sometime get undefined from the last free node in v8\r\n    // but it's is all right |=_=\r\n    while (next && next !== HEADER_OFFSET_IN_QUADS) {\r\n      if (block >= next && block < next + this.int32Array[next - POINTER_SIZE_IN_QUADS]) {\r\n        if (this.shared) {\r\n          unlock(heapMutex)\r\n        }\r\n        return false\r\n      }\r\n      next = this.int32Array[next + NEXT_OFFSET_IN_QUADS]\r\n    }\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n    return true\r\n  }\r\n\r\n  private checkBuffer() {\r\n    if (this.options.memory && this.options.memory.buffer !== this.buffer) {\r\n      this.buffer = this.options.memory.buffer\r\n      this.heapLength = alignHeapLength(this.buffer.byteLength - this.heapOffset)\r\n      this.int32Array = new Int32Array(this.buffer, this.heapOffset, bytesToQuads(static_cast<int32>(this.heapLength)))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Prepare the given int32Array and ensure it contains a valid header.\r\n */\r\nfunction prepare(int32Array: Int32Array) {\r\n  if (!verifyHeader(int32Array)) {\r\n    writeInitialHeader(int32Array)\r\n  }\r\n}\r\n\r\n/**\r\n * Verify that the int32Array contains a valid header.\r\n */\r\nfunction verifyHeader(int32Array: Int32Array): boolean {\r\n  return int32Array[HEADER_OFFSET_IN_QUADS - 1] === HEADER_SIZE_IN_QUADS\r\n    && int32Array[HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS] === HEADER_SIZE_IN_QUADS\r\n}\r\n\r\n/**\r\n * Write the initial header for an empty int32Array.\r\n */\r\nfunction writeInitialHeader(int32Array: Int32Array) {\r\n  const header = HEADER_OFFSET_IN_QUADS\r\n  const headerSize = HEADER_SIZE_IN_QUADS\r\n  const block = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  const blockSize = int32Array.length - (header + headerSize + POINTER_OVERHEAD_IN_QUADS + POINTER_SIZE_IN_QUADS)\r\n\r\n  writeFreeBlockSize(int32Array, headerSize, header)\r\n  int32Array[header + HEIGHT_OFFSET_IN_QUADS] = 1\r\n  int32Array[header + NEXT_OFFSET_IN_QUADS] = block\r\n  for (let height = 1; height < MAX_HEIGHT; height++) {\r\n    int32Array[header + NEXT_OFFSET_IN_QUADS + height] = HEADER_OFFSET_IN_QUADS\r\n  }\r\n\r\n  writeFreeBlockSize(int32Array, blockSize, block)\r\n  int32Array[block + HEIGHT_OFFSET_IN_QUADS] = 1\r\n  int32Array[block + NEXT_OFFSET_IN_QUADS] = header\r\n}\r\n\r\n/**\r\n * Check the integrity of the freelist in the given array.\r\n */\r\nfunction checkListIntegrity(int32Array: Int32Array): boolean {\r\n  let block: int32 = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  while (block < int32Array.length - POINTER_SIZE_IN_QUADS) {\r\n    const size: int32 = readSize(int32Array, block)\r\n    /* istanbul ignore if  */\r\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= int32Array.length - FIRST_BLOCK_OFFSET_IN_QUADS) {\r\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)} bytes).`)\r\n    }\r\n    else if (isFree(int32Array, block)) {\r\n      checkFreeBlockIntegrity(int32Array, block, size)\r\n    }\r\n    else {\r\n      checkUsedBlockIntegrity(int32Array, block, size)\r\n    }\r\n    block += size + POINTER_OVERHEAD_IN_QUADS\r\n  }\r\n  return true\r\n}\r\n\r\nfunction checkFreeBlockIntegrity(int32Array: Int32Array, block: int32, blockSize: int32): boolean {\r\n  /* istanbul ignore if  */\r\n  if (int32Array[block - 1] !== int32Array[block + blockSize]) {\r\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(int32Array[block - 1])} vs ${quadsToBytes(int32Array[block + blockSize])}).`)\r\n  }\r\n  const height: int32 = int32Array[block + HEIGHT_OFFSET_IN_QUADS]\r\n  /* istanbul ignore if  */\r\n  if (height < 1 || height > MAX_HEIGHT) {\r\n    logger.fatal(`Block ${quadsToBytes(block)} height must be between 1 and ${MAX_HEIGHT}, got ${height}.`)\r\n  }\r\n  for (let i = 0; i < height; i++) {\r\n    const pointer = int32Array[block + NEXT_OFFSET_IN_QUADS + i]\r\n    /* istanbul ignore if  */\r\n    if (pointer >= FIRST_BLOCK_OFFSET_IN_QUADS && !isFree(int32Array, pointer)) {\r\n      logger.fatal(`Block ${quadsToBytes(block)} has a pointer to a non-free block (${quadsToBytes(pointer)}).`)\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction checkUsedBlockIntegrity(int32Array: Int32Array, block: int32, blockSize: int32): boolean {\r\n  /* istanbul ignore if  */\r\n  if (int32Array[block - 1] !== int32Array[block + blockSize]) {\r\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(int32Array[block - 1])} vs ${quadsToBytes(int32Array[block + blockSize])}).`)\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Inspect the freelist in the given array.\r\n */\r\nfunction inspect(int32Array: Int32Array, byteOffset: number): InspectionResult {\r\n  const blocks: { type: string; size: int32; node?: ListNode; offset: number, block: number }[] = []\r\n  const header: ListNode = readListNode(int32Array, HEADER_OFFSET_IN_QUADS, byteOffset)\r\n  let block: int32 = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  let used = 0\r\n  while (block < int32Array.length - POINTER_SIZE_IN_QUADS) {\r\n    const size: int32 = readSize(int32Array, block)\r\n    /* istanbul ignore if  */\r\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= int32Array.length) {\r\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)})`)\r\n    }\r\n    if (isFree(int32Array, block)) {\r\n      // @flowIssue todo\r\n      blocks.push(readListNode(int32Array, block, byteOffset))\r\n    }\r\n    else {\r\n      used += quadsToBytes(size)\r\n      blocks.push({\r\n        type: 'used',\r\n        block: block,\r\n        offset: quadsToBytes(block) + byteOffset,\r\n        size: quadsToBytes(size)\r\n      })\r\n    }\r\n    block += size + POINTER_OVERHEAD_IN_QUADS\r\n  }\r\n  return { header, blocks, total: quadsToBytes(int32Array.length), used}\r\n}\r\n\r\n/**\r\n * Convert quads to bytes.\r\n */\r\nfunction quadsToBytes(num: int32): int32 {\r\n  return (num << BYTES_TO_QUADS_SHIFT) >>> 0\r\n}\r\n\r\n/**\r\n * Convert bytes to quads.\r\n */\r\nfunction bytesToQuads(num: int32): int32 {\r\n  return num >>> BYTES_TO_QUADS_SHIFT\r\n}\r\n\r\n/**\r\n * Align the given value to 8 bytes.\r\n */\r\nfunction align(value: int32, alignment: int32): int32 {\r\n  return ((value + alignment) & ~alignment) >>> 0\r\n}\r\n\r\n/**\r\n * align heap\r\n * \r\n * @param offset heap start offset\r\n * @param byteLength  buffer length\r\n * @returns \r\n */\r\nfunction alignHeapOffset(offset: int32, byteLength: int32) {\r\n  const length = byteLength - offset\r\n  // 保证 heapLength 为 ALIGNMENT_IN_BYTES 对齐\r\n  let heapOffset = offset + (align(length, ALIGNMENT_MASK) === length\r\n    ? 0\r\n    : (length - align(length, ALIGNMENT_MASK) + ALIGNMENT_IN_BYTES))\r\n\r\n  return heapOffset\r\n}\r\n\r\nfunction alignHeapLength(length: int32) {\r\n  // header 所占 int length 为奇数，则总长度也需要为奇数保证 body 为偶数\r\n  if (!((HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS) % 2)) {\r\n    length -= POINTER_SIZE_IN_BYTES\r\n  }\r\n  return length\r\n}\r\n\r\n/**\r\n * Read the list pointers for a given block.\r\n */\r\nfunction readListNode(int32Array: Int32Array, block: int32, byteOffset: int32): ListNode {\r\n  const height: int32 = int32Array[block + HEIGHT_OFFSET_IN_QUADS]\r\n  const pointers: int32[] = []\r\n  for (let i = 0; i < height; i++) {\r\n    pointers.push(int32Array[block + NEXT_OFFSET_IN_QUADS + i])\r\n  }\r\n\r\n  return {\r\n    type: 'free',\r\n    block,\r\n    offset: quadsToBytes(block) + byteOffset,\r\n    height,\r\n    pointers,\r\n    size: quadsToBytes(int32Array[block - 1])\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Read the size (in quads) of the block at the given address.\r\n */\r\nfunction readSize(int32Array: Int32Array, block: int32): int32 {\r\n  const n = int32Array[block - 1]\r\n  const mask = n >> 31\r\n  return (n + mask) ^ mask\r\n}\r\n\r\n/**\r\n * Write the size of the block at the given address.\r\n * Note: This ONLY works for free blocks, not blocks in use.\r\n */\r\nfunction writeFreeBlockSize(int32Array: Int32Array, size: int32, block: int32): void {\r\n  int32Array[block - 1] = size\r\n  int32Array[block + size] = size\r\n}\r\n\r\n/**\r\n * Populate the `UPDATES` array with the offset of the last item in each\r\n * list level, *before* a node of at least the given size.\r\n */\r\nfunction findPredecessors(int32Array: Int32Array, minimumSize: int32, UPDATES: Int32Array): void {\r\n  const listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\r\n\r\n  let node: int32 = HEADER_OFFSET_IN_QUADS\r\n\r\n  for (let height = listHeight; height > 0; height--) {\r\n    let next: int32 = node + NEXT_OFFSET_IN_QUADS + (height - 1)\r\n    while (int32Array[next] >= FIRST_BLOCK_OFFSET_IN_QUADS && int32Array[int32Array[next] - 1] < minimumSize) {\r\n      node = int32Array[next]\r\n      next = node + NEXT_OFFSET_IN_QUADS + (height - 1)\r\n    }\r\n    UPDATES[height - 1] = node\r\n  }\r\n}\r\n\r\n/**\r\n * Find a free block with at least the given size and return its offset in quads.\r\n */\r\nfunction findFreeBlock(int32Array: Int32Array, minimumSize: int32): int32 {\r\n  let block: int32 = HEADER_OFFSET_IN_QUADS\r\n\r\n  for (let height = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]; height > 0; height--) {\r\n    let next: int32 = int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)]\r\n    while (next !== HEADER_OFFSET_IN_QUADS && int32Array[next - POINTER_SIZE_IN_QUADS] < minimumSize) {\r\n      block = next\r\n      next = int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)]\r\n    }\r\n  }\r\n\r\n  block = int32Array[block + NEXT_OFFSET_IN_QUADS]\r\n  if (block === HEADER_OFFSET_IN_QUADS) {\r\n    return block\r\n  }\r\n  else {\r\n    return block\r\n  }\r\n}\r\n\r\n/**\r\n * Split the given block after a certain number of bytes and add the second half to the freelist.\r\n */\r\nfunction split(int32Array: Int32Array, block: int32, firstSize: int32, blockSize: int32, UPDATES: Int32Array): void {\r\n  const second: int32 = (block + firstSize + POINTER_OVERHEAD_IN_QUADS)\r\n  const secondSize: int32 = (blockSize - (second - block))\r\n\r\n  remove(int32Array, block, blockSize, UPDATES)\r\n\r\n  int32Array[block - 1] = -firstSize\r\n  int32Array[block + firstSize] = -firstSize\r\n\r\n  int32Array[second - 1] = -secondSize\r\n  int32Array[second + secondSize] = -secondSize\r\n\r\n  insert(int32Array, second, secondSize, UPDATES)\r\n}\r\n\r\n/**\r\n * Remove the given block from the freelist and mark it as allocated.\r\n */\r\nfunction remove(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): void {\r\n  findPredecessors(int32Array, blockSize, UPDATES)\r\n\r\n  let node: int32 = int32Array[UPDATES[0] + NEXT_OFFSET_IN_QUADS]\r\n\r\n  while (node !== block && node !== HEADER_OFFSET_IN_QUADS && int32Array[node - 1] <= blockSize) {\r\n    for (let height: number = int32Array[node + HEIGHT_OFFSET_IN_QUADS] - 1; height >= 0; height--) {\r\n      if (int32Array[node + NEXT_OFFSET_IN_QUADS + height] === block) {\r\n        UPDATES[height] = node\r\n      }\r\n    }\r\n    node = int32Array[node + NEXT_OFFSET_IN_QUADS]\r\n  }\r\n\r\n  assert(node === block, 'Could not find block to remove.')\r\n\r\n  let listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\r\n  for (let height = 0; height < listHeight; height++) {\r\n    const next: int32 = int32Array[UPDATES[height] + NEXT_OFFSET_IN_QUADS + height]\r\n    if (next !== block) {\r\n      break\r\n    }\r\n    int32Array[UPDATES[height] + NEXT_OFFSET_IN_QUADS + height] = int32Array[block + NEXT_OFFSET_IN_QUADS + height]\r\n  }\r\n\r\n  while (listHeight > 0 && int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (listHeight - 1)] === HEADER_OFFSET_IN_QUADS) {\r\n    listHeight--\r\n    int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS] = listHeight\r\n  }\r\n  // invert the size sign to signify an allocated block\r\n\r\n  int32Array[block - 1] = -blockSize\r\n  int32Array[block + blockSize] = -blockSize\r\n}\r\n\r\n/**\r\n * Determine whether the block at the given address is free or not.\r\n */\r\nfunction isFree(int32Array: Int32Array, block: int32): boolean {\r\n  /* istanbul ignore if  */\r\n  if (block < HEADER_SIZE_IN_QUADS) {\r\n    return false\r\n  }\r\n\r\n  const size: int32 = int32Array[block - POINTER_SIZE_IN_QUADS]\r\n\r\n  if (size < 0) {\r\n    return false\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Determine whether the block at the given address is free or not.\r\n */\r\nfunction isAlign(int32Array: Int32Array, block: int32): boolean {\r\n  /* istanbul ignore if  */\r\n  if (block < HEADER_SIZE_IN_QUADS) {\r\n    return false\r\n  }\r\n\r\n  const origin: int32 = int32Array[block - POINTER_SIZE_IN_QUADS]\r\n\r\n  if (origin < 0) {\r\n    return false\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Get the address of the block before the given one and return the address *if it is free*,\r\n * otherwise 0.\r\n */\r\nfunction getFreeBlockBefore(int32Array: Int32Array, block: int32): int32 {\r\n  if (block <= FIRST_BLOCK_OFFSET_IN_QUADS) {\r\n    return nullptr\r\n  }\r\n  const beforeSize: int32 = int32Array[block - POINTER_OVERHEAD_IN_QUADS]\r\n\r\n  if (beforeSize < POINTER_OVERHEAD_IN_QUADS) {\r\n    return nullptr\r\n  }\r\n  return block - (POINTER_OVERHEAD_IN_QUADS + beforeSize)\r\n}\r\n\r\n/**\r\n * Get the address of the block after the given one and return its address *if it is free*,\r\n * otherwise 0.\r\n */\r\nfunction getFreeBlockAfter(int32Array: Int32Array, block: int32): int32 {\r\n  const blockSize: int32 = readSize(int32Array, block)\r\n  if (block + blockSize + POINTER_OVERHEAD_IN_QUADS >= int32Array.length - 2) {\r\n    // Block is the last in the list.\r\n    return nullptr\r\n  }\r\n  const next: int32 = (block + blockSize + POINTER_OVERHEAD_IN_QUADS)\r\n  const nextSize: int32 = int32Array[next - POINTER_SIZE_IN_QUADS]\r\n\r\n  if (nextSize < POINTER_OVERHEAD_IN_QUADS) {\r\n    return nullptr\r\n  }\r\n  return next\r\n}\r\n\r\n\r\n/**\r\n * Insert the given block into the freelist and return the number of bytes that were freed.\r\n */\r\nfunction insert(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\r\n  findPredecessors(int32Array, blockSize, UPDATES)\r\n  const blockHeight: int32 = generateHeight(int32Array, block, blockSize, UPDATES)\r\n\r\n  for (let height = 1; height <= blockHeight; height++) {\r\n    const update: int32 = UPDATES[height - 1] + NEXT_OFFSET_IN_QUADS + (height - 1)\r\n    int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)] = int32Array[update]\r\n    int32Array[update] = block\r\n    UPDATES[height - 1] = HEADER_OFFSET_IN_QUADS\r\n  }\r\n\r\n  int32Array[block - 1] = blockSize\r\n  int32Array[block + blockSize] = blockSize\r\n  return blockSize\r\n}\r\n\r\n\r\n/**\r\n * Insert the given block into the freelist before the given free block,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertBefore(int32Array: Int32Array, trailing: int32, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\r\n  const trailingSize: int32 = readSize(int32Array, trailing)\r\n  remove(int32Array, trailing, trailingSize, UPDATES)\r\n  const size: int32 = (blockSize + trailingSize + POINTER_OVERHEAD_IN_QUADS)\r\n  int32Array[block - POINTER_SIZE_IN_QUADS] = -size\r\n  int32Array[trailing + trailingSize] = -size\r\n  insert(int32Array, block, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n/**\r\n * Insert the given block into the freelist in between the given free blocks,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertMiddle(int32Array: Int32Array, preceding: int32, block: int32, blockSize: int32, trailing: int32, UPDATES: Int32Array): int32 {\r\n  const precedingSize: int32 = readSize(int32Array, preceding)\r\n  const trailingSize: int32 = readSize(int32Array, trailing)\r\n  const size: int32 = ((trailing - preceding) + trailingSize)\r\n\r\n  remove(int32Array, preceding, precedingSize, UPDATES)\r\n  remove(int32Array, trailing, trailingSize, UPDATES)\r\n  int32Array[preceding - POINTER_SIZE_IN_QUADS] = -size\r\n  int32Array[trailing + trailingSize] = -size\r\n  insert(int32Array, preceding, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n/**\r\n * Insert the given block into the freelist after the given free block,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertAfter(int32Array: Int32Array, preceding: int32, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\r\n  const precedingSize: int32 = (block - preceding) - POINTER_OVERHEAD_IN_QUADS\r\n  const size: int32 = ((block - preceding) + blockSize)\r\n  remove(int32Array, preceding, precedingSize, UPDATES)\r\n  int32Array[preceding - POINTER_SIZE_IN_QUADS] = -size\r\n  int32Array[block + blockSize] = -size\r\n  insert(int32Array, preceding, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n\r\n\r\n/**\r\n * Generate a random height for a block, growing the list height by 1 if required.\r\n */\r\nfunction generateHeight(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\r\n  const listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\r\n  let height: int32 = randomHeight()\r\n\r\n  if (blockSize - 1 < height + 1) {\r\n    height = blockSize - 2\r\n  }\r\n\r\n  if (height > listHeight) {\r\n    const newHeight: int32 = listHeight + 1\r\n    int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS] = newHeight\r\n    int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (newHeight - 1)] = HEADER_OFFSET_IN_QUADS\r\n    UPDATES[newHeight] = HEADER_OFFSET_IN_QUADS\r\n    int32Array[block + HEIGHT_OFFSET_IN_QUADS] = newHeight\r\n    return newHeight\r\n  }\r\n  else {\r\n    int32Array[block + HEIGHT_OFFSET_IN_QUADS] = height\r\n    return height\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a random height for a new block.\r\n */\r\nfunction randomHeight(): number {\r\n  let height: number = 1\r\n  while (Math.random() < 0.5 && height < MAX_HEIGHT) {\r\n    height += 1\r\n  }\r\n  return height\r\n}\r\n","/**\r\n * 基于 https://github.com/codemix/malloc 修改\r\n * 一个基于跳表的 malloc 算法\r\n * 添加支持自动扩堆，支持多线程和 alignedAlloc\r\n */\r\n\r\nimport Allocator from './Allocator'\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport { lock, unlock } from '../thread/mutex'\r\nimport { heapMutex } from '../staticData'\r\nimport * as logger from 'common/util/logger'\r\n\r\nconst ALIGNMENT_IN_BYTES = 16n\r\nconst ALIGNMENT_MASK = ALIGNMENT_IN_BYTES - 1n\r\n\r\nconst POINTER_SIZE_IN_BYTES = 8n\r\nconst BYTES_TO_QUADS_SHIFT = 3n\r\nconst MIN_FREEABLE_SIZE_IN_BYTES = 32n\r\nconst MIN_FREEABLE_SIZE_IN_QUADS = bytesToQuads(MIN_FREEABLE_SIZE_IN_BYTES)\r\n\r\nconst MAX_HEIGHT = 32n\r\n\r\nconst HEADER_SIZE_IN_QUADS = 1n + (MAX_HEIGHT * 2n)\r\nconst HEADER_OFFSET_IN_QUADS = 1n\r\n\r\nconst HEIGHT_OFFSET_IN_QUADS = 0n\r\nconst NEXT_OFFSET_IN_QUADS = 2n\r\n\r\nconst POINTER_SIZE_IN_QUADS = 1n\r\nconst POINTER_OVERHEAD_IN_QUADS = 2n\r\n\r\nconst FIRST_BLOCK_OFFSET_IN_QUADS = HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS + POINTER_OVERHEAD_IN_QUADS\r\nconst FIRST_BLOCK_OFFSET_IN_BYTES = FIRST_BLOCK_OFFSET_IN_QUADS * POINTER_SIZE_IN_BYTES\r\nconst OVERHEAD_IN_BYTES = (FIRST_BLOCK_OFFSET_IN_QUADS + 1n) * POINTER_SIZE_IN_BYTES\r\n\r\n// 64 位 pointer 和 size 类型是 bigint\r\ntype pointer<T = void> = bigint\r\ntype size = bigint\r\n\r\ntype ListNode = {\r\n  type: string\r\n  offset: int64\r\n  size: int64\r\n  height: int64\r\n  pointers: int64[]\r\n  block: int64\r\n}\r\n\r\ntype InspectionResult = {\r\n  header: ListNode\r\n  blocks: Array<{\r\n    type: string\r\n    size: int64\r\n    node?: ListNode\r\n  }>\r\n  total: int64\r\n  used: int64\r\n}\r\n\r\nexport type AllocatorJSOptions = {\r\n  memory: WebAssembly.Memory\r\n  byteOffset?: int64\r\n  growAllowed?: boolean\r\n  growSize?: int64\r\n  maxHeapSize?: int64\r\n  operator: MemoryOperator\r\n}\r\n\r\nexport interface MemoryOperator {\r\n  read64: (p: int64) => int64\r\n  write64: (p: int64, value: int64) => void\r\n  fill: (p: int64, value: int32, size: bigint) => void\r\n  copy: (dst: int64, src: int64, size: bigint) => void\r\n}\r\n\r\nclass BlockArray {\r\n\r\n  private offset: int64\r\n\r\n  private operator: MemoryOperator\r\n\r\n  private heapLength: () => int64\r\n\r\n  private memory: WebAssembly.Memory\r\n\r\n  constructor(memory: WebAssembly.Memory, offset: int64, heapLength: () => int64, operator: MemoryOperator) {\r\n    this.offset = offset\r\n    this.heapLength = heapLength\r\n    this.operator = operator\r\n    this.memory = memory\r\n  }\r\n\r\n  get length() {\r\n    return this.heapLength()\r\n  }\r\n\r\n  public at(p: int64) {\r\n    return this.operator.read64(this.offset + quadsToBytes(p))\r\n  }\r\n\r\n  public set(p: int64, value: int64) {\r\n    this.operator.write64(this.offset + quadsToBytes(p), value)\r\n  }\r\n\r\n  public fill(value: int64) {\r\n    new BigInt64Array(this.memory.buffer, static_cast<double>(this.offset), static_cast<double>(this.length)).fill(value)\r\n  }\r\n\r\n  public copy(dst: int64, src: int64, size: size) {\r\n    this.operator.copy(this.offset + quadsToBytes(dst), this.offset + quadsToBytes(src), quadsToBytes(static_cast<int64>(size)))\r\n  }\r\n}\r\n\r\nexport default class AllocatorJS64 implements Allocator {\r\n\r\n  private byteOffset: int64\r\n\r\n  private blockArray: BlockArray\r\n\r\n  private updates: BlockArray\r\n\r\n  private options: AllocatorJSOptions\r\n\r\n  private shared: boolean\r\n\r\n  private handles: ((buffer: ArrayBufferLike) => void)[]\r\n\r\n  constructor(options: AllocatorJSOptions, init: boolean = true) {\r\n    this.options = object.extend({\r\n      growSize: 1n * 1024n * 1024n,\r\n      maxHeapSize: 2000n * 1024n * 1024n\r\n    }, options)\r\n    this.handles = []\r\n    this.shared = false\r\n    if (this.options.memory) {\r\n      this.byteOffset = options.byteOffset ?? 0n\r\n\r\n      this.blockArray = new BlockArray(\r\n        this.options.memory,\r\n        this.heapOffset,\r\n        () => bytesToQuads(this.heapLength),\r\n        this.options.operator\r\n      )\r\n      this.updates = new BlockArray(\r\n        this.options.memory,\r\n        this.byteOffset,\r\n        () => MAX_HEIGHT,\r\n        this.options.operator\r\n      )\r\n      if (typeof SharedArrayBuffer === 'function' && this.options.memory.buffer instanceof SharedArrayBuffer) {\r\n        this.shared = true\r\n      }\r\n    }\r\n    else {\r\n      logger.fatal('Expected buffer to be an instance of Buffer or ArrayBuffer')\r\n    }\r\n\r\n    if (init) {\r\n      this.updates.fill(HEADER_OFFSET_IN_QUADS)\r\n      prepare(this.blockArray)\r\n      checkListIntegrity(this.blockArray)\r\n    }\r\n  }\r\n\r\n  get heapOffset() {\r\n    return alignHeapOffset(this.byteOffset + quadsToBytes(MAX_HEIGHT), static_cast<int64>(this.options.memory.buffer.byteLength as uint32))\r\n  }\r\n\r\n  get heapLength() {\r\n    return alignHeapLength((static_cast<int64>(this.options.memory.buffer.byteLength as uint32)) - this.heapOffset)\r\n  }\r\n\r\n  public addUpdateHandle(handle: (buffer: ArrayBufferLike) => void): void {\r\n    if (!array.has(this.handles, handle)) {\r\n      this.handles.push(handle)\r\n    }\r\n  }\r\n\r\n  public removeUpdateHandle(handle: (buffer: ArrayBufferLike) => void): void {\r\n    array.remove(this.handles, handle)\r\n  }\r\n\r\n  private malloc_(size: size): pointer<void> {\r\n\r\n    size = align(size, ALIGNMENT_MASK)\r\n    if (size < MIN_FREEABLE_SIZE_IN_BYTES) {\r\n      size = MIN_FREEABLE_SIZE_IN_BYTES\r\n    }\r\n\r\n    assert(!(!this.options.growSize && size > this.heapLength - OVERHEAD_IN_BYTES), `malloc size must be between ${MIN_FREEABLE_SIZE_IN_BYTES} bytes and ${this.heapLength - OVERHEAD_IN_BYTES} bytes`)\r\n\r\n    const minimumSize: int64 = bytesToQuads(size)\r\n    const block: int64 = this.findFreeBlock(this.blockArray, minimumSize)\r\n    if (block <= HEADER_OFFSET_IN_QUADS) {\r\n      return reinterpret_cast<uint64>(nullptr)\r\n    }\r\n    const blockSize: int64 = readSize(this.blockArray, block)\r\n\r\n    if (blockSize - (minimumSize + POINTER_OVERHEAD_IN_QUADS) >= MIN_FREEABLE_SIZE_IN_QUADS) {\r\n      split(this.blockArray, block, minimumSize, blockSize, this.updates)\r\n    }\r\n    else {\r\n      assert(!(blockSize % 2n))\r\n      remove(this.blockArray, block, blockSize, this.updates)\r\n    }\r\n\r\n    assert(!((quadsToBytes(block) & ALIGNMENT_MASK) !== reinterpret_cast<uint64>(nullptr)), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    return quadsToBytes(block) + this.heapOffset\r\n  }\r\n  // @ts-ignore\r\n  public malloc(size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n\r\n    const address = this.malloc_(size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private calloc_(num: size, size: size): pointer<void> {\r\n\r\n    let numberOfBytes = num * size\r\n\r\n    if (numberOfBytes < MIN_FREEABLE_SIZE_IN_BYTES) {\r\n      numberOfBytes = MIN_FREEABLE_SIZE_IN_BYTES\r\n    }\r\n    else {\r\n      numberOfBytes = align(numberOfBytes, ALIGNMENT_MASK)\r\n    }\r\n\r\n    const address = this.malloc_(numberOfBytes)\r\n    if (address === reinterpret_cast<uint64>(nullptr)) {\r\n      // Not enough space\r\n      return reinterpret_cast<uint64>(nullptr)\r\n    }\r\n\r\n    this.options.operator.fill(address, 0, numberOfBytes)\r\n\r\n    return address\r\n  }\r\n  // @ts-ignore\r\n  public calloc(num: size, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n\r\n    const address = this.calloc_(num, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private realloc_(address: pointer<void>, size: size): pointer<void> {\r\n\r\n    if (address === reinterpret_cast<uint64>(nullptr)) {\r\n      return this.malloc_(size)\r\n    }\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== reinterpret_cast<uint64>(nullptr)), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    const originAddress = address\r\n\r\n    if (size === 0n) {\r\n      this.free_(originAddress)\r\n      return reinterpret_cast<uint64>(nullptr)\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    let originBlock = bytesToQuads(address)\r\n    let block = originBlock\r\n    let padding = 0n\r\n\r\n    if (isAlign(this.blockArray, originBlock)) {\r\n      block = this.blockArray.at(originBlock - 1n)\r\n      padding = originBlock - block\r\n    }\r\n\r\n    const blockSize: int64 = readSize(this.blockArray, block) - padding\r\n    const minimumSize: int64 = bytesToQuads(align(size, ALIGNMENT_MASK))\r\n\r\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4n), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\r\n\r\n    if (blockSize >= minimumSize) {\r\n      return originAddress\r\n    }\r\n    else {\r\n      const newAddress = this.malloc_(size)\r\n      if (newAddress === reinterpret_cast<uint64>(nullptr)) {\r\n        this.free_(originAddress)\r\n        return reinterpret_cast<uint64>(nullptr)\r\n      }\r\n\r\n      this.blockArray.copy(bytesToQuads(newAddress - this.heapOffset), originBlock, reinterpret_cast<size>(blockSize))\r\n\r\n      this.free_(originAddress)\r\n      return newAddress\r\n    }\r\n  }\r\n  // @ts-ignore\r\n  public realloc(address: pointer<void>, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n\r\n    address = this.realloc_(address, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private alignedAlloc_(alignment: size, size: size): pointer<void> {\r\n\r\n    assert(alignment >= 4n, `alignment must not smaller then 4, but got ${alignment}`)\r\n\r\n    assert(!(alignment & (alignment - 1n)), `alignment must be power of 2, but got ${alignment}`)\r\n\r\n    if (alignment <= ALIGNMENT_IN_BYTES) {\r\n      // malloc 以 ALIGNMENT_IN_BYTES 字节对齐\r\n      return this.malloc_(size)\r\n    }\r\n\r\n    const address = this.malloc_(size + alignment - 1n + POINTER_SIZE_IN_BYTES)\r\n\r\n    if (address === reinterpret_cast<uint64>(nullptr)) {\r\n      return reinterpret_cast<uint64>(nullptr)\r\n    }\r\n\r\n    const alignmentAddress = (address + alignment - 1n + POINTER_SIZE_IN_BYTES) & ~(alignment - 1n)\r\n\r\n    this.blockArray.set(bytesToQuads(alignmentAddress - this.heapOffset) - POINTER_SIZE_IN_QUADS, bytesToQuads(address - this.heapOffset))\r\n\r\n    assert(!(alignmentAddress % alignment))\r\n\r\n    return alignmentAddress\r\n  }\r\n  // @ts-ignore\r\n  public alignedAlloc(alignment: size, size: size): pointer<void> {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n\r\n    const address = this.alignedAlloc_(alignment, size)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n\r\n    return address\r\n  }\r\n\r\n  private free_(address: pointer<void>): void {\r\n\r\n    if (address === reinterpret_cast<uint64>(nullptr)) {\r\n      return\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== reinterpret_cast<uint64>(nullptr)), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    let block = bytesToQuads(address)\r\n\r\n    if (isAlign(this.blockArray, block)) {\r\n      block = this.blockArray.at(block - POINTER_SIZE_IN_QUADS)\r\n    }\r\n\r\n    if (isFree(this.blockArray, block)) {\r\n      return\r\n    }\r\n\r\n    const blockSize: int64 = readSize(this.blockArray, block)\r\n\r\n    // 对地址是否合法进行断言\r\n    assert(blockSize === readSize(this.blockArray, block + blockSize + 1n))\r\n\r\n    /* istanbul ignore if  */\r\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4n), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\r\n\r\n    const preceding: int64 = getFreeBlockBefore(this.blockArray, block)\r\n    const trailing: int64 = getFreeBlockAfter(this.blockArray, block)\r\n\r\n    if (preceding !== reinterpret_cast<int64>(nullptr)) {\r\n      if (trailing !== reinterpret_cast<int64>(nullptr)) {\r\n        insertMiddle(this.blockArray, preceding, block, blockSize, trailing, this.updates)\r\n      }\r\n      else {\r\n        insertAfter(this.blockArray, preceding, block, blockSize, this.updates)\r\n      }\r\n    }\r\n    else if (trailing !== reinterpret_cast<int64>(nullptr)) {\r\n      insertBefore(this.blockArray, trailing, block, blockSize, this.updates)\r\n    }\r\n    else {\r\n      insert(this.blockArray, block, blockSize, this.updates)\r\n    }\r\n  }\r\n  // @ts-ignore\r\n  public free(address: pointer<void>): void {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n\r\n    this.free_(address)\r\n\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  public sizeof(address: pointer<void>): size {\r\n\r\n    if (address === reinterpret_cast<uint64>(nullptr)) {\r\n      return 0n\r\n    }\r\n\r\n    address -= this.heapOffset\r\n\r\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength || typeof address !== 'bigint'), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\r\n\r\n    assert(!((address & ALIGNMENT_MASK) !== reinterpret_cast<uint64>(nullptr)), `Address must be a multiple of the pointer size (${POINTER_SIZE_IN_BYTES}).`)\r\n\r\n    let block = bytesToQuads(address)\r\n\r\n    if (isAlign(this.blockArray, block)) {\r\n      block = this.blockArray.at(block - POINTER_SIZE_IN_QUADS)\r\n    }\r\n\r\n    return reinterpret_cast<size>(quadsToBytes(readSize(this.blockArray, block)))\r\n  }\r\n\r\n  /**\r\n   * 获取堆分配信息\r\n   * \r\n   * @returns \r\n   */\r\n  public inspect(): InspectionResult {\r\n    return inspect(this.blockArray, this.heapOffset)\r\n  }\r\n\r\n  private findFreeBlock(blockArray: BlockArray, minimumSize: int64): int64 {\r\n    let block: int64 = findFreeBlock(blockArray, minimumSize)\r\n    if (block === HEADER_OFFSET_IN_QUADS) {\r\n      if (this.options.growAllowed && this.heapLength < this.options.maxHeapSize) {\r\n\r\n        const block = this.blockArray.length + 1n\r\n\r\n        let updates: BlockArray\r\n\r\n        this.options.memory.grow(reinterpret_cast<int32>(align(\r\n          this.options.growSize > quadsToBytes(minimumSize) ? this.options.growSize : quadsToBytes(minimumSize),\r\n          ALIGNMENT_MASK\r\n        ) >> 16n))\r\n        blockArray = new BlockArray(this.options.memory, this.heapOffset, () => bytesToQuads(this.heapLength), this.options.operator)\r\n        updates = new BlockArray(this.options.memory, this.byteOffset, () => MAX_HEIGHT, this.options.operator)\r\n\r\n        this.blockArray = blockArray\r\n        this.updates = updates\r\n\r\n        const blockSize = blockArray.length - (block - 1n) - POINTER_OVERHEAD_IN_QUADS\r\n\r\n        writeFreeBlockSize(blockArray, blockSize, block)\r\n\r\n        const preceding: int64 = getFreeBlockBefore(blockArray, block)\r\n        if (preceding !== reinterpret_cast<int64>(nullptr)) {\r\n          insertAfter(blockArray, preceding, block, blockSize, this.updates)\r\n        }\r\n        else {\r\n          insert(blockArray, block, blockSize, this.updates)\r\n        }\r\n\r\n        if (this.handles.length) {\r\n          array.each(this.handles, (func) => {\r\n            func(this.options.memory.buffer)\r\n          })\r\n        }\r\n\r\n        return this.findFreeBlock(this.blockArray, minimumSize)\r\n      }\r\n      return block\r\n    }\r\n    else {\r\n      return block\r\n    }\r\n  }\r\n\r\n  public getBuffer(): ArrayBufferLike {\r\n    return this.options.memory.buffer\r\n  }\r\n\r\n  // @ts-ignore\r\n  public isAlloc(pointer: pointer<void>) {\r\n    if (this.shared) {\r\n      lock(heapMutex, !defined(DEBUG))\r\n    }\r\n    const block = bytesToQuads(pointer - this.heapOffset)\r\n    let next: int64 = this.blockArray.at(HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS)\r\n    // sometime get undefined from the last free node in v8\r\n    // but it's is all right |=_=\r\n    while (next && next !== HEADER_OFFSET_IN_QUADS) {\r\n      if (block >= next && block < next + this.blockArray.at(next - POINTER_SIZE_IN_QUADS)) {\r\n        if (this.shared) {\r\n          unlock(heapMutex)\r\n        }\r\n        return false\r\n      }\r\n      next = this.blockArray.at(next + NEXT_OFFSET_IN_QUADS)\r\n    }\r\n    if (this.shared) {\r\n      unlock(heapMutex)\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Prepare the given blockArray and ensure it contains a valid header.\r\n */\r\nfunction prepare(blockArray: BlockArray) {\r\n  if (!verifyHeader(blockArray)) {\r\n    writeInitialHeader(blockArray)\r\n  }\r\n}\r\n\r\n/**\r\n * Verify that the blockArray contains a valid header.\r\n */\r\nfunction verifyHeader(blockArray: BlockArray): boolean {\r\n  return blockArray.at(HEADER_OFFSET_IN_QUADS - 1n) === HEADER_SIZE_IN_QUADS\r\n    && blockArray.at(HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS) === HEADER_SIZE_IN_QUADS\r\n}\r\n\r\n/**\r\n * Write the initial header for an empty blockArray.\r\n */\r\nfunction writeInitialHeader(blockArray: BlockArray) {\r\n  const header = HEADER_OFFSET_IN_QUADS\r\n  const headerSize = HEADER_SIZE_IN_QUADS\r\n  const block = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  const blockSize = blockArray.length - (header + headerSize + POINTER_OVERHEAD_IN_QUADS + POINTER_SIZE_IN_QUADS)\r\n\r\n  writeFreeBlockSize(blockArray, headerSize, header)\r\n  blockArray.set(header + HEIGHT_OFFSET_IN_QUADS, 1n)\r\n  blockArray.set(header + NEXT_OFFSET_IN_QUADS, block)\r\n  for (let height = 1n; height < MAX_HEIGHT; height++) {\r\n    blockArray.set(header + NEXT_OFFSET_IN_QUADS + height, HEADER_OFFSET_IN_QUADS)\r\n  }\r\n\r\n  writeFreeBlockSize(blockArray, blockSize, block)\r\n  blockArray.set(block + HEIGHT_OFFSET_IN_QUADS, 1n)\r\n  blockArray.set(block + NEXT_OFFSET_IN_QUADS, header)\r\n}\r\n\r\n/**\r\n * Check the integrity of the freelist in the given array.\r\n */\r\nfunction checkListIntegrity(blockArray: BlockArray): boolean {\r\n  let block: int64 = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  while (block < blockArray.length - POINTER_SIZE_IN_QUADS) {\r\n    const size: int64 = readSize(blockArray, block)\r\n    /* istanbul ignore if  */\r\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= blockArray.length - FIRST_BLOCK_OFFSET_IN_QUADS) {\r\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)} bytes).`)\r\n    }\r\n    else if (isFree(blockArray, block)) {\r\n      checkFreeBlockIntegrity(blockArray, block, size)\r\n    }\r\n    else {\r\n      checkUsedBlockIntegrity(blockArray, block, size)\r\n    }\r\n    block += size + POINTER_OVERHEAD_IN_QUADS\r\n  }\r\n  return true\r\n}\r\n\r\nfunction checkFreeBlockIntegrity(blockArray: BlockArray, block: int64, blockSize: int64): boolean {\r\n  /* istanbul ignore if  */\r\n  if (blockArray.at(block - 1n) !== blockArray.at(block + blockSize)) {\r\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(blockArray.at(block - 1n))} vs ${quadsToBytes(blockArray.at(block + blockSize))}).`)\r\n  }\r\n  const height: int64 = blockArray.at(block + HEIGHT_OFFSET_IN_QUADS)\r\n  /* istanbul ignore if  */\r\n  if (height < 1 || height > MAX_HEIGHT) {\r\n    logger.fatal(`Block ${quadsToBytes(block)} height must be between 1 and ${MAX_HEIGHT}, got ${height}.`)\r\n  }\r\n  for (let i = 0n; i < height; i++) {\r\n    const pointer = blockArray.at(block + NEXT_OFFSET_IN_QUADS + i)\r\n    /* istanbul ignore if  */\r\n    if (pointer >= FIRST_BLOCK_OFFSET_IN_QUADS && !isFree(blockArray, pointer)) {\r\n      logger.fatal(`Block ${quadsToBytes(block)} has a pointer to a non-free block (${quadsToBytes(pointer)}).`)\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction checkUsedBlockIntegrity(blockArray: BlockArray, block: int64, blockSize: int64): boolean {\r\n  /* istanbul ignore if  */\r\n  if (blockArray.at(block - 1n) !== blockArray.at(block + blockSize)) {\r\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(blockArray.at(block - 1n))} vs ${quadsToBytes(blockArray.at(block + blockSize))}).`)\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Inspect the freelist in the given array.\r\n */\r\nfunction inspect(blockArray: BlockArray, byteOffset: int64): InspectionResult {\r\n  const blocks: { type: string; size: int64; node?: ListNode; offset: int64, block: int64 }[] = []\r\n  const header: ListNode = readListNode(blockArray, HEADER_OFFSET_IN_QUADS, byteOffset)\r\n  let block: int64 = FIRST_BLOCK_OFFSET_IN_QUADS\r\n  let used = 0n\r\n  while (block < blockArray.length - POINTER_SIZE_IN_QUADS) {\r\n    const size: int64 = readSize(blockArray, block)\r\n    /* istanbul ignore if  */\r\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= blockArray.length) {\r\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)})`)\r\n    }\r\n    if (isFree(blockArray, block)) {\r\n      // @flowIssue todo\r\n      blocks.push(readListNode(blockArray, block, byteOffset))\r\n    }\r\n    else {\r\n      used += quadsToBytes(size)\r\n      blocks.push({\r\n        type: 'used',\r\n        block: block,\r\n        offset: quadsToBytes(block) + byteOffset,\r\n        size: quadsToBytes(size)\r\n      })\r\n    }\r\n    block += size + POINTER_OVERHEAD_IN_QUADS\r\n  }\r\n  return { header, blocks, total: quadsToBytes(blockArray.length), used}\r\n}\r\n\r\n/**\r\n * Convert quads to bytes.\r\n */\r\nfunction quadsToBytes(num: int64): int64 {\r\n  return num << BYTES_TO_QUADS_SHIFT\r\n}\r\n\r\n/**\r\n * Convert bytes to quads.\r\n */\r\nfunction bytesToQuads(num: int64): int64 {\r\n  return num >> BYTES_TO_QUADS_SHIFT\r\n}\r\n\r\n/**\r\n * Align the given value to 8 bytes.\r\n */\r\nfunction align(value: int64, alignment: int64): int64 {\r\n  return (value + alignment) & ~alignment\r\n}\r\n\r\n/**\r\n * align heap\r\n * \r\n * @param offset heap start offset\r\n * @param byteLength  buffer length\r\n * @returns \r\n */\r\nfunction alignHeapOffset(offset: int64, byteLength: int64) {\r\n  const length = byteLength - offset\r\n  // 保证 heapLength 为 ALIGNMENT_IN_BYTES 对齐\r\n  let heapOffset = offset + (align(length, ALIGNMENT_MASK) === length\r\n    ? 0n\r\n    : (length - align(length, ALIGNMENT_MASK) + ALIGNMENT_IN_BYTES))\r\n\r\n  return heapOffset\r\n}\r\n\r\nfunction alignHeapLength(length: int64) {\r\n  // header 所占 int length 为奇数，则总长度也需要为奇数保证 body 为偶数\r\n  if (!((HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS) % 2n)) {\r\n    length -= POINTER_SIZE_IN_BYTES\r\n  }\r\n  return length\r\n}\r\n\r\n/**\r\n * Read the list pointers for a given block.\r\n */\r\nfunction readListNode(blockArray: BlockArray, block: int64, byteOffset: int64): ListNode {\r\n  const height: int64 = blockArray.at(block + HEIGHT_OFFSET_IN_QUADS)\r\n  const pointers: int64[] = []\r\n  for (let i = 0n; i < height; i++) {\r\n    pointers.push(blockArray.at(block + NEXT_OFFSET_IN_QUADS + i))\r\n  }\r\n\r\n  return {\r\n    type: 'free',\r\n    block,\r\n    offset: quadsToBytes(block) + byteOffset,\r\n    height,\r\n    pointers,\r\n    size: quadsToBytes(blockArray.at(block - 1n))\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Read the size (in quads) of the block at the given address.\r\n */\r\nfunction readSize(blockArray: BlockArray, block: int64): int64 {\r\n  const n = blockArray.at(block - 1n)\r\n  const mask = n >> 31n\r\n  return (n + mask) ^ mask\r\n}\r\n\r\n/**\r\n * Write the size of the block at the given address.\r\n * Note: This ONLY works for free blocks, not blocks in use.\r\n */\r\nfunction writeFreeBlockSize(blockArray: BlockArray, size: int64, block: int64): void {\r\n  blockArray.set(block - 1n, size)\r\n  blockArray.set(block + size, size)\r\n}\r\n\r\n/**\r\n * Populate the `UPDATES` array with the offset of the last item in each\r\n * list level, *before* a node of at least the given size.\r\n */\r\nfunction findPredecessors(blockArray: BlockArray, minimumSize: int64, UPDATES: BlockArray): void {\r\n  const listHeight: int64 = blockArray.at(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS)\r\n\r\n  let node: int64 = HEADER_OFFSET_IN_QUADS\r\n\r\n  for (let height = listHeight; height > 0; height--) {\r\n    let next: int64 = node + NEXT_OFFSET_IN_QUADS + (height - 1n)\r\n    while (blockArray.at(next) >= FIRST_BLOCK_OFFSET_IN_QUADS && blockArray.at(blockArray.at(next) - 1n) < minimumSize) {\r\n      node = blockArray.at(next)\r\n      next = node + NEXT_OFFSET_IN_QUADS + (height - 1n)\r\n    }\r\n    UPDATES.set(height - 1n, node)\r\n  }\r\n}\r\n\r\n/**\r\n * Find a free block with at least the given size and return its offset in quads.\r\n */\r\nfunction findFreeBlock(blockArray: BlockArray, minimumSize: int64): int64 {\r\n  let block: int64 = HEADER_OFFSET_IN_QUADS\r\n\r\n  for (let height = blockArray.at(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS); height > 0; height--) {\r\n    let next: int64 = blockArray.at(block + NEXT_OFFSET_IN_QUADS + (height - 1n))\r\n    while (next !== HEADER_OFFSET_IN_QUADS && blockArray.at(next - POINTER_SIZE_IN_QUADS) < minimumSize) {\r\n      block = next\r\n      next = blockArray.at(block + NEXT_OFFSET_IN_QUADS + (height - 1n))\r\n    }\r\n  }\r\n\r\n  block = blockArray.at(block + NEXT_OFFSET_IN_QUADS)\r\n  if (block === HEADER_OFFSET_IN_QUADS) {\r\n    return block\r\n  }\r\n  else {\r\n    return block\r\n  }\r\n}\r\n\r\n/**\r\n * Split the given block after a certain number of bytes and add the second half to the freelist.\r\n */\r\nfunction split(blockArray: BlockArray, block: int64, firstSize: int64, blockSize: int64, UPDATES: BlockArray): void {\r\n  const second: int64 = (block + firstSize + POINTER_OVERHEAD_IN_QUADS)\r\n  const secondSize: int64 = (blockSize - (second - block))\r\n\r\n  remove(blockArray, block, blockSize, UPDATES)\r\n\r\n  blockArray.set(block - 1n, -firstSize)\r\n  blockArray.set(block + firstSize, -firstSize)\r\n\r\n  blockArray.set(second - 1n, -secondSize)\r\n  blockArray.set(second + secondSize, -secondSize)\r\n\r\n  insert(blockArray, second, secondSize, UPDATES)\r\n}\r\n\r\n/**\r\n * Remove the given block from the freelist and mark it as allocated.\r\n */\r\nfunction remove(blockArray: BlockArray, block: int64, blockSize: int64, UPDATES: BlockArray): void {\r\n  findPredecessors(blockArray, blockSize, UPDATES)\r\n\r\n  let node: int64 = blockArray.at(UPDATES.at(0n) + NEXT_OFFSET_IN_QUADS)\r\n\r\n  while (node !== block && node !== HEADER_OFFSET_IN_QUADS && blockArray.at(node - 1n) <= blockSize) {\r\n    for (let height: int64 = blockArray.at(node + HEIGHT_OFFSET_IN_QUADS) - 1n; height >= 0; height--) {\r\n      if (blockArray.at(node + NEXT_OFFSET_IN_QUADS + height) === block) {\r\n        UPDATES.set(height, node)\r\n      }\r\n    }\r\n    node = blockArray.at(node + NEXT_OFFSET_IN_QUADS)\r\n  }\r\n\r\n  assert(node === block, 'Could not find block to remove.')\r\n\r\n  let listHeight: int64 = blockArray.at(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS)\r\n  for (let height = 0n; height < listHeight; height++) {\r\n    const next: int64 = blockArray.at(UPDATES.at(height) + NEXT_OFFSET_IN_QUADS + height)\r\n    if (next !== block) {\r\n      break\r\n    }\r\n    blockArray.set(UPDATES.at(height) + NEXT_OFFSET_IN_QUADS + height, blockArray.at(block + NEXT_OFFSET_IN_QUADS + height))\r\n  }\r\n\r\n  while (listHeight > 0 && blockArray.at(HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (listHeight - 1n)) === HEADER_OFFSET_IN_QUADS) {\r\n    listHeight--\r\n    blockArray.set(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS, listHeight)\r\n  }\r\n  // invert the size sign to signify an allocated block\r\n\r\n  blockArray.set(block - 1n, -blockSize)\r\n  blockArray.set(block + blockSize, -blockSize)\r\n}\r\n\r\n/**\r\n * Determine whether the block at the given address is free or not.\r\n */\r\nfunction isFree(blockArray: BlockArray, block: int64): boolean {\r\n  /* istanbul ignore if  */\r\n  if (block < HEADER_SIZE_IN_QUADS) {\r\n    return false\r\n  }\r\n\r\n  const size: int64 = blockArray.at(block - POINTER_SIZE_IN_QUADS)\r\n\r\n  if (size < 0) {\r\n    return false\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Determine whether the block at the given address is free or not.\r\n */\r\nfunction isAlign(blockArray: BlockArray, block: int64): boolean {\r\n  /* istanbul ignore if  */\r\n  if (block < HEADER_SIZE_IN_QUADS) {\r\n    return false\r\n  }\r\n\r\n  const origin: int64 = blockArray.at(block - POINTER_SIZE_IN_QUADS)\r\n\r\n  if (origin < 0) {\r\n    return false\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Get the address of the block before the given one and return the address *if it is free*,\r\n * otherwise 0.\r\n */\r\nfunction getFreeBlockBefore(blockArray: BlockArray, block: int64): int64 {\r\n  if (block <= FIRST_BLOCK_OFFSET_IN_QUADS) {\r\n    return reinterpret_cast<int64>(nullptr)\r\n  }\r\n  const beforeSize: int64 = blockArray.at(block - POINTER_OVERHEAD_IN_QUADS)\r\n\r\n  if (beforeSize < POINTER_OVERHEAD_IN_QUADS) {\r\n    return reinterpret_cast<int64>(nullptr)\r\n  }\r\n  return block - (POINTER_OVERHEAD_IN_QUADS + beforeSize)\r\n}\r\n\r\n/**\r\n * Get the address of the block after the given one and return its address *if it is free*,\r\n * otherwise 0.\r\n */\r\nfunction getFreeBlockAfter(blockArray: BlockArray, block: int64): int64 {\r\n  const blockSize: int64 = readSize(blockArray, block)\r\n  if (block + blockSize + POINTER_OVERHEAD_IN_QUADS >= blockArray.length - 2n) {\r\n    // Block is the last in the list.\r\n    return reinterpret_cast<int64>(nullptr)\r\n  }\r\n  const next: int64 = (block + blockSize + POINTER_OVERHEAD_IN_QUADS)\r\n  const nextSize: int64 = blockArray.at(next - POINTER_SIZE_IN_QUADS)\r\n\r\n  if (nextSize < POINTER_OVERHEAD_IN_QUADS) {\r\n    return reinterpret_cast<int64>(nullptr)\r\n  }\r\n  return next\r\n}\r\n\r\n\r\n/**\r\n * Insert the given block into the freelist and return the number of bytes that were freed.\r\n */\r\nfunction insert(blockArray: BlockArray, block: int64, blockSize: int64, UPDATES: BlockArray): int64 {\r\n  findPredecessors(blockArray, blockSize, UPDATES)\r\n  const blockHeight: int64 = generateHeight(blockArray, block, blockSize, UPDATES)\r\n\r\n  for (let height = 1n; height <= blockHeight; height++) {\r\n    const update: int64 = UPDATES.at(height - 1n) + NEXT_OFFSET_IN_QUADS + (height - 1n)\r\n    blockArray.set(block + NEXT_OFFSET_IN_QUADS + (height - 1n), blockArray.at(update))\r\n    blockArray.set(update, block)\r\n    UPDATES.set(height - 1n, HEADER_OFFSET_IN_QUADS)\r\n  }\r\n\r\n  blockArray.set(block - 1n, blockSize)\r\n  blockArray.set(block + blockSize, blockSize)\r\n  return blockSize\r\n}\r\n\r\n\r\n/**\r\n * Insert the given block into the freelist before the given free block,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertBefore(blockArray: BlockArray, trailing: int64, block: int64, blockSize: int64, UPDATES: BlockArray): int64 {\r\n  const trailingSize: int64 = readSize(blockArray, trailing)\r\n  remove(blockArray, trailing, trailingSize, UPDATES)\r\n  const size: int64 = (blockSize + trailingSize + POINTER_OVERHEAD_IN_QUADS)\r\n  blockArray.set(block - POINTER_SIZE_IN_QUADS, -size)\r\n  blockArray.set(trailing + trailingSize, -size)\r\n  insert(blockArray, block, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n/**\r\n * Insert the given block into the freelist in between the given free blocks,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertMiddle(blockArray: BlockArray, preceding: int64, block: int64, blockSize: int64, trailing: int64, UPDATES: BlockArray): int64 {\r\n  const precedingSize: int64 = readSize(blockArray, preceding)\r\n  const trailingSize: int64 = readSize(blockArray, trailing)\r\n  const size: int64 = ((trailing - preceding) + trailingSize)\r\n\r\n  remove(blockArray, preceding, precedingSize, UPDATES)\r\n  remove(blockArray, trailing, trailingSize, UPDATES)\r\n  blockArray.set(preceding - POINTER_SIZE_IN_QUADS, -size)\r\n  blockArray.set(trailing + trailingSize, -size)\r\n  insert(blockArray, preceding, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n/**\r\n * Insert the given block into the freelist after the given free block,\r\n * joining them together, returning the number of bytes which were freed.\r\n */\r\nfunction insertAfter(blockArray: BlockArray, preceding: int64, block: int64, blockSize: int64, UPDATES: BlockArray): int64 {\r\n  const precedingSize: int64 = (block - preceding) - POINTER_OVERHEAD_IN_QUADS\r\n  const size: int64 = ((block - preceding) + blockSize)\r\n  remove(blockArray, preceding, precedingSize, UPDATES)\r\n  blockArray.set(preceding - POINTER_SIZE_IN_QUADS, -size)\r\n  blockArray.set(block + blockSize, -size)\r\n  insert(blockArray, preceding, size, UPDATES)\r\n  return blockSize\r\n}\r\n\r\n\r\n\r\n/**\r\n * Generate a random height for a block, growing the list height by 1 if required.\r\n */\r\nfunction generateHeight(blockArray: BlockArray, block: int64, blockSize: int64, UPDATES: BlockArray): int64 {\r\n  const listHeight: int64 = blockArray.at(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS)\r\n  let height: int64 = randomHeight()\r\n\r\n  if (blockSize - 1n < height + 1n) {\r\n    height = blockSize - 2n\r\n  }\r\n\r\n  if (height > listHeight) {\r\n    const newHeight: int64 = listHeight + 1n\r\n    blockArray.set(HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS, newHeight)\r\n    blockArray.set(HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (newHeight - 1n), HEADER_OFFSET_IN_QUADS)\r\n    UPDATES.set(newHeight, HEADER_OFFSET_IN_QUADS)\r\n    blockArray.set(block + HEIGHT_OFFSET_IN_QUADS, newHeight)\r\n    return newHeight\r\n  }\r\n  else {\r\n    blockArray.set(block + HEIGHT_OFFSET_IN_QUADS, height)\r\n    return height\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a random height for a new block.\r\n */\r\nfunction randomHeight(): int64 {\r\n  let height: int64 = 1n\r\n  while (Math.random() < 0.5 && height < MAX_HEIGHT) {\r\n    height += 1n\r\n  }\r\n  return height\r\n}\r\n","\r\ninterface Node {\r\n  pointer: pointer<void>\r\n  length: size\r\n  free: boolean\r\n}\r\n\r\nexport const enum BuiltinTableSlot {\r\n  FREE = 1,\r\n  MALLOC,\r\n  CALLOC,\r\n  REALLOC,\r\n  ALIGNED_ALLOC,\r\n  SLOT_NB\r\n}\r\n\r\nconst INIT_SIZE = 10\r\n\r\nexport class WebassemblyTable {\r\n\r\n  table: WebAssembly.Table\r\n\r\n  pointer: pointer<void>\r\n\r\n  private nodes: Node[]\r\n\r\n  constructor() {\r\n    this.table = new WebAssembly.Table({\r\n      initial: reinterpret_cast<size>((BuiltinTableSlot.SLOT_NB + INIT_SIZE) as uint32),\r\n      element: 'anyfunc',\r\n      // @ts-ignore\r\n      address: defined(WASM_64) ? 'i64' : 'i32',\r\n      // @ts-ignore\r\n      index: defined(WASM_64) ? 'i64' : 'i32'\r\n    })\r\n\r\n    this.pointer = static_cast<pointer<void>>(BuiltinTableSlot.SLOT_NB as uint32)\r\n    this.nodes = [{\r\n      pointer: this.pointer,\r\n      length: reinterpret_cast<size>(INIT_SIZE),\r\n      free: true\r\n    }]\r\n  }\r\n\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  public alloc(count: size) {\r\n\r\n    let p = this.findFree(count)\r\n\r\n    if (p < 0) {\r\n      const last = this.nodes[this.nodes.length - 1]\r\n\r\n      const length: size = count - reinterpret_cast<size>(last.free ? last.length : 0)\r\n\r\n      this.table.grow(reinterpret_cast<size>(length))\r\n\r\n      if (last.free) {\r\n        last.length = last.length + length\r\n      }\r\n      else {\r\n        this.nodes.push({\r\n          pointer: last.pointer + last.length,\r\n          length,\r\n          free: true\r\n        })\r\n      }\r\n\r\n      p = this.findFree(count)\r\n    }\r\n\r\n    const node = this.nodes[p]\r\n\r\n    if (node.length > count) {\r\n      this.nodes.splice(p + 1, 0, {\r\n        pointer: node.pointer + count,\r\n        length: node.length - count,\r\n        free: true\r\n      })\r\n      node.length = count\r\n    }\r\n\r\n    node.free = false\r\n\r\n    return node.pointer\r\n  }\r\n\r\n  public free(pointer: pointer<void>) {\r\n    let p = this.findNode(pointer)\r\n    const node = this.nodes[p]\r\n\r\n    if (node && !node.free) {\r\n      const before = this.nodes[p - 1]\r\n      const after = this.nodes[p + 1]\r\n\r\n      if (before && before.free) {\r\n        if (after && after.free) {\r\n          before.length += (node.length + after.length)\r\n          this.nodes.splice(p, 2)\r\n        }\r\n        else {\r\n          before.length += node.length\r\n          this.nodes.splice(p, 1)\r\n        }\r\n      }\r\n      else {\r\n        if (after && after.free) {\r\n          node.length += after.length\r\n          this.nodes.splice(p + 1, 1)\r\n          node.free = true\r\n        }\r\n        else {\r\n          node.free = true\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.nodes.length === 1 && this.nodes[0].free) {\r\n      // 当全部 free 之后重新创建新的 Table，之前 WebAssembly 设置的函数引用在 chrome 上没有被回收，会内存泄漏\r\n      const table = new WebAssembly.Table({\r\n        initial: reinterpret_cast<size>((BuiltinTableSlot.SLOT_NB + INIT_SIZE) as uint32),\r\n        element: 'anyfunc',\r\n        // @ts-ignore\r\n        address: defined(WASM_64) ? 'i64' : 'i32',\r\n        // @ts-ignore\r\n        index: defined(WASM_64) ? 'i64' : 'i32'\r\n      })\r\n      this.pointer = static_cast<pointer<void>>(BuiltinTableSlot.SLOT_NB as uint32)\r\n      this.nodes = [{\r\n        pointer: this.pointer,\r\n        length: reinterpret_cast<size>(INIT_SIZE),\r\n        free: true\r\n      }]\r\n      for (let i = 1; i < this.pointer; i++) {\r\n        table.set(static_cast<pointer<void>>(i as uint32), this.table.get(static_cast<pointer<void>>(i as uint32)))\r\n      }\r\n      this.table = table\r\n    }\r\n  }\r\n\r\n  public get<T extends(...args: any[]) => any>(index: pointer<T>): T {\r\n    return this.table.get(index)\r\n  }\r\n\r\n  public set<T extends(...args: any[]) => any>(index: pointer<T>, value: T) {\r\n    if (index < 0 || index >= this.pointer) {\r\n      throw new RangeError('index out of bound')\r\n    }\r\n    this.table.set(index, value)\r\n  }\r\n\r\n  public inspect() {\r\n    return this.nodes\r\n  }\r\n\r\n  private findFree(length: size) {\r\n    let index = -1\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      if (this.nodes[i].length >= length && this.nodes[i].free) {\r\n        index = i\r\n        break\r\n      }\r\n    }\r\n    return index\r\n  }\r\n\r\n  private findNode(pointer: pointer<void>) {\r\n    let index = -1\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      if (this.nodes[i].pointer === pointer) {\r\n        index = i\r\n        break\r\n      }\r\n    }\r\n    return index\r\n  }\r\n}\r\n","export default asm`\r\n(func $write8 (export \"write8\") (param $p0 i32) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store8)\r\n)\r\n(func $write16 (export \"write16\") (param $p0 i32) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store16)\r\n)\r\n(func $write32 (export \"write32\") (param $p0 i32) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store)\r\n)\r\n(func $write64 (export \"write64\") (param $p0 i32) (param $p1 i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.store)\r\n)\r\n(func $writef32 (export \"writef32\") (param $p0 i32) (param $p1 f32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (f32.store)\r\n)\r\n(func $writef64 (export \"writef64\")(param $p0 i32) (param $p1 f64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (f64.store)\r\n)\r\n(func $read8 (export \"read8\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.load8_s)\r\n)\r\n(func $readU8 (export \"readU8\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.load8_u)\r\n)\r\n(func $read16 (export \"read16\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.load16_s)\r\n)\r\n(func $readU16 (export \"readU16\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.load16_u)\r\n)\r\n(func $read32 (export \"read32\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.load)\r\n)\r\n(func $read64 (export \"read64\") (param $p0 i32) (result i64)\r\n  (local.get $p0)\r\n  (i64.load)\r\n)\r\n(func $readf32 (export \"readf32\") (param $p0 i32) (result f32)\r\n  (local.get $p0)\r\n  (f32.load)\r\n)\r\n(func $readf64 (export \"readf64\") (param $p0 i32) (result f64)\r\n  (local.get $p0)\r\n  (f64.load)\r\n)\r\n(func $fill (export \"fill\") (param $p0 i32) (param $p1 i32) (param $p2 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.fill)\r\n)\r\n(func $copy (export \"copy\") (param $p0 i32) (param $p1 i32) (param $p2 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.copy)\r\n)\r\n`\r\n","import { base64ToUint8Array } from 'common/util/base64'\r\nimport * as logger from 'common/util/logger'\r\nimport { override as readoverride} from '../ctypeEnumRead'\r\nimport { override as writeoverride} from '../ctypeEnumWrite'\r\nimport * as wasmUtils from 'common/util/wasm'\r\n\r\nimport asm from './memory.asm'\r\nimport asm64 from './memory64.asm'\r\nimport { CTypeEnum } from '../typedef'\r\n\r\n/**\r\n * WebAssembly runtime 实例\r\n */\r\nexport let instance: WebAssembly.Instance\r\n\r\nexport function support() {\r\n  return !!instance\r\n}\r\n\r\nexport function init(memory: WebAssembly.Memory, initial: uint32, maximum: uint32) {\r\n  if (defined(DEBUG) && !defined(WASM_64)) {\r\n    return\r\n  }\r\n  try {\r\n    const wasm = wasmUtils.setMemoryMeta(base64ToUint8Array(defined(WASM_64) ? asm64 : asm), {\r\n      shared: typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer,\r\n      initial,\r\n      maximum\r\n    })\r\n\r\n    instance = new WebAssembly.Instance(new WebAssembly.Module(wasm), {\r\n      env: {\r\n        memory\r\n      }\r\n    })\r\n\r\n    readoverride({\r\n      [CTypeEnum.char]: instance.exports.readU8 as any,\r\n      [CTypeEnum.atomic_char]: instance.exports.readU8 as any,\r\n      [CTypeEnum.uint8]: instance.exports.readU8 as any,\r\n      [CTypeEnum.atomic_uint8]: instance.exports.readU8 as any,\r\n      [CTypeEnum.uint16]: instance.exports.readU16 as any,\r\n      [CTypeEnum.atomic_uint16]: instance.exports.readU16 as any,\r\n      [CTypeEnum.uint32]: (pointer: pointer<void>) => {\r\n        return (instance.exports.read32 as Function)(pointer) >>> 0\r\n      },\r\n      [CTypeEnum.atomic_uint32]: (pointer: pointer<void>) => {\r\n        return (instance.exports.read32 as Function)(pointer) >>> 0\r\n      },\r\n      [CTypeEnum.uint64]: (pointer: pointer<void>) => {\r\n        return BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer))\r\n      },\r\n      [CTypeEnum.atomic_uint64]: (pointer: pointer<void>) => {\r\n        return BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer))\r\n      },\r\n\r\n      [CTypeEnum.int8]: instance.exports.read8 as any,\r\n      [CTypeEnum.atomic_int8]: instance.exports.read8 as any,\r\n      [CTypeEnum.int16]: instance.exports.read16 as any,\r\n      [CTypeEnum.atomic_int16]: instance.exports.read16 as any,\r\n      [CTypeEnum.int32]: instance.exports.read32 as any,\r\n      [CTypeEnum.atomic_int32]: instance.exports.read32 as any,\r\n      [CTypeEnum.int64]: instance.exports.read64 as any,\r\n      [CTypeEnum.atomic_int64]: instance.exports.read64 as any,\r\n\r\n      [CTypeEnum.float]: instance.exports.readf32 as any,\r\n      [CTypeEnum.double]: instance.exports.readf64 as any,\r\n\r\n      [CTypeEnum.pointer]: (pointer: pointer<void>) => {\r\n        if (defined(WASM_64)) {\r\n          return reinterpret_cast<pointer<void>>(BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer)))\r\n        }\r\n        else {\r\n          return (instance.exports.read32 as Function)(pointer) >>> 0\r\n        }\r\n      },\r\n      [CTypeEnum.size]: (pointer: pointer<void>) => {\r\n        if (defined(WASM_64)) {\r\n          return reinterpret_cast<pointer<void>>(BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer)))\r\n        }\r\n        else {\r\n          return (instance.exports.read32 as Function)(pointer) >>> 0\r\n        }\r\n      }\r\n    })\r\n\r\n    writeoverride({\r\n      [CTypeEnum.char]: instance.exports.write8 as any,\r\n      [CTypeEnum.atomic_char]: instance.exports.write8 as any,\r\n\r\n      [CTypeEnum.uint8]: instance.exports.write8 as any,\r\n      [CTypeEnum.atomic_uint8]: instance.exports.write8 as any,\r\n      [CTypeEnum.uint16]: instance.exports.write16 as any,\r\n      [CTypeEnum.atomic_uint16]: instance.exports.write16 as any,\r\n      [CTypeEnum.uint32]: instance.exports.write32 as any,\r\n      [CTypeEnum.atomic_uint32]: instance.exports.write32 as any,\r\n      [CTypeEnum.uint64]: instance.exports.write64 as any,\r\n      [CTypeEnum.atomic_uint64]: instance.exports.write64 as any,\r\n\r\n      [CTypeEnum.int8]: instance.exports.write8 as any,\r\n      [CTypeEnum.atomic_int8]: instance.exports.write8 as any,\r\n      [CTypeEnum.int16]: instance.exports.write16 as any,\r\n      [CTypeEnum.atomic_int16]: instance.exports.write16 as any,\r\n      [CTypeEnum.int32]: instance.exports.write32 as any,\r\n      [CTypeEnum.atomic_int32]: instance.exports.write32 as any,\r\n      [CTypeEnum.int64]: instance.exports.write64 as any,\r\n      [CTypeEnum.atomic_int64]: instance.exports.write64 as any,\r\n\r\n      [CTypeEnum.float]: instance.exports.writef32 as any,\r\n      [CTypeEnum.double]: instance.exports.writef64 as any,\r\n\r\n      [CTypeEnum.pointer]: defined(WASM_64) ? instance.exports.write64 as any : instance.exports.write32 as any,\r\n      [CTypeEnum.size]: defined(WASM_64) ? instance.exports.write64 as any : instance.exports.write32 as any,\r\n      'copy': instance.exports.copy as any,\r\n      'fill': instance.exports.fill as any\r\n    })\r\n  }\r\n  catch (error) {\r\n    logger.warn('memory asm not support, cannot use asm memory function')\r\n  }\r\n}\r\n","export default asm64`\r\n(func $write8 (export \"write8\") (param $p0 i64) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store8)\r\n)\r\n(func $write16 (export \"write16\") (param $p0 i64) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store16)\r\n)\r\n(func $write32 (export \"write32\") (param $p0 i64) (param $p1 i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.store)\r\n)\r\n(func $write64 (export \"write64\") (param $p0 i64) (param $p1 i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.store)\r\n)\r\n(func $writef32 (export \"writef32\") (param $p0 i64) (param $p1 f32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (f32.store)\r\n)\r\n(func $writef64 (export \"writef64\")(param $p0 i64) (param $p1 f64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (f64.store)\r\n)\r\n(func $read8 (export \"read8\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.load8_s)\r\n)\r\n(func $readU8 (export \"readU8\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.load8_u)\r\n)\r\n(func $read16 (export \"read16\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.load16_s)\r\n)\r\n(func $readU16 (export \"readU16\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.load16_u)\r\n)\r\n(func $read32 (export \"read32\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.load)\r\n)\r\n(func $read64 (export \"read64\") (param $p0 i64) (result i64)\r\n  (local.get $p0)\r\n  (i64.load)\r\n)\r\n(func $readf32 (export \"readf32\") (param $p0 i64) (result f32)\r\n  (local.get $p0)\r\n  (f32.load)\r\n)\r\n(func $readf64 (export \"readf64\") (param $p0 i64) (result f64)\r\n  (local.get $p0)\r\n  (f64.load)\r\n)\r\n(func $fill (export \"fill\") (param $p0 i64) (param $p1 i32) (param $p2 i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.fill)\r\n)\r\n(func $copy (export \"copy\") (param $p0 i64) (param $p1 i64) (param $p2 i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.copy)\r\n)\r\n`\r\n","import support from 'common/util/support'\r\nimport { SELF } from 'common/util/constant'\r\nimport browser from 'common/util/browser'\r\nimport os from 'common/util/os'\r\n\r\nconst ENV: {\r\n  CHEAP_DISABLE_THREAD: boolean\r\n  CHEAP_HEAP_INITIAL: number\r\n  CHEAP_HEAP_MAXIMUM: number\r\n} = defined(ENV_NODE) ? process.env : SELF\r\n\r\n/**\r\n * 是否使用多线程\r\n */\r\nexport const USE_THREADS = defined(ENABLE_THREADS) && (support.thread || defined(ENV_NODE)) && !ENV.CHEAP_DISABLE_THREAD\r\n\r\n/**\r\n * 栈地址对齐\r\n * 栈地址至少是 16 字节对齐，因为 wasm 的基本类型中最大是 v128 16 字节\r\n */\r\nexport let STACK_ALIGNMENT = 16\r\n\r\n/**\r\n * 栈大小，应为 STACK_ALIGNMENT 的整数倍\r\n */\r\nexport let STACK_SIZE = 1024 * 1024\r\n\r\n/**\r\n * 堆保留段，可用于静态数据区分配\r\n */\r\nexport const HEAP_OFFSET = 1024\r\n\r\n/**\r\n * 堆初始大小\r\n */\r\nexport const HEAP_INITIAL: uint32 = (ENV.CHEAP_HEAP_INITIAL ?? defined(CHEAP_HEAP_INITIAL))\r\n\r\n/**\r\n * 堆最大大小\r\n * ios safari 16 以下 对最大值有限制，太大分配不出来\r\n */\r\nexport const HEAP_MAXIMUM: uint32 = ENV.CHEAP_HEAP_MAXIMUM\r\n  ?? (USE_THREADS && (os.ios && !browser.checkVersion(os.version, '17', true))\r\n    ? 8192\r\n    : (defined(WASM_64)\r\n      // 64 位最大 16GB\r\n      ? 262144\r\n      // 32 位最大 4GB\r\n      : 65536\r\n    )\r\n  )\r\n","import isLittleEndian from 'common/function/isLittleEndian'\r\nimport { CTypeEnum } from './typedef'\r\nimport { override as readoverride} from './ctypeEnumRead'\r\nimport { override as writeoverride} from './ctypeEnumWrite'\r\nimport AllocatorInterface from './allocator/Allocator'\r\n\r\nlet getAllocator: () => AllocatorInterface\r\nlet getView: () => DataView\r\n\r\nconst littleEndian = isLittleEndian()\r\n\r\nfunction writeU8(pointer: pointer<void>, value: uint8) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setUint8(pointer, value)\r\n}\r\n\r\nfunction readU8(pointer: pointer<void>): uint8 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getUint8(pointer)\r\n}\r\n\r\nfunction writeU16(pointer: pointer<void>, value: uint16) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setUint16(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readU16(pointer: pointer<void>): uint16 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getUint16(pointer, littleEndian)\r\n}\r\n\r\nfunction writeU32(pointer: pointer<void>, value: uint32) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setUint32(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readU32(pointer: pointer<void>): uint32 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getUint32(pointer, littleEndian)\r\n}\r\n\r\nfunction writeU64(pointer: pointer<void>, value: uint64) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setBigUint64(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readU64(pointer: pointer<void>): uint64 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getBigUint64(pointer, littleEndian)\r\n}\r\n\r\nfunction write8(pointer: pointer<void>, value: int8) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setInt8(pointer, value)\r\n}\r\n\r\nfunction read8(pointer: pointer<void>): int8 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getInt8(pointer)\r\n}\r\n\r\nfunction write16(pointer: pointer<void>, value: int16) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setInt16(pointer, value, littleEndian)\r\n}\r\n\r\nfunction read16(pointer: pointer<void>): int16 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getInt16(pointer, littleEndian)\r\n}\r\n\r\nfunction write32(pointer: pointer<void>, value: int32) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setInt32(pointer, value, littleEndian)\r\n}\r\n\r\nfunction read32(pointer: pointer<void>): int32 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getInt32(pointer, littleEndian)\r\n}\r\n\r\nfunction write64(pointer: pointer<void>, value: int64) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setBigInt64(pointer, value, littleEndian)\r\n}\r\n\r\nfunction read64(pointer: pointer<void>): int64 {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getBigInt64(pointer, littleEndian)\r\n}\r\n\r\nfunction writef32(pointer: pointer<void>, value: float) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setFloat32(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readf32(pointer: pointer<void>): float {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getFloat32(pointer, littleEndian)\r\n}\r\n\r\nfunction writef64(pointer: pointer<void>, value: float64) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setFloat64(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readf64(pointer: pointer<void>): float64 | double {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getFloat64(pointer, littleEndian)\r\n}\r\n\r\nfunction readPointer<T>(pointer: pointer<void>): pointer<T> {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getUint32(pointer, littleEndian) as pointer<T>\r\n}\r\n\r\nfunction writePointer<T>(pointer: pointer<void>, value: pointer<T>) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().setUint32(pointer, value, littleEndian)\r\n}\r\n\r\nfunction readSize(pointer: pointer<void>): size {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  return getView().getUint32(pointer, littleEndian) as size\r\n}\r\n\r\nfunction writeSize(pointer: pointer<void>, value: size) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  getView().setUint32(pointer, value, littleEndian)\r\n}\r\n\r\nexport default function init(getAllocator_: () => AllocatorInterface, getView_: () => DataView) {\r\n\r\n  getAllocator = getAllocator_\r\n  getView = getView_\r\n\r\n  readoverride({\r\n    [CTypeEnum.char]: readU8 as any,\r\n    [CTypeEnum.atomic_char]: readU8 as any,\r\n\r\n    [CTypeEnum.uint8]: readU8,\r\n    [CTypeEnum.atomic_uint8]: readU8 as any,\r\n    [CTypeEnum.uint16]: readU16,\r\n    [CTypeEnum.atomic_uint16]: readU16 as any,\r\n    [CTypeEnum.uint32]: readU32,\r\n    [CTypeEnum.atomic_uint32]: readU32 as any,\r\n    [CTypeEnum.uint64]: readU64,\r\n\r\n    [CTypeEnum.int8]: read8,\r\n    [CTypeEnum.atomic_int8]: read8 as any,\r\n    [CTypeEnum.int16]: read16,\r\n    [CTypeEnum.atomic_int16]: read16 as any,\r\n    [CTypeEnum.int32]: read32,\r\n    [CTypeEnum.atomic_int32]: read32 as any,\r\n    [CTypeEnum.int64]: read64,\r\n\r\n    [CTypeEnum.float]: readf32,\r\n    [CTypeEnum.double]: readf64,\r\n    [CTypeEnum.pointer]: readPointer,\r\n\r\n    [CTypeEnum.bool]: (pointer: pointer<void>) => {\r\n      return !!read8(pointer)\r\n    },\r\n    [CTypeEnum.atomic_bool]: (pointer: pointer<void>) => {\r\n      return !!read8(pointer)\r\n    },\r\n    [CTypeEnum.size]: (pointer: pointer<void>) => {\r\n      return readSize(pointer)\r\n    }\r\n  })\r\n\r\n  writeoverride({\r\n    [CTypeEnum.char]: writeU8 as any,\r\n    [CTypeEnum.atomic_char]: writeU8,\r\n\r\n    [CTypeEnum.uint8]: writeU8,\r\n    [CTypeEnum.atomic_uint8]: writeU8,\r\n    [CTypeEnum.uint16]: writeU16,\r\n    [CTypeEnum.atomic_uint16]: writeU16 as any,\r\n    [CTypeEnum.uint32]: writeU32,\r\n    [CTypeEnum.atomic_uint32]: writeU32 as any,\r\n    [CTypeEnum.uint64]: writeU64,\r\n\r\n    [CTypeEnum.int8]: write8,\r\n    [CTypeEnum.atomic_int8]: write8 as any,\r\n    [CTypeEnum.int16]: write16,\r\n    [CTypeEnum.atomic_int16]: write16 as any,\r\n    [CTypeEnum.int32]: write32,\r\n    [CTypeEnum.atomic_int32]: write32 as any,\r\n    [CTypeEnum.int64]: write64,\r\n\r\n    [CTypeEnum.float]: writef32,\r\n    [CTypeEnum.double]: writef64,\r\n    [CTypeEnum.pointer]: writePointer,\r\n\r\n    [CTypeEnum.bool]: (pointer: pointer<void>, value: bool) => {\r\n      write8(pointer, value ? 1 : 0)\r\n    },\r\n    [CTypeEnum.atomic_bool]: ((pointer: pointer<void>, value: bool) => {\r\n      write8(pointer, value ? 1 : 0)\r\n    }) as any,\r\n    [CTypeEnum.size]: writeSize,\r\n  })\r\n}\r\n","import { CTypeEnum, CTypeEnum2Type } from './typedef'\r\nimport * as object from 'common/util/object'\r\n\r\ntype CTypeEnumRead = {\r\n  [key in CTypeEnum]: (pointer: pointer<void>) => CTypeEnum2Type<key>\r\n}\r\n\r\nexport const CTypeEnumRead: CTypeEnumRead = {\r\n  [CTypeEnum.char]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_char]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.uint8]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint8]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint16]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint16]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint32]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint32]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint64]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.int8]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int8]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int16]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int16]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int32]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int32]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int64]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.float]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.double]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.pointer]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.null]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.void]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n\r\n  [CTypeEnum.atomic_uint64]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.atomic_int64]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n\r\n  [CTypeEnum.bool]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.atomic_bool]: function (pointer: pointer<void>) {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.size]: function (pointer: pointer<void>) {\r\n    throw new Error('unimplemented')\r\n  },\r\n}\r\n\r\nexport function override(funcs: Partial<CTypeEnumRead>) {\r\n  object.extend(CTypeEnumRead, funcs)\r\n}\r\n","import { CTypeEnum, CTypeEnum2Type } from './typedef'\r\nimport * as object from 'common/util/object'\r\n\r\ntype CTypeEnumWrite = {\r\n  [key in CTypeEnum]: (pointer: pointer<void>, value: CTypeEnum2Type<key>) => void\r\n} & {\r\n  fill: (dst: pointer<void>, value: uint8, size: size) => void,\r\n  copy: (dst: pointer<void>, src:  pointer<void>, size: size) => void,\r\n}\r\nexport const CTypeEnumWrite: CTypeEnumWrite = {\r\n  [CTypeEnum.char]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_char]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.uint8]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint8]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint16]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint16]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint32]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_uint32]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.uint64]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.int8]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int8]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int16]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int16]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int32]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.atomic_int32]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.int64]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.float]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.double]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  [CTypeEnum.pointer]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n\r\n  [CTypeEnum.null]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.void]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n\r\n  [CTypeEnum.atomic_uint64]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.atomic_int64]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n\r\n  [CTypeEnum.bool]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.atomic_bool]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n  [CTypeEnum.size]: function (pointer: pointer<void>, value: any): void {\r\n    throw new Error('unimplemented')\r\n  },\r\n  'copy': function (dst: pointer<void>, value: int32, size: size): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n  'fill': function (dst: pointer<void>, src: pointer<void>, size: size): void {\r\n    throw new Error('invalid operate')\r\n  },\r\n}\r\n\r\nexport function override(funcs: Partial<CTypeEnumWrite>) {\r\n  object.extend(CTypeEnumWrite, funcs)\r\n}\r\n","import { CTypeEnumRead } from './ctypeEnumRead'\r\nimport { CTypeEnumWrite } from './ctypeEnumWrite'\r\nimport { symbolStructAddress, symbolStructKeysMeta } from './symbol'\r\nimport { CTypeEnum, CTypeEnum2Bytes, KeyMeta, KeyMetaKey, Struct } from './typedef'\r\nimport * as is from 'common/util/is'\r\nimport * as object from 'common/util/object'\r\nimport toString from 'common/function/toString'\r\nimport * as array from 'common/util/array'\r\n\r\nfunction definedProperty(target: any, key: string, get: () => any, set: (v: any) => void) {\r\n  Object.defineProperty(target, key, {\r\n    get,\r\n    set,\r\n    configurable: true,\r\n    enumerable: true\r\n  })\r\n}\r\n\r\n/**\r\n * 指针的值\r\n * \r\n * @param address \r\n * @returns \r\n */\r\nfunction getPointerValue(address: () => pointer<void>) {\r\n  return function () {\r\n    return CTypeEnumRead[CTypeEnum.pointer](address())\r\n  }\r\n}\r\n\r\nfunction getStruct(target: any, key: string, address: () => pointer<void>, struct: Struct | {}) {\r\n  return function () {\r\n    return target[`__$__${key}`] || (target[`__$__${key}`] = definedStruct(address(), struct))\r\n  }\r\n}\r\n\r\nfunction getCTypeEnumValue(address: () => pointer<void>, type: CTypeEnum) {\r\n  return function () {\r\n    return  CTypeEnumRead[type](address())\r\n  }\r\n}\r\n\r\nfunction getBitFieldValue(address: () => pointer<void>, type: CTypeEnum, bitLen: number, offset: number) {\r\n  const shift = CTypeEnum2Bytes[type] * 8 - offset - bitLen\r\n  const valueMask = Math.pow(2, bitLen) - 1\r\n  return function () {\r\n    let value = CTypeEnumRead[type as uint8](address())\r\n    return (value >>> shift) & valueMask\r\n  }\r\n}\r\n\r\nfunction setPointerValue(address: () => pointer<void>) {\r\n  return function (newValue: pointer<void>) {\r\n    CTypeEnumWrite[CTypeEnum.pointer](address(), newValue)\r\n  }\r\n}\r\n\r\nfunction setStruct(obj: Object, key: string, address: () => pointer<void>, struct: Struct | {}) {\r\n  const localKey = `__$__${key}`\r\n  return function (newValue: Object) {\r\n    const proxy = obj[localKey] || (obj[localKey] = definedStruct(address(), struct))\r\n    object.each(newValue, (value, key) => {\r\n      proxy[key] = value\r\n    })\r\n    obj[localKey] = proxy\r\n  }\r\n}\r\n\r\nfunction setCTypeEnumValue(address: () => pointer<void>, type: CTypeEnum) {\r\n  return function (newValue: any) {\r\n    CTypeEnumWrite[type as uint8](address(), newValue)\r\n  }\r\n}\r\n\r\nfunction setBitFieldValue(address: () => pointer<void>, type: CTypeEnum, bitLen: number, offset: number) {\r\n  let zeroMask = 0\r\n  let len = CTypeEnum2Bytes[type] * 8\r\n  for (let i = 0; i < bitLen; i++) {\r\n    zeroMask |= (1 << (len - 1 - (i + offset)))\r\n  }\r\n  const valueMask = Math.pow(2, bitLen) - 1\r\n  const shift = len - offset - bitLen\r\n\r\n  return function (newValue: any) {\r\n    const addr = address()\r\n    const value = CTypeEnumRead[type as uint8](addr)\r\n    CTypeEnumWrite[type as uint8](\r\n      addr,\r\n      (value & ~zeroMask) | ((newValue & valueMask) << shift)\r\n    )\r\n  }\r\n}\r\n\r\nfunction definedArrayStruct(address: () => pointer<void>, length: number, type: Struct | {}) {\r\n  const obj = {}\r\n  let size = reinterpret_cast<int32>(sizeof(type))\r\n  for (let i = 0; i < length; i++) {\r\n    const key = toString(i)\r\n    definedProperty(\r\n      obj,\r\n      key,\r\n      getStruct(\r\n        obj,\r\n        key,\r\n        () => {\r\n          return address() + size * i\r\n        },\r\n        type\r\n      ),\r\n      setStruct(\r\n        obj,\r\n        key,\r\n        () => {\r\n          return address() + size * i\r\n        },\r\n        type\r\n      )\r\n    )\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\nfunction definedArrayCTypeEnum(address: () => pointer<void>, length: number, type: CTypeEnum) {\r\n  const obj = {}\r\n  let size = reinterpret_cast<int32>(sizeof(type))\r\n  for (let i = 0; i < length; i++) {\r\n    const key = toString(i)\r\n    definedProperty(\r\n      obj,\r\n      key,\r\n      getCTypeEnumValue(\r\n        () => {\r\n          return address() + size * i\r\n        },\r\n        type\r\n      ),\r\n      setCTypeEnumValue(\r\n        () => {\r\n          return address() + size * i\r\n        },\r\n        type\r\n      )\r\n    )\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\nfunction getArray(address: () => pointer<void>, target: Object, key: string, length: number, type: Struct | {} | CTypeEnum) {\r\n  return function () {\r\n    let t = target[`__$__${key}`]\r\n    if (!t) {\r\n      t = (is.func(type) || is.object(type))\r\n        ? definedArrayStruct(address, length, type)\r\n        : definedArrayCTypeEnum(address, length, type)\r\n      target[`__$__${key}`] = t\r\n    }\r\n    t[symbolStructAddress] = address()\r\n    return t\r\n  }\r\n}\r\n\r\nfunction setArrayStruct(obj: Object, key: string, address: () => pointer<void>, length: number, type: Struct | {}) {\r\n  const localKey = `__$__${key}`\r\n  return function (newValue: any[]) {\r\n    let proxy = obj[localKey] || definedArrayStruct(address, length, type)\r\n    proxy[symbolStructAddress] = address()\r\n    array.each(newValue, (value, key) => {\r\n      proxy[key] = value\r\n    })\r\n    obj[localKey] = proxy\r\n  }\r\n}\r\n\r\nfunction setArrayCTypeEnum(obj: Object, key: string, address: () => pointer<void>, length: number, type: CTypeEnum) {\r\n  const localKey = `__$__${key}`\r\n  return function (newValue: any[]) {\r\n    let proxy = obj[localKey] || definedArrayCTypeEnum(address, length, type)\r\n    proxy[symbolStructAddress] = address()\r\n    array.each(newValue, (value, key) => {\r\n      proxy[key] = value\r\n    })\r\n    obj[localKey] = proxy\r\n  }\r\n}\r\n\r\nexport function definedStruct<T>(address: pointer<void>, struct: (new () => T) | {}) {\r\n  let prototype = is.func(struct) ? struct.prototype : struct\r\n\r\n  const obj = {}\r\n  obj[symbolStructAddress] = address\r\n  Object.setPrototypeOf(obj, prototype)\r\n\r\n  while (true) {\r\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\r\n\r\n    if (keysMeta) {\r\n      keysMeta.forEach((meta, key) => {\r\n        if (meta[KeyMetaKey.Array]) {\r\n          if (meta[KeyMetaKey.Pointer]) {\r\n            definedProperty(\r\n              obj,\r\n              key,\r\n              getArray(\r\n                () => {\r\n                  if (defined(WASM_64)) {\r\n                    return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                  }\r\n                  else {\r\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                  }\r\n                },\r\n                obj,\r\n                key,\r\n                meta[KeyMetaKey.ArrayLength],\r\n                meta[KeyMetaKey.Type]\r\n              ),\r\n              setArrayCTypeEnum(\r\n                obj,\r\n                key,\r\n                () => {\r\n                  if (defined(WASM_64)) {\r\n                    return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                  }\r\n                  else {\r\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                  }\r\n                },\r\n                meta[KeyMetaKey.ArrayLength],\r\n                CTypeEnum.pointer\r\n              )\r\n            )\r\n          }\r\n          else {\r\n            if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\r\n              definedProperty(\r\n                obj,\r\n                key,\r\n                getArray(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  obj,\r\n                  key,\r\n                  meta[KeyMetaKey.ArrayLength],\r\n                  meta[KeyMetaKey.Type]\r\n                ),\r\n                setArrayStruct(\r\n                  obj,\r\n                  key,\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.ArrayLength],\r\n                  meta[KeyMetaKey.Type]\r\n                )\r\n              )\r\n            }\r\n            else {\r\n              definedProperty(\r\n                obj,\r\n                key,\r\n                getArray(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  obj,\r\n                  key,\r\n                  meta[KeyMetaKey.ArrayLength],\r\n                  meta[KeyMetaKey.Type]\r\n                ),\r\n                setArrayCTypeEnum(\r\n                  obj,\r\n                  key,\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.ArrayLength],\r\n                  meta[KeyMetaKey.Type]\r\n                )\r\n              )\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (meta[KeyMetaKey.Pointer]) {\r\n            definedProperty(\r\n              obj,\r\n              key,\r\n              getPointerValue(() => {\r\n                if (defined(WASM_64)) {\r\n                  return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                }\r\n                else {\r\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                }\r\n              }),\r\n              setPointerValue(() => {\r\n                if (defined(WASM_64)) {\r\n                  return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                }\r\n                else {\r\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                }\r\n              })\r\n            )\r\n          }\r\n          else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\r\n            definedProperty(\r\n              obj,\r\n              key,\r\n              getStruct(\r\n                obj,\r\n                key,\r\n                () => {\r\n                  if (defined(WASM_64)) {\r\n                    return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                  }\r\n                  else {\r\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                  }\r\n                },\r\n                meta[KeyMetaKey.Type]\r\n              ),\r\n              setStruct(\r\n                obj,\r\n                key,\r\n                () => {\r\n                  if (defined(WASM_64)) {\r\n                    return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                  }\r\n                  else {\r\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                  }\r\n                },\r\n                meta[KeyMetaKey.Type]\r\n              )\r\n            )\r\n          }\r\n          else {\r\n            if (meta[KeyMetaKey.BitField]) {\r\n              definedProperty(\r\n                obj,\r\n                key,\r\n                getBitFieldValue(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.Type],\r\n                  meta[KeyMetaKey.BitFieldLength],\r\n                  meta[KeyMetaKey.BaseBitOffset]\r\n                ),\r\n                setBitFieldValue(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.Type],\r\n                  meta[KeyMetaKey.BitFieldLength],\r\n                  meta[KeyMetaKey.BaseBitOffset]\r\n                )\r\n              )\r\n            }\r\n            else {\r\n              definedProperty(\r\n                obj,\r\n                key,\r\n                getCTypeEnumValue(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.Type]\r\n                ),\r\n                setCTypeEnumValue(\r\n                  () => {\r\n                    if (defined(WASM_64)) {\r\n                      return obj[symbolStructAddress] + static_cast<int64>(meta[KeyMetaKey.BaseAddressOffset] as uint32)\r\n                    }\r\n                    else {\r\n                      return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\r\n                    }\r\n                  },\r\n                  meta[KeyMetaKey.Type]\r\n                )\r\n              )\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n    prototype = Object.getPrototypeOf(prototype)\r\n    if (!prototype) {\r\n      break\r\n    }\r\n  }\r\n  return obj as T\r\n}\r\n\r\nexport function revokeDefinedStruct<T>(target: T) {\r\n  let prototype = Object.getPrototypeOf(target)\r\n  while (true) {\r\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\r\n    if (keysMeta) {\r\n      keysMeta.forEach((meta, key) => {\r\n        delete target[key]\r\n      })\r\n    }\r\n    prototype = Object.getPrototypeOf(prototype)\r\n    if (!prototype) {\r\n      break\r\n    }\r\n  }\r\n}\r\n","export default function definedMetaProperty(target: any, key: symbol, value: any) {\r\n  Object.defineProperty(target, key, {\r\n    value,\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: false\r\n  })\r\n}\r\n","import isWorker from 'common/function/isWorker'\r\nimport AllocatorInterface from './allocator/Allocator'\r\nimport AllocatorJS from './allocator/AllocatorJS'\r\nimport AllocatorJS64, { MemoryOperator } from './allocator/AllocatorJS64'\r\nimport { WebassemblyTable } from './allocator/Table'\r\nimport { SELF } from 'common/util/constant'\r\nimport { AtomicsBuffer, CTypeEnum } from './typedef'\r\nimport * as config from './config'\r\nimport * as staticData from './staticData'\r\nimport initAtomics from './thread/atomicsImpl'\r\nimport * as memoryAsm from './asm/memory'\r\nimport * as atomicsAsm from './thread/asm/atomics'\r\nimport initCtypeEnumImpl from './ctypeEnumImpl'\r\nimport isAudioWorklet from 'common/function/isAudioWorklet'\r\nimport browser from 'common/util/browser'\r\nimport os from 'common/util/os'\r\n\r\n/**\r\n * 线程 id\r\n */\r\nexport let ThreadId: number = -1\r\n\r\nexport let isMainThread: boolean = true\r\n\r\n/**\r\n * 线程名\r\n */\r\nexport let ThreadName: string = ''\r\n\r\n/**\r\n * 当前线程的栈顶指针\r\n */\r\nexport let StackPointer: WebAssembly.Global = null\r\n\r\n/**\r\n * 栈结束位置\r\n */\r\nexport let StackTop: pointer<void> = null\r\n\r\n/**\r\n * 当前线程栈大小\r\n */\r\nexport let StackSize: int32 = 0\r\n\r\n/**\r\n * 当前线程的 Table\r\n */\r\nexport let Table: WebassemblyTable = null\r\n\r\n/**\r\n * 堆分配器\r\n */\r\nexport let Allocator: AllocatorInterface = null\r\n\r\n/**\r\n * 堆\r\n */\r\nexport let Memory: WebAssembly.Memory = null\r\n\r\n/**\r\n * 1 字节整型读取\r\n * - int8\r\n * - -128 to 127\r\n */\r\nlet Heap8: Int8Array = null\r\n\r\n/**\r\n * 2 字节整型读取 \r\n * - int16\r\n * - -32768 to 32767\r\n */\r\nlet Heap16: Int16Array = null\r\n\r\n/**\r\n * 4 字节整型读取\r\n * - int32\r\n * - -2147483648 to 2147483647\r\n */\r\nlet Heap32: Int32Array = null\r\n\r\n/**\r\n * 8 字节整型读取\r\n * - int64\r\n * - 0 to 4294967295\r\n */\r\nlet Heap64: BigInt64Array = null\r\n\r\n/**\r\n * 1 字节无符号整型读取\r\n * - uint8\r\n * - 0 to 255\r\n */\r\nlet HeapU8: Uint8Array = null\r\n\r\n/**\r\n * 2 字节无符号整型读取\r\n * - uint16\r\n * - 0 to 65535\r\n */\r\nlet HeapU16: Uint16Array = null\r\n\r\n/**\r\n * 4 字节无符号整型读取\r\n * - uint32\r\n * - 0 to 4294967295\r\n */\r\nlet HeapU32: Uint32Array = null\r\n\r\n/**\r\n * 8 字节无符号整型读取\r\n * - uint64\r\n * - 0 to 4294967295\r\n */\r\nlet HeapU64: BigUint64Array = null\r\n\r\n/**\r\n * 堆访问器\r\n */\r\nlet view: DataView = null\r\n\r\nlet AtomicBufferMap: Record<number, AtomicsBuffer> = {\r\n  [CTypeEnum.atomic_char]: HeapU8,\r\n  [CTypeEnum.atomic_uint8]: HeapU8,\r\n  [CTypeEnum.atomic_uint16]: HeapU16,\r\n  [CTypeEnum.atomic_uint32]: HeapU32,\r\n  [CTypeEnum.atomic_uint64]: HeapU64,\r\n  [CTypeEnum.atomic_int8]: Heap8,\r\n  [CTypeEnum.atomic_int16]: Heap16,\r\n  [CTypeEnum.atomic_int32]: Heap32,\r\n  [CTypeEnum.atomic_int64]: Heap64\r\n}\r\n\r\nfunction checkHeap() {\r\n  if (Memory && Memory.buffer !== HeapU8.buffer) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function getHeap() {\r\n  return Memory.buffer\r\n}\r\n\r\nexport let getHeapU8: () => Uint8Array\r\nexport let getView: () => DataView\r\nexport let getAtomicsBuffer: (type: atomictype) => AtomicsBuffer\r\n\r\nfunction getHeapU8_() {\r\n  if (!defined(WASM_64) && defined(ENABLE_THREADS) && checkHeap()) {\r\n    updateHeap(Memory.buffer)\r\n  }\r\n  return HeapU8\r\n}\r\n\r\nexport function getView_() {\r\n  if (!defined(WASM_64) && defined(ENABLE_THREADS) && checkHeap()) {\r\n    updateHeap(Memory.buffer)\r\n  }\r\n  return view\r\n}\r\n\r\nexport function getAtomicsBuffer_(type: atomictype) {\r\n  if (!defined(WASM_64) && defined(ENABLE_THREADS) && checkHeap()) {\r\n    updateHeap(Memory.buffer)\r\n  }\r\n  return AtomicBufferMap[type as number]\r\n}\r\n\r\nfunction initView() {\r\n  if (config.USE_THREADS) {\r\n    getHeapU8 = getHeapU8_\r\n    getView = getView_\r\n    getAtomicsBuffer = getAtomicsBuffer_\r\n  }\r\n  else {\r\n    getHeapU8 = () => HeapU8\r\n    getView = () => view\r\n    getAtomicsBuffer = (type: atomictype) => AtomicBufferMap[type as number]\r\n  }\r\n}\r\n\r\n\r\nfunction setAllocator(a: AllocatorInterface) {\r\n  if (!defined(WASM_64)) {\r\n    if (Allocator) {\r\n      Allocator.removeUpdateHandle(updateHeap)\r\n    }\r\n  }\r\n\r\n  Allocator = a\r\n  if (SELF.CHeap) {\r\n    SELF.CHeap.Allocator = Allocator\r\n  }\r\n\r\n  if (!defined(WASM_64)) {\r\n    Allocator.addUpdateHandle(updateHeap)\r\n    updateHeap(Allocator.getBuffer())\r\n  }\r\n}\r\n\r\nfunction updateHeap(heap: ArrayBuffer | SharedArrayBuffer) {\r\n  if (!defined(WASM_64)) {\r\n    Heap8 = new Int8Array(heap)\r\n    Heap16 = new Int16Array(heap)\r\n    Heap32 = new Int32Array(heap)\r\n    Heap64 = new BigInt64Array(heap)\r\n\r\n    HeapU8 = new Uint8Array(heap)\r\n    HeapU16 = new Uint16Array(heap)\r\n    HeapU32 = new Uint32Array(heap)\r\n    HeapU64 = new BigUint64Array(heap)\r\n\r\n    view = new DataView(heap)\r\n\r\n    AtomicBufferMap = {\r\n      [CTypeEnum.atomic_char]: HeapU8,\r\n      [CTypeEnum.atomic_uint8]: HeapU8,\r\n      [CTypeEnum.atomic_uint16]: HeapU16,\r\n      [CTypeEnum.atomic_uint32]: HeapU32,\r\n      [CTypeEnum.atomic_uint64]: HeapU64,\r\n      [CTypeEnum.atomic_int8]: Heap8,\r\n      [CTypeEnum.atomic_int16]: Heap16,\r\n      [CTypeEnum.atomic_int32]: Heap32,\r\n      [CTypeEnum.atomic_int64]: Heap64\r\n    }\r\n  }\r\n}\r\n\r\nexport function allocThreadId() {\r\n  if (defined(WASM_64)) {\r\n    return (atomicsAsm.instance.exports.add32 as Function)(staticData.threadCounter, 1)\r\n  }\r\n  else {\r\n    return Atomics.add(HeapU32, staticData.threadCounter >>> 2, 1)\r\n  }\r\n}\r\n\r\n/**\r\n * 子线程初始化\r\n * \r\n * @param options \r\n */\r\nexport async function initThread(options: {\r\n  memory: WebAssembly.Memory\r\n  stackPointer?: pointer<void>\r\n  stackSize?: int32\r\n  name?: string\r\n  disableAsm?: boolean\r\n  id?: int32\r\n}) {\r\n  initView()\r\n  if (!defined(WASM_64)) {\r\n    initCtypeEnumImpl(\r\n      () => {\r\n        return Allocator\r\n      },\r\n      getView\r\n    )\r\n    initAtomics(getAtomicsBuffer)\r\n  }\r\n\r\n  Memory = options.memory\r\n\r\n  if (!options.disableAsm || defined(WASM_64)) {\r\n    if (defined(ENV_NODE)) {\r\n      memoryAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n    }\r\n    else {\r\n      // @ts-ignore\r\n      if (typeof BigInt === 'function' && BigInt !== Number\r\n        && (\r\n          browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\r\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\r\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\r\n          || os.ios && browser.checkVersion(os.version, '15', true)\r\n          || browser.newEdge\r\n        )\r\n        || defined(WASM_64)\r\n      ) {\r\n        memoryAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n\r\n    if (defined(ENV_NODE)) {\r\n      atomicsAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n    }\r\n    else {\r\n      if ((\r\n        browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\r\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\r\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\r\n          || os.ios && browser.checkVersion(os.version, '15', true)\r\n          || browser.newEdge\r\n      )\r\n        || defined(WASM_64)\r\n      ) {\r\n        atomicsAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n  }\r\n\r\n  const allocator = defined(WASM_64)\r\n    ? new AllocatorJS64(\r\n      {\r\n        memory: Memory,\r\n        byteOffset: static_cast<int64>(config.HEAP_OFFSET as uint32),\r\n        maxHeapSize: static_cast<int64>(config.HEAP_MAXIMUM) * 64n * 1024n,\r\n        growAllowed: true,\r\n        operator: memoryAsm.instance.exports as unknown as MemoryOperator\r\n      }\r\n      , false\r\n    )\r\n    : new AllocatorJS(\r\n      {\r\n        buffer: Memory.buffer,\r\n        memory: Memory,\r\n        byteOffset: config.HEAP_OFFSET,\r\n        maxHeapSize: config.HEAP_MAXIMUM * 64 * 1024,\r\n        growAllowed: true,\r\n        onResize(old, need) {\r\n          Memory.grow((need - old.byteLength) >>> 16)\r\n          return {\r\n            buffer: Memory.buffer,\r\n            byteOffset: config.HEAP_OFFSET\r\n          }\r\n        }\r\n      },\r\n      false\r\n    )\r\n\r\n  setAllocator(allocator as AllocatorInterface)\r\n\r\n  if (options.stackPointer) {\r\n    StackSize = options.stackSize\r\n    StackTop = options.stackPointer\r\n    StackPointer = new WebAssembly.Global({\r\n      value: defined(WASM_64) ? 'i64' : 'i32',\r\n      mutable: true\r\n    }, StackTop + StackSize)\r\n    Table = new WebassemblyTable()\r\n  }\r\n  if (typeof options.id === 'number') {\r\n    ThreadId = options.id\r\n  }\r\n  else {\r\n    if (defined(WASM_64)) {\r\n      ThreadId = (atomicsAsm.instance.exports.add32 as Function)(staticData.threadCounter, 1)\r\n    }\r\n    else {\r\n      ThreadId = Atomics.add(HeapU32, staticData.threadCounter >>> 2, 1)\r\n    }\r\n  }\r\n  ThreadName = options.name ?? 'anonymous'\r\n\r\n  SELF.CHeap = {\r\n    initThread,\r\n    Allocator,\r\n    Table,\r\n    ThreadId,\r\n    ThreadName,\r\n    Memory,\r\n    Config: config,\r\n\r\n    StackSize,\r\n    StackTop,\r\n    StackPointer,\r\n    isMainThread: false\r\n  }\r\n\r\n  isMainThread = false\r\n}\r\n\r\n/**\r\n * 主线程初始化\r\n */\r\nexport function initMain() {\r\n  initView()\r\n  if (!defined(WASM_64)) {\r\n    initCtypeEnumImpl(\r\n      () => {\r\n        return Allocator\r\n      },\r\n      getView\r\n    )\r\n    initAtomics(getAtomicsBuffer)\r\n  }\r\n\r\n  Memory = SELF.CHeap?.Memory ? SELF.CHeap.Memory : new WebAssembly.Memory({\r\n    initial: reinterpret_cast<size>(config.HEAP_INITIAL),\r\n    maximum: reinterpret_cast<size>(config.HEAP_MAXIMUM),\r\n    shared: config.USE_THREADS,\r\n    // @ts-ignore\r\n    address: defined(WASM_64) ? 'i64' : 'i32',\r\n    // @ts-ignore\r\n    index: defined(WASM_64) ? 'i64' : 'i32'\r\n  })\r\n\r\n  if (!defined(DEBUG) && defined(ENABLE_THREADS) || defined(WASM_64)) {\r\n    if (defined(ENV_NODE)) {\r\n      if (config.USE_THREADS || defined(WASM_64)) {\r\n        memoryAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n    else {\r\n      // @ts-ignore\r\n      if (typeof BigInt === 'function' && BigInt !== Number\r\n        && (\r\n          browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\r\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\r\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\r\n          || os.ios && browser.checkVersion(os.version, '15', true)\r\n          || browser.newEdge\r\n        )\r\n        && config.USE_THREADS\r\n        || defined(WASM_64)\r\n      ) {\r\n        memoryAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n    if (defined(ENV_NODE)) {\r\n      if (config.USE_THREADS && defined(ENABLE_THREADS) || defined(WASM_64)) {\r\n        atomicsAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n    else {\r\n      if (config.USE_THREADS\r\n        && defined(ENABLE_THREADS)\r\n        && (\r\n          browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\r\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\r\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\r\n          || os.ios && browser.checkVersion(os.version, '15', true)\r\n          || browser.newEdge\r\n        )\r\n        || defined(WASM_64)\r\n      ) {\r\n        atomicsAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n      }\r\n    }\r\n  }\r\n\r\n  Allocator = SELF.CHeap?.Allocator\r\n    ? (SELF.CHeap.Allocator as AllocatorInterface)\r\n    : (\r\n      defined(WASM_64)\r\n        ? new AllocatorJS64({\r\n          memory: Memory,\r\n          byteOffset: static_cast<int64>(config.HEAP_OFFSET as uint32),\r\n          maxHeapSize: static_cast<int64>((config.HEAP_MAXIMUM)) * 64n * 1024n,\r\n          growAllowed: true,\r\n          operator: memoryAsm.instance.exports as unknown as MemoryOperator\r\n        }) as unknown as AllocatorInterface\r\n        : new AllocatorJS({\r\n          buffer: Memory.buffer,\r\n          memory: Memory,\r\n          byteOffset: config.HEAP_OFFSET,\r\n          maxHeapSize: config.HEAP_MAXIMUM * 64 * 1024,\r\n          growAllowed: true,\r\n          onResize(old, need) {\r\n            Memory.grow((need - old.byteLength) >>> 16)\r\n            return {\r\n              buffer: Memory.buffer,\r\n              byteOffset: config.HEAP_OFFSET\r\n            }\r\n          }\r\n        })\r\n    )\r\n\r\n  if (!defined(WASM_64)) {\r\n    Allocator.addUpdateHandle(updateHeap)\r\n    updateHeap(Allocator.getBuffer())\r\n  }\r\n\r\n  StackSize = SELF.CHeap?.StackSize ? SELF.CHeap.StackSize : config.STACK_SIZE\r\n  StackTop = SELF.CHeap?.StackTop ? SELF.CHeap.StackTop : Allocator.malloc(reinterpret_cast<size>(StackSize as unknown as uint32))\r\n  StackPointer = SELF.CHeap?.StackPointer ? SELF.CHeap.StackPointer : new WebAssembly.Global({\r\n    value: defined(WASM_64) ? 'i64' : 'i32',\r\n    mutable: true\r\n  }, StackTop + StackSize)\r\n\r\n  Table = SELF.CHeap?.Table ? (SELF.CHeap.Table as WebassemblyTable) : new WebassemblyTable()\r\n\r\n  ThreadId = SELF.CHeap?.ThreadId ? SELF.CHeap.ThreadId : 0\r\n  ThreadName = SELF.CHeap?.ThreadName ? SELF.CHeap.ThreadName : 'main'\r\n\r\n  if (!SELF.CHeap) {\r\n    if (config.USE_THREADS && defined(ENABLE_THREADS)) {\r\n      if (defined(WASM_64)) {\r\n        (atomicsAsm.instance.exports.store32 as Function)(staticData.threadCounter, ThreadId + 1)\r\n        ;(atomicsAsm.instance.exports.store32 as Function)(addressof(staticData.heapMutex.atomic), 0)\r\n      }\r\n      else {\r\n        Atomics.store(HeapU32, staticData.threadCounter >>> 2, ThreadId + 1)\r\n        Atomics.store(Heap32, addressof(staticData.heapMutex.atomic) >>> 2, 0)\r\n      }\r\n    }\r\n    else {\r\n      if (defined(WASM_64)) {\r\n        (memoryAsm.instance.exports.write32 as Function)(staticData.threadCounter, ThreadId + 1)\r\n        ;(memoryAsm.instance.exports.write32 as Function)(addressof(staticData.heapMutex.atomic), 0)\r\n      }\r\n      else {\r\n        HeapU32[staticData.threadCounter >>> 2] = ThreadId + 1\r\n        let index = addressof(staticData.heapMutex.atomic) >>> 2\r\n        Heap32[index] = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!SELF.CHeap) {\r\n    SELF.CHeap = {\r\n      Allocator,\r\n      Table,\r\n      ThreadId,\r\n      ThreadName,\r\n      Memory,\r\n      Config: config,\r\n\r\n      StackSize,\r\n      StackTop,\r\n      StackPointer,\r\n      isMainThread: true,\r\n\r\n      threadCounter: staticData.threadCounter,\r\n      heapMutex: staticData.heapMutex\r\n    }\r\n  }\r\n  isMainThread = true\r\n}\r\n\r\nif (defined(ENV_NODE)) {\r\n  const { isMainThread: isMainThread_ } = require('worker_threads')\r\n  if (isMainThread_) {\r\n    initMain()\r\n  }\r\n  else {\r\n    SELF.CHeap = {\r\n      initThread,\r\n      isMainThread: false,\r\n      Config: config\r\n    }\r\n    isMainThread = false\r\n  }\r\n}\r\nelse {\r\n  if (!isWorker() && !isAudioWorklet() || (isWorker() && !config.USE_THREADS)) {\r\n    initMain()\r\n  }\r\n  else {\r\n    SELF.CHeap = {\r\n      initThread,\r\n      isMainThread: false,\r\n      Config: config\r\n    }\r\n    isMainThread = false\r\n  }\r\n}\r\n","import { CTypeEnumRead } from './ctypeEnumRead'\r\nimport { CTypeEnumWrite } from './ctypeEnumWrite'\r\nimport { symbolStructAddress, symbolStructKeysMeta, symbolStructProxyRevoke } from './symbol'\r\nimport { CTypeEnum, CTypeEnum2Bytes, KeyMeta, KeyMetaKey, Struct } from './typedef'\r\nimport * as is from 'common/util/is'\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport toNumber from 'common/function/toNumber'\r\n\r\nconst ObjectPro = Object.getPrototypeOf({})\r\n\r\nexport function findKeyMeta<T>(prototype: new () => T, key: string) {\r\n  while (true) {\r\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\r\n    if (keysMeta) {\r\n      const meta = keysMeta.get(key)\r\n      if (meta) {\r\n        return meta\r\n      }\r\n    }\r\n    prototype = Object.getPrototypeOf(prototype)\r\n    if (!prototype || prototype === ObjectPro) {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction proxyArray(address: pointer<CTypeEnum | Struct>, length: number, type: CTypeEnum | Struct, pointer: 0 | 1) {\r\n  const obj = {}\r\n  obj[symbolStructAddress] = address\r\n\r\n  let size = reinterpret_cast<int32>(sizeof(pointer ? CTypeEnum.pointer : type))\r\n\r\n  const proxy = new Proxy(obj, {\r\n    get(target, propertyKey, receiver) {\r\n\r\n      if (propertyKey === symbolStructAddress) {\r\n        return target[symbolStructAddress]\r\n      }\r\n\r\n      const index = toNumber(propertyKey)\r\n\r\n      if (defined(WASM_64)) {\r\n        assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + static_cast<int64>((index * size) as uint32)).toString(16)}`)\r\n      }\r\n      else {\r\n        assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + index * size).toString(16)}`)\r\n      }\r\n\r\n      if (pointer) {\r\n        if (defined(WASM_64)) {\r\n          return CTypeEnumRead[CTypeEnum.pointer](target[symbolStructAddress] + static_cast<int64>((index * size) as uint32))\r\n        }\r\n        else {\r\n          return CTypeEnumRead[CTypeEnum.pointer](target[symbolStructAddress] + index * size)\r\n        }\r\n      }\r\n      else {\r\n        if (is.func(type)) {\r\n          return target[propertyKey]\r\n        }\r\n        else {\r\n          if (defined(WASM_64)) {\r\n            return CTypeEnumRead[type](target[symbolStructAddress] + static_cast<int64>((index * size) as uint32))\r\n          }\r\n          else {\r\n            return CTypeEnumRead[type](target[symbolStructAddress] + index * size)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    set(target, propertyKey, newValue, receiver) {\r\n\r\n      if (propertyKey === symbolStructAddress) {\r\n        target[symbolStructAddress] = newValue\r\n        return true\r\n      }\r\n\r\n      const index = toNumber(propertyKey)\r\n\r\n      if (defined(WASM_64)) {\r\n        assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + static_cast<int64>((index * size) as uint32)).toString(16)}`)\r\n      }\r\n      else {\r\n        assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + index * size).toString(16)}`)\r\n      }\r\n\r\n      if (pointer) {\r\n\r\n        assert(defined(WASM_64) ? is.bigint(newValue) : is.number(newValue), 'value is not pointer')\r\n\r\n        if (defined(WASM_64)) {\r\n          CTypeEnumWrite[CTypeEnum.pointer](target[symbolStructAddress] + static_cast<int64>((index * size) as uint32), newValue)\r\n        }\r\n        else {\r\n          CTypeEnumWrite[CTypeEnum.pointer](target[symbolStructAddress] + index * size, newValue)\r\n        }\r\n        target[propertyKey] = newValue\r\n      }\r\n      else {\r\n        if (is.func(type)) {\r\n\r\n          assert(is.object(newValue) && Object.getPrototypeOf(newValue) == type.prototype, `value is not ${type.prototype.constructor.name}'s instance`)\r\n\r\n          const proxy = target[propertyKey] || (target[propertyKey] = proxyStruct(target[symbolStructAddress]\r\n            + (defined(WASM_64) ? static_cast<int64>((index * size) as uint32) : (index * size)), type))\r\n          object.each(newValue, (value, key) => {\r\n            proxy[key] = value\r\n          })\r\n          target[propertyKey] = proxy\r\n        }\r\n        else {\r\n\r\n          assert(is.number(newValue) || is.bigint(newValue), 'value is not number')\r\n          if (defined(WASM_64)) {\r\n            CTypeEnumWrite[type as uint8](target[symbolStructAddress] + static_cast<int64>((index * size) as uint32), newValue)\r\n          }\r\n          else {\r\n            CTypeEnumWrite[type as uint8](target[symbolStructAddress] + index * size, newValue)\r\n          }\r\n          target[propertyKey] = newValue\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  })\r\n\r\n  return proxy\r\n}\r\n\r\nexport function proxyStruct<T>(address: pointer<void>, struct: (new () => T) | {}): T {\r\n  const prototype = is.func(struct) ? struct.prototype : struct\r\n\r\n  const obj = {}\r\n  obj[symbolStructAddress] = address\r\n  Object.setPrototypeOf(obj, prototype)\r\n\r\n  const { proxy, revoke } = Proxy.revocable(obj, {\r\n    get(target, propertyKey, receiver) {\r\n      if (is.string(propertyKey)) {\r\n\r\n        assert(target[symbolStructAddress] !== nullptr, 'target address is null, maybe is free')\r\n\r\n        const meta = findKeyMeta(prototype, (propertyKey as string).replace(/^\\$+/, ''))\r\n\r\n        if (meta) {\r\n          const address = target[symbolStructAddress] + (defined(WASM_64) ? static_cast<uint64>(meta[KeyMetaKey.BaseAddressOffset]) : meta[KeyMetaKey.BaseAddressOffset])\r\n          if (meta[KeyMetaKey.Array]) {\r\n            let t = target[propertyKey]\r\n            if (!t) {\r\n              t = proxyArray(address, meta[KeyMetaKey.ArrayLength], meta[KeyMetaKey.Type], meta[KeyMetaKey.Pointer])\r\n              target[propertyKey] = t\r\n            }\r\n            t[symbolStructAddress] = address\r\n            return t\r\n          }\r\n          else if (meta[KeyMetaKey.Pointer]) {\r\n            let p = CTypeEnumRead[CTypeEnum.pointer](address)\r\n            return p\r\n          }\r\n          else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\r\n            return target[propertyKey] || (target[propertyKey] = proxyStruct(address, meta[KeyMetaKey.Type]))\r\n          }\r\n          else {\r\n            let value = CTypeEnumRead[meta[KeyMetaKey.Type] as uint8](address)\r\n            if (meta[KeyMetaKey.BitField]) {\r\n              value = ((value >>> (CTypeEnum2Bytes[meta[KeyMetaKey.Type]] * 8 - meta[KeyMetaKey.BaseBitOffset] - meta[KeyMetaKey.BitFieldLength]))\r\n                & (Math.pow(2, meta[KeyMetaKey.BitFieldLength]) - 1))\r\n            }\r\n            return value\r\n          }\r\n        }\r\n        else {\r\n          return target[propertyKey]\r\n        }\r\n      }\r\n      else {\r\n        return target[propertyKey]\r\n      }\r\n    },\r\n    set(target, propertyKey, newValue, receiver) {\r\n      if (is.string(propertyKey)) {\r\n        assert(target[symbolStructAddress] !== nullptr, 'target address is null, maybe has freed')\r\n        const meta = findKeyMeta(prototype, (propertyKey as string).replace(/^\\$+/, ''))\r\n        if (meta) {\r\n          const address = target[symbolStructAddress] + (defined(WASM_64) ? static_cast<uint64>(meta[KeyMetaKey.BaseAddressOffset]) : meta[KeyMetaKey.BaseAddressOffset])\r\n          if (meta[KeyMetaKey.Array]) {\r\n            const proxy = target[propertyKey] || proxyArray(address, meta[KeyMetaKey.ArrayLength], meta[KeyMetaKey.Type], meta[KeyMetaKey.Pointer])\r\n            array.each(newValue, (value, key) => {\r\n              proxy[key] = value\r\n            })\r\n            target[propertyKey] = proxy\r\n          }\r\n          else {\r\n            if (meta[KeyMetaKey.Pointer]) {\r\n\r\n              assert(defined(WASM_64) ? is.bigint(newValue) : is.number(newValue), `value is not pointer, struct: ${prototype.constructor.name}, name: ${propertyKey as string}`)\r\n\r\n              CTypeEnumWrite[CTypeEnum.pointer](address, newValue)\r\n              target[propertyKey] = newValue\r\n            }\r\n            else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\r\n\r\n              assert(\r\n                is.object(newValue)\r\n                && Object.getPrototypeOf(newValue) === (\r\n                  is.func(meta[KeyMetaKey.Type])\r\n                    ? meta[KeyMetaKey.Type].prototype\r\n                    : meta[KeyMetaKey.Type]\r\n                ),\r\n                `value is not ${is.func(meta[KeyMetaKey.Type]) ? meta[KeyMetaKey.Type].prototype.constructor.name : 'inline struct'}'s instance, name: ${propertyKey as string}`\r\n              )\r\n\r\n              const proxy = target[propertyKey] || (target[propertyKey] = proxyStruct(address, meta[KeyMetaKey.Type]))\r\n              object.each(newValue, (value, key) => {\r\n                proxy[key] = value\r\n              })\r\n              target[propertyKey] = proxy\r\n            }\r\n            else {\r\n\r\n              assert(is.number(newValue) || is.bigint(newValue), 'value is not number')\r\n\r\n              if (meta[KeyMetaKey.BitField]) {\r\n\r\n                assert(!is.bigint(newValue), `bigint is not support in bit field, struct: ${prototype.constructor.name}, name: ${propertyKey as string}`)\r\n\r\n                let mask = 0\r\n                let len = CTypeEnum2Bytes[meta[KeyMetaKey.Type]] * 8\r\n                for (let i = 0; i < meta[KeyMetaKey.BitFieldLength]; i++) {\r\n                  mask |= (1 << (len - 1 - (i + meta[KeyMetaKey.BaseBitOffset])))\r\n                }\r\n                const value = CTypeEnumRead[meta[KeyMetaKey.Type] as uint8](address)\r\n\r\n                CTypeEnumWrite[meta[KeyMetaKey.Type] as uint8](\r\n                  address,\r\n                  (value & ~mask) | ((newValue & (Math.pow(2, meta[KeyMetaKey.BitFieldLength]) - 1))\r\n                    << (len - meta[KeyMetaKey.BaseBitOffset] - meta[KeyMetaKey.BitFieldLength]))\r\n                )\r\n              }\r\n              else {\r\n                CTypeEnumWrite[meta[KeyMetaKey.Type] as uint8](address, newValue)\r\n              }\r\n              target[propertyKey] = newValue\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          target[propertyKey] = newValue\r\n        }\r\n      }\r\n      else {\r\n        target[propertyKey] = newValue\r\n      }\r\n      return true\r\n    },\r\n    getOwnPropertyDescriptor(target, key) {\r\n      return {\r\n        enumerable: true,\r\n        configurable: true\r\n      }\r\n    },\r\n    ownKeys(target) {\r\n      return Array.from(((target[symbolStructKeysMeta]) as Map<string, any>).keys())\r\n    }\r\n  })\r\n\r\n  obj[symbolStructProxyRevoke] = revoke\r\n\r\n  return proxy as T\r\n}\r\n\r\nexport function revokeProxyStruct<T>(target: T) {\r\n  const revoke = target[symbolStructProxyRevoke]\r\n  if (revoke) {\r\n    revoke()\r\n  }\r\n}\r\n","import { StackPointer, StackTop, StackSize } from './heap'\r\n\r\nexport function malloc(size: size): pointer<void> {\r\n  assert(reinterpret_cast<pointer<void>>(StackPointer.value) - size >= StackTop, 'stack up overflow')\r\n  StackPointer.value = (StackPointer.value as size) - size\r\n  return StackPointer.value\r\n}\r\n\r\nexport function free(size: size): void {\r\n  assert(reinterpret_cast<pointer<void>>(StackPointer.value) + size <= StackTop + reinterpret_cast<size>(StackSize), 'stack down overflow')\r\n  StackPointer.value = (StackPointer.value as size) + size\r\n}\r\n","/**\r\n * 静态分配区只能在此文件分配\r\n * 导出在其他地方使用\r\n */\r\n\r\nimport { SELF } from 'common/util/constant'\r\nimport * as config from './config'\r\nimport { Mutex } from './thread/mutex'\r\n\r\n/**\r\n * 静态分配区栈顶指针\r\n */\r\nlet pointer: pointer<void> = reinterpret_cast<pointer<void>>(reinterpret_cast<pointer<pointer<void>>>(nullptr) + 1)\r\n\r\nexport function malloc(length: size, algin: size = 1): pointer<void> {\r\n\r\n  let address = pointer\r\n\r\n  while (address % algin) {\r\n    address++\r\n  }\r\n\r\n  assert(address < config.HEAP_OFFSET, 'static data overflow')\r\n\r\n  pointer = reinterpret_cast<pointer<void>>(address + length)\r\n\r\n  return address\r\n}\r\n\r\n/**\r\n * 线程计数器地址\r\n */\r\nexport const threadCounter: pointer<uint32> = SELF.CHeap?.threadCounter\r\n  ? SELF.CHeap.threadCounter\r\n  : reinterpret_cast<pointer<uint32>>(malloc(sizeof(uint32), sizeof(uint32)))\r\n\r\n/**\r\n * 堆分配锁地址\r\n */\r\nexport const heapMutex: pointer<Mutex> = SELF.CHeap?.heapMutex\r\n  ? SELF.CHeap.heapMutex\r\n  : reinterpret_cast<pointer<Mutex>>(malloc(sizeof(Mutex), sizeof(atomic_int32)))\r\n","/*\r\n * libmedia SafeUint8Array\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { Uint8ArrayInterface } from 'common/io/interface'\r\nimport { getHeap, Memory } from '../../heap'\r\nimport ArrayLikeInterface from 'common/interface/ArrayLike'\r\nimport * as config from '../../config'\r\n\r\nexport class SafeBufferView {\r\n  private pointer: pointer<void>\r\n\r\n  private len: size\r\n\r\n  private view: DataView\r\n\r\n  constructor(pointer: pointer<uint8>, len: size) {\r\n    this.pointer = pointer\r\n    this.len = len\r\n\r\n    if (defined(WASM_64)) {\r\n      assert(typeof pointer === 'bigint')\r\n    }\r\n  }\r\n\r\n  get byteLength() {\r\n    return reinterpret_cast<double>(this.len) as number\r\n  }\r\n\r\n  get buffer() {\r\n    return getHeap\r\n  }\r\n\r\n  get byteOffset() {\r\n    return defined(WASM_64) ? Number(this.pointer) : this.pointer\r\n  }\r\n\r\n  private getView() {\r\n    if (!this.view || this.view.buffer !== Memory.buffer) {\r\n      this.view = new DataView(getHeap(), defined(WASM_64) ? Number(this.pointer) : this.pointer, reinterpret_cast<double>(this.len))\r\n    }\r\n    return this.view\r\n  }\r\n\r\n  public getFloat32(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getFloat32(byteOffset, littleEndian)\r\n  }\r\n\r\n  public getFloat64(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getFloat64(byteOffset, littleEndian)\r\n  }\r\n\r\n  public getInt8(byteOffset: number): number {\r\n    return this.getView().getInt8(byteOffset)\r\n  }\r\n\r\n  public getInt16(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getInt16(byteOffset, littleEndian)\r\n  }\r\n\r\n  public getInt32(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getInt32(byteOffset, littleEndian)\r\n  }\r\n\r\n  public getUint8(byteOffset: number): number {\r\n    return this.getView().getUint8(byteOffset)\r\n  }\r\n\r\n  public getUint16(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getUint16(byteOffset, littleEndian)\r\n  }\r\n\r\n  public getUint32(byteOffset: number, littleEndian?: boolean): number {\r\n    return this.getView().getUint32(byteOffset, littleEndian)\r\n  }\r\n\r\n  public setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setFloat32(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setFloat64(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public setInt8(byteOffset: number, value: number): void {\r\n    this.getView().setInt8(byteOffset, value)\r\n  }\r\n\r\n  public setInt16(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setInt16(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public setInt32(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setInt32(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public setUint8(byteOffset: number, value: number): void {\r\n    this.getView().setUint8(byteOffset, value)\r\n  }\r\n\r\n  public setUint16(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setUint16(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public setUint32(byteOffset: number, value: number, littleEndian?: boolean): void {\r\n    this.getView().setUint32(byteOffset, value, littleEndian)\r\n  }\r\n\r\n  public getBigInt64(byteOffset: number, littleEndian?: boolean): bigint {\r\n    return this.getView().getBigInt64(byteOffset, littleEndian)\r\n  }\r\n  public getBigUint64(byteOffset: number, littleEndian?: boolean): bigint {\r\n    return this.getView().getBigUint64(byteOffset, littleEndian)\r\n  }\r\n  public setBigInt64(byteOffset: number, value: bigint, littleEndian?: boolean) {\r\n    this.getView().setBigInt64(byteOffset, value, littleEndian)\r\n  }\r\n  public setBigUint64(byteOffset: number, value: bigint, littleEndian?: boolean) {\r\n    this.getView().setBigUint64(byteOffset, value, littleEndian)\r\n  }\r\n}\r\n\r\nexport default class SafeUint8Array extends ArrayLikeInterface implements Uint8ArrayInterface {\r\n\r\n  private pointer: pointer<uint8>\r\n\r\n  private len: size\r\n\r\n  constructor(pointer: pointer<uint8>, len: size) {\r\n    super()\r\n    this.pointer = pointer\r\n    this.len = len\r\n\r\n    if (defined(WASM_64)) {\r\n      assert(typeof pointer === 'bigint')\r\n    }\r\n\r\n    return this.proxy as SafeUint8Array\r\n  }\r\n\r\n  protected getIndexValue(index: uint32): uint8 {\r\n    return accessof(reinterpret_cast<pointer<uint8>>(this.pointer + index))\r\n  }\r\n  protected setIndexValue(index: uint32, value: uint8): void {\r\n    accessof(reinterpret_cast<pointer<uint8>>(this.pointer + index)) <- value\r\n  }\r\n\r\n  public set(array: ArrayLike<number>, offset: uint32 = 0) {\r\n    assert(offset + array.length <= reinterpret_cast<int32>(this.len))\r\n    new Uint8Array(getHeap(), defined(WASM_64) ? Number(this.pointer) : this.pointer, reinterpret_cast<double>(this.len)).set(array, offset)\r\n  }\r\n\r\n  public subarray(begin: uint32 = 0, end?: uint32, safe?: boolean) {\r\n    if (safe && !config.USE_THREADS) {\r\n      return new SafeUint8Array(reinterpret_cast<pointer<uint8>>(this.pointer + begin), (end ? end : reinterpret_cast<double>(this.len)) - begin) as any as Uint8Array\r\n    }\r\n    return new Uint8Array(getHeap(), defined(WASM_64) ? Number(this.pointer + begin) : (this.pointer + begin), (end ?? reinterpret_cast<double>(this.len)) - begin)\r\n  }\r\n\r\n  public slice(start: uint32 = 0, end?: uint32) {\r\n    return new Uint8Array(getHeap(), defined(WASM_64) ? Number(this.pointer + start) : (this.pointer + start), (end ?? reinterpret_cast<double>(this.len)) - start).slice()\r\n  }\r\n\r\n  get length() {\r\n    return reinterpret_cast<double>(this.len) as number\r\n  }\r\n\r\n  get byteLength() {\r\n    return reinterpret_cast<double>(this.len) as number\r\n  }\r\n\r\n  get buffer() {\r\n    return getHeap()\r\n  }\r\n\r\n  get byteOffset() {\r\n    return defined(WASM_64) ? Number(this.pointer) : this.pointer\r\n  }\r\n\r\n  get view() {\r\n    return new SafeBufferView(this.pointer, this.len) as any as DataView\r\n  }\r\n\r\n  [n: int32]: uint8\r\n}\r\n","import { memcpy } from '../../std/memory'\r\nimport { CTypeEnumWrite } from '../../ctypeEnumWrite'\r\nimport { CTypeEnum } from '../../typedef'\r\nimport * as is from 'common/util/is'\r\nimport { CTypeEnumRead } from '../../ctypeEnumRead'\r\nimport structAccess from '../structAccess'\r\nimport { symbolStructAddress } from '../../symbol'\r\n\r\ntype ListNodeDepth = [never, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n@struct\r\nclass ListNode<T = void, D extends ListNodeDepth[number] = 9> {\r\n  // @ts-ignore\r\n  @type(ListNode<T>)\r\n  @pointer()\r\n  prev: [D] extends [never] ? never : pointer<ListNode<T, ListNodeDepth[D]>>\r\n\r\n  // @ts-ignore\r\n  @type(ListNode<T>)\r\n  @pointer()\r\n  next: [D] extends [never] ? never : pointer<ListNode<T, ListNodeDepth[D]>>\r\n\r\n  data: pointer<T>\r\n}\r\n\r\n@struct\r\nexport default class List<T> {\r\n\r\n  public length: uint32 = 0\r\n\r\n  public head: pointer<ListNode<T>> = nullptr\r\n  public tail: pointer<ListNode<T>> = nullptr\r\n\r\n  private createNode(item: any, type?: CTypeEnum | struct<{}>, move: boolean = false) {\r\n    const pNode = malloc(sizeof(ListNode)) as pointer<ListNode<T>>\r\n\r\n    pNode.next = nullptr\r\n    pNode.prev = nullptr\r\n\r\n    if (is.number(type)) {\r\n      assert(is.number(item) || is.bigint(item))\r\n      if (type === typeptr) {\r\n        pNode.data = reinterpret_cast<pointer<T>>(item)\r\n      }\r\n      else {\r\n        const p = malloc(sizeof(type))\r\n        CTypeEnumWrite[type as uint8](p, item)\r\n        pNode.data = reinterpret_cast<pointer<T>>(p)\r\n      }\r\n    }\r\n    else {\r\n      if (move) {\r\n        assert(is.number(item) && item)\r\n        pNode.data = reinterpret_cast<pointer<T>>(item)\r\n      }\r\n      else {\r\n        const p = malloc(sizeof(type))\r\n        memcpy(p, item[symbolStructAddress], sizeof(type))\r\n        pNode.data = reinterpret_cast<pointer<T>>(p)\r\n      }\r\n    }\r\n    return pNode\r\n  }\r\n\r\n  private getItem(data: pointer<T>, type: CTypeEnum | struct<any>) {\r\n    let result: T\r\n\r\n    if (is.number(type)) {\r\n      if (type === typeptr) {\r\n        result = data as T\r\n      }\r\n      else {\r\n        result = CTypeEnumRead[type](data as pointer<T>)\r\n      }\r\n    }\r\n    else {\r\n      result = structAccess(data as pointer<struct<any>>, type as any)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  public push<args=[T]>(item: T): void\r\n  public push<args=[T, true]>(item: pointer<T>): void\r\n  public push(item: any, type?: T, move: boolean = false) {\r\n\r\n    const pNode = this.createNode(item, type, move)\r\n\r\n    if (!this.tail) {\r\n\r\n      assert(!this.head)\r\n\r\n      this.head = pNode\r\n      this.tail = pNode\r\n    }\r\n    else {\r\n      this.tail.next = reinterpret_cast<pointer<ListNode<T>>>(pNode)\r\n      pNode.prev = reinterpret_cast<pointer<ListNode<T>>>(this.tail)\r\n      this.tail = pNode\r\n    }\r\n\r\n    this.length++\r\n  }\r\n\r\n  public pop<args=[T]>(): T\r\n  public pop(type?: T): T {\r\n    assert(this.length)\r\n\r\n    const pNode = this.tail\r\n\r\n    let result = this.getItem(pNode.data, type)\r\n\r\n    if (this.length > 1) {\r\n      pNode.prev.next = nullptr\r\n      this.tail = reinterpret_cast<pointer<ListNode<T>>>(pNode.prev)\r\n    }\r\n    else {\r\n      this.head = this.tail = nullptr\r\n    }\r\n\r\n    this.length--\r\n\r\n    free(reinterpret_cast<pointer<void>>(pNode.data))\r\n    free(pNode)\r\n\r\n    return result\r\n  }\r\n\r\n  public shift<args=[T]>(): T\r\n  public shift(type?: T): T {\r\n    assert(this.length)\r\n\r\n    const pNode = this.head\r\n\r\n    let result = this.getItem(pNode.data, type)\r\n\r\n    if (this.length > 1) {\r\n      pNode.next.prev = nullptr\r\n      this.head = reinterpret_cast<pointer<ListNode<T>>>(pNode.next)\r\n    }\r\n    else {\r\n      this.head = this.tail = nullptr\r\n    }\r\n\r\n    this.length--\r\n\r\n    free(reinterpret_cast<pointer<void>>(pNode.data))\r\n    free(pNode)\r\n\r\n    return result\r\n  }\r\n\r\n  public unshift<args=[T]>(item: T): void\r\n  public unshift<args=[T, true]>(item: pointer<T>): void\r\n  public unshift(item: any, type?: T, move: boolean = false) {\r\n\r\n    const pNode = this.createNode(item, type, move)\r\n\r\n    if (!this.head) {\r\n\r\n      assert(!this.tail)\r\n\r\n      this.head = pNode\r\n      this.tail = pNode\r\n    }\r\n    else {\r\n      this.head.prev = reinterpret_cast<pointer<ListNode<T>>>(pNode)\r\n      pNode.next = reinterpret_cast<pointer<ListNode<T>>>(this.head)\r\n      this.head = pNode\r\n    }\r\n\r\n    this.length++\r\n  }\r\n\r\n  public forEach<args=[T]>(callback: (item: T, index?: uint32) => boolean | void): void\r\n  public forEach(callback: (item: T, index: uint32) => boolean, type?: T) {\r\n    if (!this.length) {\r\n      return\r\n    }\r\n    let current = this.head\r\n    let index = 0\r\n    while (current !== nullptr) {\r\n      if (callback(this.getItem(current.data, type), index) === false) {\r\n        break\r\n      }\r\n      current = reinterpret_cast<pointer<ListNode<T>>>(current.next)\r\n      index++\r\n    }\r\n  }\r\n\r\n  public find<args=[T]>(callback: (item: T, index?: uint32) => boolean): T\r\n  public find(callback: (item: T, index: uint32) => boolean, type?: T): T {\r\n    if (!this.length) {\r\n      return nullptr as T\r\n    }\r\n    let current = this.head\r\n    let index = 0\r\n    while (current !== nullptr) {\r\n      const item = this.getItem(current.data, type)\r\n      if (callback(item, index) === true) {\r\n        return item\r\n      }\r\n      current = reinterpret_cast<pointer<ListNode<T>>>(current.next)\r\n      index++\r\n    }\r\n    return nullptr as T\r\n  }\r\n\r\n  public indexOf<args=[T]>(index: uint32): T\r\n  public indexOf(index: uint32, type?: T): T {\r\n    if (!this.length) {\r\n      return nullptr as T\r\n    }\r\n\r\n    assert(index >= 0 && index < this.length)\r\n\r\n    let current = this.head\r\n    let i = 0\r\n    while (current !== nullptr) {\r\n      if (i === index) {\r\n        return this.getItem(current.data, type)\r\n      }\r\n      current = reinterpret_cast<pointer<ListNode<T>>>(current.next)\r\n      i++\r\n    }\r\n    return nullptr as T\r\n  }\r\n\r\n  public clear<args=[T]>(callback?: (item: T) => void): void\r\n  public clear(callback?: (item: T) => void, type?: T) {\r\n    if (this.length) {\r\n      let current = this.head\r\n      while (current !== nullptr) {\r\n        if (callback) {\r\n          callback(this.getItem(current.data, type))\r\n        }\r\n        free(reinterpret_cast<pointer<void>>(current.data))\r\n        const next = reinterpret_cast<pointer<ListNode<T>>>(current.next)\r\n        free(current)\r\n        current = next\r\n      }\r\n    }\r\n    this.head = this.tail = nullptr\r\n    this.length = 0\r\n  }\r\n}\r\n","import * as is from 'common/util/is'\r\n\r\nexport default function isPointer(p: any): p is pointer<void> {\r\n  return (defined(WASM_64) ? is.bigint(p) : is.number(p)) && p >= nullptr\r\n}\r\n","import { memset } from './memory'\r\nimport { symbolStruct } from '../symbol'\r\nimport * as object from 'common/util/object'\r\nimport { Data } from 'common/types/type'\r\nimport isDef from 'common/function/isDef'\r\nimport structAccess from './structAccess'\r\n\r\n/**\r\n * 创建一个 struct 实例\r\n * \r\n * @param target \r\n * @returns \r\n */\r\nexport default function make<T>(init?: Data, struct?: new (...args: any[]) => T): T {\r\n\r\n  if (!isDef(struct)) {\r\n    struct = init as unknown as new (...args: any[]) => any\r\n    init = null\r\n  }\r\n\r\n  assert(struct.prototype[symbolStruct], 'cannot make struct because of not defined')\r\n\r\n  const size = sizeof(struct)\r\n  const address = malloc(size)\r\n  if (!address) {\r\n    throw new TypeError('cannot alloc memory for struct')\r\n  }\r\n\r\n  memset(address, 0, size)\r\n\r\n  const target = structAccess(address, struct)\r\n\r\n  const data = new struct()\r\n\r\n  if (init) {\r\n    object.extend(data, init)\r\n  }\r\n\r\n  object.each(data, (value, key) => {\r\n    if (isDef(value)) {\r\n      target[key] = value\r\n    }\r\n  })\r\n\r\n  return target\r\n}\r\n","import { getHeapU8, Allocator,\r\n  getHeap\r\n} from '../heap'\r\nimport * as text from 'common/util/text'\r\nimport { CTypeEnum } from '../typedef'\r\nimport { CTypeEnumWrite } from '../ctypeEnumWrite'\r\nimport SafeUint8Array from './buffer/SafeUint8Array'\r\nimport * as config from '../config'\r\nimport { CTypeEnumRead } from '../ctypeEnumRead'\r\n\r\nexport function memcpy(dst: anyptr, src: anyptr, size: size) {\r\n  assert(dst && src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\r\n  if (defined(WASM_64)) {\r\n    CTypeEnumWrite.copy(dst, src, size)\r\n  }\r\n  else {\r\n    getHeapU8().set(getHeapU8().subarray(src, src + size), dst)\r\n  }\r\n}\r\n\r\nexport function memcpyFromUint8Array(dst: pointer<void>, max: size, data: Uint8Array) {\r\n  assert(dst, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(dst), `src address ${dst} is not alloc`)\r\n  if (defined(WASM_64)) {\r\n    const buffer = mapUint8Array(dst, data.length)\r\n    buffer.set(data.subarray(0, static_cast<double>(max)), 0)\r\n  }\r\n  else {\r\n    getHeapU8().set(data.subarray(0, max), dst)\r\n  }\r\n}\r\n\r\nexport function memmove(dst: anyptr, src: anyptr, size: size) {\r\n  assert(dst && src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\r\n  if (defined(WASM_64)) {\r\n    CTypeEnumWrite.copy(dst, src, size)\r\n  }\r\n  else {\r\n    getHeapU8().copyWithin(dst, src, src + size)\r\n  }\r\n}\r\n\r\nexport function memset(src: anyptr, c: uint8, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  if (defined(WASM_64)) {\r\n    CTypeEnumWrite.fill(src, c, n)\r\n  }\r\n  else {\r\n    getHeapU8().subarray(src, src + n).fill(c)\r\n  }\r\n}\r\n\r\nexport function mapSafeUint8Array(src: pointer<void>, n: size): SafeUint8Array {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return config.USE_THREADS ? mapUint8Array(src, n) as any as SafeUint8Array : new SafeUint8Array(reinterpret_cast<pointer<uint8>>(src), n)\r\n}\r\n\r\nexport function mapUint8Array(src: pointer<void>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Uint8Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), static_cast<double>(n))\r\n}\r\n\r\nexport function mapInt8Array(src: pointer<int8>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Int8Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), static_cast<double>(n))\r\n}\r\n\r\nexport function mapUint16Array(src: pointer<uint16>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Uint16Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), static_cast<double>(n))\r\n}\r\n\r\nexport function mapInt16Array(src: pointer<int16>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Int16Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapUint32Array(src: pointer<uint32>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Uint32Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapInt32Array(src: pointer<int32>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Int32Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapUint64Array(src: pointer<uint64>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new BigUint64Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapInt64Array(src: pointer<int64>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new BigInt64Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapFloat32Array(src: pointer<float>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Float32Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function mapFloat64Array(src: pointer<double>, n: size) {\r\n  assert(src, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\r\n  return new Float64Array<ArrayBufferLike>(getHeap(), reinterpret_cast<double>(src), reinterpret_cast<double>(n))\r\n}\r\n\r\nexport function readCString(pointer: pointer<char>, max?: uint32) {\r\n  assert(pointer, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(pointer), `address ${pointer} is not alloc`)\r\n  let stringLen = 0\r\n  while (CTypeEnumRead[CTypeEnum.char](pointer++)) {\r\n    stringLen++\r\n    if (max && stringLen >= max) {\r\n      break\r\n    }\r\n  }\r\n  const len = Math.min(stringLen, max ?? stringLen)\r\n  return text.decode(mapUint8Array(pointer, len))\r\n}\r\n\r\nexport function writeCString(dst: pointer<void>, str: string, max?: uint32, addNull: boolean = true) {\r\n\r\n  assert(dst, 'Out Of Bounds, address: 0')\r\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\r\n\r\n  const data = text.encode(str)\r\n\r\n  let len = data.length\r\n  let remain = addNull ? 1 : 0\r\n\r\n  if (max && len - remain > max) {\r\n    len = max - remain\r\n  }\r\n\r\n  memcpyFromUint8Array(dst, len, data)\r\n\r\n  if (addNull) {\r\n    CTypeEnumWrite[CTypeEnum.int8](dst + len, 0)\r\n  }\r\n}\r\n","import { symbolStruct, symbolStructLength } from '../symbol'\r\nimport * as is from 'common/util/is'\r\nimport { CTypeEnum, CTypeEnum2Bytes, Struct } from '../typedef'\r\n\r\nexport default function sizeof(type: CTypeEnum | Struct): size {\r\n  if (is.number(type)) {\r\n    return reinterpret_cast<size>((CTypeEnum2Bytes[type] || 0) as uint32)\r\n  }\r\n  else if (is.func(type) && type.prototype[symbolStruct]) {\r\n    return reinterpret_cast<size>(type.prototype[symbolStructLength] as uint32)\r\n  }\r\n  return 0\r\n}\r\n","import { symbolStruct, symbolStructKeysMeta } from '../symbol'\r\nimport { proxyStruct } from '../proxyStruct'\r\nimport { definedStruct } from '../definedStruct'\r\nimport support from 'common/util/support'\r\nimport * as is from 'common/util/is'\r\nimport * as keypath from 'common/util/keypath'\r\nimport { KeyMeta, KeyMetaKey } from '../typedef'\r\n\r\n/**\r\n * 访问 struct 指针\r\n * \r\n * @param target \r\n * @param address\r\n * @returns\r\n */\r\nexport default function structAccess<T>(address: pointer<void>, struct: new (...args: any[]) => T): T {\r\n\r\n  assert(struct.prototype[symbolStruct], 'cannot reinterpret cast struct because of not defined')\r\n\r\n  if (arguments[2] && is.string(arguments[2])) {\r\n    struct = struct.prototype\r\n    keypath.each(arguments[2], (key) => {\r\n      const meta = struct[symbolStructKeysMeta] as Map<string, KeyMeta>\r\n      struct = meta.get(key)[KeyMetaKey.Type] as (new (...args: any[]) => T)\r\n    })\r\n  }\r\n\r\n  if (defined(WASM_64)) {\r\n    return proxyStruct(address, struct)\r\n  }\r\n  else {\r\n    return support.proxy ? proxyStruct(address, struct) : definedStruct(address, struct)\r\n  }\r\n}\r\n","import { symbolStruct, symbolStructAddress } from '../symbol'\r\nimport { revokeProxyStruct } from '../proxyStruct'\r\nimport { revokeDefinedStruct } from '../definedStruct'\r\nimport support from 'common/util/support'\r\n\r\n/**\r\n * 销毁一个 struct 实例，调用 make 创建的对象必须调用 unmake，否则内存泄漏\r\n * \r\n * @param target \r\n */\r\nexport default function unmake<T extends Object>(target: T) {\r\n\r\n  assert(Object.getPrototypeOf(target)[symbolStruct], 'cannot unmake struct because of not defined')\r\n\r\n  const p = target[symbolStructAddress]\r\n  if (p) {\r\n    free(p)\r\n    target[symbolStructAddress] = nullptr\r\n    support.proxy ? revokeProxyStruct(target) : revokeDefinedStruct(target)\r\n  }\r\n}\r\n","export const symbolStruct = Symbol('Struct')\r\nexport const symbolStructLength = Symbol('StructLength')\r\nexport const symbolStructMaxBaseTypeByteLength = Symbol('StructMaxBaseTypeByteLength')\r\nexport const symbolStructAddress = Symbol('StructAddress')\r\nexport const symbolStructKeysQueue = Symbol('StructKeysQueue')\r\nexport const symbolStructKeysMeta = Symbol('StructKeysMeta')\r\nexport const symbolStructKeysInstance = Symbol('StructKeysInstance')\r\nexport const symbolStructProxyRevoke = Symbol('StructProxyRevoke')\r\n","export default asm`\r\n(func $atomics_load8 (export \"load8\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load8_u)\r\n)\r\n\r\n(func $load16 (export \"load16\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load16_u)\r\n)\r\n\r\n(func $load32 (export \"load32\") (param $p0 i32) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load)\r\n)\r\n\r\n(func $load64 (export \"load64\") (param $p0 i32) (result i64)\r\n  (local.get $p0)\r\n  (i64.atomic.load)\r\n)\r\n\r\n(func $store8 (export \"store8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store8)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store16 (export \"store16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store16)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store32 (export \"store32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store64 (export \"store64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.store)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $add8 (export \"add8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.add_u)\r\n)\r\n\r\n(func $add16 (export \"add16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.add_u)\r\n)\r\n\r\n(func $add32 (export \"add32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.add)\r\n)\r\n\r\n(func $add64 (export \"add64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.add)\r\n)\r\n\r\n(func $sub8 (export \"sub8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.sub_u)\r\n)\r\n\r\n(func $sub16 (export \"sub16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.sub_u)\r\n)\r\n\r\n(func $sub32 (export \"sub32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.sub)\r\n)\r\n\r\n(func $sub64 (export \"sub64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.sub)\r\n)\r\n\r\n(func $and8 (export \"and8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.and_u)\r\n)\r\n\r\n(func $and16 (export \"and16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.and_u)\r\n)\r\n\r\n(func $and32 (export \"and32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.and)\r\n)\r\n\r\n(func $and64 (export \"and64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.and)\r\n)\r\n\r\n(func $or8 (export \"or8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.or_u)\r\n)\r\n\r\n(func $or16 (export \"or16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.or_u)\r\n)\r\n\r\n(func $or32 (export \"or32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.or)\r\n)\r\n\r\n(func $or64 (export \"or64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.or)\r\n)\r\n\r\n(func $xor8 (export \"xor8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.xor_u)\r\n)\r\n\r\n(func $xor16 (export \"xor16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.xor_u)\r\n)\r\n\r\n(func $xor32 (export \"xor32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.xor)\r\n)\r\n\r\n(func $xor64 (export \"xor64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.xor)\r\n)\r\n\r\n(func $exchange8 (export \"exchange8\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.xchg_u)\r\n)\r\n\r\n(func $exchange16 (export \"exchange16\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.xchg_u)\r\n)\r\n\r\n(func $exchange32 (export \"exchange32\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.xchg)\r\n)\r\n\r\n(func $exchange64 (export \"exchange64\") (param $p0 i32) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.xchg)\r\n)\r\n\r\n(func $compare_exchange8 (export \"compare_exchange8\") (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw8.cmpxchg_u)\r\n)\r\n\r\n(func $compare_exchange16 (export \"compare_exchange16\") (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw16.cmpxchg_u)\r\n)\r\n\r\n(func $compare_exchange32 (export \"compare_exchange32\") (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw.cmpxchg)\r\n)\r\n\r\n(func $compare_exchange64 (export \"compare_exchange64\") (param $p0 i32) (param $p1 i64) (param $p2 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i64.atomic.rmw.cmpxchg)\r\n)\r\n\r\n(func $notify (export \"notify\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (memory.atomic.notify)\r\n)\r\n\r\n(func $wait (export \"wait\") (param $p0 i32) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.const -1)\r\n  (memory.atomic.wait32)\r\n)\r\n\r\n(func $waitTimeout (export \"waitTimeout\") (param $p0 i32) (param $p1 i32) (param $p2 i64) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.atomic.wait32)\r\n)\r\n`\r\n","import { base64ToUint8Array } from 'common/util/base64'\r\nimport * as logger from 'common/util/logger'\r\nimport * as wasmUtils from 'common/util/wasm'\r\n\r\nimport asm from './atomics.asm'\r\nimport asm64 from './atomics64.asm'\r\n\r\nimport { override } from '../atomics'\r\n\r\n/**\r\n * WebAssembly runtime 实例\r\n */\r\nexport let instance: WebAssembly.Instance\r\n\r\nexport function isSupport() {\r\n  return !!instance\r\n}\r\n\r\nexport function init(memory: WebAssembly.Memory, initial: uint32, maximum: uint32) {\r\n  if (defined(DEBUG) && !defined(WASM_64)) {\r\n    return\r\n  }\r\n  try {\r\n    if (typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer || defined(WASM_64)) {\r\n      const wasm = wasmUtils.setMemoryMeta(base64ToUint8Array(defined(WASM_64) ? asm64 : asm), {\r\n        shared: defined(WASM_64)\r\n          ? (typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer)\r\n          : true,\r\n        initial,\r\n        maximum\r\n      })\r\n\r\n      instance = new WebAssembly.Instance(new WebAssembly.Module(wasm), {\r\n        env: {\r\n          memory\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      return\r\n    }\r\n\r\n    override({\r\n      add: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.add8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.add8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.add16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.add16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            assert(!(address % 4))\r\n            return (instance.exports.add32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.add32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.add64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.add64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      sub: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.sub8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.sub8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.sub16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.sub16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            assert(!(address % 4))\r\n            return (instance.exports.sub32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.sub32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.sub64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.sub64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      and: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.and8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.and8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.and16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.and16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            return (instance.exports.and32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.and32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.and64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.and64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      or: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.or8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.or8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.or16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.or16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            return (instance.exports.or32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.or32 as Function)(address, value) as 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.or64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.or64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      xor: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.xor8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.xor8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.xor16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.xor16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            return (instance.exports.xor32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.xor32 as Function)(address, value) as 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.xor64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.xor64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      store: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_int8:\r\n          case atomic_uint8:\r\n            return (instance.exports.store8 as Function)(address, value)\r\n          case atomic_int16:\r\n          case atomic_uint16:\r\n            return (instance.exports.store16 as Function)(address, value)\r\n          case atomic_int32:\r\n          case atomic_uint32:\r\n            assert(!(address % 4))\r\n            return (instance.exports.store32 as Function)(address, value)\r\n          case atomic_int64:\r\n          case atomic_uint64:\r\n            return (instance.exports.store64 as Function)(address, value)\r\n        }\r\n      },\r\n      load: function<T> (address: pointer<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.load8 as Function)(address) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.load8 as Function)(address)\r\n          case atomic_int16:\r\n            return (instance.exports.load16 as Function)(address)\r\n          case atomic_uint16:\r\n            return ((instance.exports.load16 as Function)(address) as 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            assert(!(address % 4))\r\n            return (instance.exports.load32 as Function)(address)\r\n          case atomic_uint32:\r\n            return ((instance.exports.load32 as Function)(address) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.load64 as Function)(address)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.load64 as Function)(address)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      compareExchange: function<T> (\r\n        address: pointer<T>,\r\n        expectedValue: AtomicType2Type<T>,\r\n        replacementValue: AtomicType2Type<T>,\r\n        type?: atomictype\r\n      ): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.compare_exchange8 as Function)(address, expectedValue, replacementValue) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.compare_exchange8 as Function)(address, expectedValue, replacementValue)\r\n          case atomic_int16:\r\n            return (instance.exports.compare_exchange16 as Function)(address, expectedValue, replacementValue)\r\n          case atomic_uint16:\r\n            return ((instance.exports.compare_exchange16 as Function)(address, expectedValue, replacementValue) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            return (instance.exports.compare_exchange32 as Function)(address, expectedValue, replacementValue)\r\n          case atomic_uint32:\r\n            return ((instance.exports.compare_exchange32 as Function)(address, expectedValue, replacementValue) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.compare_exchange64 as Function)(address, expectedValue, replacementValue)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.compare_exchange64 as Function)(\r\n              address,\r\n              expectedValue,\r\n              replacementValue\r\n            )) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      exchange: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        switch (type) {\r\n          case atomic_char:\r\n          case atomic_uint8:\r\n            return ((instance.exports.exchange8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\r\n          case atomic_int8:\r\n            return (instance.exports.exchange8 as Function)(address, value)\r\n          case atomic_int16:\r\n            return (instance.exports.exchange16 as Function)(address, value)\r\n          case atomic_uint16:\r\n            return ((instance.exports.exchange16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\r\n          case atomic_int32:\r\n            return (instance.exports.exchange32 as Function)(address, value)\r\n          case atomic_uint32:\r\n            return ((instance.exports.exchange32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\r\n          case atomic_int64:\r\n            return (instance.exports.exchange64 as Function)(address, value)\r\n          case atomic_uint64:\r\n            return BigInt.asUintN(64, (instance.exports.exchange64 as Function)(address, value)) as AtomicType2Type<T>\r\n        }\r\n      },\r\n      notify: function (address: pointer<atomic_int32>, count: uint32) {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        return (instance.exports.notify as Function)(address, count)\r\n      },\r\n      wait: function (address: pointer<atomic_int32>, value: int32) {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        return (instance.exports.wait as Function)(address, value)\r\n      },\r\n\r\n      waitTimeout: function (address: pointer<atomic_int32>, value: int32, timeout?: int32) {\r\n\r\n        assert(address, 'Out Of Bounds, address: 0')\r\n\r\n        return (instance.exports.waitTimeout as Function)(address, value, static_cast<int64>(timeout) * 1000000n)\r\n      }\r\n    })\r\n  }\r\n  catch (error) {\r\n    logger.warn('atomics asm not support, cannot use asm atomics function')\r\n  }\r\n}\r\n","export default asm64`\r\n(func $atomics_load8 (export \"load8\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load8_u)\r\n)\r\n\r\n(func $load16 (export \"load16\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load16_u)\r\n)\r\n\r\n(func $load32 (export \"load32\") (param $p0 i64) (result i32)\r\n  (local.get $p0)\r\n  (i32.atomic.load)\r\n)\r\n\r\n(func $load64 (export \"load64\") (param $p0 i64) (result i64)\r\n  (local.get $p0)\r\n  (i64.atomic.load)\r\n)\r\n\r\n(func $store8 (export \"store8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store8)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store16 (export \"store16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store16)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store32 (export \"store32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.store)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $store64 (export \"store64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.store)\r\n  (local.get $p1)\r\n)\r\n\r\n(func $add8 (export \"add8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.add_u)\r\n)\r\n\r\n(func $add16 (export \"add16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.add_u)\r\n)\r\n\r\n(func $add32 (export \"add32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.add)\r\n)\r\n\r\n(func $add64 (export \"add64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.add)\r\n)\r\n\r\n(func $sub8 (export \"sub8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.sub_u)\r\n)\r\n\r\n(func $sub16 (export \"sub16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.sub_u)\r\n)\r\n\r\n(func $sub32 (export \"sub32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.sub)\r\n)\r\n\r\n(func $sub64 (export \"sub64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.sub)\r\n)\r\n\r\n(func $and8 (export \"and8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.and_u)\r\n)\r\n\r\n(func $and16 (export \"and16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.and_u)\r\n)\r\n\r\n(func $and32 (export \"and32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.and)\r\n)\r\n\r\n(func $and64 (export \"and64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.and)\r\n)\r\n\r\n(func $or8 (export \"or8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.or_u)\r\n)\r\n\r\n(func $or16 (export \"or16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.or_u)\r\n)\r\n\r\n(func $or32 (export \"or32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.or)\r\n)\r\n\r\n(func $or64 (export \"or64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.or)\r\n)\r\n\r\n(func $xor8 (export \"xor8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.xor_u)\r\n)\r\n\r\n(func $xor16 (export \"xor16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.xor_u)\r\n)\r\n\r\n(func $xor32 (export \"xor32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.xor)\r\n)\r\n\r\n(func $xor64 (export \"xor64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.xor)\r\n)\r\n\r\n(func $exchange8 (export \"exchange8\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw8.xchg_u)\r\n)\r\n\r\n(func $exchange16 (export \"exchange16\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw16.xchg_u)\r\n)\r\n\r\n(func $exchange32 (export \"exchange32\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i32.atomic.rmw.xchg)\r\n)\r\n\r\n(func $exchange64 (export \"exchange64\") (param $p0 i64) (param $p1 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.atomic.rmw.xchg)\r\n)\r\n\r\n(func $compare_exchange8 (export \"compare_exchange8\") (param $p0 i64) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw8.cmpxchg_u)\r\n)\r\n\r\n(func $compare_exchange16 (export \"compare_exchange16\") (param $p0 i64) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw16.cmpxchg_u)\r\n)\r\n\r\n(func $compare_exchange32 (export \"compare_exchange32\") (param $p0 i64) (param $p1 i32) (param $p2 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i32.atomic.rmw.cmpxchg)\r\n)\r\n\r\n(func $compare_exchange64 (export \"compare_exchange64\") (param $p0 i64) (param $p1 i64) (param $p2 i64) (result i64)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (i64.atomic.rmw.cmpxchg)\r\n)\r\n\r\n(func $notify (export \"notify\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (memory.atomic.notify)\r\n)\r\n\r\n(func $wait (export \"wait\") (param $p0 i64) (param $p1 i32) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (i64.const -1)\r\n  (memory.atomic.wait32)\r\n)\r\n\r\n(func $waitTimeout (export \"waitTimeout\") (param $p0 i64) (param $p1 i32) (param $p2 i64) (result i32)\r\n  (local.get $p0)\r\n  (local.get $p1)\r\n  (local.get $p2)\r\n  (memory.atomic.wait32)\r\n)\r\n`\r\n","/* eslint-disable */\r\nexport type AtomicType2Shift<T> =\r\n  T extends atomic_char\r\n  ? 0\r\n  : T extends atomic_int16\r\n  ? 1\r\n  : T extends atomic_int32\r\n  ? 2\r\n  : T extends atomic_int8\r\n  ? 0\r\n  : T extends atomic_uint8\r\n  ? 0\r\n  : T extends atomic_uint16\r\n  ? 1\r\n  : T extends atomic_uint32\r\n  ? 2\r\n  : T extends atomic_uint64\r\n  ? 4\r\n  : T extends atomic_int64\r\n  ? 4\r\n  : T extends atomic_bool\r\n  ? 0\r\n  : never\r\n/* eslint-enable */\r\n\r\ntype AtomicType2CTypeEnum<T> =\r\n  T extends atomic_bool\r\n    ? atomic_int8\r\n    : T\r\n\r\n/**\r\n * 给定的值加到指定位置上\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let add: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 给定的值与指定位置上的值相减\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let sub: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行与运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let and: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行或运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let or: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行异或运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let xor: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 给定的值存在给定位置上\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let store: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 读取给定位置上的值\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let load: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>) => AtomicType2Type<T>\r\n\r\n/**\r\n * 如果指定位置的值与给定的值相等，则将其更新为新的值，并返回该元素原先的值\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let compareExchange: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(\r\n  address: pointer<T>,\r\n  expectedValue: AtomicType2Type<T>,\r\n  replacementValue: AtomicType2Type<T>\r\n) => AtomicType2Type<T>\r\n/**\r\n * 将指定位置的值更新为给定的值，并返回该元素更新前的值。\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nexport let exchange: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\r\n\r\n\r\n/**\r\n * 唤醒等待队列中正在指定位置上等待的线程。返回值为成功唤醒的线程数量。\r\n * \r\n * 返回被唤醒的代理的数量 0 将不会唤醒任何线程\r\n *\r\n */\r\nexport let notify: (address: pointer<atomic_int32>, count: uint32) => uint32\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\r\n * \r\n * 0 \"ok\"、1 \"not-equal\"\r\n *\r\n */\r\nexport let wait: (address: pointer<atomic_int32>, value: int32) => 0 | 1 | 2\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时（毫秒）\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\r\n *\r\n */\r\nexport let waitTimeout: (address: pointer<atomic_int32>, value: int32, timeout: int32) => 0 | 1 | 2\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\r\n * \r\n * 异步非阻塞，适合在主线程上使用\r\n * \r\n * 0 \"ok\"、1 \"not-equal\"\r\n *\r\n */\r\nexport let waitAsync: (address: pointer<atomic_int32>, value: int32) => Promise<0 | 1 | 2>\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\r\n * \r\n * 异步非阻塞，适合在主线程上使用\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\r\n *\r\n */\r\nexport let waitTimeoutAsync: (address: pointer<atomic_int32>, value: int32, timeout: int32) => Promise<0 | 1 | 2>\r\n\r\nexport function override(funcs: Partial<{\r\n  add: typeof add\r\n  sub: typeof sub\r\n  and: typeof and\r\n  or: typeof or\r\n  xor: typeof xor\r\n  store: typeof store\r\n  load: typeof load\r\n  compareExchange: typeof compareExchange\r\n  exchange: typeof exchange\r\n  notify: typeof notify\r\n  wait: typeof wait\r\n  waitTimeout: typeof waitTimeout\r\n  waitAsync: typeof waitAsync\r\n  waitTimeoutAsync: typeof waitTimeoutAsync\r\n}>) {\r\n  if (funcs.add) {\r\n    add = funcs.add\r\n  }\r\n  if (funcs.sub) {\r\n    sub = funcs.sub\r\n  }\r\n  if (funcs.and) {\r\n    and = funcs.and\r\n  }\r\n  if (funcs.or) {\r\n    or = funcs.or\r\n  }\r\n  if (funcs.xor) {\r\n    xor = funcs.xor\r\n  }\r\n  if (funcs.store) {\r\n    store = funcs.store\r\n  }\r\n  if (funcs.load) {\r\n    load = funcs.load\r\n  }\r\n  if (funcs.compareExchange) {\r\n    compareExchange = funcs.compareExchange\r\n  }\r\n  if (funcs.exchange) {\r\n    exchange = funcs.exchange\r\n  }\r\n  if (funcs.notify) {\r\n    notify = funcs.notify\r\n  }\r\n  if (funcs.wait) {\r\n    wait = funcs.wait\r\n  }\r\n  if (funcs.waitTimeout) {\r\n    waitTimeout = funcs.waitTimeout\r\n  }\r\n  if (funcs.waitAsync) {\r\n    waitAsync = funcs.waitAsync\r\n  }\r\n  if (funcs.waitTimeoutAsync) {\r\n    waitTimeoutAsync = funcs.waitTimeoutAsync\r\n  }\r\n}\r\n","import getTimestamp from 'common/function/getTimestamp'\r\nimport nextTick from 'common/function/nextTick'\r\nimport { override } from './atomics'\r\nimport { AtomicsBuffer } from '../typedef'\r\nimport * as config from '../config'\r\nimport browser from 'common/util/browser'\r\nimport support from 'common/util/support'\r\n\r\nlet getAtomicsBuffer: (type: atomictype) => AtomicsBuffer\r\n\r\nconst useAtomics = config.USE_THREADS || (!browser.chrome && support.atomics || browser.checkVersion(browser.majorVersion, '94', true))\r\n\r\n/**\r\n * 给定的值加到指定位置上\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction add<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.add(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] += value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 给定的值与指定位置上的值相减\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction sub<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.sub(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] -= value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行与运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction and<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.and(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] &= value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行或运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction or<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.or(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] |= value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 给定的值与指定位置上的值进行异或运算\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction xor<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.xor(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] ^= value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 给定的值存在给定位置上\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction store<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.store(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] = value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 读取给定位置上的值\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction load<T extends atomictype>(address: pointer<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.load(getAtomicsBuffer(type) as Uint8Array, address >>> shift as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 如果指定位置的值与给定的值相等，则将其更新为新的值，并返回该位置原先的值\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction compareExchange<T extends atomictype>(\r\n  address: pointer<T>,\r\n  expectedValue: AtomicType2Type<T>,\r\n  replacementValue: AtomicType2Type<T>,\r\n  type?: T,\r\n  shift?: uint32\r\n): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.compareExchange(\r\n      getAtomicsBuffer(type) as Uint8Array,\r\n      address >>> shift,\r\n      expectedValue as uint8,\r\n      replacementValue as uint8\r\n    ) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index] as uint8\r\n    if (old === expectedValue) {\r\n      buffer[index] = replacementValue as uint8\r\n    }\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 将指定位置的值更新为给定的值，并返回该位置更新前的值。\r\n * \r\n * 返回该位置的旧值\r\n *\r\n */\r\nfunction exchange<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.exchange(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\r\n  }\r\n  else {\r\n    const buffer = getAtomicsBuffer(type) as Uint8Array\r\n    const index = address >>> shift\r\n    const old = buffer[index]\r\n    buffer[index] = value as uint8\r\n    return old as AtomicType2Type<T>\r\n  }\r\n}\r\n\r\n/**\r\n * 唤醒等待队列中正在指定位置上等待的线程。返回值为成功唤醒的线程数量。\r\n * \r\n * 返回被唤醒的代理的数量\r\n *\r\n */\r\nfunction notify(address: pointer<atomic_int32>, count: uint32): uint32 {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  if (defined(ENABLE_THREADS) && useAtomics) {\r\n    return Atomics.notify(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, count)\r\n  }\r\n  else {\r\n    return\r\n  }\r\n}\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"timed-out\"\r\n *\r\n */\r\nconst waitMap: Record<'ok' | 'not-equal' | 'timed-out', 0 | 1 | 2> = {\r\n  'ok': 0,\r\n  'not-equal': 1,\r\n  'timed-out': 2\r\n}\r\n\r\nfunction wait(address: pointer<atomic_int32>, value: int32): 0 | 1 | 2 {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  return waitMap[Atomics.wait(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value)]\r\n}\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\r\n *\r\n */\r\nfunction waitTimeout(address: pointer<atomic_int32>, value: int32, timeout: int32): 0 | 1 | 2 {\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n  return waitMap[Atomics.wait(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value, timeout)]\r\n}\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"timed-out\"\r\n *\r\n */\r\nasync function waitAsync(address: pointer<atomic_int32>, value: int32): Promise<0 | 1 | 2> {\r\n\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n\r\n  if (Atomics.waitAsync) {\r\n    const result = Atomics.waitAsync(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value)\r\n    if (result.async) {\r\n      return waitMap[await result.value]\r\n    }\r\n    return waitMap[result.value as 'not-equal' | 'timed-out']\r\n  }\r\n  else {\r\n\r\n    if (static_cast<int32>(load(address)) !== value) {\r\n      return 1\r\n    }\r\n    else {\r\n      while (static_cast<int32>(load(address)) === value) {\r\n        // 跳过当前事件循环\r\n        await new Promise<void>((resolve) => {\r\n          nextTick(() => {\r\n            resolve()\r\n          })\r\n        })\r\n      }\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\r\n * \r\n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\r\n *\r\n */\r\nasync function waitTimeoutAsync(address: pointer<atomic_int32>, value: int32, timeout: int32): Promise<0 | 1 | 2> {\r\n\r\n  assert(address, 'Out Of Bounds, address: 0')\r\n\r\n  if (Atomics.waitAsync) {\r\n    const result = Atomics.waitAsync(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value, timeout)\r\n    if (result.async) {\r\n      return waitMap[await result.value]\r\n    }\r\n    return waitMap[result.value as 'not-equal' | 'timed-out']\r\n  }\r\n  else {\r\n\r\n    if (static_cast<int32>(load(address)) !== value) {\r\n      return 1\r\n    }\r\n    else {\r\n      const now = getTimestamp()\r\n\r\n      while (static_cast<int32>(load(address)) === value && (getTimestamp() - now < timeout)) {\r\n        // 跳过当前事件循环\r\n        await new Promise<void>((resolve) => {\r\n          nextTick(() => {\r\n            resolve()\r\n          })\r\n        })\r\n      }\r\n      return load(address) !== value ? 0 : 2\r\n    }\r\n  }\r\n}\r\n\r\nexport default function init(getAtomicsBuffer_: (type: atomictype) => AtomicsBuffer,) {\r\n\r\n  getAtomicsBuffer = getAtomicsBuffer_\r\n\r\n  override({\r\n    add,\r\n    sub,\r\n    and,\r\n    or,\r\n    xor,\r\n    store,\r\n    load,\r\n    compareExchange,\r\n    exchange,\r\n    notify,\r\n    wait,\r\n    waitTimeout,\r\n    waitAsync,\r\n    waitTimeoutAsync\r\n  })\r\n}\r\n","/**\r\n * 参考 https://github.com/mozilla-spidermonkey/js-lock-and-condition\r\n */\r\n\r\nimport * as mutexUtil from './mutex'\r\nimport * as atomics from './atomics'\r\nimport { Mutex } from './mutex'\r\n\r\n@struct\r\nexport class Cond {\r\n  atomic: atomic_int32\r\n}\r\n\r\n/**\r\n * 初始化条件变量\r\n */\r\nexport function init(cond: pointer<Cond>, attr?: pointer<void>): int32 {\r\n  atomics.store(addressof(cond.atomic), 0)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 销毁条件变量\r\n */\r\nexport function destroy(cond: pointer<Cond>): int32 {\r\n  atomics.store(addressof(cond.atomic), 0)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 唤醒条件变量上的一个等待线程\r\n * \r\n * @param cond \r\n */\r\nexport function signal(cond: pointer<Cond>): int32 {\r\n  atomics.add(addressof(cond.atomic), 1)\r\n  atomics.notify(addressof(cond.atomic), 1)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 唤醒条件变量上的所有等待线程\r\n * \r\n * @param cond \r\n */\r\nexport function broadcast(cond: pointer<Cond>): int32 {\r\n  atomics.add(addressof(cond.atomic), 1)\r\n  atomics.notify(addressof(cond.atomic), 1 << 30)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 线程在条件变量处等待\r\n * \r\n * @param cond \r\n * @param mutex \r\n * @returns \r\n */\r\nexport function wait(cond: pointer<Cond>, mutex: pointer<Mutex>): int32 {\r\n  let c = atomics.load(addressof(cond.atomic))\r\n  mutexUtil.unlock(mutex)\r\n  atomics.wait(addressof(cond.atomic), c)\r\n  mutexUtil.lock(mutex)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 线程在条件变量处异步等待\r\n * \r\n * @param cond \r\n * @param mutex \r\n */\r\nexport async function waitAsync(cond: pointer<Cond>, mutex: pointer<Mutex>): Promise<int32> {\r\n  let c = atomics.load(addressof(cond.atomic))\r\n  mutexUtil.unlock(mutex)\r\n\r\n  await atomics.waitAsync(addressof(cond.atomic), c)\r\n\r\n  await mutexUtil.lockAsync(mutex)\r\n\r\n  return 0\r\n}\r\n\r\n/**\r\n * 线程在条件变量处超时等待\r\n * \r\n * @param cond \r\n * @param mutex \r\n * @param timeout 毫秒\r\n */\r\nexport function timedWait(cond: pointer<Cond>, mutex: pointer<Mutex>, timeout: int32): int32 {\r\n  let c = atomics.load(addressof(cond.atomic))\r\n  mutexUtil.unlock(mutex)\r\n  let ret = atomics.waitTimeout(addressof(cond.atomic), c, timeout)\r\n  mutexUtil.lock(mutex)\r\n  return ret === 2 ? 110 : 0\r\n}\r\n\r\n/**\r\n * 线程在条件变量处超时异步等待\r\n * \r\n * @param cond \r\n * @param mutex \r\n * @param timeout 毫秒\r\n */\r\nexport async function timedwaitAsync(cond: pointer<Cond>, mutex: pointer<Mutex>, timeout: int32): Promise<int32> {\r\n  let c = atomics.load(addressof(cond.atomic))\r\n  mutexUtil.unlock(mutex)\r\n  let ret = await atomics.waitTimeoutAsync(addressof(cond.atomic), c, timeout)\r\n  await mutexUtil.lockAsync(mutex)\r\n  return ret === 2 ? 110 : 0\r\n}\r\n\r\n","import IPCPort, { REQUEST } from 'common/network/IPCPort'\r\nimport NodeIPCPort from 'common/network/NodeIPCPort'\r\nimport { SELF } from 'common/util/constant'\r\nimport * as is from 'common/util/is'\r\nimport { CHeapError } from '../error'\r\n\r\nlet parentPort = SELF\r\nif (defined(ENV_NODE)) {\r\n  const { parentPort: parentPort_ } = require('worker_threads')\r\n  parentPort = parentPort_\r\n}\r\n\r\nexport default function init(run: (...args: any[]) => any) {\r\n\r\n  let ipc: IPCPort\r\n  let target: any\r\n\r\n  function initIPC(port: MessagePort) {\r\n    ipc = defined(ENV_NODE) ? new NodeIPCPort(port) : new IPCPort(port)\r\n    ipc.on(REQUEST, async (data: any) => {\r\n      const method = data.method\r\n      const params = data.params\r\n\r\n      if (is.func(target[method])) {\r\n        try {\r\n          if (!target[method].transfer) {\r\n            target[method].transfer = []\r\n          }\r\n          const result = await target[method](...params.params)\r\n          ipc.reply(data, result, null, target[method].transfer)\r\n          target[method].transfer.length = 0\r\n        }\r\n        catch (error) {\r\n          if (defined(DEBUG)) {\r\n            console.error(error)\r\n          }\r\n          ipc.reply(data, CHeapError.REQUEST_ERROR, {\r\n            message: error.message\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handler = (message: MessageEvent<any>) => {\r\n    const origin = defined(ENV_NODE) ? message : message.data\r\n    const type = origin.type\r\n    const data = origin.data\r\n\r\n    switch (type) {\r\n      case 'init':\r\n        if (SELF.CHeap && SELF.CHeap.initThread && SELF.CHeap.Config.USE_THREADS) {\r\n          SELF.CHeap.initThread(data).then(() => {\r\n            parentPort.postMessage({\r\n              type: 'ready'\r\n            })\r\n          })\r\n          return\r\n        }\r\n        parentPort.postMessage({\r\n          type: 'ready'\r\n        })\r\n        break\r\n      case 'run':\r\n\r\n        parentPort.postMessage({\r\n          type: 'running'\r\n        })\r\n\r\n        target = run(data.params)\r\n\r\n        initIPC(data.port)\r\n\r\n        break\r\n      case 'stop':\r\n        if (ipc) {\r\n          ipc.destroy()\r\n        }\r\n        // @ts-ignore\r\n        if (SELF.__freeSmartPtr__) {\r\n          // @ts-ignore\r\n          SELF.__freeSmartPtr__()\r\n        }\r\n        parentPort.postMessage({\r\n          type: 'stopped'\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  if (defined(ENV_NODE)) {\r\n    // @ts-ignore\r\n    parentPort.on('message', handler)\r\n  }\r\n  else {\r\n    parentPort.onmessage = handler\r\n  }\r\n}\r\n","import { SELF } from 'common/util/constant'\r\n\r\nlet parentPort = SELF\r\nif (defined(ENV_NODE)) {\r\n  const { parentPort: parentPort_ } = require('worker_threads')\r\n  parentPort = parentPort_\r\n}\r\n\r\nexport default function init(run: (...args: any[]) => any) {\r\n  let retval: any\r\n\r\n  const handler = (message: MessageEvent<any>) => {\r\n    const origin = defined(ENV_NODE) ? message : message.data\r\n    const type = origin.type\r\n    const data = origin.data\r\n\r\n    switch (type) {\r\n      case 'init':\r\n        if (SELF.CHeap && SELF.CHeap.initThread && SELF.CHeap.Config.USE_THREADS) {\r\n          SELF.CHeap.initThread(data).then(() => {\r\n            parentPort.postMessage({\r\n              type: 'ready'\r\n            })\r\n          })\r\n          return\r\n        }\r\n\r\n        parentPort.postMessage({\r\n          type: 'ready'\r\n        })\r\n        break\r\n      case 'run':\r\n        retval = run(data.params)\r\n        break\r\n      case 'stop':\r\n        if (retval && retval.then) {\r\n          retval.then((res: any) => {\r\n            // @ts-ignore\r\n            if (SELF.__freeSmartPtr__) {\r\n              // @ts-ignore\r\n              SELF.__freeSmartPtr__()\r\n            }\r\n            parentPort.postMessage({\r\n              type: 'stopped',\r\n              data: res\r\n            })\r\n          })\r\n        }\r\n        else {\r\n          // @ts-ignore\r\n          if (SELF.__freeSmartPtr__) {\r\n            // @ts-ignore\r\n            SELF.__freeSmartPtr__()\r\n          }\r\n          parentPort.postMessage({\r\n            type: 'stopped',\r\n            data: retval\r\n          })\r\n        }\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  if (defined(ENV_NODE)) {\r\n    // @ts-ignore\r\n    parentPort.on('message', handler)\r\n  }\r\n  else {\r\n    parentPort.onmessage = handler\r\n  }\r\n}\r\n","import IPCPort, { REQUEST } from 'common/network/IPCPort'\r\nimport NodeIPCPort from 'common/network/NodeIPCPort'\r\nimport { SELF } from 'common/util/constant'\r\nimport * as is from 'common/util/is'\r\nimport { CHeapError } from '../error'\r\n\r\nlet parentPort = SELF\r\nif (defined(ENV_NODE)) {\r\n  const { parentPort: parentPort_ } = require('worker_threads')\r\n  parentPort = parentPort_\r\n}\r\n\r\nexport default function init(module: Object) {\r\n\r\n  let ipc: IPCPort\r\n\r\n  function initIPC(port: MessagePort) {\r\n    ipc = defined(ENV_NODE) ? new NodeIPCPort(port) : new IPCPort(port)\r\n    ipc.on(REQUEST, async (data: any) => {\r\n      const method = data.method\r\n      const params = data.params\r\n\r\n      if (is.func(module[method])) {\r\n        try {\r\n          if (!module[method].transfer) {\r\n            module[method].transfer = []\r\n          }\r\n          const result = await module[method](...params.params)\r\n          ipc.reply(data, result, null, module[method].transfer)\r\n          module[method].transfer.length = 0\r\n        }\r\n        catch (error) {\r\n          if (defined(DEBUG)) {\r\n            console.error(error)\r\n          }\r\n          ipc.reply(data, CHeapError.REQUEST_ERROR, {\r\n            message: error.message\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handler = (message: MessageEvent<any>) => {\r\n    const origin = defined(ENV_NODE) ? message : message.data\r\n    const type = origin.type\r\n    const data = origin.data\r\n\r\n    switch (type) {\r\n      case 'init':\r\n        if (SELF.CHeap && SELF.CHeap.initThread && SELF.CHeap.Config.USE_THREADS) {\r\n          SELF.CHeap.initThread(data).then(() => {\r\n            parentPort.postMessage({\r\n              type: 'ready'\r\n            })\r\n          })\r\n          return\r\n        }\r\n        parentPort.postMessage({\r\n          type: 'ready'\r\n        })\r\n        break\r\n      case 'run':\r\n\r\n        parentPort.postMessage({\r\n          type: 'running'\r\n        })\r\n\r\n        initIPC(data.port)\r\n\r\n        break\r\n      case 'stop':\r\n        if (ipc) {\r\n          ipc.destroy()\r\n        }\r\n        // @ts-ignore\r\n        if (SELF.__freeSmartPtr__) {\r\n          // @ts-ignore\r\n          SELF.__freeSmartPtr__()\r\n        }\r\n        parentPort.postMessage({\r\n          type: 'stopped'\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  if (defined(ENV_NODE)) {\r\n    // @ts-ignore\r\n    parentPort.on('message', handler)\r\n  }\r\n  else {\r\n    parentPort.onmessage = handler\r\n  }\r\n}\r\n","/**\r\n * 参考 https://github.com/mozilla-spidermonkey/js-lock-and-condition\r\n */\r\n\r\nimport { POSIXError } from '../error'\r\nimport * as atomics from './atomics'\r\nimport isWorker from 'common/function/isWorker'\r\n\r\n@struct\r\nexport class Mutex {\r\n  atomic: atomic_int32\r\n}\r\n\r\nconst enum STATUS {\r\n  UNLOCK,\r\n  LOCKED,\r\n  WAITED\r\n}\r\n\r\n/**\r\n * 初始化锁\r\n * \r\n * @param mutex \r\n * @returns \r\n */\r\nexport function init(mutex: pointer<Mutex>): int32 {\r\n  atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 加锁\r\n * \r\n * @param mutex \r\n * @param spin 是否自旋\r\n */\r\nexport function lock(mutex: pointer<Mutex>, spin: boolean = false): int32 {\r\n  let status: STATUS\r\n  // 不为 UNLOCK，说明其他线程持锁，将锁置为 LOCKED 状态\r\n  if ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED)) !== STATUS.UNLOCK) {\r\n    do {\r\n      // 如果依旧得不到锁，将锁置为 WAITED 状态\r\n      if (status == STATUS.WAITED\r\n        || atomics.compareExchange(addressof(mutex.atomic), STATUS.LOCKED, STATUS.WAITED) !== STATUS.UNLOCK\r\n      ) {\r\n        // 主线程不能 wait，直接自旋（需要注意所有线程各自的持锁时间，避免出现忙等占用大量 cpu 时间）\r\n        if (!spin && isWorker()) {\r\n          atomics.wait(addressof(mutex.atomic), STATUS.WAITED)\r\n        }\r\n      }\r\n    }\r\n    // 再次尝试获取锁\r\n    while ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.WAITED)) !== STATUS.UNLOCK)\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n/**\r\n * 尝试加锁\r\n * \r\n * @param mutex \r\n */\r\nexport function tryLock(mutex: pointer<Mutex>): int32 {\r\n  if (atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED) === STATUS.UNLOCK) {\r\n    return 0\r\n  }\r\n  // EBUSY\r\n  return POSIXError.EBUSY\r\n}\r\n\r\n\r\n/**\r\n * 异步加锁\r\n * \r\n * @param mutex\r\n */\r\nexport async function lockAsync(mutex: pointer<Mutex>): Promise<int32> {\r\n  let status: STATUS\r\n  // 不为 UNLOCK，说明其他线程持锁，将锁置为 LOCKED 状态\r\n  if ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED)) !== STATUS.UNLOCK) {\r\n    do {\r\n      // 如果依旧得不到锁，将锁置为 WAITED 状态\r\n      if (status == STATUS.WAITED\r\n        || atomics.compareExchange(addressof(mutex.atomic), STATUS.LOCKED, STATUS.WAITED) !== STATUS.UNLOCK\r\n      ) {\r\n        await atomics.waitAsync(addressof(mutex.atomic), STATUS.WAITED)\r\n      }\r\n    }\r\n    // 再次尝试获取锁\r\n    while ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.WAITED)) !== STATUS.UNLOCK)\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n/**\r\n * 释放锁\r\n * \r\n * @param mutex \r\n */\r\nexport function unlock(mutex: pointer<Mutex>): int32 {\r\n\r\n  assert(atomics.load(addressof(mutex.atomic)) === STATUS.LOCKED || atomics.load(addressof(mutex.atomic)) === STATUS.WAITED)\r\n\r\n  let status: STATUS = atomics.sub(addressof(mutex.atomic), 1)\r\n  // 此时拥有锁，状态为 LOCKED 或 WAITED\r\n  if (status !== STATUS.LOCKED) {\r\n    // 释放锁\r\n    atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\r\n    // 唤醒一个 wait 的线程\r\n    atomics.notify(addressof(mutex.atomic), 1)\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n/**\r\n * 销毁锁\r\n * \r\n * @param mutex \r\n * @returns \r\n */\r\nexport function destroy(mutex: pointer<Mutex>): int32 {\r\n  atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\r\n  return 0\r\n}\r\n","import * as atomics from './atomics'\r\nimport * as mutex from './mutex'\r\nimport { Mutex } from './mutex'\r\n\r\n@struct\r\nexport class Sem {\r\n  atomic: atomic_int32\r\n  mutex: Mutex\r\n}\r\n\r\n\r\n/**\r\n * 初始化信号量\r\n * \r\n * @param sem \r\n * @param value 信号量初始值\r\n */\r\nexport function init(sem: pointer<Sem>, value: uint32): int32 {\r\n  atomics.store(addressof(sem.atomic), static_cast<int32>(value))\r\n  mutex.init(addressof(sem.mutex))\r\n  return 0\r\n}\r\n\r\nexport function destroy(sem: pointer<Sem>): int32 {\r\n  mutex.destroy(addressof(sem.mutex))\r\n  return 0\r\n}\r\n\r\n/**\r\n * 生产信号量\r\n * \r\n * @param sem \r\n */\r\nexport function post(sem: pointer<Sem>): int32 {\r\n  atomics.add(addressof(sem.atomic), 1)\r\n  atomics.notify(addressof(sem.atomic), 1)\r\n  return 0\r\n}\r\n\r\n/**\r\n * 消费信号量\r\n * \r\n * @param sem \r\n */\r\nexport function wait(sem: pointer<Sem>): int32 {\r\n  while (true) {\r\n    atomics.wait(addressof(sem.atomic), 0)\r\n    let old = atomics.sub(addressof(sem.atomic), 1)\r\n    if (old <= 0) {\r\n      // 此时已经没有了，将减掉的加回来继续等待\r\n      atomics.add(addressof(sem.atomic), 1)\r\n    }\r\n    else {\r\n      break\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * 消费信号量\r\n * \r\n * @param sem \r\n */\r\nexport function tryWait(sem: pointer<Sem>): int32 {\r\n  mutex.lock(addressof(sem.mutex))\r\n  if (sem.atomic > 0) {\r\n    sem.atomic--\r\n    mutex.unlock(addressof(sem.mutex))\r\n    return 0\r\n  }\r\n  mutex.unlock(addressof(sem.mutex))\r\n  return 11\r\n}\r\n\r\n/**\r\n * 消费信号量，并设置一个超时\r\n * \r\n * @param sem \r\n * @param timeout 毫秒\r\n * @returns \r\n */\r\nexport function timedWait(sem: pointer<Sem>, timeout: int32): int32 {\r\n  let ret = atomics.waitTimeout(addressof(sem.atomic), 0, timeout)\r\n  if (ret !== 2) {\r\n    let old = atomics.sub(addressof(sem.atomic), 1)\r\n    if (old <= 0) {\r\n      // 此时已经没有了，将减掉的加回来\r\n      atomics.add(addressof(sem.atomic), 1)\r\n      // ETIMEDOUT\r\n      return 110\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * 异步消费信号量\r\n * \r\n * @param sem \r\n */\r\nexport async function waitAsync(sem: pointer<Sem>): Promise<int32> {\r\n  while (true) {\r\n    await atomics.waitAsync(addressof(sem.atomic), 0)\r\n    let old = atomics.sub(addressof(sem.atomic), 1)\r\n    if (old <= 0) {\r\n      // 此时已经没有了，将减掉的加回来继续等待\r\n      atomics.add(addressof(sem.atomic), 1)\r\n    }\r\n    else {\r\n      break\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * 异步消费信号量，并设置一个超时\r\n * \r\n * @param sem \r\n * @param timeout 毫秒\r\n */\r\nexport async function timedWaitAsync(sem: pointer<Sem>, timeout: int32): Promise<int32> {\r\n  let ret = await atomics.waitTimeoutAsync(addressof(sem.atomic), 0, timeout)\r\n  if (ret !== 2) {\r\n    let old = atomics.sub(addressof(sem.atomic), 1)\r\n    if (old <= 0) {\r\n      // 此时已经没有了，将减掉的加回来\r\n      atomics.add(addressof(sem.atomic), 1)\r\n      // ETIMEDOUT\r\n      return 110\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n\r\nexport function set(sem: pointer<Sem>, value: int32): int32 {\r\n  atomics.store(addressof(sem.atomic), value)\r\n  return 0\r\n}\r\n\r\nexport function get(sem: pointer<Sem>): int32 {\r\n  return atomics.load(addressof(sem.atomic))\r\n}\r\n\r\n","import { PromiseType, RemoveNeverProperties } from 'common/types/advanced'\r\nimport IPCPort from 'common/network/IPCPort'\r\nimport NodeIPCPort from 'common/network/NodeIPCPort'\r\nimport { Memory } from '../heap'\r\nimport sourceLoad from 'common/function/sourceLoad'\r\nimport * as config from '../config'\r\nimport * as is from 'common/util/is'\r\nimport { SELF } from 'common/util/constant'\r\nimport generateUUID from 'common/function/generateUUID'\r\nimport toString from 'common/function/toString'\r\nimport align from 'common/math/align'\r\n\r\nlet Worker: new (url: string) => Worker = SELF.Worker\r\nlet MessageChannel: new () => MessageChannel = SELF.MessageChannel\r\n\r\nif (defined(ENV_NODE)) {\r\n  const { Worker: Worker_, MessageChannel: MessageChannel_ } = require('worker_threads')\r\n  Worker = Worker_\r\n  MessageChannel = MessageChannel_\r\n}\r\n\r\nif (defined(ENABLE_THREADS) && defined(ENV_WEBPACK)) {\r\n  // 保证打包工具可以包含下面的模块代码\r\n  require('./initClass')\r\n  require('./initFunction')\r\n  require('./initModule')\r\n}\r\n\r\nconst initClass = (defined(ENABLE_THREADS) && defined(ENV_WEBPACK)) ? sourceLoad(require.resolve('./initClass'), {\r\n  varName: 'init'\r\n}) : null\r\nconst initFunction = (defined(ENABLE_THREADS) && defined(ENV_WEBPACK)) ? sourceLoad(require.resolve('./initFunction'), {\r\n  varName: 'init'\r\n}) : null\r\nconst initModule = (defined(ENABLE_THREADS) && defined(ENV_WEBPACK)) ? sourceLoad(require.resolve('./initModule'), {\r\n  varName: 'init'\r\n}) : null\r\n\r\nconst symbolRevoke = Symbol('revoke')\r\n\r\ntype AsyncReturnWithoutProperties<T> = RemoveNeverProperties<{\r\n  [K in keyof T]: T[K] extends (...args: any[]) => any\r\n    ? (T[K] extends (...args: any[]) => Promise<any>\r\n      ? T[K] & {\r\n        transfer: (...transfer: Transferable[]) => { invoke: T[K] }\r\n      }\r\n      : (...args: Parameters<T[K]>) => Promise<ReturnType<T[K]>> ) & {\r\n      transfer: (...transfer: Transferable[]) => { invoke: T[K] }\r\n    }\r\n    : never\r\n}>\r\n\r\ntype ThreadType = 'class' | 'function' | 'module'\r\n\r\nexport type Thread<T, U = never> = {\r\n  $worker: Worker\r\n  $ipc?: IPCPort\r\n  $channel?: MessageChannel\r\n  $moduleId: string | Worker\r\n  $stackPointer: pointer<void>\r\n  $retval?: Promise<U>\r\n  $instance?: any\r\n  $type: ThreadType\r\n} & AsyncReturnWithoutProperties<T>\r\n\r\nexport interface ThreadOptions {\r\n  name?: string\r\n  stackSize?: number\r\n  disableWorker?: boolean\r\n  dispatchToWorker?: boolean\r\n}\r\n\r\nconst caches: Map<string, {\r\n  url: string\r\n  refCount: number\r\n}> = new Map()\r\n\r\nfunction getCacheKey(moduleId: string, type: ThreadType) {\r\n  return `${moduleId}_${type}`\r\n}\r\n\r\nexport function createThreadFromClass<T, U extends any[]>(\r\n  entity: new (...args: U) => T,\r\n  workerize: () => Worker\r\n): {\r\n  run: (...args: U) => Promise<Thread<T>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: U) => Promise<Thread<T>>\r\n  }\r\n}\r\nexport function createThreadFromClass<T, U extends any[]>(\r\n  entity: new (...args: U) => T,\r\n  options: ThreadOptions,\r\n  workerize: () => Worker\r\n): {\r\n  run: (...args: U) => Promise<Thread<T>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: U) => Promise<Thread<T>>\r\n  }\r\n}\r\nexport function createThreadFromClass<T, U extends any[], args=[moduleId<'0'>]>(entity: new (...args: U) => T, options?: ThreadOptions): {\r\n  run: (...args: U) => Promise<Thread<T>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: U) => Promise<Thread<T>>\r\n  }\r\n}\r\nexport function createThreadFromClass<T, U extends any[]>(\r\n  entity: new (...args: U) => T,\r\n  options: ThreadOptions | (() => Worker),\r\n  moduleId?: string | (() => Worker)\r\n): {\r\n    run: (...args: U) => Promise<Thread<T>>\r\n    transfer: (...transfer: Transferable[]) => {\r\n      run: (...args: U) => Promise<Thread<T>>\r\n    }\r\n  } {\r\n\r\n  options = options || {}\r\n  if (is.func(options)) {\r\n    moduleId = options\r\n    options = {} as ThreadOptions\r\n  }\r\n\r\n  let transferData: Transferable[] = []\r\n\r\n  let runInWorker: (...args: U) => Promise<Thread<T>>\r\n\r\n  if (defined(ENABLE_THREADS)) {\r\n    runInWorker = (...args: U) => {\r\n\r\n      let worker: Worker\r\n\r\n      if (is.func(moduleId)) {\r\n        worker = moduleId()\r\n      }\r\n      else if (defined(ENV_WEBPACK)) {\r\n        let workerUrl: string\r\n        const cacheKey = getCacheKey(moduleId, 'class')\r\n        if (caches.has(cacheKey)) {\r\n          workerUrl = caches.get(cacheKey).url\r\n          caches.get(cacheKey).refCount++\r\n        }\r\n        else {\r\n          const module = sourceLoad(moduleId, {\r\n            varName: `__module_${entity.name}__`,\r\n            exportName: `__${entity.name}__`,\r\n            pointName: entity.name,\r\n            exportIsClass: true\r\n          })\r\n          const source = `\r\n            self.CHEAP_DISABLE_THREAD = ${(SELF as any).CHEAP_DISABLE_THREAD}\r\n            self.CHEAP_HEAP_INITIAL = ${(SELF as any).CHEAP_HEAP_INITIAL}\r\n            self.CHEAP_HEAP_MAXIMUM = ${(SELF as any).CHEAP_HEAP_MAXIMUM}\r\n            ${(SELF as any).CHEAP_POLYFILL_URL ? `self.CHEAP_POLYFILL_URL = '${(SELF as any).CHEAP_POLYFILL_URL}'` : ''}\r\n            ${!defined(ENV_NODE) && (SELF as any).CHEAP_POLYFILL_URL ? `importScripts('${(SELF as any).CHEAP_POLYFILL_URL}');` : '' }\r\n            ${module}\r\n            function run(params) {\r\n              params.unshift(null)\r\n              return new (Function.prototype.bind.apply(__module_${entity.name}__.__${entity.name}__, params))()\r\n            }\r\n            ${initClass}\r\n            init.default(run);\r\n          `\r\n          if (defined(ENV_NODE)) {\r\n            workerUrl = `./cheap_${generateUUID()}.js`\r\n            const fs = require('fs')\r\n            fs.writeFileSync(workerUrl, source)\r\n          }\r\n          else {\r\n            const blob = new Blob([source], { type: 'text/javascript' })\r\n            workerUrl = URL.createObjectURL(blob)\r\n          }\r\n\r\n          caches.set(cacheKey, {\r\n            url: workerUrl,\r\n            refCount: 1\r\n          })\r\n        }\r\n        worker = new Worker(workerUrl)\r\n      }\r\n      else {\r\n        throw new Error('not support')\r\n      }\r\n\r\n      const channel = new MessageChannel()\r\n      return new Promise<Thread<T>>((resolve, reject) => {\r\n\r\n        const stackPointer = config.USE_THREADS ? aligned_alloc(\r\n          config.STACK_ALIGNMENT,\r\n          options.stackSize\r\n            ? align(options.stackSize, config.STACK_ALIGNMENT)\r\n            : config.STACK_SIZE\r\n        ) : nullptr\r\n\r\n        function running() {\r\n          const ipc = defined(ENV_NODE) ? new NodeIPCPort(channel.port1) : new IPCPort(channel.port1)\r\n\r\n          const obj: Thread<T> = {\r\n            $worker: worker,\r\n            $ipc: ipc,\r\n            $channel: channel,\r\n            $moduleId: toString(moduleId),\r\n            $stackPointer: stackPointer,\r\n            $type: 'class'\r\n          } as Thread<T>\r\n\r\n          const { proxy, revoke } = Proxy.revocable(obj, {\r\n            get(target, propertyKey, receiver) {\r\n              if (target[propertyKey]) {\r\n                return obj[propertyKey]\r\n              }\r\n              if (propertyKey in entity.prototype && typeof entity.prototype[propertyKey] === 'function') {\r\n                const call = async function (...args: any[]) {\r\n                  return ipc.request(propertyKey as string, {\r\n                    params: args\r\n                  })\r\n                }\r\n                call.transfer = function (...transfer: Transferable[]) {\r\n                  return {\r\n                    invoke: async function (...args: any[]) {\r\n                      return ipc.request(propertyKey as string, {\r\n                        params: args\r\n                      }, transfer)\r\n                    }\r\n                  }\r\n                }\r\n                target[propertyKey] = call\r\n              }\r\n              return target[propertyKey]\r\n            }\r\n          })\r\n\r\n          obj[symbolRevoke] = revoke\r\n\r\n          resolve(proxy as Thread<T>)\r\n        }\r\n\r\n        const handler = (message: MessageEvent<any>) => {\r\n          const origin = defined(ENV_NODE) ? message : message.data\r\n          const type = origin.type\r\n          const data = origin.data\r\n\r\n          switch (type) {\r\n            case 'ready':\r\n              worker.postMessage({\r\n                type: 'run',\r\n                data: {\r\n                  port: channel.port2,\r\n                  params: args\r\n                }\r\n              }, [channel.port2, ...transferData])\r\n              break\r\n            case 'running':\r\n              running()\r\n              break\r\n            default:\r\n              break\r\n          }\r\n        }\r\n\r\n        if (defined(ENV_NODE)) {\r\n          // @ts-ignore\r\n          worker.on('message', handler)\r\n        }\r\n        else {\r\n          worker.onmessage = handler\r\n        }\r\n\r\n        worker.postMessage({\r\n          type: 'init',\r\n          data: {\r\n            memory: config.USE_THREADS ? Memory : null,\r\n            name: options.name || entity.name,\r\n            stackPointer,\r\n            stackSize: options.stackSize ?? config.STACK_SIZE\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  function runInMain(...args: U) {\r\n    const worker = new entity(...args)\r\n    return new Promise<Thread<T>>((resolve) => {\r\n      const obj: Thread<T> = {\r\n        $worker: null,\r\n        $ipc: null,\r\n        $channel: null,\r\n        $moduleId: toString(moduleId),\r\n        $stackPointer: nullptr,\r\n        $instance: worker,\r\n        $type: 'class'\r\n      } as Thread<T>\r\n\r\n      const { proxy, revoke } = Proxy.revocable(obj, {\r\n        get(target, propertyKey, receiver) {\r\n          if (target[propertyKey]) {\r\n            return obj[propertyKey]\r\n          }\r\n          if (propertyKey in entity.prototype && typeof entity.prototype[propertyKey] === 'function') {\r\n            const call = function (...args: any[]) {\r\n              return worker[propertyKey](...args)\r\n            }\r\n            call.transfer = function (...transfer: Transferable[]) {\r\n              return {\r\n                invoke: function (...args: any[]) {\r\n                  return worker[propertyKey](...args)\r\n                }\r\n              }\r\n            }\r\n            target[propertyKey] = call\r\n          }\r\n          return target[propertyKey]\r\n        }\r\n      })\r\n\r\n      obj[symbolRevoke] = revoke\r\n\r\n      resolve(proxy as Thread<T>)\r\n    })\r\n  }\r\n\r\n  function transfer(...transfer: Transferable[]) {\r\n    transferData = transfer\r\n    return {\r\n      run: defined(ENABLE_THREADS) && ((config.USE_THREADS || (options as ThreadOptions).dispatchToWorker) && !(options as ThreadOptions).disableWorker) ? runInWorker : runInMain\r\n    }\r\n  }\r\n\r\n  return {\r\n    run: defined(ENABLE_THREADS) && ((config.USE_THREADS || options.dispatchToWorker) && !options.disableWorker) ? runInWorker : runInMain,\r\n    transfer\r\n  }\r\n}\r\n\r\nexport function createThreadFromFunction<T extends any[], U extends any>(\r\n  entity: (...args: T) => U,\r\n  options: ThreadOptions,\r\n  workerize: () => Worker\r\n): {\r\n  run: (...args: T) => Promise<Thread<{}, U>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: T) => Promise<Thread<{}, U>>\r\n  }\r\n}\r\nexport function createThreadFromFunction<T extends any[], U extends any>(\r\n  entity: (...args: T) => U,\r\n  workerize: () => Worker\r\n): {\r\n  run: (...args: T) => Promise<Thread<{}, U>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: T) => Promise<Thread<{}, U>>\r\n  }\r\n}\r\nexport function createThreadFromFunction<T extends any[], U extends any, args=[moduleId<'0'>]>(entity: (...args: T) => U, options?: ThreadOptions): {\r\n  run: (...args: T) => Promise<Thread<{}, U>>\r\n  transfer: (...transfer: Transferable[]) => {\r\n    run: (...args: T) => Promise<Thread<{}, U>>\r\n  }\r\n}\r\nexport function createThreadFromFunction<T extends any[], U extends any>(\r\n  entity: (...args: T) => U,\r\n  options: ThreadOptions | (() => Worker),\r\n  moduleId?: string | (() => Worker)\r\n): {\r\n    run: (...args: T) => Promise<Thread<{}, U>>\r\n    transfer: (...transfer: Transferable[]) => {\r\n      run: (...args: T) => Promise<Thread<{}, U>>\r\n    }\r\n  } {\r\n\r\n  options = options || {}\r\n  if (is.func(options)) {\r\n    moduleId = options\r\n    options = {} as ThreadOptions\r\n  }\r\n\r\n  let transferData: Transferable[] = []\r\n\r\n  let runInWorker: (...args: T) => Promise<Thread<{}, U>>\r\n\r\n  if (defined(ENABLE_THREADS)) {\r\n    runInWorker = (...args: T) => {\r\n\r\n      let worker: Worker\r\n\r\n      if (is.func(moduleId)) {\r\n        worker = moduleId()\r\n      }\r\n      else if (defined(ENV_WEBPACK)) {\r\n        let workerUrl: string\r\n        const cacheKey = getCacheKey(moduleId, 'function')\r\n        if (caches.has(cacheKey)) {\r\n          workerUrl = caches.get(cacheKey).url\r\n          caches.get(cacheKey).refCount++\r\n        }\r\n        else {\r\n          const module = sourceLoad(moduleId, {\r\n            varName: `__module_${entity.name}__`,\r\n            exportName: `__${entity.name}__`,\r\n            pointName: entity.name\r\n          })\r\n\r\n          const source = `\r\n            self.CHEAP_DISABLE_THREAD = ${(SELF as any).CHEAP_DISABLE_THREAD}\r\n            self.CHEAP_HEAP_INITIAL = ${(SELF as any).CHEAP_HEAP_INITIAL}\r\n            self.CHEAP_HEAP_MAXIMUM = ${(SELF as any).CHEAP_HEAP_MAXIMUM}\r\n            ${(SELF as any).CHEAP_POLYFILL_URL ? `self.CHEAP_POLYFILL_URL = '${(SELF as any).CHEAP_POLYFILL_URL}'` : ''}\r\n            ${!defined(ENV_NODE) && (SELF as any).CHEAP_POLYFILL_URL ? `importScripts('${(SELF as any).CHEAP_POLYFILL_URL}');` : '' }\r\n            ${module}\r\n            function run(params) {\r\n              return __module_${entity.name}__.__${entity.name}__.apply(${defined(ENV_NODE) ? 'global' : 'self'}, params)\r\n            }\r\n            ${initFunction}\r\n            init.default(run);\r\n          `\r\n          if (defined(ENV_NODE)) {\r\n            workerUrl = `./cheap_${generateUUID()}.js`\r\n            const fs = require('fs')\r\n            fs.writeFileSync(workerUrl, source)\r\n          }\r\n          else {\r\n            const blob = new Blob([source], { type: 'text/javascript' })\r\n            workerUrl = URL.createObjectURL(blob)\r\n          }\r\n\r\n          caches.set(cacheKey, {\r\n            url: workerUrl,\r\n            refCount: 1\r\n          })\r\n        }\r\n        worker = new Worker(workerUrl)\r\n      }\r\n      else {\r\n        throw new Error('not support')\r\n      }\r\n\r\n      return new Promise<Thread<{}, U>>((resolve, reject) => {\r\n\r\n        const stackPointer = config.USE_THREADS ? aligned_alloc(\r\n          config.STACK_ALIGNMENT,\r\n          options.stackSize\r\n            ? align(options.stackSize, config.STACK_ALIGNMENT)\r\n            : config.STACK_SIZE\r\n        ) : nullptr\r\n\r\n        function running() {\r\n          const obj: Thread<{}> = {\r\n            $worker: worker,\r\n            $moduleId: toString(moduleId),\r\n            $stackPointer: stackPointer,\r\n            $type: 'function'\r\n          }\r\n          resolve(obj)\r\n        }\r\n\r\n        const handler = (message: MessageEvent<any>) => {\r\n          const origin = defined(ENV_NODE) ? message : message.data\r\n          const type = origin.type\r\n          const data = origin.data\r\n\r\n          switch (type) {\r\n            case 'ready':\r\n              worker.postMessage({\r\n                type: 'run',\r\n                data: {\r\n                  params: args\r\n                }\r\n              }, transferData)\r\n              running()\r\n              break\r\n            default:\r\n              break\r\n          }\r\n        }\r\n\r\n        if (defined(ENV_NODE)) {\r\n          // @ts-ignore\r\n          worker.on('message', handler)\r\n        }\r\n        else {\r\n          worker.onmessage = handler\r\n        }\r\n\r\n        worker.postMessage({\r\n          type: 'init',\r\n          data: {\r\n            memory: config.USE_THREADS ? Memory : null,\r\n            name: options.name || entity.name,\r\n            stackPointer,\r\n            stackSize: options.stackSize ?? config.STACK_SIZE\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  function runInMain(...args: T) {\r\n    return new Promise<Thread<{}, U>>((resolve, reject) => {\r\n      const obj: Thread<{}, U> = {\r\n        $worker: null,\r\n        $moduleId: toString(moduleId),\r\n        $stackPointer: null,\r\n        $type: 'function'\r\n      }\r\n      resolve(obj)\r\n      obj.$retval = new Promise<U>((resolve) => {\r\n        resolve(entity(...args))\r\n      })\r\n    })\r\n  }\r\n\r\n  function transfer(...transfer: Transferable[]) {\r\n    transferData = transfer\r\n    return {\r\n      run: defined(ENABLE_THREADS) && ((config.USE_THREADS || (options as ThreadOptions).dispatchToWorker) && !(options as ThreadOptions).disableWorker) ? runInWorker : runInMain\r\n    }\r\n  }\r\n\r\n  return {\r\n    run: defined(ENABLE_THREADS) && ((config.USE_THREADS || options.dispatchToWorker) && !options.disableWorker) ? runInWorker : runInMain,\r\n    transfer\r\n  }\r\n}\r\n\r\nexport function createThreadFromModule<T extends Object>(\r\n  entity: T,\r\n  workerize: () => Worker\r\n): {\r\n  run: () => Promise<Thread<T>>\r\n}\r\nexport function createThreadFromModule<T extends Object>(\r\n  entity: T,\r\n  options: ThreadOptions,\r\n  workerize: () => Worker\r\n): {\r\n  run: () => Promise<Thread<T>>\r\n}\r\nexport function createThreadFromModule<T extends Object, args=[moduleId<'0'>]>(entity: T, options?: ThreadOptions): {\r\n  run: () => Promise<Thread<T>>\r\n}\r\nexport function createThreadFromModule<T extends Object>(\r\n  entity: T,\r\n  options: ThreadOptions | (() => Worker),\r\n  moduleId?: string | (() => Worker)\r\n): {\r\n    run: () => Promise<Thread<T>>\r\n  } {\r\n\r\n  options = options || {}\r\n  if (is.func(options)) {\r\n    moduleId = options\r\n    options = {} as ThreadOptions\r\n  }\r\n\r\n  let runInWorker: () => Promise<Thread<T>>\r\n  if (defined(ENABLE_THREADS)) {\r\n    runInWorker = () => {\r\n      let worker: Worker\r\n      let moduleName = `__module_${moduleId}__`.replace(/\\.|\\//g, '_')\r\n\r\n      if (is.func(moduleId)) {\r\n        worker = moduleId()\r\n      }\r\n      else if (defined(ENV_WEBPACK)) {\r\n        let workerUrl: string\r\n        const cacheKey = getCacheKey(moduleId, 'module')\r\n        if (caches.has(cacheKey)) {\r\n          workerUrl = caches.get(cacheKey).url\r\n          caches.get(cacheKey).refCount++\r\n        }\r\n        else {\r\n          const module = sourceLoad(moduleId, {\r\n            varName: moduleName\r\n          })\r\n\r\n          const source = `\r\n            self.CHEAP_DISABLE_THREAD = ${(SELF as any).CHEAP_DISABLE_THREAD}\r\n            self.CHEAP_HEAP_INITIAL = ${(SELF as any).CHEAP_HEAP_INITIAL}\r\n            self.CHEAP_HEAP_MAXIMUM = ${(SELF as any).CHEAP_HEAP_MAXIMUM}\r\n            ${(SELF as any).CHEAP_POLYFILL_URL ? `self.CHEAP_POLYFILL_URL = '${(SELF as any).CHEAP_POLYFILL_URL}'` : ''}\r\n            ${!defined(ENV_NODE) && (SELF as any).CHEAP_POLYFILL_URL ? `importScripts('${(SELF as any).CHEAP_POLYFILL_URL}');` : '' }\r\n            ${module}\r\n            ${initModule}\r\n            init.default(${moduleName});\r\n          `\r\n\r\n          if (defined(ENV_NODE)) {\r\n            workerUrl = `./cheap_${generateUUID()}.js`\r\n            const fs = require('fs')\r\n            fs.writeFileSync(workerUrl, source)\r\n          }\r\n          else {\r\n            const blob = new Blob([source], { type: 'text/javascript' })\r\n            workerUrl = URL.createObjectURL(blob)\r\n          }\r\n          caches.set(cacheKey, {\r\n            url: workerUrl,\r\n            refCount: 1\r\n          })\r\n        }\r\n        worker = new Worker(workerUrl)\r\n      }\r\n      else {\r\n        throw new Error('not support')\r\n      }\r\n\r\n      const channel = new MessageChannel()\r\n      return new Promise<Thread<T>>((resolve, reject) => {\r\n\r\n        const stackPointer = config.USE_THREADS ? aligned_alloc(\r\n          config.STACK_ALIGNMENT,\r\n          options.stackSize\r\n            ? align(options.stackSize, config.STACK_ALIGNMENT)\r\n            : config.STACK_SIZE\r\n        ) : nullptr\r\n\r\n        function running() {\r\n          const ipc = defined(ENV_NODE) ? new NodeIPCPort(channel.port1) : new IPCPort(channel.port1)\r\n\r\n          const obj: Thread<T> = {\r\n            $worker: worker,\r\n            $ipc: ipc,\r\n            $channel: channel,\r\n            $moduleId: toString(moduleId),\r\n            $stackPointer: stackPointer,\r\n            $type: 'module'\r\n          } as Thread<T>\r\n\r\n          const { proxy, revoke } = Proxy.revocable(obj, {\r\n            get(target, propertyKey, receiver) {\r\n              if (target[propertyKey]) {\r\n                return obj[propertyKey]\r\n              }\r\n              if (propertyKey in entity && typeof entity[propertyKey] === 'function') {\r\n                const call = async function (...args: any[]) {\r\n                  return ipc.request(propertyKey as string, {\r\n                    params: args\r\n                  })\r\n                }\r\n                call.transfer = function (...transfer: Transferable[]) {\r\n                  return {\r\n                    invoke: async function (...args: any[]) {\r\n                      return ipc.request(propertyKey as string, {\r\n                        params: args\r\n                      }, transfer)\r\n                    }\r\n                  }\r\n                }\r\n                target[propertyKey] = call\r\n              }\r\n              return target[propertyKey]\r\n            }\r\n          })\r\n\r\n          obj[symbolRevoke] = revoke\r\n\r\n          resolve(proxy as Thread<T>)\r\n        }\r\n\r\n        const handler = (message: MessageEvent<any>) => {\r\n          const origin = defined(ENV_NODE) ? message : message.data\r\n          const type = origin.type\r\n          const data = origin.data\r\n\r\n          switch (type) {\r\n            case 'ready':\r\n              worker.postMessage({\r\n                type: 'run',\r\n                data: {\r\n                  port: channel.port2\r\n                }\r\n              }, [channel.port2])\r\n              break\r\n            case 'running':\r\n              running()\r\n              break\r\n            default:\r\n              break\r\n          }\r\n        }\r\n\r\n        if (defined(ENV_NODE)) {\r\n          // @ts-ignore\r\n          worker.on('message', handler)\r\n        }\r\n        else {\r\n          worker.onmessage = handler\r\n        }\r\n\r\n        worker.postMessage({\r\n          type: 'init',\r\n          data: {\r\n            memory: config.USE_THREADS ? Memory : null,\r\n            name: options.name || moduleName,\r\n            stackPointer,\r\n            stackSize: options.stackSize ?? config.STACK_SIZE\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n  function runInMain() {\r\n    return new Promise<Thread<T>>((resolve, reject) => {\r\n      const obj: Thread<T> = {\r\n        $worker: null,\r\n        $ipc: null,\r\n        $channel: null,\r\n        $moduleId: toString(moduleId),\r\n        $stackPointer: nullptr,\r\n        $instance: entity,\r\n        $type: 'module'\r\n      } as Thread<T>\r\n\r\n      const { proxy, revoke } = Proxy.revocable(obj, {\r\n        get(target, propertyKey, receiver) {\r\n          if (target[propertyKey]) {\r\n            return obj[propertyKey]\r\n          }\r\n          if (propertyKey in entity && typeof entity[propertyKey] === 'function') {\r\n            const call = function (...args: any[]) {\r\n              return entity[propertyKey](...args)\r\n            }\r\n            call.transfer = function (...transfer: Transferable[]) {\r\n              return {\r\n                invoke: function (...args: any[]) {\r\n                  return entity[propertyKey](...args)\r\n                }\r\n              }\r\n            }\r\n            target[propertyKey] = call\r\n          }\r\n          return target[propertyKey]\r\n        }\r\n      })\r\n\r\n      obj[symbolRevoke] = revoke\r\n\r\n      resolve(proxy as Thread<T>)\r\n    })\r\n  }\r\n  return {\r\n    run: defined(ENABLE_THREADS) && ((config.USE_THREADS || options.dispatchToWorker) && !options.disableWorker) ? runInWorker : runInMain,\r\n  }\r\n}\r\n\r\nexport function closeThread<T, U>(thread: Thread<T, U>) {\r\n  if (thread.$worker) {\r\n    thread.$worker.terminate()\r\n    thread.$worker = null\r\n  }\r\n  if (thread.$moduleId) {\r\n    if (is.string(thread.$moduleId)) {\r\n      const cacheKey = getCacheKey(thread.$moduleId, thread.$type)\r\n      if (caches.has(cacheKey)) {\r\n        caches.get(cacheKey).refCount--\r\n        if (caches.get(cacheKey).refCount === 0) {\r\n          if (defined(ENV_NODE)) {\r\n            const fs = require('fs')\r\n            fs.unlinkSync(caches.get(cacheKey).url)\r\n          }\r\n          else {\r\n            URL.revokeObjectURL(caches.get(cacheKey).url)\r\n          }\r\n          caches.delete(cacheKey)\r\n        }\r\n      }\r\n    }\r\n    thread.$moduleId = null\r\n  }\r\n\r\n  if (thread.$ipc) {\r\n    thread.$ipc.destroy()\r\n    thread.$ipc = null\r\n  }\r\n\r\n  if (thread.$stackPointer) {\r\n    free(thread.$stackPointer)\r\n    thread.$stackPointer = nullptr\r\n  }\r\n\r\n  thread.$channel = null\r\n  thread.$instance = null\r\n\r\n  if (thread[symbolRevoke]) {\r\n    const revoke = thread[symbolRevoke]\r\n    thread[symbolRevoke] = null\r\n    revoke()\r\n  }\r\n}\r\n\r\nexport async function joinThread<T, U>(thread: Thread<{}, U>) {\r\n  if (thread.$worker) {\r\n    return new Promise<PromiseType<U>>((resolve) => {\r\n\r\n      function handler(message: MessageEvent<any>) {\r\n        const origin = defined(ENV_NODE) ? message : message.data\r\n        const type = origin.type\r\n        const data = origin.data\r\n\r\n        switch (type) {\r\n          case 'stopped':\r\n            closeThread(thread)\r\n            resolve(data)\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      }\r\n\r\n      if (defined(ENV_NODE)) {\r\n        // @ts-ignore\r\n        thread.$worker.removeAllListeners('message')\r\n        // @ts-ignore\r\n        thread.$worker.on('message', handler)\r\n      }\r\n      else {\r\n        thread.$worker.onmessage = handler\r\n      }\r\n      thread.$worker.postMessage({\r\n        type: 'stop'\r\n      })\r\n    })\r\n  }\r\n  else if (thread.$retval) {\r\n    return thread.$retval as PromiseType<U>\r\n  }\r\n}\r\n","import { Data, TypeArray } from 'common/types/type'\r\n\r\nexport const enum CTypeEnum {\r\n  null = 0,\r\n\r\n  void,\r\n\r\n  uint8,\r\n  atomic_uint8,\r\n  char,\r\n  atomic_char,\r\n  uint16,\r\n  atomic_uint16,\r\n  uint32,\r\n  atomic_uint32,\r\n  uint64,\r\n\r\n  int8,\r\n  atomic_int8,\r\n  int16,\r\n  atomic_int16,\r\n  int32,\r\n  atomic_int32,\r\n  int64,\r\n\r\n  float,\r\n  double,\r\n  pointer,\r\n\r\n  atomic_int64,\r\n  atomic_uint64,\r\n\r\n  bool,\r\n  atomic_bool,\r\n  size\r\n}\r\n\r\nexport const CTypeEnum2Bytes: Record<CTypeEnum, number> = {\r\n  [CTypeEnum.uint8]: 1,\r\n  [CTypeEnum.atomic_uint8]: 1,\r\n  [CTypeEnum.char]: 1,\r\n  [CTypeEnum.atomic_char]: 1,\r\n  [CTypeEnum.uint16]: 2,\r\n  [CTypeEnum.atomic_uint16]: 2,\r\n  [CTypeEnum.uint32]: 4,\r\n  [CTypeEnum.atomic_uint32]: 4,\r\n  [CTypeEnum.uint64]: 8,\r\n  [CTypeEnum.int8]: 1,\r\n  [CTypeEnum.atomic_int8]: 1,\r\n  [CTypeEnum.int16]: 2,\r\n  [CTypeEnum.atomic_int16]: 2,\r\n  [CTypeEnum.int32]: 4,\r\n  [CTypeEnum.atomic_int32]: 4,\r\n  [CTypeEnum.int64]: 8,\r\n  [CTypeEnum.float]: 4,\r\n  [CTypeEnum.double]: 8,\r\n  [CTypeEnum.pointer]: defined(WASM_64) ? 8 : 4,\r\n  [CTypeEnum.null]: 4,\r\n  [CTypeEnum.void]: 4,\r\n\r\n  [CTypeEnum.atomic_uint64]: 8,\r\n  [CTypeEnum.atomic_int64]: 8,\r\n\r\n  [CTypeEnum.bool]: 1,\r\n  [CTypeEnum.atomic_bool]: 1,\r\n  [CTypeEnum.size]: defined(WASM_64) ? 8 : 4\r\n}\r\n\r\nexport const CTypeEnumPointerShiftMap: Record<CTypeEnum, number> = {\r\n  [CTypeEnum.uint8]: 0,\r\n  [CTypeEnum.atomic_uint8]: 0,\r\n  [CTypeEnum.char]: 0,\r\n  [CTypeEnum.atomic_char]: 0,\r\n  [CTypeEnum.uint16]: 1,\r\n  [CTypeEnum.atomic_uint16]: 1,\r\n  [CTypeEnum.uint32]: 2,\r\n  [CTypeEnum.atomic_uint32]: 2,\r\n  [CTypeEnum.uint64]: 4,\r\n  [CTypeEnum.int8]: 0,\r\n  [CTypeEnum.atomic_int8]: 0,\r\n  [CTypeEnum.int16]: 1,\r\n  [CTypeEnum.atomic_int16]: 1,\r\n  [CTypeEnum.int32]: 2,\r\n  [CTypeEnum.atomic_int32]: 2,\r\n  [CTypeEnum.int64]: 4,\r\n  [CTypeEnum.float]: 2,\r\n  [CTypeEnum.double]: 4,\r\n  [CTypeEnum.pointer]: defined(WASM_64) ? 3 : 2,\r\n  [CTypeEnum.void]: 2,\r\n  [CTypeEnum.null]: 2,\r\n  [CTypeEnum.atomic_uint64]: 4,\r\n  [CTypeEnum.atomic_int64]: 4,\r\n\r\n  [CTypeEnum.bool]: 0,\r\n  [CTypeEnum.atomic_bool]: 0,\r\n  [CTypeEnum.size]: defined(WASM_64) ? 3 : 2\r\n}\r\n\r\nexport const enum KeyMetaKey {\r\n  Type,\r\n  Pointer,\r\n  PointerLevel,\r\n  Array,\r\n  ArrayLength,\r\n  BitField,\r\n  BitFieldLength,\r\n  BaseAddressOffset,\r\n  BaseBitOffset,\r\n  InlineStruct\r\n}\r\n\r\nexport type KeyMeta = {\r\n  [KeyMetaKey.Type]: CTypeEnum | Struct\r\n  [KeyMetaKey.Pointer]: 0 | 1\r\n  [KeyMetaKey.PointerLevel]: number\r\n  [KeyMetaKey.Array]: 0 | 1\r\n  [KeyMetaKey.ArrayLength]: number\r\n  [KeyMetaKey.BitField]: 0 | 1\r\n  [KeyMetaKey.BitFieldLength]: number\r\n  [KeyMetaKey.BaseAddressOffset]: uint32\r\n  [KeyMetaKey.BaseBitOffset]: uint32\r\n  getTypeMeta?: () => { length: number, maxBaseTypeByteLength: number }\r\n}\r\n\r\nexport type Struct = new (init?: Data) => any\r\nexport type Union = new (init?: Data) => any\r\n\r\n/* eslint-disable */\r\nexport type CTypeEnum2Type<T> =\r\n  T extends CTypeEnum.null\r\n  ? void\r\n  : T extends CTypeEnum.void\r\n  ? void\r\n  : T extends CTypeEnum.uint8\r\n  ? uint8\r\n  : T extends CTypeEnum.atomic_int8\r\n  ? atomic_uint8\r\n  : T extends CTypeEnum.char\r\n  ? char\r\n  : T extends CTypeEnum.uint16\r\n  ? uint16\r\n  : T extends CTypeEnum.atomic_uint16\r\n  ? atomic_uint16\r\n  : T extends CTypeEnum.uint32\r\n  ? uint32\r\n  : T extends CTypeEnum.atomic_uint32\r\n  ? atomic_uint32\r\n  : T extends CTypeEnum.uint64\r\n  ? uint64\r\n  : T extends CTypeEnum.int8\r\n  ? int8\r\n  : T extends CTypeEnum.atomic_int8\r\n  ? atomic_int8\r\n  : T extends CTypeEnum.int16\r\n  ? int16\r\n  : T extends CTypeEnum.atomic_int16\r\n  ? atomic_int16\r\n  : T extends CTypeEnum.int32\r\n  ? int32\r\n  : T extends CTypeEnum.atomic_int32\r\n  ? atomic_int32\r\n  : T extends CTypeEnum.int64\r\n  ? int64\r\n  : T extends CTypeEnum.float\r\n  ? float\r\n  : T extends CTypeEnum.double\r\n  ? double\r\n  : T extends CTypeEnum.pointer\r\n  ? pointer<void>\r\n  : T extends CTypeEnum.atomic_int64\r\n  ? atomic_int64\r\n  : T extends CTypeEnum.atomic_uint64\r\n  ? atomic_uint64\r\n  : T extends CTypeEnum.bool\r\n  ? bool\r\n  : T extends CTypeEnum.atomic_bool\r\n  ? atomic_bool\r\n  : T extends CTypeEnum.size\r\n  ? size\r\n  : never\r\n/* eslint-enable */\r\n\r\nexport type AtomicsBuffer = Exclude<TypeArray, Float32Array | Float64Array> | BigInt64Array | BigUint64Array\r\n","import { ChildThread, Pthread, PthreadFlags, PthreadStatus, ThreadDescriptor, ThreadWait } from './thread'\r\nimport * as config from '../config'\r\nimport { memset } from '../std/memory'\r\nimport { Memory, allocThreadId } from '../heap'\r\nimport * as cond from '../thread/cond'\r\nimport * as mutex from '../thread/mutex'\r\nimport * as atomicsUtils from '../thread/atomics'\r\n\r\ninterface TheadPoolEntry {\r\n  id: uint32\r\n  thread: ChildThread\r\n  threadWait: pointer<ThreadWait>\r\n}\r\n\r\ninterface TheadPoolEntryOptions {\r\n  tableSize: number\r\n  module: WebAssembly.Module\r\n  initFuncs: string[]\r\n\r\n  memoryBase: number\r\n  tableBase: number\r\n  childImports: string\r\n}\r\n\r\nexport default class ThreadPool {\r\n\r\n  private count: number\r\n\r\n  private url: string\r\n\r\n  private childThreads: TheadPoolEntry[]\r\n\r\n  constructor(count: number, url: string) {\r\n    this.count = count\r\n    this.url = url\r\n    this.childThreads = []\r\n  }\r\n\r\n  private async createTheadPoolEntry(options: TheadPoolEntryOptions) {\r\n    return new Promise<TheadPoolEntry>((resolve, reject) => {\r\n      const worker = new Worker(this.url)\r\n      const stackPointer = aligned_alloc(config.STACK_ALIGNMENT, config.STACK_SIZE)\r\n      const threadDescriptor = reinterpret_cast<pointer<ThreadDescriptor>>(malloc(sizeof(ThreadDescriptor)))\r\n      memset(threadDescriptor, 0, sizeof(ThreadDescriptor))\r\n\r\n      threadDescriptor.status = PthreadStatus.STOP\r\n      threadDescriptor.flags |= PthreadFlags.POOL\r\n\r\n      const id = allocThreadId()\r\n\r\n      worker.onmessage = (message) => {\r\n        const origin = message.data\r\n        const type = origin.type\r\n        switch (type) {\r\n          case 'ready':\r\n            const wait = reinterpret_cast<pointer<ThreadWait>>(stackPointer)\r\n            memset(wait, 0, sizeof(ThreadWait))\r\n            mutex.init(addressof(wait.mutex))\r\n            cond.init(addressof(wait.cond))\r\n            worker.postMessage({\r\n              type: 'wait'\r\n            })\r\n            resolve({\r\n              id,\r\n              thread: {\r\n                thread: nullptr,\r\n                worker,\r\n                stackPointer,\r\n                threadDescriptor\r\n              },\r\n              threadWait: wait\r\n            })\r\n            break\r\n        }\r\n      }\r\n\r\n      worker.postMessage({\r\n        type: 'ready',\r\n        data: {\r\n          cheap: {\r\n            memory: Memory,\r\n            stackPointer,\r\n            stackSize: config.STACK_SIZE,\r\n            id\r\n          },\r\n          runner: {\r\n            resource: {\r\n              tableSize: options.tableSize,\r\n              module: options.module,\r\n              initFuncs: options.initFuncs\r\n            },\r\n            options: {\r\n              memoryBase: options.memoryBase,\r\n              tableBase: options.tableBase,\r\n              threadDescriptor,\r\n              childImports: options.childImports\r\n            },\r\n            imports: options.childImports\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  public async ready(options: TheadPoolEntryOptions) {\r\n    this.childThreads = await Promise.all(new Array(this.count).fill(0).map(() => {\r\n      return this.createTheadPoolEntry(options)\r\n    }))\r\n  }\r\n\r\n  public hasFree() {\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      if (this.childThreads[i].thread.threadDescriptor.status === PthreadStatus.STOP) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public isPoolThread(thread: pointer<Pthread>) {\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      if (this.childThreads[i].thread.thread === thread) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public createThread(thread: pointer<Pthread>, attr: pointer<void>, func: pointer<((args: pointer<void>) => void)>, args: pointer<void>) {\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      if (this.childThreads[i].thread.threadDescriptor.status === PthreadStatus.STOP) {\r\n        this.childThreads[i].thread.threadDescriptor.status = PthreadStatus.RUN\r\n        this.childThreads[i].thread.thread = thread\r\n\r\n        thread.flags |= PthreadFlags.POOL\r\n\r\n        mutex.lock(addressof(this.childThreads[i].threadWait.mutex))\r\n        this.childThreads[i].threadWait.thread = thread\r\n        this.childThreads[i].threadWait.func = func\r\n        this.childThreads[i].threadWait.args = args\r\n        mutex.unlock(addressof(this.childThreads[i].threadWait.mutex))\r\n        cond.signal(addressof(this.childThreads[i].threadWait.cond))\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  public joinThread(thread: pointer<Pthread>, retval: pointer<pointer<void>>) {\r\n\r\n    let entry: TheadPoolEntry\r\n\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      if (this.childThreads[i].thread.thread === thread) {\r\n        entry = this.childThreads[i]\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!entry) {\r\n      return -1\r\n    }\r\n\r\n    if (thread.flags & PthreadFlags.DETACH) {\r\n      return 0\r\n    }\r\n    // 等待子线程退出\r\n    atomicsUtils.wait(addressof(thread.status), PthreadStatus.RUN)\r\n\r\n    if (retval !== nullptr) {\r\n      accessof(retval) <- thread.retval\r\n    }\r\n\r\n    entry.thread.threadDescriptor.status = PthreadStatus.STOP\r\n\r\n    return 0\r\n  }\r\n\r\n  public detachThread(thread: pointer<Pthread>) {\r\n    let entry: TheadPoolEntry\r\n\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      if (this.childThreads[i].thread.thread === thread) {\r\n        entry = this.childThreads[i]\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!entry) {\r\n      return -1\r\n    }\r\n\r\n    entry.thread.threadDescriptor.flags |= PthreadFlags.DETACH\r\n    thread.flags |= PthreadFlags.DETACH\r\n\r\n    return 0\r\n  }\r\n\r\n  public destroy() {\r\n    for (let i = 0; i < this.childThreads.length; i++) {\r\n      // 回收栈\r\n      free(this.childThreads[i].thread.stackPointer)\r\n      free(this.childThreads[i].thread.threadDescriptor)\r\n      this.childThreads[i].thread.worker.terminate()\r\n    }\r\n    this.childThreads = []\r\n  }\r\n}\r\n","/* eslint-disable camelcase */\r\n\r\nimport * as object from 'common/util/object'\r\nimport * as array from 'common/util/array'\r\nimport * as logger from 'common/util/logger'\r\nimport * as is from 'common/util/is'\r\nimport { Memory, StackPointer, Table, allocThreadId, StackTop } from '../heap'\r\nimport { memcpy, memset } from '../std/memory'\r\nimport { fd_fdstat_get, fd_write, abort, random_get, clock_time_get, clock_res_get, environ_get, environ_sizes_get } from './runtime/clib'\r\nimport { WebAssemblyResource } from './compiler'\r\nimport * as atomics from './runtime/atomic'\r\nimport * as pthread from './runtime/pthread'\r\nimport * as semaphore from './runtime/semaphore'\r\nimport * as config from '../config'\r\nimport * as atomicsUtils from '../thread/atomics'\r\nimport * as atomicAsm from '../thread/asm/atomics'\r\nimport * as libcAsm from './runtime/asm/libc'\r\nimport { BuiltinTableSlot } from '../allocator/Table'\r\n\r\nimport * as threadAsm from './runtime/asm/thread'\r\nimport isWorker from 'common/function/isWorker'\r\nimport { ChildThread, Pthread, PthreadFlags, PthreadStatus } from './thread'\r\nimport { ThreadDescriptor } from './thread'\r\nimport ThreadPool from './ThreadPool'\r\nimport * as cond from '../thread/cond'\r\nimport * as mutex from '../thread/mutex'\r\nimport support from 'common/util/support'\r\nimport runThread from './runThread'\r\nimport { SELF } from 'common/util/constant'\r\nimport sourceLoad from 'common/function/sourceLoad'\r\n\r\nexport type WebAssemblyRunnerOptions = {\r\n  imports?: Record<string, Record<string, WebAssembly.ImportValue>>\r\n  exportMap?: Record<string, string>\r\n  importMap?: Record<string, string>\r\n  envKey?: string\r\n  childImports?: string | Blob\r\n  memoryBase?: number\r\n  tableBase?: number\r\n  thread?: pointer<Pthread>\r\n  threadDescriptor?: pointer<ThreadDescriptor>\r\n}\r\n\r\nlet Worker: new (url: string) => Worker = SELF.Worker\r\nif (defined(ENV_NODE)) {\r\n  const { Worker: Worker_} = require('worker_threads')\r\n  Worker = Worker_\r\n}\r\n\r\nfunction emptyFunction() {}\r\n\r\nlet atomicAsmOverride = false\r\n\r\nexport default class WebAssemblyRunner {\r\n\r\n  static getTable() {\r\n    return Table\r\n  }\r\n\r\n  static mutexLock(mux: pointer<mutex.Mutex>) {\r\n    mutex.lock(mux)\r\n  }\r\n\r\n  static mutexUnlock(mux: pointer<mutex.Mutex>) {\r\n    mutex.unlock(mux)\r\n  }\r\n\r\n  static condWait(cnd: pointer<cond.Cond>, mux: pointer<mutex.Mutex>) {\r\n    cond.wait(cnd, mux)\r\n  }\r\n\r\n  static readPointer(p: pointer<pointer<void>>) {\r\n    return accessof(p)\r\n  }\r\n\r\n  static writePointer(p: pointer<pointer<void>>, v: pointer<void>) {\r\n    accessof(p) <- v\r\n  }\r\n\r\n  private resource: WebAssemblyResource\r\n\r\n  /**\r\n   * WebAssembly runtime 实例\r\n   */\r\n  private instance: WebAssembly.Instance\r\n\r\n  /**\r\n   * 配置项\r\n   */\r\n  protected options: WebAssemblyRunnerOptions\r\n\r\n  private builtinMalloc: pointer<void>[]\r\n\r\n  private memoryBase: pointer<void>\r\n\r\n  private tableBase: pointer<void>\r\n\r\n  private childImports: string\r\n  private childUrl: string\r\n  private childBlob: Blob\r\n\r\n  private childThreads: Map<int32, ChildThread>\r\n\r\n  private imports: Record<string, any>\r\n\r\n  private childReadyPromises: Promise<void>[]\r\n\r\n  private threadPool: ThreadPool\r\n\r\n  private initCalling: boolean\r\n\r\n  private promisingMap: Map<string, Function>\r\n\r\n  constructor(resource: WebAssemblyResource, options: WebAssemblyRunnerOptions = {}) {\r\n\r\n    this.resource = resource\r\n    this.builtinMalloc = []\r\n    this.initCalling = false\r\n\r\n    this.childThreads = new Map()\r\n    this.childReadyPromises = []\r\n    this.promisingMap = new Map()\r\n\r\n    if (is.string(options.childImports)) {\r\n      this.childImports =  options.childImports\r\n    }\r\n    else if (is.object(options.childImports) && options.childImports instanceof Blob) {\r\n      this.childImports = URL.createObjectURL(options.childImports)\r\n    }\r\n\r\n    this.memoryBase = resource.dataSize ? aligned_alloc(resource.dataAlign ?? 8, resource.dataSize) : nullptr\r\n    if (this.memoryBase && resource.bssSize) {\r\n      memset(this.memoryBase + ((resource.dataSize - resource.bssSize) as uint32), 0, resource.bssSize)\r\n    }\r\n\r\n    // 子线程的 tableBase 需要和父线程一致\r\n    if (options.thread && options.tableBase) {\r\n      if (Table.getPointer() !== options.tableBase) {\r\n        Table.alloc(options.tableBase - Table.getPointer())\r\n      }\r\n    }\r\n    this.tableBase = resource.tableSize ? Table.alloc(resource.tableSize) : nullptr\r\n\r\n    this.options = options\r\n\r\n    this.imports = {\r\n      env: {\r\n        memory: Memory,\r\n        __stack_pointer: StackPointer,\r\n        __indirect_function_table: Table.table,\r\n\r\n        clock_time_get: clock_time_get,\r\n        clock_res_get: clock_res_get,\r\n        random_get: random_get,\r\n\r\n        abort: abort,\r\n        proc_exit: function (exitCode: number) {\r\n          logger.error(`wasm module exit, code: ${exitCode}`)\r\n        },\r\n        __syscall_renameat: emptyFunction,\r\n        __syscall_unlinkat: emptyFunction,\r\n\r\n        environ_get: environ_get,\r\n        environ_sizes_get: environ_sizes_get,\r\n\r\n        fd_close: emptyFunction,\r\n        fd_fdstat_get: fd_fdstat_get,\r\n        fd_read: emptyFunction,\r\n        fd_seek: emptyFunction,\r\n        fd_write: fd_write,\r\n\r\n        emscripten_builtin_malloc: (size: size) => {\r\n          const p = malloc(size)\r\n          this.builtinMalloc.push(p)\r\n          return p\r\n        },\r\n\r\n        emscripten_builtin_free: (pointer: pointer<void>) => {\r\n          free(pointer)\r\n        },\r\n\r\n        emscripten_builtin_memalign: (memptr: pointer<pointer<void>>, alignment: size, size: size) => {\r\n          const address = aligned_alloc(alignment, size)\r\n          if (address !== nullptr) {\r\n            accessof(memptr) <- address\r\n            this.builtinMalloc.push(address)\r\n            return 0\r\n          }\r\n          return -1\r\n        },\r\n\r\n        emscripten_memcpy_big: function (dest: pointer<void>, src: pointer<void>, num: size) {\r\n          memcpy(dest, src, num)\r\n        },\r\n\r\n        __libc_malloc: function (size: size) {\r\n          return malloc(size)\r\n        },\r\n        __libc_free: (pointer: pointer<void>) => {\r\n          free(pointer)\r\n        },\r\n        malloc: (size: size) => {\r\n          if (this.initCalling === true) {\r\n            const p = malloc(size)\r\n            this.builtinMalloc.push(p)\r\n            return p\r\n          }\r\n          return malloc(size)\r\n        },\r\n        calloc: function (num: size, size: size) {\r\n          return calloc(num, size)\r\n        },\r\n        realloc: function (pointer: pointer<void>, size: size) {\r\n          return realloc(pointer, size)\r\n        },\r\n        aligned_alloc(alignment: size, size: size): pointer<void> {\r\n          return aligned_alloc(alignment, size)\r\n        },\r\n        free: function (pointer: pointer<void>) {\r\n          free(pointer)\r\n        },\r\n        posix_memalign: function (memptr: pointer<pointer<void>>, alignment: size, size: size) {\r\n          const address = aligned_alloc(alignment, size)\r\n          if (address !== nullptr) {\r\n            accessof(memptr) <- address\r\n            return 0\r\n          }\r\n          return -1\r\n        },\r\n        memalign: function (alignment: size, size: size) {\r\n          return aligned_alloc(alignment, size)\r\n        }\r\n      },\r\n      'GOT.func': {\r\n        malloc: new WebAssembly.Global({mutable: true, value: defined(WASM_64) ? 'i64' : 'i32'}, reinterpret_cast<pointer<void>>(BuiltinTableSlot.MALLOC)),\r\n        calloc: new WebAssembly.Global({mutable: true, value: defined(WASM_64) ? 'i64' : 'i32'}, reinterpret_cast<pointer<void>>(BuiltinTableSlot.CALLOC)),\r\n        realloc: new WebAssembly.Global({mutable: true, value: defined(WASM_64) ? 'i64' : 'i32'}, reinterpret_cast<pointer<void>>(BuiltinTableSlot.REALLOC)),\r\n        aligned_alloc: new WebAssembly.Global({mutable: true, value: defined(WASM_64) ? 'i64' : 'i32'}, reinterpret_cast<pointer<void>>(BuiltinTableSlot.ALIGNED_ALLOC)),\r\n        free: new WebAssembly.Global({mutable: true, value: defined(WASM_64) ? 'i64' : 'i32'}, reinterpret_cast<pointer<void>>(BuiltinTableSlot.FREE))\r\n      }\r\n    }\r\n\r\n    if (defined(ENABLE_THREADS)) {\r\n      const createPthread = (thread: pointer<Pthread>, attr: pointer<void>, func: pointer<((args: pointer<void>) => void)>, args: pointer<void>) => {\r\n        if (this.threadPool && this.threadPool.hasFree()) {\r\n          this.threadPool.createThread(thread, attr, func, args)\r\n          return 0\r\n        }\r\n\r\n        if (!this.childUrl) {\r\n          this.createChildUrl()\r\n        }\r\n\r\n        const worker = new Worker(this.childUrl)\r\n\r\n        thread.id = allocThreadId()\r\n        thread.status = PthreadStatus.RUN\r\n        thread.flags = 0\r\n        thread.retval = nullptr\r\n\r\n        const stackPointer = aligned_alloc(config.STACK_ALIGNMENT, config.STACK_SIZE)\r\n\r\n        const threadDescriptor = reinterpret_cast<pointer<ThreadDescriptor>>(malloc(sizeof(ThreadDescriptor)))\r\n        memset(threadDescriptor, 0, sizeof(ThreadDescriptor))\r\n\r\n        this.childThreads.set(thread.id, {\r\n          thread,\r\n          worker,\r\n          stackPointer,\r\n          threadDescriptor\r\n        })\r\n\r\n        let resolve: (ret: int32) => void\r\n        const promise = new Promise<int32>((r) => {\r\n          resolve = r\r\n        })\r\n        if (!support.jspi) {\r\n          this.childReadyPromises.push(promise as unknown as Promise<void>)\r\n        }\r\n\r\n        const handler = (message) => {\r\n          const origin = defined(ENV_NODE) ? message : message.data\r\n          const type = origin.type\r\n          const data = origin.data\r\n\r\n          switch (type) {\r\n            case 'run':\r\n              resolve(0)\r\n              break\r\n          }\r\n        }\r\n\r\n        if (defined(ENV_NODE)) {\r\n          // @ts-ignore\r\n          worker.on('message', handler)\r\n        }\r\n        else {\r\n          worker.onmessage = handler\r\n        }\r\n\r\n        /**\r\n         * postMessage 并不是同步的，而是在事件循环中处理的\r\n         * 因此父线程不能被阻塞在当前的事件循环中，否则子线程无法成功运行\r\n         * 只有 childReadyPromises 中的 Promise 都 resolve 了之后才能阻塞\r\n         */\r\n        worker.postMessage({\r\n          type: 'run',\r\n          data: {\r\n            cheap: {\r\n              memory: Memory,\r\n              stackPointer,\r\n              stackSize: config.STACK_SIZE,\r\n              id: thread.id\r\n            },\r\n            runner: {\r\n              resource: {\r\n                tableSize: this.resource.tableSize,\r\n                module: this.resource.threadModule.module,\r\n                initFuncs: this.resource.threadModule.initFuncs\r\n              },\r\n              options: {\r\n                memoryBase: this.options.memoryBase || this.memoryBase,\r\n                tableBase: this.tableBase,\r\n                thread,\r\n                threadDescriptor,\r\n                childImports: this.childImports\r\n              },\r\n              func,\r\n              args,\r\n              imports: this.childImports,\r\n              thread\r\n            }\r\n          }\r\n        })\r\n\r\n        return support.jspi ? promise : 0\r\n      }\r\n\r\n      object.extend(this.imports.env, {\r\n        wasm_pthread_create: support.jspi ? new WebAssembly.Suspending(createPthread) : createPthread,\r\n\r\n        wasm_pthread_join2: (thread: pointer<Pthread>, retval: pointer<pointer<void>>) => {\r\n\r\n          if (this.threadPool && this.threadPool.isPoolThread(thread)) {\r\n            this.threadPool.joinThread(thread, retval)\r\n            return 0\r\n          }\r\n\r\n          if (thread.flags & PthreadFlags.DETACH) {\r\n            this.childThreads.delete(thread.id)\r\n            return 0\r\n          }\r\n          // 等待子线程退出\r\n          atomicsUtils.wait(addressof(thread.status), PthreadStatus.RUN)\r\n\r\n          if (retval !== nullptr) {\r\n            accessof(retval) <- thread.retval\r\n          }\r\n\r\n          const child = this.childThreads.get(thread.id)\r\n\r\n          // 回收栈\r\n          free(child.stackPointer)\r\n          free(child.threadDescriptor)\r\n\r\n          child.worker.terminate()\r\n\r\n          this.childThreads.delete(thread.id)\r\n\r\n          memset(thread, 0, sizeof(Pthread))\r\n          return 0\r\n        },\r\n\r\n        wasm_pthread_detach2: (thread: pointer<Pthread>) => {\r\n          if (this.threadPool && this.threadPool.isPoolThread(thread)) {\r\n            this.threadPool.detachThread(thread)\r\n            return 0\r\n          }\r\n          const child = this.childThreads.get(thread.id)\r\n          child.threadDescriptor.flags |= PthreadFlags.DETACH\r\n          thread.flags |= PthreadFlags.DETACH\r\n        }\r\n      })\r\n      object.extend(this.imports.env, atomics)\r\n      object.extend(this.imports.env, pthread)\r\n      object.extend(this.imports.env, semaphore)\r\n    }\r\n\r\n    if (this.memoryBase) {\r\n      object.extend(this.imports.env, {\r\n        __memory_base: this.memoryBase\r\n      })\r\n    }\r\n    // 使用父线程的 memoryBase\r\n    else if (options.memoryBase) {\r\n      object.extend(this.imports.env, {\r\n        __memory_base: options.memoryBase\r\n      })\r\n    }\r\n    if (this.tableBase) {\r\n      object.extend(this.imports.env, {\r\n        __table_base: this.tableBase\r\n      })\r\n    }\r\n\r\n    if (options.imports?.env) {\r\n      object.extend(this.imports.env, options.imports.env)\r\n      if (options.envKey && options.importMap) {\r\n        const env: Record<string, WebAssembly.ImportValue> = {}\r\n        object.each(this.imports.env, (value, key) => {\r\n          if (options.importMap[key]) {\r\n            env[options.importMap[key]] = value\r\n          }\r\n        })\r\n        this.imports[options.envKey] = env\r\n      }\r\n    }\r\n    this.imports['wasi_snapshot_preview1'] = this.imports.env\r\n  }\r\n\r\n  private createChildUrl() {\r\n    if (defined(ENABLE_THREADS)) {\r\n      let source = ''\r\n      if (defined(ENV_WEBPACK) && !defined(ENV_NODE)) {\r\n        // 保证打包工具包含下面的模块代码\r\n        require('./runThread')\r\n        const module = sourceLoad(require.resolve('./WebAssemblyRunner.ts'), {\r\n          varName: '__WebAssemblyRunner__',\r\n          exportName: '__WebAssemblyRunner__',\r\n          pointName: WebAssemblyRunner.name,\r\n          exportIsClass: true\r\n        })\r\n        const runThread = defined(ENABLE_THREADS) ? sourceLoad(require.resolve('./runThread'), {\r\n          varName: 'runThread'\r\n        }) : null\r\n\r\n        let childImports = ''\r\n        let cheapPolyfillUrl = ''\r\n        if (defined(ENV_NODE)) {\r\n          if (this.childImports) {\r\n            childImports = `Object.assign(self.imports.env, require(${this.childImports}).env)`\r\n          }\r\n        }\r\n        else {\r\n          if (this.childImports) {\r\n            childImports = `importScripts('${this.childImports}');`\r\n          }\r\n          if ((SELF as any).CHEAP_POLYFILL_URL) {\r\n            cheapPolyfillUrl = `importScripts('${(SELF as any).CHEAP_POLYFILL_URL}');`\r\n          }\r\n        }\r\n\r\n        source = `\r\n          ${module}\r\n          ${runThread}\r\n          self.imports = {env:{}};\r\n          ${cheapPolyfillUrl}\r\n          ${childImports}\r\n          runThread.default();\r\n        `\r\n      }\r\n      else {\r\n        let WebAssemblyRunnerWorkerUrl = ''\r\n        let childImports = ''\r\n        let cheapPolyfillUrl = ''\r\n        if (defined(ENV_NODE)) {\r\n          if (this.childImports) {\r\n            childImports = `Object.assign(self.imports.env, require(${this.childImports}).env)`\r\n          }\r\n        }\r\n        else {\r\n          // @ts-ignore\r\n          WebAssemblyRunnerWorkerUrl = `importScripts('${new URL('./WebAssemblyRunnerWorker.js', import.meta.url)}');`\r\n          if (this.childImports) {\r\n            childImports = `importScripts('${this.childImports}');`\r\n          }\r\n          if ((SELF as any).CHEAP_POLYFILL_URL) {\r\n            cheapPolyfillUrl = `importScripts('${(SELF as any).CHEAP_POLYFILL_URL}');`\r\n          }\r\n        }\r\n        source = `\r\n          var self = typeof self !== 'undefined' ? self : (typeof globalThis !== 'undefined' ? globalThis : window)\r\n          self.CHEAP_HEAP_INITIAL = ${(SELF as any).CHEAP_HEAP_INITIAL}\r\n          self.CHEAP_HEAP_MAXIMUM = ${(SELF as any).CHEAP_HEAP_MAXIMUM}\r\n\r\n          self.imports = {env:{}};\r\n          ${cheapPolyfillUrl}\r\n          ${WebAssemblyRunnerWorkerUrl}\r\n          ${childImports}\r\n\r\n          (${runThread.toString()})();\r\n        `\r\n      }\r\n      if (defined(ENV_NODE)) {\r\n        const path = require('path')\r\n        const fs = require('fs')\r\n        this.childUrl = path.join(__dirname, '.__node__WebAssemblyRunnerWorker.js')\r\n        if (!fs.existsSync(this.childUrl)) {\r\n          fs.writeFileSync(this.childUrl, source)\r\n        }\r\n      }\r\n      else {\r\n        this.childBlob = new Blob([source], { type: 'text/javascript' })\r\n        this.childUrl = URL.createObjectURL(this.childBlob)\r\n      }\r\n    }\r\n  }\r\n\r\n  private overrideAtomic() {\r\n    atomics.override({\r\n      atomic_add_i8: atomicAsm.instance.exports.add8 as any,\r\n      atomic_sub_i8: atomicAsm.instance.exports.sub8 as any,\r\n      atomic_and_i8: atomicAsm.instance.exports.and8 as any,\r\n      atomic_or_i8: atomicAsm.instance.exports.or8 as any,\r\n      atomic_xor_i8: atomicAsm.instance.exports.xor8 as any,\r\n      atomic_store_i8: atomicAsm.instance.exports.store8 as any,\r\n      atomic_load_i8: atomicAsm.instance.exports.load8 as any,\r\n      atomic_compare_exchange_i8: atomicAsm.instance.exports.compare_exchange8 as any,\r\n      atomic_exchange_i8: atomicAsm.instance.exports.exchange8 as any,\r\n      atomic_add_i16: atomicAsm.instance.exports.add16 as any,\r\n      atomic_sub_i16: atomicAsm.instance.exports.sub16 as any,\r\n      atomic_and_i16: atomicAsm.instance.exports.and16 as any,\r\n      atomic_or_i16: atomicAsm.instance.exports.or16 as any,\r\n      atomic_xor_i16: atomicAsm.instance.exports.xor16 as any,\r\n      atomic_store_i16: atomicAsm.instance.exports.store16 as any,\r\n      atomic_load_i16: atomicAsm.instance.exports.load16 as any,\r\n      atomic_compare_exchange_i16: atomicAsm.instance.exports.compare_exchange16 as any,\r\n      atomic_exchange_i16: atomicAsm.instance.exports.exchange16 as any,\r\n      atomic_add_i32: atomicAsm.instance.exports.add32 as any,\r\n      atomic_sub_i32: atomicAsm.instance.exports.sub32 as any,\r\n      atomic_and_i32: atomicAsm.instance.exports.and32 as any,\r\n      atomic_or_i32: atomicAsm.instance.exports.or32 as any,\r\n      atomic_xor_i32: atomicAsm.instance.exports.xor32 as any,\r\n      atomic_store_i32: atomicAsm.instance.exports.store32 as any,\r\n      atomic_load_i32: atomicAsm.instance.exports.load32 as any,\r\n      atomic_compare_exchange_i32: atomicAsm.instance.exports.compare_exchange32 as any,\r\n      atomic_exchange_i32: atomicAsm.instance.exports.exchange32 as any,\r\n      atomic_add_i64: atomicAsm.instance.exports.add64 as any,\r\n      atomic_sub_i64: atomicAsm.instance.exports.sub64 as any,\r\n      atomic_and_i64: atomicAsm.instance.exports.and64 as any,\r\n      atomic_or_i64: atomicAsm.instance.exports.or64 as any,\r\n      atomic_xor_i64: atomicAsm.instance.exports.xor64 as any,\r\n      atomic_store_i64: atomicAsm.instance.exports.store64 as any,\r\n      atomic_load_i64: atomicAsm.instance.exports.load64 as any,\r\n      atomic_compare_exchange_i64: atomicAsm.instance.exports.compare_exchange64 as any,\r\n      atomic_exchange_i64: atomicAsm.instance.exports.exchange64 as any,\r\n      atomics_notify: atomicAsm.instance.exports.notify as any,\r\n      atomics_wait: atomicAsm.instance.exports.wait as any\r\n    })\r\n    object.extend(this.imports.env, atomics)\r\n  }\r\n\r\n  /**\r\n   * 运行 wasm 实例\r\n   */\r\n  public async run(imports?: Record<string, any>, threadPoolCount?: number) {\r\n    if (is.object(imports)) {\r\n      object.extend(this.options.imports, imports)\r\n    }\r\n    if (!defined(DEBUG)\r\n      && threadAsm.isSupport()\r\n      && this.resource.threadModule\r\n    ) {\r\n      if (!threadAsm.wasmThreadProxy) {\r\n        threadAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM, pthread.override)\r\n      }\r\n      object.extend(this.imports.env, pthread)\r\n    }\r\n    if (!libcAsm.wasmThreadProxy\r\n      && libcAsm.isSupport()\r\n    ) {\r\n      libcAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM)\r\n    }\r\n    if (!atomicAsmOverride && atomicAsm.isSupport()) {\r\n      atomicAsmOverride = true\r\n      this.overrideAtomic()\r\n    }\r\n    this.instance = await WebAssembly.instantiate(this.resource.module, this.imports)\r\n\r\n    this.initRunTime()\r\n\r\n    if (defined(ENABLE_THREADS)\r\n      && this.resource.threadModule\r\n      && this.resource.enableThreadPool\r\n      && threadPoolCount > 0\r\n      && !support.jspi\r\n    ) {\r\n      if (!this.childUrl) {\r\n        this.createChildUrl()\r\n      }\r\n\r\n      let count = threadPoolCount\r\n      if (this.resource.enableThreadCountRate) {\r\n        count *= this.resource.enableThreadCountRate\r\n      }\r\n\r\n      this.threadPool = new ThreadPool(count, this.childUrl)\r\n      await this.threadPool.ready({\r\n        tableSize: this.resource.tableSize,\r\n        module: this.resource.threadModule.module,\r\n        initFuncs: this.resource.threadModule.initFuncs,\r\n        memoryBase: this.options.memoryBase || this.memoryBase,\r\n        tableBase: this.tableBase,\r\n        childImports: this.childImports\r\n      })\r\n    }\r\n  }\r\n\r\n  public runAsChild(imports?: Record<string, any>) {\r\n    if (is.object(imports)) {\r\n      object.extend(this.options.imports, imports)\r\n    }\r\n    if (!defined(DEBUG) && threadAsm.isSupport()) {\r\n      if (!threadAsm.wasmThreadProxy) {\r\n        threadAsm.init(Memory, config.HEAP_INITIAL, config.HEAP_MAXIMUM, pthread.override)\r\n      }\r\n      object.extend(this.imports.env, pthread)\r\n    }\r\n    if (!atomicAsmOverride && atomicAsm.isSupport()) {\r\n      atomicAsmOverride = true\r\n      this.overrideAtomic()\r\n    }\r\n    this.instance = new WebAssembly.Instance(this.resource.module, this.imports)\r\n\r\n    this.initRunTime()\r\n  }\r\n\r\n  public async childThreadsReady() {\r\n    if (!this.childReadyPromises.length) {\r\n      return\r\n    }\r\n    const promise = this.childReadyPromises\r\n    this.childReadyPromises = []\r\n    await Promise.all(promise)\r\n  }\r\n\r\n  private initRunTime() {\r\n    this.builtinMalloc = []\r\n    this.initCalling = true\r\n    if (is.array(this.resource.initFuncs)) {\r\n      array.each(this.resource.initFuncs, (func) => {\r\n        let call: Function\r\n        if (this.asm[func]) {\r\n          call = this.asm[func]\r\n        }\r\n        if (call) {\r\n          return call()\r\n        }\r\n      })\r\n    }\r\n    this.initCalling = false\r\n  }\r\n\r\n  /**\r\n   * 调用 wasm 模块暴露的方法\r\n   * \r\n   * @param func 方法名\r\n   * @param args 参数，只能是 number 和 bigint( 有浏览器版本要求， 建议 64 位数据使用指针传递） 类型，如果是其他类型参数使用指针传递\r\n   */\r\n  public invoke<T extends number | bigint | void = void>(func: string, ...args: (number | bigint)[]): T  {\r\n    if (!this.asm) {\r\n      return -1 as T\r\n    }\r\n\r\n    let call: Function\r\n    if (this.asm[func]) {\r\n      call = this.asm[func]\r\n    }\r\n    else if (this.options.exportMap && this.options.exportMap[func] && this.asm[this.options.exportMap[func]]) {\r\n      call = this.asm[this.options.exportMap[func]] as Function\r\n    }\r\n    if (call) {\r\n      return call.apply(null, args)\r\n    }\r\n    else {\r\n      logger.error(`the wasm module has not function ${func} to call`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 异步调用 wasm 模块暴露的方法\r\n   * \r\n   * 适用于 wasm 内部会调用异步 js 函数的情况\r\n   * \r\n   * 需要支持 JSPI\r\n   * \r\n   * @param func 方法名\r\n   * @param args 参数，只能是 number 和 bigint( 有浏览器版本要求， 建议 64 位数据使用指针传递） 类型，如果是其他类型参数使用指针传递\r\n   */\r\n  public async invokeAsync<T extends number | bigint | void = void>(func: string, ...args: (number | bigint)[]): Promise<T>  {\r\n    if (!this.asm) {\r\n      return -1 as T\r\n    }\r\n    if (!support.jspi) {\r\n      return this.invoke<T>(func, ...args)\r\n    }\r\n\r\n    let call: Function\r\n\r\n    if (this.promisingMap.has(func)) {\r\n      call = this.promisingMap.get(func)\r\n    }\r\n    else {\r\n      if (this.asm[func]) {\r\n        call = this.asm[func]\r\n      }\r\n      else if (this.options.exportMap && this.options.exportMap[func] && this.asm[this.options.exportMap[func]]) {\r\n        call = this.asm[this.options.exportMap[func]] as Function\r\n      }\r\n      call = WebAssembly.promising(call as (...args: any[]) => any)\r\n      this.promisingMap.set(func, call)\r\n    }\r\n    if (call) {\r\n      return call.apply(null, args)\r\n    }\r\n    else {\r\n      logger.error(`the wasm module has not function ${func} to call`)\r\n    }\r\n  }\r\n\r\n  get asm() {\r\n    return this.instance && this.instance.exports as Object\r\n  }\r\n\r\n  public getInstance() {\r\n    return this.instance\r\n  }\r\n\r\n  public getChildThreadCount() {\r\n    return this.childThreads.size\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.builtinMalloc?.length) {\r\n      array.each(this.builtinMalloc, (pointer) => {\r\n        free(pointer)\r\n      })\r\n      this.builtinMalloc.length = 0\r\n    }\r\n\r\n    if (this.memoryBase) {\r\n      free(this.memoryBase)\r\n      this.memoryBase = null\r\n    }\r\n\r\n    if (this.tableBase) {\r\n      Table.free(this.tableBase)\r\n      this.tableBase = nullptr\r\n    }\r\n\r\n    if (this.childImports) {\r\n      URL.revokeObjectURL(this.childImports)\r\n      this.childImports = null\r\n    }\r\n\r\n    if (this.childUrl) {\r\n      if (defined(ENV_NODE)) {\r\n        const fs = require('fs')\r\n        fs.unlinkSync(this.childUrl)\r\n      }\r\n      else {\r\n        URL.revokeObjectURL(this.childUrl)\r\n      }\r\n      this.childUrl = null\r\n    }\r\n    this.childBlob = null\r\n    this.childReadyPromises.length = 0\r\n\r\n    if (this.childThreads.size) {\r\n      this.childThreads.forEach((thread, id) => {\r\n        if (!(thread.threadDescriptor.flags & PthreadFlags.DETACH)) {\r\n          logger.warn('has child thread running, maybe resource leakage')\r\n          thread.worker.terminate()\r\n          thread.thread.status = PthreadStatus.STOP\r\n          if (thread.stackPointer) {\r\n            free(thread.stackPointer)\r\n          }\r\n          free(thread.threadDescriptor)\r\n          this.childThreads.delete(id)\r\n        }\r\n      })\r\n    }\r\n\r\n    this.builtinMalloc = null\r\n    this.instance = null\r\n\r\n    if (this.options.thread) {\r\n      if (this.options.threadDescriptor) {\r\n        this.options.threadDescriptor.status = PthreadStatus.STOP\r\n      }\r\n      if (this.options.threadDescriptor\r\n        && ((this.options.threadDescriptor.flags & PthreadFlags.DETACH)\r\n            || (this.options.thread.flags & PthreadFlags.EXIT)\r\n        )\r\n      ) {\r\n        if (!(this.options.threadDescriptor.flags & PthreadFlags.POOL)) {\r\n          if (StackTop) {\r\n            free(StackTop)\r\n          }\r\n          free(this.options.threadDescriptor)\r\n          memset(this.options.thread, 0, sizeof(Pthread))\r\n          self.close()\r\n        }\r\n      }\r\n      else {\r\n        this.options.thread.status = PthreadStatus.STOP\r\n        // 唤醒父线程收回资源\r\n        atomicsUtils.notify(addressof(this.options.thread.status), 1)\r\n      }\r\n    }\r\n\r\n    if (defined(ENABLE_THREADS)) {\r\n      if (this.threadPool) {\r\n        this.threadPool.destroy()\r\n      }\r\n      this.threadPool = null\r\n    }\r\n\r\n    if (this.promisingMap) {\r\n      this.promisingMap.clear()\r\n      this.promisingMap = null\r\n    }\r\n  }\r\n}\r\n","import * as is from 'common/util/is'\r\nimport IOReader from 'common/io/IOReader'\r\nimport { IOError } from 'common/io/error'\r\nimport IOWriter from 'common/io/IOWriter'\r\nimport { DYlinkType, ExternalKind, SectionId, readSleb128Async,\r\n  readUleb128Async, writeSleb128, writeUleb128, writeUleb128Async\r\n} from 'common/util/wasm'\r\nimport concatTypeArray from 'common/function/concatTypeArray'\r\nimport * as object from 'common/util/object'\r\nimport * as config from '../config'\r\nimport browser from 'common/util/browser'\r\nimport os from 'common/util/os'\r\nimport BufferWriter from 'common/io/BufferWriter'\r\nimport nearestPowerOf2 from 'common/math/nearestPowerOf2'\r\n\r\nexport interface WebAssemblyResource {\r\n  readonly tableSize: number\r\n  readonly tableAlign: number\r\n  readonly dataSize: number\r\n  readonly dataAlign: number\r\n  readonly bssSize: number\r\n  readonly initFuncs: string[]\r\n  readonly module: WebAssembly.Module\r\n  buffer: ArrayBuffer\r\n  threadModule?: {\r\n    readonly module: WebAssembly.Module\r\n    readonly initFuncs: string[]\r\n  }\r\n  /**\r\n   * 提前创建好的 worker pool\r\n   * 某些 wasm 创建线程之后需要马上挂起线程，这种情况需要提前将线程准备好\r\n   */\r\n  enableThreadPool?: boolean\r\n  enableThreadCountRate?: number\r\n}\r\n\r\nexport interface WebAssemblySource {\r\n  source: Uint8Array<ArrayBuffer> | ArrayBuffer | string\r\n  tableSize?: number\r\n  tableAlign?: number\r\n  dataSize?: number\r\n  dataAlign?: number\r\n  bssSize?: number\r\n}\r\n\r\ninterface Context {\r\n  ioReader: IOReader,\r\n  ioWriter: IOWriter\r\n  bufferEnded: boolean\r\n  compileStopped: boolean\r\n  error: string\r\n  abortController: AbortController\r\n\r\n  pullResolve: (buffer: Uint8Array) => void\r\n  bufferResolve: (controller: ReadableStreamDefaultController<any>) => void\r\n\r\n  data: {\r\n    tableSize?: number\r\n    tableAlign?: number\r\n    dataSize?: number\r\n    dataAlign?: number\r\n    bssSize?: number\r\n  }\r\n  buffers: Uint8Array[]\r\n  options: CompilerOptions\r\n}\r\n\r\ninterface CompilerOptions {\r\n  enableThread?: boolean\r\n  child?: boolean\r\n  initFuncs?: string[]\r\n}\r\n\r\nasync function process(context: Context) {\r\n  try {\r\n    // `\\0asm`\r\n    await context.ioWriter.writeUint32(await context.ioReader.readUint32())\r\n    // Version\r\n    await context.ioWriter.writeUint32(await context.ioReader.readUint32())\r\n    while (true) {\r\n      if (context.compileStopped) {\r\n        if (context.abortController) {\r\n          context.abortController.abort()\r\n        }\r\n        break\r\n      }\r\n\r\n      const sectionId = await context.ioReader.readUint8()\r\n      if (context.options.child) {\r\n        if (sectionId === SectionId.Data) {\r\n          await context.ioWriter.writeUint8(sectionId)\r\n          // size\r\n          await writeUleb128Async(context.ioWriter, 7)\r\n\r\n          // count\r\n          await writeUleb128Async(context.ioWriter, 1)\r\n\r\n          // index\r\n          await writeUleb128Async(context.ioWriter, 0)\r\n\r\n          // init_expr i32_const 0\r\n          await context.ioWriter.writeUint8(defined(WASM_64) ? 0x42 : 0x41)\r\n          await context.ioWriter.writeUint8(0x00)\r\n          await context.ioWriter.writeUint8(0x0b)\r\n\r\n          // size\r\n          await writeUleb128Async(context.ioWriter, 1)\r\n          await context.ioWriter.writeUint8(0x00)\r\n\r\n          const size = await readUleb128Async(context.ioReader)\r\n          await context.ioReader.skip(size)\r\n          continue\r\n        }\r\n      }\r\n\r\n      await context.ioWriter.writeUint8(sectionId)\r\n\r\n      const size = await readUleb128Async(context.ioReader)\r\n\r\n      const now = context.ioReader.getPos()\r\n      if (sectionId === SectionId.Custom) {\r\n        await writeUleb128Async(context.ioWriter, size)\r\n        const now = context.ioReader.getPos()\r\n        const len = await readUleb128Async(context.ioReader)\r\n        const name = await context.ioReader.readString(len)\r\n        await writeUleb128Async(context.ioWriter, len)\r\n        await context.ioWriter.writeString(name)\r\n        if (name === 'dylink.0') {\r\n          const endPos = context.ioReader.getPos() + (static_cast<int64>(size) - (context.ioReader.getPos() - now))\r\n          while (context.ioReader.getPos() < endPos) {\r\n            const type = await context.ioReader.readUint8()\r\n            await context.ioWriter.writeUint8(type)\r\n            const contentSize = await readUleb128Async(context.ioReader)\r\n            await writeUleb128Async(context.ioWriter, contentSize)\r\n            if (type === DYlinkType.MEMORY) {\r\n              context.data.dataSize = await readUleb128Async(context.ioReader)\r\n              context.data.dataAlign = await readUleb128Async(context.ioReader)\r\n              context.data.tableSize = await readUleb128Async(context.ioReader)\r\n              context.data.tableAlign = await readUleb128Async(context.ioReader)\r\n              await writeUleb128Async(context.ioWriter, context.data.dataSize)\r\n              await writeUleb128Async(context.ioWriter, context.data.dataAlign)\r\n              await writeUleb128Async(context.ioWriter, context.data.tableSize)\r\n              await writeUleb128Async(context.ioWriter, context.data.tableAlign)\r\n            }\r\n            else {\r\n              await context.ioWriter.writeBuffer(await context.ioReader.readBuffer(contentSize))\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if (sectionId === SectionId.Data) {\r\n        await writeUleb128Async(context.ioWriter, size)\r\n        /**\r\n         * - count: varuint32\r\n         * - entries: data_segment*\r\n         *   - index varuint32 the linear memory index (0 in the MVP)\r\n         *   - offset init_expr \r\n         *   - size varuint32\r\n         *   - data bytes\r\n         */\r\n        const count = await readUleb128Async(context.ioReader)\r\n        await writeUleb128Async(context.ioWriter, count)\r\n        if (count) {\r\n          await writeUleb128Async(context.ioWriter, await readUleb128Async(context.ioReader))\r\n          while (true) {\r\n            const byte = await context.ioReader.readUint8()\r\n            await context.ioWriter.writeUint8(byte)\r\n            if (byte === 0x0b) {\r\n              break\r\n            }\r\n          }\r\n          const dataSize = await readUleb128Async(context.ioReader)\r\n          if (context.data.dataSize) {\r\n            context.data.bssSize = context.data.dataSize - dataSize\r\n          }\r\n          else {\r\n            context.data.dataSize = dataSize\r\n          }\r\n          await writeUleb128Async(context.ioWriter, dataSize)\r\n        }\r\n      }\r\n      else if (sectionId === SectionId.Import) {\r\n        /**\r\n         * - count: varuint32\r\n         * - entries: import_entry*\r\n         *   - module_len varuint32\r\n         *   - module_str bytes \r\n         *   - field_len varuint32\r\n         *   - field_str bytes\r\n         *   - external_kind\r\n         */\r\n        const importWriter = new BufferWriter(new Uint8Array(size + 100))\r\n        let count = await readUleb128Async(context.ioReader)\r\n        writeUleb128(importWriter, count)\r\n        let counter = 0\r\n\r\n        while (count--) {\r\n          const moduleLen = await readUleb128Async(context.ioReader)\r\n          writeUleb128(importWriter, moduleLen)\r\n          importWriter.writeBuffer(await context.ioReader.readBuffer(moduleLen))\r\n          const fieldLen = await readUleb128Async(context.ioReader)\r\n          writeUleb128(importWriter, fieldLen)\r\n          importWriter.writeBuffer(await context.ioReader.readBuffer(fieldLen))\r\n\r\n          const externalKind = await context.ioReader.readUint8()\r\n          importWriter.writeUint8(externalKind)\r\n\r\n          switch (externalKind) {\r\n            case ExternalKind.Function: {\r\n              // type index of the function signature\r\n              writeUleb128(importWriter, await readUleb128Async(context.ioReader))\r\n              break\r\n            }\r\n            case ExternalKind.Global: {\r\n              // content_type\r\n              writeSleb128(importWriter, await readSleb128Async(context.ioReader))\r\n              // mutability\r\n              writeUleb128(importWriter, await readUleb128Async(context.ioReader))\r\n              break\r\n            }\r\n            case ExternalKind.Memory: {\r\n              let flags = await readUleb128Async(context.ioReader)\r\n\r\n              if (context.options.enableThread) {\r\n                flags |= 2\r\n              }\r\n              else {\r\n                flags &= ~2\r\n              }\r\n\r\n              writeUleb128(importWriter, flags)\r\n              // initial\r\n              const initial = await readUleb128Async(context.ioReader)\r\n              writeUleb128(importWriter, config.HEAP_INITIAL || initial)\r\n              if (flags & 0x01) {\r\n                let max = await readUleb128Async(context.ioReader)\r\n                if (!(os.ios && !browser.checkVersion(os.version, '17', true)) || !context.options.enableThread) {\r\n                  // ios safari 16 以下改更了会编译错误，但它也不会去检查 max 和导入的内存是否限制一致\r\n                  // 所以这里不更改了\r\n                  max = config.HEAP_MAXIMUM\r\n                }\r\n                // maximum\r\n                writeUleb128(importWriter, max)\r\n              }\r\n              counter++\r\n              break\r\n            }\r\n            case ExternalKind.Table: {\r\n              // elem_type\r\n              writeSleb128(importWriter, await readSleb128Async(context.ioReader))\r\n              const flags = await readUleb128Async(context.ioReader)\r\n              writeUleb128(importWriter, flags)\r\n              const initial = await readUleb128Async(context.ioReader)\r\n              writeUleb128(importWriter, initial)\r\n\r\n              context.data.tableSize = initial\r\n\r\n              if (flags & 0x01) {\r\n                // maximum\r\n                writeUleb128(importWriter, await readUleb128Async(context.ioReader))\r\n              }\r\n              counter++\r\n              break\r\n            }\r\n          }\r\n\r\n          if (counter === 2) {\r\n            break\r\n          }\r\n        }\r\n        const buffer = importWriter.getWroteBuffer()\r\n        const remainingLength = size - Number(context.ioReader.getPos() - now)\r\n        await writeUleb128Async(context.ioWriter, buffer.length + remainingLength)\r\n        await context.ioWriter.writeBuffer(buffer)\r\n      }\r\n      else {\r\n        await writeUleb128Async(context.ioWriter, size)\r\n      }\r\n\r\n      const remainingLength = size - Number(context.ioReader.getPos() - now)\r\n      if (remainingLength) {\r\n        await context.ioReader.pipe(context.ioWriter, size - Number(context.ioReader.getPos() - now))\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    if (context.ioReader.error === IOError.END) {\r\n      context.bufferEnded = true\r\n    }\r\n    else {\r\n      context.error = e\r\n    }\r\n    if (context.ioReader.remainingLength()) {\r\n      await context.ioWriter.writeBuffer(await context.ioReader.readBuffer(context.ioReader.remainingLength()))\r\n    }\r\n    await context.ioWriter.flush()\r\n  }\r\n}\r\n\r\nexport default async function compile(source: WebAssemblySource, options: CompilerOptions = {}): Promise<WebAssemblyResource> {\r\n  let module: WebAssembly.Module\r\n  let tableSize: number\r\n  let tableAlign: number\r\n  let dataSize: number\r\n  let dataAlign: number\r\n  let bssSize: number\r\n\r\n  let buffer: ArrayBuffer\r\n\r\n  options = object.extend({\r\n    enableThread: config.USE_THREADS,\r\n    initFuncs: options.child ? [] : ['__wasm_apply_data_relocs', '_initialize']\r\n  }, options)\r\n\r\n  if (is.number(source.dataSize) && is.number(source.tableSize)) {\r\n    tableSize = source.dataSize\r\n    dataSize = source.dataSize\r\n    tableAlign = source.dataAlign\r\n    dataAlign = source.dataAlign\r\n    bssSize = source.bssSize\r\n    if (is.string(source.source)) {\r\n      const params: Partial<any> = {\r\n        method: 'GET',\r\n        headers: {},\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        referrerPolicy: 'no-referrer-when-downgrade'\r\n      }\r\n      if (is.func(WebAssembly.compileStreaming)) {\r\n        module = await WebAssembly.compileStreaming(fetch(source.source, params))\r\n      }\r\n      else {\r\n        const response = await fetch(source.source, params)\r\n        buffer = await response.arrayBuffer()\r\n        module = await WebAssembly.compile(buffer)\r\n      }\r\n    }\r\n    else {\r\n      module = await WebAssembly.compile(source.source)\r\n      buffer = is.arrayBuffer(source.source) ? source.source : (source.source as Uint8Array<ArrayBuffer>).buffer\r\n    }\r\n  }\r\n  else {\r\n    const context: Context = {\r\n      ioReader: new IOReader(1 * 1024 * 1024),\r\n      ioWriter: new IOWriter(1 * 1024 * 1024),\r\n      bufferEnded: false,\r\n      compileStopped: false,\r\n      error: '',\r\n      abortController: null,\r\n\r\n      pullResolve: null,\r\n      bufferResolve: null,\r\n      buffers: [],\r\n      data: {\r\n\r\n      },\r\n      options\r\n    }\r\n\r\n    const response = new Response(\r\n      new ReadableStream({\r\n        async start(controller) {\r\n          if (is.string(source.source)) {\r\n            if (typeof AbortController === 'function') {\r\n              context.abortController = new AbortController()\r\n            }\r\n            const params: Partial<any> = {\r\n              method: 'GET',\r\n              headers: {},\r\n              mode: 'cors',\r\n              cache: 'default',\r\n              referrerPolicy: 'no-referrer-when-downgrade',\r\n              signal: context.abortController?.signal\r\n            }\r\n\r\n            const res = await fetch(source.source, params)\r\n            let reader: ReadableStreamDefaultReader<Uint8Array>\r\n            if (res.ok && (res.status >= 200 && res.status <= 299)) {\r\n              reader = res.body.getReader()\r\n            }\r\n            else {\r\n              controller.error(`Http code invalid, ${res.status} ${res.statusText}`)\r\n            }\r\n\r\n            const buffers: Uint8Array[] = []\r\n            context.ioReader.onFlush = async (buffer: Uint8Array) => {\r\n              let pos = 0\r\n              while (buffers.length && pos < buffer.length) {\r\n                const cache = buffers.shift()\r\n                if (cache.length > buffer.length - pos) {\r\n                  buffer.set(cache.subarray(0, buffer.length - pos), pos)\r\n                  buffers.unshift(cache.subarray(buffer.length - pos))\r\n                  pos = buffer.length\r\n                }\r\n                else {\r\n                  buffer.set(cache, pos)\r\n                  pos += cache.length\r\n                }\r\n              }\r\n\r\n              if (pos >= buffer.length) {\r\n                return buffer.length\r\n              }\r\n\r\n              const { value, done } = await reader.read()\r\n\r\n              if (done) {\r\n                return pos > 0 ? pos : IOError.END\r\n              }\r\n              else {\r\n                context.buffers.push(value)\r\n                if (value.length > buffer.length - pos) {\r\n                  buffer.set(value.subarray(0, buffer.length - pos), pos)\r\n                  buffers.push(value.subarray(buffer.length - pos))\r\n                  return buffer.length\r\n                }\r\n                else {\r\n                  buffer.set(value, pos)\r\n                  pos += value.length\r\n                  return pos\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            let readPos = 0\r\n            let readFileLength = source.source.byteLength\r\n\r\n            const wasm = is.arrayBuffer(source.source) ? new Uint8Array(source.source) : source.source\r\n\r\n            context.ioReader.onFlush = async (buffer: Uint8Array) => {\r\n              if (readPos >= readFileLength) {\r\n                return IOError.END\r\n              }\r\n              const len = Math.min(buffer.length, readFileLength - readPos)\r\n\r\n              buffer.set(wasm.subarray(readPos, readPos + len), 0)\r\n\r\n              readPos += len\r\n\r\n              return len\r\n            }\r\n          }\r\n\r\n          context.ioWriter.onFlush = async (buffer: Uint8Array) => {\r\n            if (context.pullResolve) {\r\n              context.pullResolve(buffer.slice())\r\n              context.pullResolve = null\r\n              return 0\r\n            }\r\n            const controller = await new Promise<ReadableStreamDefaultController<any>>((resolve) => {\r\n              context.bufferResolve = resolve\r\n            })\r\n            controller.enqueue(buffer.slice())\r\n            if (context.bufferEnded) {\r\n              controller.close()\r\n            }\r\n            return 0\r\n          }\r\n\r\n          process(context)\r\n        },\r\n        async pull(controller) {\r\n          if (context.error) {\r\n            controller.close()\r\n            return\r\n          }\r\n          if (context.bufferResolve) {\r\n            context.bufferResolve(controller)\r\n            context.bufferResolve = null\r\n            return\r\n          }\r\n          controller.enqueue(await new Promise<Uint8Array>((resolve, reject) => {\r\n            context.pullResolve = resolve\r\n          }))\r\n\r\n          if (context.bufferEnded) {\r\n            controller.close()\r\n          }\r\n          else if (context.error) {\r\n            controller.error(context.error)\r\n          }\r\n        },\r\n        cancel(reason) {\r\n          context.compileStopped = true\r\n        }\r\n      }),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/wasm'\r\n        }\r\n      }\r\n    )\r\n\r\n    if (is.func(WebAssembly.compileStreaming)) {\r\n      module = await WebAssembly.compileStreaming(response)\r\n    }\r\n    else {\r\n      module = await WebAssembly.compile(await response.arrayBuffer())\r\n    }\r\n\r\n    buffer = is.string(source.source)\r\n      ? (concatTypeArray(Uint8Array, context.buffers) as Uint8Array<ArrayBuffer>).buffer\r\n      : (is.arrayBuffer(source.source) ? source.source : (source.source as Uint8Array<ArrayBuffer>).buffer)\r\n    tableSize = context.data.tableSize\r\n    dataSize = context.data.dataSize\r\n    tableAlign = context.data.tableAlign\r\n    dataAlign = context.data.dataAlign\r\n    bssSize = context.data.bssSize\r\n  }\r\n\r\n  if (options.child) {\r\n    return {\r\n      module,\r\n      initFuncs: options.initFuncs || [],\r\n      tableSize: 0,\r\n      tableAlign: tableAlign || 0,\r\n      dataSize: 1,\r\n      dataAlign: dataAlign ? Math.max(nearestPowerOf2(dataAlign), 8) : 8,\r\n      bssSize: 0,\r\n      buffer\r\n    }\r\n  }\r\n\r\n  return {\r\n    module,\r\n    tableSize,\r\n    tableAlign: tableAlign || 0,\r\n    dataSize,\r\n    dataAlign: dataAlign ? Math.max(nearestPowerOf2(dataAlign), 8) : 8,\r\n    bssSize: bssSize || 0,\r\n    initFuncs: options.initFuncs || [],\r\n    buffer\r\n  }\r\n}\r\n","\r\nimport { ThreadWait } from './thread'\r\nimport WebAssemblyRunner from './WebAssemblyRunner'\r\n\r\n/* eslint-disable camelcase */\r\nexport default function runThread() {\r\n\r\n  let WebAssemblyRunnerClass: typeof WebAssemblyRunner\r\n\r\n  if (defined(ENV_NODE)) {\r\n    WebAssemblyRunnerClass = require('./WebAssemblyRunner.js').default\r\n  }\r\n  // @ts-ignore\r\n  else if (defined(ENV_WEBPACK) && __WebAssemblyRunner__) {\r\n    // @ts-ignore\r\n    WebAssemblyRunnerClass = __WebAssemblyRunner__.__WebAssemblyRunner__\r\n  }\r\n  else {\r\n    // @ts-ignore\r\n    WebAssemblyRunnerClass = __CHeap_WebAssemblyRunner__.default\r\n  }\r\n\r\n  let parentPort = self\r\n  if (defined(ENV_NODE)) {\r\n    const { parentPort: parentPort_ } = require('worker_threads')\r\n    parentPort = parentPort_\r\n  }\r\n\r\n  let runner: any\r\n  let runnerData: any\r\n  let waitData: pointer<ThreadWait> = nullptr\r\n\r\n  const handler = (message: MessageEvent<any>) => {\r\n\r\n    const origin = defined(ENV_NODE) ? message : message.data\r\n    const type = origin.type\r\n    const data = origin.data\r\n\r\n    switch (type) {\r\n      case 'run': {\r\n        parentPort.postMessage({\r\n          type: 'run'\r\n        })\r\n        if (self.CHeap && self.CHeap.initThread) {\r\n          self.CHeap.initThread(data.cheap).then(() => {\r\n            function run() {\r\n              self.__SELF_THREAD__ = data.runner.thread\r\n              // @ts-ignore\r\n              data.runner.options.imports = self.imports\r\n              runner = new WebAssemblyRunnerClass(data.runner.resource, data.runner.options)\r\n              runner.runAsChild()\r\n              WebAssemblyRunnerClass.getTable().get(data.runner.func)(data.runner.args)\r\n              runner.destroy()\r\n            }\r\n            run()\r\n          })\r\n        }\r\n        break\r\n      }\r\n      case 'ready': {\r\n        runnerData = data.runner\r\n        waitData = data.cheap.stackPointer\r\n        if (self.CHeap && self.CHeap.initThread) {\r\n          self.CHeap.initThread(data.cheap).then(() => {\r\n            parentPort.postMessage({\r\n              type: 'ready'\r\n            })\r\n          })\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'wait': {\r\n        async function run() {\r\n          while (true) {\r\n            WebAssemblyRunnerClass.mutexLock(addressof(waitData.mutex))\r\n            while (WebAssemblyRunnerClass.readPointer(addressof(waitData.thread)) === nullptr) {\r\n              WebAssemblyRunnerClass.condWait(addressof(waitData.cond), addressof(waitData.mutex))\r\n            }\r\n\r\n            self.__SELF_THREAD__ = runnerData.options.thread = runnerData.thread = WebAssemblyRunnerClass.readPointer(addressof(waitData.thread))\r\n\r\n            runnerData.func = WebAssemblyRunnerClass.readPointer(addressof(waitData.func))\r\n            runnerData.args = WebAssemblyRunnerClass.readPointer(addressof(waitData.args))\r\n\r\n            runner = new WebAssemblyRunnerClass(runnerData.resource, runnerData.options)\r\n            runner.runAsChild()\r\n            WebAssemblyRunnerClass.getTable().get(runnerData.func)(runnerData.args)\r\n            runner.destroy()\r\n            WebAssemblyRunnerClass.writePointer(addressof(waitData.thread), nullptr)\r\n            WebAssemblyRunnerClass.mutexUnlock(addressof(waitData.mutex))\r\n          }\r\n        }\r\n        // @ts-ignore\r\n        runnerData.options.imports = self.imports\r\n        run()\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  if (defined(ENV_NODE)) {\r\n    // @ts-ignore\r\n    parentPort.on('message', handler)\r\n  }\r\n  else {\r\n    parentPort.onmessage = handler\r\n  }\r\n}\r\n","export default asm`\r\n(func $env.malloc (;0;) (import \"env\" \"malloc\") (param i32) (result i32))\r\n(func $env.free (;1;) (import \"env\" \"free\") (param i32))\r\n(func $env.calloc (;2;) (import \"env\" \"calloc\") (param i32 i32) (result i32))\r\n(func $env.realloc (;3;) (import \"env\" \"realloc\") (param i32 i32) (result i32))\r\n(func $env.aligned_alloc (;4;) (import \"env\" \"aligned_alloc\") (param i32 i32) (result i32))\r\n\r\n(func $malloc (export \"malloc\") (param $size i32) (result i32)\r\n  (call $env.malloc (local.get $size))\r\n)\r\n(func $free (export \"free\") (param $pointer i32)\r\n  (call $env.free (local.get $pointer))\r\n)\r\n(func $calloc (export \"calloc\") (param $num i32) (param $size i32) (result i32)\r\n  (call $env.calloc (local.get $num) (local.get $size))\r\n)\r\n(func $realloc (export \"realloc\") (param $pointer i32) (param $size i32) (result i32)\r\n  (call $env.realloc (local.get $pointer) (local.get $size))\r\n)\r\n(func $aligned_alloc (export \"alignedAlloc\") (param $alignment i32) (param $size i32) (result i32)\r\n  (call $env.realloc (local.get $alignment) (local.get $size))\r\n)\r\n`\r\n","/* eslint-disable camelcase */\r\n\r\nimport { base64ToUint8Array } from 'common/util/base64'\r\nimport * as logger from 'common/util/logger'\r\n\r\nimport asm from './libc.asm'\r\nimport asm64 from './libc64.asm'\r\nimport * as wasmUtils from 'common/util/wasm'\r\nimport { BuiltinTableSlot } from '../../../allocator/Table'\r\nimport { Table } from '../../../heap'\r\n\r\n/**\r\n * WebAssembly runtime 实例\r\n */\r\nexport let wasmThreadProxy: WebAssembly.Instance\r\n\r\nlet support = true\r\n\r\nexport function isSupport() {\r\n  return support\r\n}\r\n\r\nexport function init(memory: WebAssembly.Memory, initial: uint32, maximum: uint32) {\r\n  try {\r\n    const wasm = wasmUtils.setMemoryMeta(base64ToUint8Array(defined(WASM_64) ? asm64 : asm), {\r\n      shared: typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer,\r\n      initial,\r\n      maximum\r\n    })\r\n\r\n    wasmThreadProxy = new WebAssembly.Instance(new WebAssembly.Module(wasm), {\r\n      env: {\r\n        memory,\r\n        malloc: function (size: size) {\r\n          return malloc(size)\r\n        },\r\n        calloc: function (num: size, size: size) {\r\n          return calloc(num, size)\r\n        },\r\n        realloc: function (pointer: pointer<void>, size: size) {\r\n          return realloc(pointer, size)\r\n        },\r\n        aligned_alloc(alignment: size, size: size): pointer<void> {\r\n          return aligned_alloc(alignment, size)\r\n        },\r\n        free: function (pointer: pointer<void>) {\r\n          free(pointer)\r\n        }\r\n      }\r\n    })\r\n\r\n    Table.set(static_cast<pointer<void>>(BuiltinTableSlot.MALLOC as uint32), wasmThreadProxy.exports.malloc as any)\r\n    Table.set(static_cast<pointer<void>>(BuiltinTableSlot.FREE as uint32), wasmThreadProxy.exports.free as any)\r\n    Table.set(static_cast<pointer<void>>(BuiltinTableSlot.CALLOC as uint32), wasmThreadProxy.exports.calloc as any)\r\n    Table.set(static_cast<pointer<void>>(BuiltinTableSlot.REALLOC as uint32), wasmThreadProxy.exports.realloc as any)\r\n    Table.set(static_cast<pointer<void>>(BuiltinTableSlot.ALIGNED_ALLOC as uint32), wasmThreadProxy.exports.alignedAlloc as any)\r\n  }\r\n  catch (error) {\r\n    support = false\r\n    logger.warn('libc asm not support, cannot use asm thread function')\r\n  }\r\n}\r\n","export default asm64`\r\n(func $env.malloc (;0;) (import \"env\" \"malloc\") (param i64) (result i64))\r\n(func $env.free (;1;) (import \"env\" \"free\") (param i64))\r\n(func $env.calloc (;2;) (import \"env\" \"calloc\") (param i64 i64) (result i64))\r\n(func $env.realloc (;3;) (import \"env\" \"realloc\") (param i64 i64) (result i64))\r\n(func $env.aligned_alloc (;4;) (import \"env\" \"aligned_alloc\") (param i64 i64) (result i64))\r\n\r\n(func $malloc (export \"malloc\") (param $size i64) (result i64)\r\n  (call $env.malloc (local.get $size))\r\n)\r\n(func $free (export \"free\") (param $pointer i64)\r\n  (call $env.free (local.get $pointer))\r\n)\r\n(func $calloc (export \"calloc\") (param $num i64) (param $size i64) (result i64)\r\n  (call $env.calloc (local.get $num) (local.get $size))\r\n)\r\n(func $realloc (export \"realloc\") (param $pointer i64) (param $size i64) (result i64)\r\n  (call $env.realloc (local.get $pointer) (local.get $size))\r\n)\r\n(func $aligned_alloc (export \"alignedAlloc\") (param $alignment i64) (param $size i64) (result i64)\r\n  (call $env.realloc (local.get $alignment) (local.get $size))\r\n)\r\n`\r\n","export default asm`\r\n(func $lock (export \"lock\") (param $mutexAddr i32) (result i32)\r\n  (local $status i32)\r\n  (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 1))\r\n  (local.set $status)\r\n  (local.get $status)\r\n  (i32.const 0)\r\n  (i32.ne)\r\n  if\r\n    (loop $loop\r\n      (local.get $status)\r\n      (i32.const 2)\r\n      (i32.eq)\r\n      if (result i32)\r\n        (i32.const 1)\r\n      else\r\n        (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 1) (i32.const 2))\r\n        (i32.const 0)\r\n        (i32.ne)\r\n      end\r\n      if\r\n        (memory.atomic.wait32 (local.get $mutexAddr) (i32.const 2) (i64.const -1))\r\n        (drop)\r\n      end\r\n      (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 2))\r\n      (local.set $status)\r\n      (local.get $status)\r\n      (i32.const 0)\r\n      (i32.ne)\r\n      (br_if $loop)\r\n    )\r\n  end\r\n  (i32.const 0)\r\n)\r\n\r\n(func $trylock (export \"trylock\") (param $mutexAddr i32) (result i32)\r\n  (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 1))\r\n  (i32.const 0)\r\n  (i32.eq)\r\n  if (result i32)\r\n    (i32.const 0)\r\n  else\r\n    (i32.const 16)\r\n  end\r\n)\r\n\r\n(func $unlock (export \"unlock\") (param $mutexAddr i32) (result i32)\r\n  (i32.atomic.rmw.sub (local.get $mutexAddr) (i32.const 1))\r\n  (i32.const 1)\r\n  (i32.ne)\r\n  if\r\n    (i32.atomic.store (local.get $mutexAddr) (i32.const 0))\r\n    (memory.atomic.notify (local.get $mutexAddr) (i32.const 1))\r\n    (drop)\r\n  end\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"wait\") (param $condAddr i32) (param $mutexAddr i32) (result i32)\r\n  (local.get $condAddr)\r\n  (i32.atomic.load (local.get $condAddr))\r\n  (call $unlock (local.get $mutexAddr))\r\n  (drop)\r\n  (i64.const -1)\r\n  (memory.atomic.wait32)\r\n  (drop)\r\n  (call $lock (local.get $mutexAddr))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"timedwait\") (param $condAddr i32) (param $mutexAddr i32) (param $timeout i32) (result i32)\r\n  (local.get $condAddr)\r\n  (i32.atomic.load (local.get $condAddr))\r\n  (call $unlock (local.get $mutexAddr))\r\n  (drop)\r\n  (i64.add (i64.mul (i64.load (local.get $timeout)) (i64.const 1000000000)) (i64.extend_i32_u (i32.load offset=8 align=4 (local.get $timeout))))\r\n  (memory.atomic.wait32)\r\n  (call $lock (local.get $mutexAddr))\r\n  (drop)\r\n  (i32.const 2)\r\n  (i32.eq)\r\n  if (result i32)\r\n    (i32.const 112)\r\n  else\r\n    (i32.const 0)\r\n  end\r\n)\r\n\r\n(func (export \"signal\") (param $condAddr i32) (result i32)\r\n  (i32.atomic.rmw.add (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (memory.atomic.notify (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"broadcast\") (param $condAddr i32) (result i32)\r\n  (i32.atomic.rmw.add (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (memory.atomic.notify (local.get $condAddr) (i32.const 1073741824))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n`\r\n","/* eslint-disable camelcase */\r\n\r\nimport { base64ToUint8Array } from 'common/util/base64'\r\nimport * as logger from 'common/util/logger'\r\n\r\nimport asm from './thread.asm'\r\nimport asm64 from './thread64.asm'\r\nimport { Mutex } from '../../../thread/mutex'\r\nimport { Cond } from '../../../thread/cond'\r\nimport { Timespec } from '../semaphore'\r\nimport * as wasmUtils from 'common/util/wasm'\r\n\r\n/**\r\n * WebAssembly runtime 实例\r\n */\r\nexport let wasmThreadProxy: WebAssembly.Instance\r\n\r\nlet support = true\r\n\r\nexport function isSupport() {\r\n  return support\r\n}\r\n\r\nexport function init(memory: WebAssembly.Memory, initial: uint32, maximum: uint32, override: (\r\n  data: {\r\n    wasm_pthread_mutex_lock: (mutex: pointer<Mutex>) => int32,\r\n    wasm_pthread_mutex_trylock: (mutex: pointer<Mutex>) => int32,\r\n    wasm_pthread_mutex_unlock: (mutex: pointer<Mutex>) => int32,\r\n    wasm_pthread_cond_wait: (cond: pointer<Cond>, mutex: pointer<Mutex>) => int32,\r\n    wasm_pthread_cond_timedwait: (cond: pointer<Cond>, mutex: pointer<Mutex>, abstime: pointer<Timespec>) => int32,\r\n    wasm_pthread_cond_signal: (cond: pointer<Cond>) => int32,\r\n    wasm_pthread_cond_broadcast: (cond: pointer<Cond>) => int32\r\n  }\r\n) => void) {\r\n  try {\r\n    if (typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer || defined(WASM_64)) {\r\n      const wasm = wasmUtils.setMemoryMeta(base64ToUint8Array(defined(WASM_64) ? asm64 : asm), {\r\n        shared: defined(WASM_64) ? (typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer) : true,\r\n        initial,\r\n        maximum\r\n      })\r\n\r\n      wasmThreadProxy = new WebAssembly.Instance(new WebAssembly.Module(wasm), {\r\n        env: {\r\n          memory\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      support = false\r\n      return\r\n    }\r\n    override({\r\n      wasm_pthread_mutex_lock: wasmThreadProxy.exports.lock as (mutex: pointer<Mutex>) => int32,\r\n      wasm_pthread_mutex_trylock: wasmThreadProxy.exports.trylock as (mutex: pointer<Mutex>) => int32,\r\n      wasm_pthread_mutex_unlock: wasmThreadProxy.exports.unlock as (mutex: pointer<Mutex>) => int32,\r\n      wasm_pthread_cond_wait: wasmThreadProxy.exports.wait as (cond: pointer<Cond>, mutex: pointer<Mutex>) => int32,\r\n      wasm_pthread_cond_timedwait: wasmThreadProxy.exports.timedwait as (\r\n        cond: pointer<Cond>,\r\n        mutex: pointer<Mutex>,\r\n        abstime: pointer<Timespec>\r\n      ) => int32,\r\n      wasm_pthread_cond_signal: wasmThreadProxy.exports.signal as (cond: pointer<Cond>) => int32,\r\n      wasm_pthread_cond_broadcast: wasmThreadProxy.exports.broadcast as (cond: pointer<Cond>) => int32\r\n    })\r\n  }\r\n  catch (error) {\r\n    support = false\r\n    logger.warn('thread asm not support, cannot use asm thread function')\r\n  }\r\n}\r\n","export default asm64`\r\n(func $lock (export \"lock\") (param $mutexAddr i64) (result i32)\r\n  (local $status i32)\r\n  (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 1))\r\n  (local.set $status)\r\n  (local.get $status)\r\n  (i32.const 0)\r\n  (i32.ne)\r\n  if\r\n    (loop $loop\r\n      (local.get $status)\r\n      (i32.const 2)\r\n      (i32.eq)\r\n      if (result i32)\r\n        (i32.const 1)\r\n      else\r\n        (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 1) (i32.const 2))\r\n        (i32.const 0)\r\n        (i32.ne)\r\n      end\r\n      if\r\n        (memory.atomic.wait32 (local.get $mutexAddr) (i32.const 2) (i64.const -1))\r\n        (drop)\r\n      end\r\n      (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 2))\r\n      (local.set $status)\r\n      (local.get $status)\r\n      (i32.const 0)\r\n      (i32.ne)\r\n      (br_if $loop)\r\n    )\r\n  end\r\n  (i32.const 0)\r\n)\r\n\r\n(func $trylock (export \"trylock\") (param $mutexAddr i64) (result i32)\r\n  (i32.atomic.rmw.cmpxchg (local.get $mutexAddr) (i32.const 0) (i32.const 1))\r\n  (i32.const 0)\r\n  (i32.eq)\r\n  if (result i32)\r\n    (i32.const 0)\r\n  else\r\n    (i32.const 16)\r\n  end\r\n)\r\n\r\n(func $unlock (export \"unlock\") (param $mutexAddr i64) (result i32)\r\n  (i32.atomic.rmw.sub (local.get $mutexAddr) (i32.const 1))\r\n  (i32.const 1)\r\n  (i32.ne)\r\n  if\r\n    (i32.atomic.store (local.get $mutexAddr) (i32.const 0))\r\n    (memory.atomic.notify (local.get $mutexAddr) (i32.const 1))\r\n    (drop)\r\n  end\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"wait\") (param $condAddr i64) (param $mutexAddr i64) (result i32)\r\n  (local.get $condAddr)\r\n  (i32.atomic.load (local.get $condAddr))\r\n  (call $unlock (local.get $mutexAddr))\r\n  (drop)\r\n  (i64.const -1)\r\n  (memory.atomic.wait32)\r\n  (drop)\r\n  (call $lock (local.get $mutexAddr))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"timedwait\") (param $condAddr i64) (param $mutexAddr i64) (param $timeout i64) (result i32)\r\n  (local.get $condAddr)\r\n  (i32.atomic.load (local.get $condAddr))\r\n  (call $unlock (local.get $mutexAddr))\r\n  (drop)\r\n  (i64.add (i64.mul (i64.load (local.get $timeout)) (i64.const 1000000000)) (i64.extend_i32_u (i32.load offset=8 align=4 (local.get $timeout))))\r\n  (memory.atomic.wait32)\r\n  (call $lock (local.get $mutexAddr))\r\n  (drop)\r\n  (i32.const 2)\r\n  (i32.eq)\r\n  if (result i32)\r\n    (i32.const 112)\r\n  else\r\n    (i32.const 0)\r\n  end\r\n)\r\n\r\n(func (export \"signal\") (param $condAddr i64) (result i32)\r\n  (i32.atomic.rmw.add (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (memory.atomic.notify (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n\r\n(func (export \"broadcast\") (param $condAddr i64) (result i32)\r\n  (i32.atomic.rmw.add (local.get $condAddr) (i32.const 1))\r\n  (drop)\r\n  (memory.atomic.notify (local.get $condAddr) (i32.const 1073741824))\r\n  (drop)\r\n  (i32.const 0)\r\n)\r\n`\r\n","/* eslint-disable camelcase */\r\n\r\nimport * as atomics from '../../thread/atomics'\r\nimport { CTypeEnumPointerShiftMap } from '../../typedef'\r\n\r\nexport let atomic_add_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.add(p, value, atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_sub_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.sub(p, value, atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_and_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.and(p, value,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_or_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.or(p, value,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_xor_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.xor(p, value,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_store_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.store(p, value,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_load_i8 = function (p: pointer<atomic_int8>) {\r\n  // @ts-ignore\r\n  return atomics.load(p,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_compare_exchange_i8 = function (p: pointer<atomic_int8>, expectedValue: int32, replacementValue: int32) {\r\n  // @ts-ignore\r\n  return atomics.compareExchange(p, expectedValue, replacementValue,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\nexport let atomic_exchange_i8 = function (p: pointer<atomic_int8>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.exchange(p, value,  atomic_int8, CTypeEnumPointerShiftMap[atomic_int8])\r\n}\r\n\r\n\r\nexport let atomic_add_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.add(p, value, atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_sub_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.sub(p, value, atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_and_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.and(p, value,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_or_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.or(p, value,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_xor_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.xor(p, value,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_store_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.store(p, value,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_load_i16 = function (p: pointer<atomic_int16>) {\r\n  // @ts-ignore\r\n  return atomics.load(p,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_compare_exchange_i16 = function (p: pointer<atomic_int16>, expectedValue: int32, replacementValue: int32) {\r\n  // @ts-ignore\r\n  return atomics.compareExchange(p, expectedValue, replacementValue,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_exchange_i16 = function (p: pointer<atomic_int16>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.exchange(p, value,  atomic_int16, CTypeEnumPointerShiftMap[atomic_int16])\r\n}\r\n\r\nexport let atomic_add_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.add(p, value, atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_sub_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.sub(p, value, atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_and_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.and(p, value,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_or_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.or(p, value,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_xor_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.xor(p, value,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_store_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.store(p, value,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_load_i32 = function (p: pointer<atomic_int32>) {\r\n  // @ts-ignore\r\n  return atomics.load(p,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_compare_exchange_i32 = function (p: pointer<atomic_int32>, expectedValue: int32, replacementValue: int32) {\r\n  // @ts-ignore\r\n  return atomics.compareExchange(p, expectedValue, replacementValue,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\nexport let atomic_exchange_i32 = function (p: pointer<atomic_int32>, value: int32) {\r\n  // @ts-ignore\r\n  return atomics.exchange(p, value,  atomic_int32, CTypeEnumPointerShiftMap[atomic_int32])\r\n}\r\n\r\n\r\n\r\nexport let atomic_add_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.add(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_sub_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.sub(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_and_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.and(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_or_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.or(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_xor_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.xor(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_store_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.store(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_load_i64 = function (p: pointer<atomic_int64>) {\r\n  // @ts-ignore\r\n  return atomics.load(p, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_compare_exchange_i64 = function (p: pointer<atomic_int64>, expectedValue: int64, replacementValue: int64) {\r\n  // @ts-ignore\r\n  return atomics.compareExchange(p, expectedValue, replacementValue, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomic_exchange_i64 = function (p: pointer<atomic_int64>, value: int64) {\r\n  // @ts-ignore\r\n  return atomics.exchange(p, value, atomic_int64, CTypeEnumPointerShiftMap[atomic_int64])\r\n}\r\n\r\nexport let atomics_notify = function (p: pointer<atomic_int32>, count: uint32) {\r\n  return atomics.notify(p, count)\r\n}\r\n\r\nexport let atomics_wait = function (p: pointer<atomic_int32>, value: int32) {\r\n  return atomics.wait(p, value)\r\n}\r\n\r\nexport let atomics_wait_timeout = function (p: pointer<atomic_int32>, value: int32, timeout: int64) {\r\n  return atomics.waitTimeout(p, value, static_cast<int32>(timeout))\r\n}\r\n\r\nexport function override(data: {\r\n  atomic_add_i8?: typeof atomic_add_i8\r\n  atomic_sub_i8?: typeof atomic_sub_i8\r\n  atomic_and_i8?: typeof atomic_and_i8\r\n  atomic_or_i8?: typeof atomic_or_i8\r\n  atomic_xor_i8?: typeof atomic_xor_i8\r\n  atomic_store_i8?: typeof atomic_store_i8\r\n  atomic_load_i8?: typeof atomic_load_i8\r\n  atomic_compare_exchange_i8?: typeof atomic_compare_exchange_i8\r\n  atomic_exchange_i8?: typeof atomic_exchange_i8\r\n  atomic_add_i16?: typeof atomic_add_i16\r\n  atomic_sub_i16?: typeof atomic_sub_i16\r\n  atomic_and_i16?: typeof atomic_and_i16\r\n  atomic_or_i16?: typeof atomic_or_i16\r\n  atomic_xor_i16?: typeof atomic_xor_i16\r\n  atomic_store_i16?: typeof atomic_store_i16\r\n  atomic_load_i16?: typeof atomic_load_i16\r\n  atomic_compare_exchange_i16?: typeof atomic_compare_exchange_i16\r\n  atomic_exchange_i16?: typeof atomic_exchange_i16\r\n  atomic_add_i32?: typeof atomic_add_i32\r\n  atomic_sub_i32?: typeof atomic_sub_i32\r\n  atomic_and_i32?: typeof atomic_and_i32\r\n  atomic_or_i32?: typeof atomic_or_i32\r\n  atomic_xor_i32?: typeof atomic_xor_i32\r\n  atomic_store_i32?: typeof atomic_store_i32\r\n  atomic_load_i32?: typeof atomic_load_i32\r\n  atomic_compare_exchange_i32?: typeof atomic_compare_exchange_i32\r\n  atomic_exchange_i32?: typeof atomic_exchange_i32\r\n  atomic_add_i64?: typeof atomic_add_i64\r\n  atomic_sub_i64?: typeof atomic_sub_i64\r\n  atomic_and_i64?: typeof atomic_and_i64\r\n  atomic_or_i64?: typeof atomic_or_i64\r\n  atomic_xor_i64?: typeof atomic_xor_i64\r\n  atomic_store_i64?: typeof atomic_store_i64\r\n  atomic_load_i64?: typeof atomic_load_i64\r\n  atomic_compare_exchange_i64?: typeof atomic_compare_exchange_i64\r\n  atomic_exchange_i64?: typeof atomic_exchange_i64\r\n  atomics_notify?: typeof atomics_notify\r\n  atomics_wait?: typeof atomics_wait\r\n  atomics_wait_timeout?: typeof atomics_wait_timeout\r\n}) {\r\n  if (data.atomic_add_i8) {\r\n    atomic_add_i8 = data.atomic_add_i8\r\n  }\r\n  if (data.atomic_sub_i8) {\r\n    atomic_sub_i8 = data.atomic_sub_i8\r\n  }\r\n  if (data.atomic_and_i8) {\r\n    atomic_and_i8 = data.atomic_and_i8\r\n  }\r\n  if (data.atomic_or_i8) {\r\n    atomic_or_i8 = data.atomic_or_i8\r\n  }\r\n  if (data.atomic_xor_i8) {\r\n    atomic_xor_i8 = data.atomic_xor_i8\r\n  }\r\n  if (data.atomic_store_i8) {\r\n    atomic_store_i8 = data.atomic_store_i8\r\n  }\r\n  if (data.atomic_load_i8) {\r\n    atomic_load_i8 = data.atomic_load_i8\r\n  }\r\n  if (data.atomic_compare_exchange_i8) {\r\n    atomic_compare_exchange_i8 = data.atomic_compare_exchange_i8\r\n  }\r\n  if (data.atomic_exchange_i8) {\r\n    atomic_exchange_i8 = data.atomic_exchange_i8\r\n  }\r\n\r\n  if (data.atomic_add_i16) {\r\n    atomic_add_i16 = data.atomic_add_i16\r\n  }\r\n  if (data.atomic_sub_i16) {\r\n    atomic_sub_i16 = data.atomic_sub_i16\r\n  }\r\n  if (data.atomic_and_i16) {\r\n    atomic_and_i16 = data.atomic_and_i16\r\n  }\r\n  if (data.atomic_or_i16) {\r\n    atomic_or_i16 = data.atomic_or_i16\r\n  }\r\n  if (data.atomic_xor_i16) {\r\n    atomic_xor_i16 = data.atomic_xor_i16\r\n  }\r\n  if (data.atomic_store_i16) {\r\n    atomic_store_i16 = data.atomic_store_i16\r\n  }\r\n  if (data.atomic_load_i16) {\r\n    atomic_load_i16 = data.atomic_load_i16\r\n  }\r\n  if (data.atomic_compare_exchange_i16) {\r\n    atomic_compare_exchange_i16 = data.atomic_compare_exchange_i16\r\n  }\r\n  if (data.atomic_exchange_i16) {\r\n    atomic_exchange_i16 = data.atomic_exchange_i16\r\n  }\r\n\r\n  if (data.atomic_add_i32) {\r\n    atomic_add_i32 = data.atomic_add_i32\r\n  }\r\n  if (data.atomic_sub_i32) {\r\n    atomic_sub_i32 = data.atomic_sub_i32\r\n  }\r\n  if (data.atomic_and_i32) {\r\n    atomic_and_i32 = data.atomic_and_i32\r\n  }\r\n  if (data.atomic_or_i32) {\r\n    atomic_or_i32 = data.atomic_or_i32\r\n  }\r\n  if (data.atomic_xor_i32) {\r\n    atomic_xor_i32 = data.atomic_xor_i32\r\n  }\r\n  if (data.atomic_store_i32) {\r\n    atomic_store_i32 = data.atomic_store_i32\r\n  }\r\n  if (data.atomic_load_i32) {\r\n    atomic_load_i32 = data.atomic_load_i32\r\n  }\r\n  if (data.atomic_compare_exchange_i32) {\r\n    atomic_compare_exchange_i32 = data.atomic_compare_exchange_i32\r\n  }\r\n  if (data.atomic_exchange_i32) {\r\n    atomic_exchange_i32 = data.atomic_exchange_i32\r\n  }\r\n\r\n  if (data.atomic_add_i64) {\r\n    atomic_add_i64 = data.atomic_add_i64\r\n  }\r\n  if (data.atomic_sub_i64) {\r\n    atomic_sub_i64 = data.atomic_sub_i64\r\n  }\r\n  if (data.atomic_and_i64) {\r\n    atomic_and_i64 = data.atomic_and_i64\r\n  }\r\n  if (data.atomic_or_i64) {\r\n    atomic_or_i64 = data.atomic_or_i64\r\n  }\r\n  if (data.atomic_xor_i64) {\r\n    atomic_xor_i64 = data.atomic_xor_i64\r\n  }\r\n  if (data.atomic_store_i64) {\r\n    atomic_store_i64 = data.atomic_store_i64\r\n  }\r\n  if (data.atomic_load_i64) {\r\n    atomic_load_i64 = data.atomic_load_i64\r\n  }\r\n  if (data.atomic_compare_exchange_i64) {\r\n    atomic_compare_exchange_i64 = data.atomic_compare_exchange_i64\r\n  }\r\n  if (data.atomic_exchange_i64) {\r\n    atomic_exchange_i64 = data.atomic_exchange_i64\r\n  }\r\n\r\n  if (data.atomics_notify) {\r\n    atomics_notify = data.atomics_notify\r\n  }\r\n  if (data.atomics_wait) {\r\n    atomics_wait = data.atomics_wait\r\n  }\r\n  if (data.atomics_wait_timeout) {\r\n    atomics_wait_timeout = data.atomics_wait_timeout\r\n  }\r\n}\r\n","/* eslint-disable camelcase */\r\n\r\nimport { mapUint8Array } from '../../std/memory'\r\nimport * as text from 'common/util/text'\r\n\r\nconst buffers = [null, [], []]\r\n\r\nconst WASI_ERRNO_SUCCESS = 0\r\nconst WASI_ERRNO_NOSYS = 52\r\nconst WASI_ERRNO_INVAL = 28\r\n\r\nexport function printChar(stream: uint32, curr: char) {\r\n  const buffer = buffers[stream]\r\n  if (curr === 0 || curr === 10) {\r\n    (stream === 1 ? console.log.bind(console) : console.log.bind(console))(text.decode(buffer))\r\n    buffer.length = 0\r\n  }\r\n  else {\r\n    buffer.push(curr)\r\n  }\r\n}\r\n\r\nexport function writeAsciiToMemory(str: string, buffer: pointer<char>, doNotAddNull?: boolean) {\r\n  for (let i = 0; i < str.length; ++i) {\r\n    accessof(buffer) <- reinterpret_cast<char>(str.charCodeAt(i))\r\n    buffer++\r\n  }\r\n  if (!doNotAddNull) {\r\n    accessof(buffer) <- reinterpret_cast<char>(0)\r\n  }\r\n}\r\n\r\nconst ENV = {}\r\nlet thisProgram: string = './this.program'\r\nlet getEnvStringsStrings: string[]\r\n\r\nfunction getExecutableName() {\r\n  return thisProgram || './this.program'\r\n}\r\n\r\nfunction getEnvStrings() {\r\n  if (!getEnvStringsStrings) {\r\n    const lang = (typeof navigator === 'object' && navigator.languages && navigator.languages[0] || 'C').replace('-', '_') + '.UTF-8'\r\n    const env = {\r\n      'USER': 'web_user',\r\n      'LOGNAME': 'web_user',\r\n      'PATH': '/',\r\n      'PWD': '/',\r\n      'HOME': '/home/web_user',\r\n      'LANG': lang,\r\n      '_': getExecutableName()\r\n    }\r\n    for (let x in ENV) {\r\n      env[x] = ENV[x]\r\n    }\r\n    const strings = []\r\n    for (let x in env) {\r\n      strings.push(x + '=' + env[x])\r\n    }\r\n    getEnvStringsStrings = strings\r\n  }\r\n  return getEnvStringsStrings\r\n}\r\n\r\nexport function environ_get(environ: pointer<pointer<char>>, environBuf: pointer<char>) {\r\n  let bufSize: uint32 = 0\r\n  getEnvStrings().forEach(function (string: string, i: uint32) {\r\n\r\n    const ptr: pointer<char> = reinterpret_cast<pointer<char>>(environBuf + bufSize)\r\n\r\n    accessof(reinterpret_cast<pointer<pointer<char>>>(environ + i)) <- ptr\r\n\r\n    writeAsciiToMemory(string, reinterpret_cast<pointer<char>>(ptr))\r\n\r\n    bufSize += string.length + 1\r\n  })\r\n  return 0\r\n}\r\n\r\nexport function environ_sizes_get(penvironCount: pointer<size>, penvironBufSize: pointer<size>) {\r\n  const strings = getEnvStrings()\r\n\r\n  accessof(penvironCount) <- reinterpret_cast<size>(strings.length as uint32)\r\n\r\n  let bufSize = 0\r\n  strings.forEach(function (string) {\r\n    bufSize += string.length + 1\r\n  })\r\n\r\n  accessof(penvironBufSize) <- reinterpret_cast<size>(bufSize as uint32)\r\n\r\n  return 0\r\n}\r\n\r\n\r\nexport function fd_fdstat_get(fd: uint32, buf_ptr: pointer<void>) {\r\n  let rightsBase = 0\r\n  if (fd == 0) {\r\n    rightsBase = 2\r\n  }\r\n  else if (fd == 1 || fd == 2) {\r\n    rightsBase = 64\r\n  }\r\n  accessof(reinterpret_cast<pointer<int8>>(buf_ptr)) <- reinterpret_cast<int8>(2)\r\n  accessof(reinterpret_cast<pointer<int16>>(buf_ptr + 2)) <- reinterpret_cast<int16>(1)\r\n  accessof(reinterpret_cast<pointer<int32>>(buf_ptr + 8)) <- reinterpret_cast<int32>(rightsBase)\r\n  accessof(reinterpret_cast<pointer<int32>>(buf_ptr + 12)) <- reinterpret_cast<int32>(0)\r\n  accessof(reinterpret_cast<pointer<int64>>(buf_ptr + 16)) <- reinterpret_cast<int64>(0n)\r\n\r\n  return WASI_ERRNO_SUCCESS\r\n}\r\n\r\n@struct\r\nclass WASICiovec {\r\n  buf: pointer<void>\r\n  len: size\r\n}\r\n\r\nexport function fd_read(fd: uint32, iovs: pointer<WASICiovec>, iovs_len: size, nread: pointer<size>) {\r\n  return WASI_ERRNO_NOSYS\r\n}\r\n\r\nexport function fd_seek(fd: uint32, offset: size, whence: int32, newoffset: pointer<size>) {\r\n  return WASI_ERRNO_NOSYS\r\n}\r\n\r\nexport function fd_write(fd: uint32, iovs: pointer<WASICiovec>, iovs_len: size, nwritten: pointer<size>) {\r\n  let num: size = 0\r\n  for (let i = 0; i < iovs_len; i++) {\r\n    let ptr = iovs.buf\r\n    let len = iovs.len\r\n    for (let j = 0; j < len; j++) {\r\n      printChar(fd, accessof(reinterpret_cast<pointer<char>>(ptr + (j as uint32))))\r\n    }\r\n    num += len\r\n    iovs++\r\n  }\r\n\r\n  accessof(nwritten) <- num\r\n\r\n  return WASI_ERRNO_SUCCESS\r\n}\r\n\r\nexport function fd_close(fd: uint32) {\r\n  return WASI_ERRNO_NOSYS\r\n}\r\n\r\nexport function abort(what?: string) {\r\n  what += ''\r\n  what = `abort(${what}). Build with -s ASSERTIONS=1 for more info.`\r\n  throw new WebAssembly.RuntimeError(what)\r\n}\r\n\r\nexport function clock_time_get(clock_id: uint32, precision: int32, time: pointer<uint64>) {\r\n  if (clock_id !== 0) {\r\n    return WASI_ERRNO_INVAL\r\n  }\r\n\r\n  const now = new Date().getTime()\r\n\r\n  accessof(time) <- reinterpret_cast<uint64>(static_cast<uint64>(now as uint32) * 1000000n)\r\n\r\n  return WASI_ERRNO_SUCCESS\r\n}\r\n\r\nexport function clock_res_get(clock_id: uint32, resolution: pointer<uint64>) {\r\n  if (clock_id !== 0) {\r\n    return WASI_ERRNO_INVAL\r\n  }\r\n\r\n  accessof(resolution) <- static_cast<uint64>(1000000n)\r\n\r\n  return WASI_ERRNO_SUCCESS\r\n}\r\n\r\nexport function random_get(pointer: pointer<uint8>, size: size) {\r\n  const buffer = mapUint8Array(pointer, size)\r\n  if (defined(ENV_NODE)) {\r\n    const crypto = require('crypto')\r\n    crypto.randomFillSync(buffer)\r\n  }\r\n  else {\r\n    crypto.getRandomValues(buffer)\r\n  }\r\n  return WASI_ERRNO_SUCCESS\r\n}\r\n","/* eslint-disable camelcase */\r\n\r\nimport * as mutexUtils from '../../thread/mutex'\r\nimport * as condUtils from '../../thread/cond'\r\nimport * as config from '../../config'\r\n\r\nimport { Table } from '../../heap'\r\nimport * as atomics from '../../thread/atomics'\r\nimport { SELF } from 'common/util/constant'\r\nimport { Mutex } from '../../thread/mutex'\r\nimport { Cond } from '../../thread/cond'\r\nimport { Timespec } from './semaphore'\r\nimport { Pthread, PthreadFlags, PthreadOnce } from '../thread'\r\nimport { readCString } from '../../std/memory'\r\n\r\nexport let wasm_pthread_mutex_init: (mutex: pointer<Mutex>, attr: pointer<void>) => int32\r\n\r\nexport let wasm_pthread_mutex_destroy: (mutex: pointer<Mutex>) => int32\r\n\r\nexport let wasm_pthread_mutex_lock: (mutex: pointer<Mutex>) => int32\r\n\r\nexport let wasm_pthread_mutex_trylock: (mutex: pointer<Mutex>) => int32\r\n\r\nexport let wasm_pthread_mutex_unlock: (mutex: pointer<Mutex>) => int32\r\n\r\nexport let wasm_pthread_cond_init: (cond: pointer<Cond>, attr: pointer<void>) => int32\r\n\r\nexport let wasm_pthread_cond_destroy: (cond: pointer<Cond>) => int32\r\n\r\nexport let wasm_pthread_cond_wait: (cond: pointer<Cond>, mutex: pointer<Mutex>) => int32\r\n\r\nexport let wasm_pthread_cond_timedwait: (cond: pointer<Cond>, mutex: pointer<Mutex>, abstime: pointer<Timespec>) => int32\r\n\r\nexport let wasm_pthread_cond_signal: (cond: pointer<Cond>) => int32\r\n\r\nexport let wasm_pthread_cond_broadcast: (cond: pointer<Cond>) => int32\r\n\r\nexport let wasm_pthread_once: (control: pointer<PthreadOnce>, func: pointer<() => void>) => int32\r\n\r\nexport function wasm_pthread_self2(): pointer<Pthread> {\r\n  return SELF.__SELF_THREAD__ as pointer<Pthread>\r\n}\r\n\r\nexport function wasm_pthread_exit(retval: pointer<void>) {\r\n  const thread: pointer<Pthread> = SELF.__SELF_THREAD__\r\n  thread.retval = retval\r\n  thread.flags |= PthreadFlags.EXIT\r\n}\r\n\r\nexport function wasm_pthread_equal2(t1: pointer<Pthread>, t2: pointer<Pthread>) {\r\n  return t1.id === t2.id ? 1 : 0\r\n}\r\n\r\nexport function wasm_pthread_support() {\r\n  return config.USE_THREADS ? 1 : 0\r\n}\r\n\r\nexport function wasm_cpu_core_count() {\r\n  return navigator.hardwareConcurrency\r\n}\r\n\r\nexport function wasm_threw_error(code: int32, msg: pointer<char>) {\r\n  throw new Error(readCString(msg))\r\n}\r\n\r\nwasm_pthread_mutex_init = function (mutex: pointer<Mutex>, attr: pointer<void>) {\r\n  return mutexUtils.init(mutex)\r\n}\r\n\r\nwasm_pthread_mutex_destroy = function (mutex: pointer<Mutex>) {\r\n  return mutexUtils.destroy(mutex)\r\n}\r\n\r\nwasm_pthread_mutex_lock = function (mutex: pointer<Mutex>) {\r\n  return mutexUtils.lock(mutex)\r\n}\r\n\r\nwasm_pthread_mutex_trylock = function (mutex: pointer<Mutex>) {\r\n  return mutexUtils.tryLock(mutex)\r\n}\r\n\r\nwasm_pthread_mutex_unlock = function (mutex: pointer<Mutex>) {\r\n  return mutexUtils.unlock(mutex)\r\n}\r\n\r\nwasm_pthread_cond_init = function (cond: pointer<Cond>, attr: pointer<void>) {\r\n  return condUtils.init(cond, attr)\r\n}\r\n\r\nwasm_pthread_cond_destroy = function (cond: pointer<Cond>) {\r\n  return condUtils.destroy(cond)\r\n}\r\n\r\nwasm_pthread_cond_wait = function (cond: pointer<Cond>, mutex: pointer<Mutex>) {\r\n  return condUtils.wait(cond, mutex)\r\n}\r\n\r\nwasm_pthread_cond_timedwait = function (cond: pointer<Cond>, mutex: pointer<Mutex>, abstime: pointer<Timespec>) {\r\n  let timeout = Number(abstime.tvSec) * 1000 + abstime.tvNSec / 1000000\r\n  return condUtils.timedWait(cond, mutex, timeout)\r\n}\r\n\r\nwasm_pthread_cond_signal = function (cond: pointer<Cond>) {\r\n  return condUtils.signal(cond)\r\n}\r\n\r\nwasm_pthread_cond_broadcast = function (cond: pointer<Cond>) {\r\n  return condUtils.broadcast(cond)\r\n}\r\n\r\nwasm_pthread_once = function (control: pointer<PthreadOnce>, func: pointer<() => void>) {\r\n  if (atomics.add(addressof(control.atomic), 1) === 0) {\r\n    Table.get(func)()\r\n  }\r\n  return 0\r\n}\r\n\r\nexport function override(data: {\r\n  wasm_pthread_mutex_lock?: (mutex: pointer<Mutex>) => int32,\r\n  wasm_pthread_mutex_trylock?: (mutex: pointer<Mutex>) => int32,\r\n  wasm_pthread_mutex_unlock?: (mutex: pointer<Mutex>) => int32,\r\n  wasm_pthread_cond_wait?: (cond: pointer<Cond>, mutex: pointer<Mutex>) => int32,\r\n  wasm_pthread_cond_timedwait?: (cond: pointer<Cond>, mutex: pointer<Mutex>, abstime: pointer<Timespec>) => int32,\r\n  wasm_pthread_cond_signal?: (cond: pointer<Cond>) => int32,\r\n  wasm_pthread_cond_broadcast?: (cond: pointer<Cond>) => int32\r\n}) {\r\n  if (data.wasm_pthread_mutex_lock) {\r\n    wasm_pthread_mutex_lock = data.wasm_pthread_mutex_lock\r\n  }\r\n  if (data.wasm_pthread_mutex_trylock) {\r\n    wasm_pthread_mutex_trylock = data.wasm_pthread_mutex_trylock\r\n  }\r\n  if (data.wasm_pthread_mutex_unlock) {\r\n    wasm_pthread_mutex_unlock = data.wasm_pthread_mutex_unlock\r\n  }\r\n  if (data.wasm_pthread_cond_wait) {\r\n    wasm_pthread_cond_wait = data.wasm_pthread_cond_wait\r\n  }\r\n  if (data.wasm_pthread_cond_timedwait) {\r\n    wasm_pthread_cond_timedwait = data.wasm_pthread_cond_timedwait\r\n  }\r\n  if (data.wasm_pthread_cond_signal) {\r\n    wasm_pthread_cond_signal = data.wasm_pthread_cond_signal\r\n  }\r\n  if (data.wasm_pthread_cond_broadcast) {\r\n    wasm_pthread_cond_broadcast = data.wasm_pthread_cond_broadcast\r\n  }\r\n}\r\n","/* eslint-disable camelcase */\r\n\r\nimport * as semUtils from '../../thread/semaphore'\r\nimport { Sem } from '../../thread/semaphore'\r\n\r\n@struct\r\nexport class Timespec {\r\n  tvSec: int64\r\n  tvNSec: int32\r\n}\r\n\r\n\r\nexport function wasm_sem_init(sem: pointer<Sem>, pshared: int32, value: uint32) {\r\n  return semUtils.init(sem, value)\r\n}\r\n\r\nexport function wasm_sem_destroy(sem: pointer<Sem>) {\r\n  return semUtils.destroy(sem)\r\n}\r\n\r\nexport function wasm_sem_wait(sem: pointer<Sem>) {\r\n  return semUtils.wait(sem)\r\n}\r\n\r\nexport function wasm_sem_trywait(sem: pointer<Sem>) {\r\n  return semUtils.tryWait(sem)\r\n}\r\n\r\nexport function wasm_sem_timedwait(sem: pointer<Sem>, abstime: pointer<Timespec>) {\r\n  let timeout = Number(abstime.tvSec) * 1000 + abstime.tvNSec / 1000000\r\n  return semUtils.timedWait(sem, timeout)\r\n}\r\n\r\nexport function wasm_sem_post(sem: pointer<Sem>) {\r\n  return semUtils.post(sem)\r\n}\r\n","import { Cond } from '../thread/cond'\r\nimport { Mutex } from '../thread/mutex'\r\n\r\n@struct\r\nexport class PthreadOnce {\r\n  atomic: atomic_int32\r\n}\r\n\r\n@struct\r\nexport class Pthread {\r\n  id: int32\r\n  retval: pointer<void>\r\n  flags: int32\r\n  status: atomic_int32\r\n}\r\n\r\n@struct\r\nexport class ThreadDescriptor {\r\n  flags: int32\r\n  status: PthreadStatus\r\n}\r\n\r\nexport const enum PthreadFlags {\r\n  DETACH = 1,\r\n  POOL = 2,\r\n  EXIT = 4\r\n}\r\n\r\nexport const enum PthreadStatus {\r\n  STOP,\r\n  RUN\r\n}\r\n\r\nexport type ChildThread = {\r\n  thread: pointer<Pthread>\r\n  worker: Worker\r\n  stackPointer: pointer<void>\r\n  threadDescriptor: pointer<ThreadDescriptor>\r\n}\r\n\r\n@struct\r\nexport class ThreadWait {\r\n  thread: pointer<Pthread>\r\n  func: pointer<(args: pointer<void>) => void>\r\n  args: pointer<void>\r\n  cond: Cond\r\n  mutex: Mutex\r\n}\r\n","/**\r\n * https://github.com/yoxjs/yox-common/blob/master/src/util/CustomEvent.ts\r\n * MIT License\r\n * \r\n * @file 事件\r\n */\r\n\r\nimport * as constant from '../util/constant'\r\nimport { CustomEventInterface } from '../types/type'\r\n\r\nexport default class CustomEvent implements CustomEventInterface {\r\n\r\n  public static PHASE_CURRENT = 0\r\n\r\n  public static PHASE_UPWARD = 1\r\n\r\n  public static PHASE_DOWNWARD = constant.MINUS_ONE\r\n\r\n  // 事件名称\r\n  type: string\r\n\r\n  // 事件当前阶段\r\n  phase: number\r\n\r\n  // 事件命名空间\r\n  ns?: string\r\n\r\n  // 哪个组件发出的事件\r\n  target?: any\r\n\r\n  // 原始事件，比如 DOM 事件\r\n  originalEvent?: CustomEventInterface | Event\r\n\r\n  // 是否已阻止事件的默认行为\r\n  isPrevented?: true\r\n\r\n  // 是否已停止事件冒泡\r\n  isStopped?: true\r\n\r\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\r\n  listener?: Function\r\n\r\n  /**\r\n   * 构造函数\r\n   *\r\n   * 可以传事件名称，也可以传原生事件对象\r\n   */\r\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\r\n    /*\r\n     * 这里不设置命名空间\r\n     * 因为有没有命名空间取决于 Emitter 的构造函数有没有传 true\r\n     * CustomEvent 自己无法决定\r\n     */\r\n    this.type = type\r\n    this.phase = CustomEvent.PHASE_CURRENT\r\n    if (originalEvent) {\r\n      this.originalEvent = originalEvent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 阻止事件的默认行为\r\n   */\r\n  preventDefault(): this {\r\n    const instance = this\r\n    if (!instance.isPrevented) {\r\n      const { originalEvent } = instance\r\n      if (originalEvent) {\r\n        originalEvent.preventDefault()\r\n      }\r\n      instance.isPrevented = constant.TRUE\r\n    }\r\n    return instance\r\n  }\r\n\r\n  /**\r\n   * 停止事件广播\r\n   */\r\n  stopPropagation(): this {\r\n    const instance = this\r\n    if (!instance.isStopped) {\r\n      const { originalEvent } = instance\r\n      if (originalEvent) {\r\n        originalEvent.stopPropagation()\r\n      }\r\n      instance.isStopped = constant.TRUE\r\n    }\r\n    return instance\r\n  }\r\n\r\n  prevent(): this {\r\n    return this.preventDefault()\r\n  }\r\n\r\n  stop(): this {\r\n    return this.stopPropagation()\r\n  }\r\n\r\n}\r\n","/**\r\n * https://github.com/yoxjs/yox-common/blob/master/src/util/Emitter.ts\r\n * MIT License\r\n * \r\n * @file 事件代理\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as array from '../util/array'\r\nimport CustomEvent from './CustomEvent'\r\nimport * as object from '../util/object'\r\nimport * as string from '../util/string'\r\nimport * as logger from '../util/logger'\r\nimport execute from '../function/execute'\r\nimport * as constant from '../util/constant'\r\nimport { NativeListener, Fn, Task } from '../types/type'\r\n\r\nexport interface EmitterOptions extends Task {\r\n\r\n  // 所在的命名空间\r\n  ns?: string\r\n\r\n  // 监听函数已执行次数\r\n  num?: number\r\n\r\n  // 监听函数的最大可执行次数\r\n  max?: number\r\n\r\n  // 计数器，用于扩展，随便做什么计数都行\r\n  count?: number\r\n\r\n}\r\n\r\n\r\ntype Namespace = {\r\n\r\n  // 事件名称\r\n  type: string\r\n\r\n  // 命名空间\r\n  ns?: string\r\n\r\n}\r\n\r\nexport default class Emitter {\r\n\r\n  /**\r\n   * 是否开启命名空间\r\n   * @hidden\r\n   */\r\n  ns: boolean\r\n\r\n  /**\r\n   * 已注册的事件监听\r\n   * @hidden\r\n   */\r\n  listeners: Record<string, EmitterOptions[]>\r\n\r\n  /**\r\n   * 原生事件监听，一个事件对应一个 listener\r\n   * @hidden\r\n   */\r\n  nativeListeners?: Record<string, NativeListener>\r\n\r\n  constructor(ns?: boolean) {\r\n    this.ns = ns || constant.FALSE\r\n    this.listeners = {}\r\n  }\r\n\r\n  /**\r\n   * 发射事件\r\n   *\r\n   * @param type 事件名称或命名空间\r\n   * @param args 事件处理函数的参数列表\r\n   * @param filter 自定义过滤器\r\n   */\r\n  fire(\r\n    type: string | Namespace,\r\n    args: any[] | void,\r\n    filter?: (\r\n      namespace: Namespace,\r\n      args: any[] | void,\r\n      options: EmitterOptions\r\n    ) => boolean | void\r\n  ): boolean {\r\n\r\n    let instance = this,\r\n\r\n        namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\r\n\r\n        list = instance.listeners[namespace.type],\r\n\r\n        isComplete = constant.TRUE\r\n\r\n    if (list) {\r\n\r\n      // 避免遍历过程中，数组发生变化，比如增删了\r\n      list = object.copy(list)\r\n\r\n      /*\r\n       * 判断是否是发射事件\r\n       * 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\r\n       * 因为事件处理函数的参数列表是 (event, data)\r\n       */\r\n      const event = args && args[0] instanceof CustomEvent\r\n        ? args[0] as CustomEvent\r\n        : constant.UNDEFINED\r\n\r\n      array.each(\r\n        list,\r\n        function (options) {\r\n\r\n          // 命名空间不匹配\r\n          if (!matchNamespace(namespace.ns, options, constant.TRUE)\r\n                        // 在 fire 过程中被移除了\r\n                        || !array.has(list, options)\r\n                        // 传了 filter，则用 filter 判断是否过滤此 options\r\n                        || (filter && !filter(namespace, args, options))\r\n          ) {\r\n            return\r\n          }\r\n\r\n          /*\r\n           * 为 event 对象加上当前正在处理的 listener\r\n           * 这样方便业务层移除事件绑定\r\n           * 比如 on('xx', function) 这样定义了匿名 listener\r\n           * 在这个 listener 里面获取不到当前 listener 的引用\r\n           * 为了能引用到，有时候会先定义 var listener = function\r\n           * 然后再 on('xx', listener) 这样其实是没有必要的\r\n           */\r\n          if (event) {\r\n            event.listener = options.fn\r\n          }\r\n\r\n          let result = execute(options.fn, options.ctx, args)\r\n\r\n          if (event) {\r\n            event.listener = constant.UNDEFINED\r\n          }\r\n\r\n          // 执行次数\r\n          options.num = options.num ? (options.num + 1) : 1\r\n\r\n          // 注册的 listener 可以指定最大执行次数\r\n          if (options.num === options.max) {\r\n            instance.off(namespace, options.fn)\r\n          }\r\n\r\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\r\n          if (event) {\r\n            if (result === constant.FALSE) {\r\n              event.prevent().stop()\r\n            }\r\n            else if (event.isStopped) {\r\n              result = constant.FALSE\r\n            }\r\n          }\r\n\r\n          if (result === constant.FALSE) {\r\n            return isComplete = constant.FALSE\r\n          }\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n    return isComplete\r\n\r\n  }\r\n\r\n  /**\r\n   * 注册监听\r\n   *\r\n   * @param type\r\n   * @param listener\r\n   */\r\n  on(\r\n    type: string | Namespace,\r\n    listener: Function | EmitterOptions\r\n  ): Emitter {\r\n\r\n    const instance = this,\r\n\r\n        listeners = instance.listeners,\r\n\r\n        options: EmitterOptions = is.func(listener)\r\n          ? { fn: listener as Fn }\r\n          : listener as EmitterOptions\r\n\r\n    if (is.object(options) && is.func(options.fn)) {\r\n      const namespace = is.string(type) ? instance.parse(type as string) : type as Namespace\r\n      options.ns = namespace.ns\r\n      array.push(\r\n        listeners[namespace.type] || (listeners[namespace.type] = []),\r\n        options\r\n      )\r\n    }\r\n    else if (process.env.NODE_ENV === 'development') {\r\n      logger.fatal('emitter.on(type, listener) invoke failed：\\n\\n\"listener\" is expected to be a Function or an EmitterOptions.\\n')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  one(\r\n    type: string | Namespace,\r\n    listener: Function | EmitterOptions\r\n  ): Emitter {\r\n    if (is.func(listener)) {\r\n      listener = {\r\n        fn: listener as Fn,\r\n        max: 1\r\n      }\r\n    }\r\n    else {\r\n      listener.max = 1\r\n    }\r\n    return this.on(type, listener)\r\n  }\r\n\r\n  /**\r\n   * 取消监听\r\n   *\r\n   * @param type\r\n   * @param listener\r\n   */\r\n  off(\r\n    type?: string | Namespace,\r\n    listener?: Function\r\n  ): void {\r\n\r\n    const instance = this,\r\n\r\n        listeners = instance.listeners\r\n\r\n    if (type) {\r\n\r\n      const namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\r\n\r\n          name = namespace.type,\r\n\r\n          ns = namespace.ns,\r\n\r\n          matchListener = createMatchListener(listener),\r\n\r\n          each = function (list: EmitterOptions[], name: string) {\r\n            array.each(\r\n              list,\r\n              function (options, index) {\r\n                if (matchListener(options)) {\r\n                  list.splice(index, 1)\r\n                }\r\n              },\r\n              constant.TRUE\r\n            )\r\n            if (!list.length) {\r\n              delete listeners[name]\r\n            }\r\n          },\r\n\r\n          eachNS = function (list: EmitterOptions[], name: string) {\r\n            array.each(\r\n              list,\r\n              function (options, index) {\r\n                if (matchNamespace(ns, options)) {\r\n                  list.splice(index, 1)\r\n                }\r\n              },\r\n              constant.TRUE\r\n            )\r\n            if (!list.length) {\r\n              delete listeners[name]\r\n            }\r\n          }\r\n\r\n      if (name) {\r\n        if (listeners[name]) {\r\n          each(listeners[name], name)\r\n        }\r\n      }\r\n      else if (ns) {\r\n        object.each(listeners, eachNS)\r\n      }\r\n\r\n      /*\r\n       * 在开发阶段进行警告，比如传了 listener 进来，listener 是个空值\r\n       * 但你不知道它是空值\r\n       */\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (arguments.length > 1 && listener == constant.NULL) {\r\n          logger.warn(`emitter.off(type, listener) is invoked, but \"listener\" is ${listener}.`)\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n      // 清空\r\n      instance.listeners = {}\r\n      /*\r\n       * 在开发阶段进行警告，比如传了 type 进来，type 是个空值\r\n       * 但你不知道它是空值\r\n       */\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (arguments.length > 0) {\r\n          logger.warn(`emitter.off(type) is invoked, but \"type\" is ${type}.`)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 是否已监听某个事件\r\n   *\r\n   * @param type\r\n   * @param listener\r\n   */\r\n  has(\r\n    type: string | Namespace,\r\n    listener?: Function\r\n  ): boolean {\r\n\r\n    let instance = this,\r\n\r\n        listeners = instance.listeners,\r\n\r\n        namespace = is.string(type) ? instance.parse(type as string) : type as Namespace,\r\n\r\n        name = namespace.type,\r\n\r\n        ns = namespace.ns,\r\n\r\n        result = constant.TRUE,\r\n\r\n        matchListener = createMatchListener(listener),\r\n\r\n        each = function (list: EmitterOptions[]) {\r\n          array.each(\r\n            list,\r\n            function (options) {\r\n              if (matchListener(options)) {\r\n                return result = constant.FALSE\r\n              }\r\n            }\r\n          )\r\n          return result\r\n        },\r\n\r\n        eachNS = function (list: EmitterOptions[]) {\r\n          array.each(\r\n            list,\r\n            function (options) {\r\n              if (matchNamespace(ns, options)) {\r\n                return result = constant.FALSE\r\n              }\r\n            }\r\n          )\r\n          return result\r\n        }\r\n\r\n    if (name) {\r\n      if (listeners[name]) {\r\n        each(listeners[name])\r\n      }\r\n    }\r\n    else if (ns) {\r\n      object.each(listeners, eachNS)\r\n    }\r\n\r\n    return !result\r\n\r\n  }\r\n\r\n  /**\r\n   * 把事件类型解析成命名空间格式\r\n   *\r\n   * @param type\r\n   */\r\n  parse(type: string): Namespace {\r\n\r\n    /*\r\n     * 这里 ns 必须为字符串\r\n     * 用于区分 event 对象是否已完成命名空间的解析\r\n     */\r\n    const result = {\r\n      type,\r\n      ns: constant.EMPTY_STRING,\r\n    }\r\n\r\n    // 是否开启命名空间\r\n    if (this.ns) {\r\n      const index = string.indexOf(type, constant.RAW_DOT)\r\n      if (index >= 0) {\r\n        result.type = string.slice(type, 0, index)\r\n        result.ns = string.slice(type, index + 1)\r\n      }\r\n    }\r\n\r\n    return result\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction matchTrue() {\r\n  return constant.TRUE\r\n}\r\n\r\n/**\r\n * 外部会传入 Function 或 EmitterOptions 或 空\r\n *\r\n * 这里根据传入值的不同类型，创建不同的判断函数\r\n *\r\n * 如果传入的是 EmitterOptions，则全等判断\r\n *\r\n * 如果传入的是 Function，则判断函数是否全等\r\n *\r\n * 如果传入的是空，则直接返回 true\r\n *\r\n * @param listener\r\n */\r\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\r\n  return is.func(listener)\r\n    ? function (options: EmitterOptions) {\r\n      return listener === options.fn\r\n    }\r\n    : matchTrue\r\n}\r\n\r\n/**\r\n * 判断 options 是否能匹配命名空间\r\n *\r\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\r\n *\r\n * 如果他们两个其中任何一个为空，则不判断命名空间\r\n *\r\n * @param namespace\r\n * @param options\r\n */\r\nfunction matchNamespace(namespace: string | void, options: EmitterOptions, isFire?: boolean): boolean {\r\n  const { ns } = options\r\n  return ns && namespace\r\n    ? ns === namespace\r\n    : (isFire ? constant.TRUE : constant.FALSE)\r\n}\r\n","/**\r\n * @file 判断版本\r\n */\r\n\r\nimport toNumber from './toNumber'\r\n\r\n/**\r\n * 判断给定版本是否符合条件\r\n * \r\n * @param version 待检查版本\r\n * @param checkVersion 版本基准\r\n * @param equal 是否判等\r\n * \r\n * @returns 是否符合条件\r\n */\r\nexport default function checkVersion(version: string, checkVersion: string, equal: boolean = false) {\r\n  const checkVersionArr = checkVersion.split('.')\r\n  const versionArr = version.split('.')\r\n  for (let i = 0; i < versionArr.length; i++) {\r\n    if (equal && i == (versionArr.length - 1) && toNumber(versionArr[i]) >= toNumber(checkVersionArr[i])) {\r\n      return versionArr.length >= checkVersionArr.length\r\n    }\r\n    if (toNumber(versionArr[i]) > toNumber(checkVersionArr[i])) {\r\n      return true\r\n    }\r\n    else if (toNumber(versionArr[i]) < toNumber(checkVersionArr[i])) {\r\n      return false\r\n    }\r\n\r\n    if (i === checkVersionArr.length - 1 && i === versionArr.length - 1) {\r\n      return equal\r\n    }\r\n\r\n    if (i === checkVersionArr.length - 1) {\r\n      return true\r\n    }\r\n    else if (i === versionArr.length - 1) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","/**\r\n * @file 合并 TypeArray\r\n */\r\n\r\nimport { TypeArray, TypeArrayConstructor } from '../types/type'\r\n\r\ntype ReplaceGeneric<T> = T extends Uint8Array<ArrayBuffer>\r\n  ? Uint8Array<ArrayBufferLike>\r\n  : T extends Int8Array<ArrayBuffer>\r\n    ? Int8Array<ArrayBufferLike>\r\n    : T extends Uint16Array<ArrayBuffer>\r\n      ? Uint16Array<ArrayBufferLike>\r\n      : T extends Int16Array<ArrayBuffer>\r\n        ? Int16Array<ArrayBufferLike>\r\n        : T extends Uint32Array<ArrayBuffer>\r\n          ? Uint32Array<ArrayBufferLike>\r\n          : T extends Int32Array<ArrayBuffer>\r\n            ? Int32Array<ArrayBufferLike>\r\n            : T extends Float32Array<ArrayBuffer>\r\n              ? Float32Array<ArrayBufferLike>\r\n              : T extends Float64Array<ArrayBuffer>\r\n                ? Float64Array<ArrayBufferLike>\r\n                : T\r\n\r\nexport default function concatTypeArray<T extends TypeArrayConstructor>(\r\n  constructor: T,\r\n  arrays: ReplaceGeneric<InstanceType<T>>[]\r\n): ReplaceGeneric<InstanceType<T>> {\r\n\r\n  if (!arrays.length) {\r\n    return null\r\n  }\r\n\r\n  if (arrays.length === 1) {\r\n    return arrays[0]\r\n  }\r\n\r\n  let totalLength: number = 0\r\n  let array: TypeArray\r\n  for (array of arrays) {\r\n    totalLength += array.length\r\n  }\r\n  let result = new constructor(totalLength) as ReplaceGeneric<InstanceType<T>>\r\n\r\n  let offset = 0\r\n  for (array of arrays) {\r\n    result.set(array, offset)\r\n    offset += array.length\r\n  }\r\n  return result\r\n}\r\n","/**\r\n * @file 防抖函数\r\n */\r\n\r\nimport execute from './execute'\r\nimport { Fn } from '../types/type'\r\nimport * as array from '../util/array'\r\nimport * as constant from '../util/constant'\r\nimport { ParamType } from '../types/advanced'\r\n\r\n/**\r\n * 防抖函数\r\n *\r\n * @param fn 需要节制调用的函数\r\n * @param delay 调用的时间间隔，单位毫秒\r\n * @param immediate 是否立即触发\r\n * @return 节流函数\r\n */\r\nexport default function debounce<T extends Fn>(fn: T, delay: number, immediate?: boolean, last: boolean = false): T {\r\n\r\n  let timer: any\r\n  let args: any\r\n\r\n  return function () {\r\n\r\n    let context = this\r\n\r\n    if (last) {\r\n      args = array.toArray(arguments)\r\n    }\r\n\r\n    if (!timer) {\r\n      if (!last) {\r\n        args = array.toArray(arguments)\r\n      }\r\n      if (immediate) {\r\n        execute(fn, context, args as ParamType<T>)\r\n      }\r\n\r\n      timer = setTimeout(\r\n        function () {\r\n          timer = constant.UNDEFINED\r\n          if (!immediate) {\r\n            execute(fn, context, args as ParamType<T>)\r\n          }\r\n        },\r\n        delay\r\n      )\r\n    }\r\n  } as T\r\n}\r\n","/**\r\n * @file 使用指定上下文执行函数\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as constant from '../util/constant'\r\nimport { ReturnType, ParamType } from '../types/advanced'\r\nimport { Fn } from '../types/type'\r\n\r\n/**\r\n * 任性地执行一个函数，不管它有没有、是不是\r\n *\r\n * @param fn 调用的函数\r\n * @param context 执行函数时的 this 指向\r\n * @param args 调用函数的参数，多参数时传入数组\r\n * @return 调用函数的返回值\r\n */\r\nexport default function execute<T extends Fn>(fn: T, context?: any, args?: ParamType<T> | void): ReturnType<T> {\r\n  if (is.func(fn)) {\r\n    return is.array(args)\r\n      ? fn.apply(context, args)\r\n      : context !== constant.UNDEFINED\r\n        ? fn.call(context, args)\r\n        : args !== constant.UNDEFINED\r\n          ? fn(args)\r\n          : fn()\r\n  }\r\n}\r\n","/**\r\n * 生成唯一 id\r\n * \r\n * @returns id\r\n */\r\nexport default function generateUUID(): string {\r\n  let d = new Date().getTime()\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    let r = (d + Math.random() * 16) % 16 | 0\r\n    d = Math.floor(d / 16)\r\n    return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16)\r\n  })\r\n}\r\n","\r\nexport default function getTimestamp() {\r\n  return Date.now()\r\n}\r\n","export default function isAudioWorklet() {\r\n  // @ts-ignore\r\n  return typeof registerProcessor === 'function' && typeof sampleRate === 'number' && typeof currentFrame === 'number' && typeof currentTime === 'number'\r\n}\r\n","/**\r\n * @file 判断是否定义\r\n */\r\n\r\nimport * as constant from '../util/constant'\r\n\r\n/**\r\n * 判断是否定义\r\n * \r\n * @param target 待判定变量\r\n */\r\nexport default function isDef(target: any): boolean {\r\n  return target !== constant.UNDEFINED\r\n}\r\n","import isDef from './isDef'\r\n\r\nlet _isLittleEndian: boolean\r\n\r\nexport default function isLittleEndian() {\r\n\r\n  if (isDef(_isLittleEndian)) {\r\n    return _isLittleEndian\r\n  }\r\n\r\n  const buf = new ArrayBuffer(2)\r\n  const view = new DataView(buf)\r\n\r\n  // little-endian write\r\n  view.setInt16(0, 256, true)\r\n  // platform-spec read, if equal then LE\r\n  _isLittleEndian = (new Int16Array(buf))[0] === 256\r\n\r\n  return _isLittleEndian\r\n}\r\n","/**\r\n * @file 判断是否是 native 方法\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport toString from './toString'\r\nimport * as string from '../util/string'\r\n\r\n/**\r\n * 判断是否是 native 方法\r\n * \r\n * @param target 待判定函数\r\n */\r\nexport default function isNative(target: any): boolean {\r\n  return is.func(target) && string.has(toString(target), '[native code]')\r\n}\r\n","import isDef from './isDef'\r\nimport isAudioWorklet from './isAudioWorklet'\r\n\r\nexport default function isWorker() {\r\n  return !(typeof window === 'object' && isDef(window.document)) && !isAudioWorklet()\r\n}\r\n","/**\r\n * @file 下一个时间片\r\n */\r\n\r\n\r\nimport isNative from './isNative'\r\nimport * as constant from '../util/constant'\r\n\r\ndeclare const setImmediate: Function\r\n\r\nlet nextTick: Function\r\n\r\n// IE (10+) 和 node\r\nif (typeof setImmediate === constant.RAW_FUNCTION && isNative(setImmediate)) {\r\n  nextTick = setImmediate\r\n}\r\n/*\r\n * 用 MessageChannel 去做 setImmediate 的 polyfill\r\n * 原理是将新的 message 事件加入到原有的 dom events 之后\r\n * 兼容性 IE10+ 和其他标准浏览器\r\n */\r\nif (typeof MessageChannel === constant.RAW_FUNCTION && isNative(MessageChannel)) {\r\n  nextTick = function (fn: any) {\r\n    const channel = new MessageChannel()\r\n    channel.port1.onmessage = fn\r\n    channel.port2.postMessage(1)\r\n  }\r\n}\r\nelse if (typeof setTimeout === 'function') {\r\n  nextTick = setTimeout\r\n}\r\n// 没有 setTimeout 是环境，比如 WorkletGlobalScope，先固定一个插槽\r\nelse {\r\n  nextTick = function (fn: Function) {\r\n    setTimeout(fn)\r\n  }\r\n}\r\n\r\nexport default nextTick\r\n","/**\r\n * 将某个文件的代码变成字符串（Webpack 使用）\r\n */\r\n\r\nimport { Data } from '../types/type'\r\n\r\nconst webpackBootstrapFunc = `\r\nfunction webpackBootstrapFunc (modules) {\r\n  var installedModules = {};\r\n  function __webpack_require__(moduleId) {\r\n    if(installedModules[moduleId])\r\n    return installedModules[moduleId].exports;\r\n    var module = installedModules[moduleId] = {\r\n      i: moduleId,\r\n      l: false,\r\n      exports: {}\r\n    };\r\n    if (!modules[moduleId]) {\r\n      console.error('can not found module:', moduleId)\r\n    }\r\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n    module.l = true;\r\n    return module.exports;\r\n  }\r\n  __webpack_require__.m = modules;\r\n  __webpack_require__.c = installedModules;\r\n  __webpack_require__.i = function(value) { return value; };\r\n  __webpack_require__.d = function(exports, definition, getter) {\r\n    if (typeof definition === 'string') {\r\n      if(!__webpack_require__.o(exports, definition)) {\r\n        Object.defineProperty(exports, definition, {\r\n          enumerable: true,\r\n          get: getter\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      for(var key in definition) {\r\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n          Object.defineProperty(exports, key, {\r\n            enumerable: true,\r\n            get: definition[key]\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  __webpack_require__.r = function(exports) {\r\n    if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n    \tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n    }\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n  };\r\n  __webpack_require__.f = {};\r\n  __webpack_require__.e = function(chunkId) {\r\n    return Promise.all(Object.keys(__webpack_require__.f).reduce(function (promises, key) {\r\n      __webpack_require__.f[key](chunkId, promises);\r\n        return promises;\r\n    \t}, []));\r\n\t};\r\n  __webpack_require__.u = function(chunkId) {\r\n    return chunkId + \"LIB_NAME\";\r\n  };\r\n  __webpack_require__.n = function(module) {\r\n    var getter = module && module.__esModule ?\r\n      function getDefault() { return module['default']; } :\r\n      function getModuleExports() { return module; };\r\n    __webpack_require__.d(getter, 'a', getter);\r\n    return getter;\r\n  };\r\n  (function() {\r\n    var installedChunks = {\r\n      \"main\": 0\r\n    };\r\n    __webpack_require__.f.j = function(chunkId, promises) {\r\n      var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\r\n      if (installedChunkData !== 0) {\r\n        if(installedChunkData) {\r\n          promises.push(installedChunkData[2]);\r\n        } else {\r\n          if (true) {\r\n            var promise = new Promise(function(resolve, reject){installedChunkData = installedChunks[chunkId] = [resolve, reject]});\r\n            promises.push(installedChunkData[2] = promise);\r\n            var url = __webpack_require__.p + __webpack_require__.u(chunkId);\r\n            var error = new Error();\r\n            var loadingEnded = function(event) {\r\n              if(__webpack_require__.o(installedChunks, chunkId)) {\r\n                installedChunkData = installedChunks[chunkId];\r\n                if(installedChunkData !== 0) installedChunks[chunkId] = undefined;\r\n                if(installedChunkData) {\r\n                  var errorType = event && (event.type === 'load' ? 'missing' : event.type);\r\n                  var realSrc = url;\r\n                  error.message = \"Loading chunk \" + chunkId + \" failed.\\\\n(\" + errorType + \": \" + realSrc + \")\";\r\n                  error.name = \"ChunkLoadError\";\r\n                  error.type = errorType;\r\n                  error.request = realSrc;\r\n                  installedChunkData[1](error);\r\n                }\r\n              }\r\n            };\r\n            __webpack_require__.l(url, loadingEnded);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\r\n    var [chunkIds, moreModules, runtime] = data;\r\n    var moduleId, chunkId, i = 0;\r\n    if (chunkIds.some(function(id){return installedChunks[id] !== 0})) {\r\n      for(moduleId in moreModules) {\r\n        if(__webpack_require__.o(moreModules, moduleId)) {\r\n          __webpack_require__.m[moduleId] = moreModules[moduleId];\r\n        }\r\n      }\r\n      if(runtime) runtime(__webpack_require__);\r\n    }\r\n    if (parentChunkLoadingFunction) parentChunkLoadingFunction(data);\r\n      for (;i < chunkIds.length; i++) {\r\n        chunkId = chunkIds[i];\r\n        if (__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\r\n          installedChunks[chunkId][0]();\r\n        }\r\n        installedChunks[chunkId] = 0;\r\n      }\r\n    }\r\n    var self = typeof globalThis !== undefined ? globalThis : self\r\n    var exportName = 'LIBRARY_EXPORT_NAME'\r\n    var chunkLoadingGlobal = self[\"webpackChunk\" + exportName] = self[\"webpackChunk\" + exportName] || [];\r\n    chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\r\n    chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\r\n  })();\r\n  (function() {\r\n    var inProgress = {};\r\n    __webpack_require__.l = function(url, done) {\r\n      if (inProgress[url]) { inProgress[url].push(done); return; }\r\n        inProgress[url] = [done];\r\n        var onComplete = function(event) {\r\n          clearTimeout(timeout);\r\n          var doneFns = inProgress[url];\r\n          delete inProgress[url];\r\n          doneFns && doneFns.forEach(function(fn){fn(event)});\r\n        }\r\n        var timeout = setTimeout(onComplete.bind(null, undefined, { type: \"timeout\" }), 120000);\r\n      if (typeof importScripts === 'function') {\r\n        try {\r\n          importScripts(url);onComplete({type: \"load\"});\r\n        }\r\n        catch(e) {\r\n          onComplete({type: \"missing\"});\r\n        }\r\n      }\r\n      else {\r\n        import(url).then(function() {\r\n          onComplete({\r\n            type: \"load\"\r\n          });\r\n        }, function (error) {\r\n          onComplete({\r\n            type: \"missing\"\r\n          });\r\n        })\r\n      }\r\n    };\r\n  })();\r\n  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n  __webpack_require__.p = \"ROOT_URL\";\r\n  __webpack_require__.oe = function(err) { console.error(err); throw err; };\r\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE);\r\n  return f;\r\n}\r\n`\r\n\r\nconst moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@|!]+'\r\n// additional chars when output.path info is true\r\nconst dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)'\r\n\r\n// http://stackoverflow.com/a/2593661/130442\r\nfunction quoteRegExp(str: string) {\r\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&')\r\n}\r\n\r\nfunction isNumeric(n: any) {\r\n  // 1 * n converts integers, integers as string (\"123\"), 1e3 and \"1e3\" to integers and strings to NaN\r\n  return !isNaN(n)\r\n}\r\n\r\nfunction getModuleDependencies(sources: string, module: string, queueName: string, requiredModules: Data) {\r\n  const retval = {}\r\n  retval[queueName] = []\r\n\r\n  let fnString = module.toString()\r\n  const wrapperSignature = fnString.match(/^(function)?\\s?\\w*\\(\\w+,\\s*(\\w+),\\s*(\\w+)\\)/)\r\n  if (!wrapperSignature) {\r\n    return retval\r\n  }\r\n  const webpackRequireName = wrapperSignature[3]\r\n\r\n  if (!requiredModules.__webpack_exports_process__) {\r\n    requiredModules.__webpack_require__ = webpackRequireName\r\n    requiredModules.__webpack_exports__ = wrapperSignature[2]\r\n    requiredModules.__webpack_exports_process__ = true\r\n  }\r\n\r\n  // main bundle deps\r\n  let re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\r\n  let match: RegExpExecArray\r\n  while ((match = re.exec(fnString))) {\r\n    if (match[3] === 'dll-reference') {\r\n      continue\r\n    }\r\n    retval[queueName].push(match[3])\r\n  }\r\n\r\n  // dll deps\r\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g')\r\n  while ((match = re.exec(fnString))) {\r\n    if (!sources[match[2]]) {\r\n      retval[queueName].push(match[1])\r\n      // @ts-ignore\r\n      sources[match[2]] = __webpack_require__(match[1]).m\r\n    }\r\n    retval[match[2]] = retval[match[2]] || []\r\n    retval[match[2]].push(match[4])\r\n  }\r\n\r\n  // convert 1e3 back to 1000 - this can be important after uglify-js converted 1000 to 1e3\r\n  const keys = Object.keys(retval)\r\n  for (let i = 0; i < keys.length; i++) {\r\n    for (let j = 0; j < retval[keys[i]].length; j++) {\r\n      if (isNumeric(+retval[keys[i]][j])) {\r\n        retval[keys[i]][j] = +retval[keys[i]][j]\r\n      }\r\n    }\r\n  }\r\n\r\n  return retval\r\n}\r\n\r\nfunction hasValuesInQueues(queues) {\r\n  const keys = Object.keys(queues)\r\n  return keys.reduce(function (hasValues, key) {\r\n    return hasValues || queues[key].length > 0\r\n  }, false)\r\n}\r\n\r\nfunction getRequiredModules(sources, moduleId) {\r\n  const modulesQueue = {\r\n    main: [moduleId]\r\n  }\r\n  const requiredModules = {\r\n    main: [],\r\n    __webpack_exports__: '__webpack_exports__',\r\n    __webpack_require__: '__webpack_require__',\r\n    __webpack_exports_process__: false\r\n  }\r\n  const seenModules = {\r\n    main: {}\r\n  }\r\n\r\n  while (hasValuesInQueues(modulesQueue)) {\r\n    const queues = Object.keys(modulesQueue)\r\n    for (let i = 0; i < queues.length; i++) {\r\n      let queueName = queues[i]\r\n      let queue = modulesQueue[queueName]\r\n      let moduleToCheck = queue.pop()\r\n      seenModules[queueName] = seenModules[queueName] || {}\r\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) {\r\n        continue\r\n      }\r\n      seenModules[queueName][moduleToCheck] = true\r\n      requiredModules[queueName] = requiredModules[queueName] || []\r\n      requiredModules[queueName].push(moduleToCheck)\r\n      let newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName, requiredModules)\r\n      let newModulesKeys = Object.keys(newModules)\r\n      for (let j = 0; j < newModulesKeys.length; j++) {\r\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\r\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\r\n      }\r\n    }\r\n  }\r\n  return requiredModules\r\n}\r\n\r\nexport default function (moduleId: string, options: {\r\n  varName: string\r\n  exportName?: string\r\n  pointName?: string\r\n  exportIsClass?: boolean\r\n}) {\r\n  const sources = {\r\n    // @ts-ignore\r\n    main: __webpack_modules__\r\n  }\r\n\r\n  const requiredModules = getRequiredModules(sources, moduleId)\r\n\r\n  let src = ''\r\n  let stringifyModuleId = JSON.stringify(moduleId)\r\n\r\n  return src + 'var ' + options.varName + '=(' + webpackBootstrapFunc.replace('ENTRY_MODULE', stringifyModuleId)\r\n    // @ts-ignore\r\n    .replace('ROOT_URL', __webpack_require__.p || '')\r\n    // @ts-ignore\r\n    .replace('LIBRARY_EXPORT_NAME', __LIBRARY_EXPORT_NAME__)\r\n    // @ts-ignore\r\n    .replace('LIB_NAME', __webpack_require__.u && __webpack_require__.u('') || '')\r\n      + ')({' + requiredModules.main.map(function (id) {\r\n    const stringifyId = JSON.stringify(id)\r\n    let source = '' + stringifyId + ': ' + sources.main[id].toString()\r\n    if (stringifyId === stringifyModuleId && options.exportName && options.pointName) {\r\n      const line = `;${requiredModules.__webpack_require__}.d(\r\n          ${requiredModules.__webpack_exports__},\r\n          \"${options.exportName}\",\r\n          function() {\r\n            if (${options.exportIsClass}) {\r\n              for (var key in ${requiredModules.__webpack_exports__}) {\r\n                if (key === '${options.exportName}') {\r\n                  continue;\r\n                }\r\n                var v = ${requiredModules.__webpack_exports__}[key];\r\n                if (typeof v === 'function' && v.name === '${options.pointName}') {\r\n                  return v;\r\n                }\r\n              }\r\n            }\r\n            return ${options.pointName};\r\n          }\r\n        );`\r\n      source = source.slice(0, source.length - 1) + line + '}'\r\n    }\r\n    return source\r\n  }).join(',') + '});'\r\n}\r\n","/**\r\n * @file 拆解字符串，并 trim 每个部分\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as array from '../util/array'\r\n\r\n/**\r\n * 拆解字符串，并 trim 每个部分\r\n * \r\n * @param str 字符串\r\n * @param sep 分隔符\r\n */\r\nexport default function split(str: string | number, sep: string): string[] {\r\n\r\n  const result = []\r\n\r\n  if (is.number(str)) {\r\n    str = str + ''\r\n  }\r\n\r\n  if (str && is.string(str)) {\r\n    array.each(str.split(sep), (part, index) => {\r\n      part = part.trim()\r\n      if (part) {\r\n        result.push(part)\r\n      }\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n","/**\r\n * @file 强转为 number\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as constant from '../util/constant'\r\n\r\n/**\r\n * 强转为 number\r\n * \r\n * @param target 待转换值\r\n * @param defaultValue 默认值\r\n * \r\n * @returns 转换之后的值\r\n */\r\nexport default function toNumber(target: any, defaultValue?: number): number {\r\n  return is.numeric(target)\r\n    ? +target\r\n    : defaultValue !== constant.UNDEFINED\r\n      ? defaultValue as number\r\n      : 0\r\n}\r\n","/**\r\n * @file 强转为 string\r\n */\r\n\r\nimport * as constant from '../util/constant'\r\n\r\n/**\r\n * 强转为 string\r\n * \r\n * @param target 待转换的值\r\n * @param defaultValue 默认值\r\n * @returns 转换之后的值\r\n */\r\nexport default function toString(target: any, defaultValue?: string): string {\r\n  return target != constant.NULL && target.toString\r\n    ? target.toString()\r\n    : defaultValue !== constant.UNDEFINED\r\n      ? defaultValue as string\r\n      : constant.EMPTY_STRING\r\n}\r\n","/**\r\n * 顺序执行异步任务，用于有顺序依赖的信令交互\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport * as array from '../util/array'\r\n\r\ntype Command = {\r\n  task: () => Promise<any>\r\n  resolve: (value: any) => void\r\n  reject: (reason?: any) => void,\r\n  error?: Error\r\n}\r\n\r\nexport default class CommandQueue {\r\n\r\n  private queue: Command[]\r\n\r\n  constructor() {\r\n    this.queue = []\r\n  }\r\n\r\n  private async execute(command: Command) {\r\n    try {\r\n      const result = await command.task()\r\n      command.resolve(result)\r\n    }\r\n    catch (error) {\r\n      command.reject(error)\r\n    }\r\n  }\r\n\r\n  private async next() {\r\n    if (this.queue.length) {\r\n      const command = this.queue[0]\r\n      if (command.error) {\r\n        command.reject(command.error)\r\n      }\r\n      else {\r\n        await this.execute(command)\r\n      }\r\n\r\n      this.queue.shift()\r\n\r\n      if (this.queue.length) {\r\n        this.next()\r\n      }\r\n    }\r\n  }\r\n\r\n  public async push<T extends() => Promise<any>>(task: T): Promise<ReturnType<T>> {\r\n    if (!is.func(task)) {\r\n      throw new TypeError('task must be a function')\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const command = {\r\n        task,\r\n        resolve,\r\n        reject\r\n      }\r\n      this.queue.push(command)\r\n\r\n      if (this.queue.length === 1) {\r\n        this.next()\r\n      }\r\n    })\r\n  }\r\n\r\n  public clear(error?: Error) {\r\n    array.each(this.queue, (command) => {\r\n      command.error = error || new Error('command queue clear')\r\n    })\r\n  }\r\n\r\n  public clearPadding() {\r\n    this.queue.length = 0\r\n  }\r\n\r\n  get length() {\r\n    return this.queue.length\r\n  }\r\n}\r\n","\r\nimport * as is from '../util/is'\r\nexport default abstract class ArrayLike {\r\n\r\n  protected proxy: ArrayLike\r\n\r\n  constructor() {\r\n    this.proxy = new Proxy(this, {\r\n      get(target, p, receiver) {\r\n        if (is.numeric(p)) {\r\n          return target.getIndexValue(+p)\r\n        }\r\n        else {\r\n          return target[p]\r\n        }\r\n      },\r\n      set(target, p, newValue, receiver) {\r\n        if (is.numeric(p)) {\r\n          target.setIndexValue(+p, newValue)\r\n        }\r\n        else {\r\n          target[p] = newValue\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  protected abstract getIndexValue(index: number): any\r\n  protected abstract setIndexValue(index: number, value: any): void\r\n\r\n  [n: number]: number\r\n}\r\n","/**\r\n * bit 读取器\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as logger from '../util/logger'\r\nimport { Uint8ArrayInterface } from './interface'\r\n\r\nexport default class BitReader {\r\n\r\n  private buffer: Uint8Array\r\n\r\n  private pointer: number\r\n\r\n  private bitsLeft: number\r\n\r\n  private size: number\r\n\r\n  private endPointer: number\r\n\r\n  private pos: bigint\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array) => number\r\n\r\n  /**\r\n   * @param data 待读取的字节\r\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024) {\r\n    this.pointer = 0\r\n    this.bitsLeft = 8\r\n    this.pos = 0n\r\n\r\n    this.size = size\r\n    this.endPointer = 0\r\n    this.error = 0\r\n\r\n    this.buffer = new Uint8Array(this.size)\r\n  }\r\n\r\n  /**\r\n   * 读取 1 个比特（不会移动读取指针）\r\n   */\r\n  public peekU1() {\r\n    let result = 0\r\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitsLeft === 0) {\r\n      this.flush()\r\n    }\r\n\r\n    let pointer = this.pointer\r\n    let bitsLeft = this.bitsLeft\r\n\r\n    if (bitsLeft === 0) {\r\n      pointer++\r\n      bitsLeft = 8\r\n    }\r\n\r\n    result = (this.buffer[pointer] >> (bitsLeft - 1)) & 0x01\r\n    return result\r\n  }\r\n  /**\r\n   * 读取 1 个比特\r\n   */\r\n  public readU1() {\r\n    let result = 0\r\n\r\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitsLeft === 0) {\r\n      this.flush()\r\n    }\r\n\r\n    this.bitsLeft--\r\n\r\n    result = (this.buffer[this.pointer] >> this.bitsLeft) & 0x01\r\n\r\n    if (this.bitsLeft === 0) {\r\n      this.pointer++\r\n      this.bitsLeft = 8\r\n      this.pos++\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 读取 n 个比特\r\n   * \r\n   * @param n\r\n   */\r\n  public readU(n: number) {\r\n    let result = 0\r\n    for (let i = 0; i < n; i++) {\r\n      result |= (this.readU1() << (n - i - 1))\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 读取 n 个比特（不会移动读取指针）\r\n   * \r\n   * @param n\r\n   */\r\n  public peekU(n: number) {\r\n    const pointer = this.pointer\r\n    const bitsLeft = this.bitsLeft\r\n    const pos = this.pos\r\n    const result = this.readU(n)\r\n    this.pointer = pointer\r\n    this.bitsLeft = bitsLeft\r\n    this.pos = pos\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可读字节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.endPointer - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 当前字节剩余的 bit 数\r\n   * \r\n   * @returns \r\n   */\r\n  public getBitLeft() {\r\n    return this.bitsLeft\r\n  }\r\n\r\n  /**\r\n   * 获取当前读取指针位置\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  /**\r\n   * 设置读取指针到指定位置\r\n   * \r\n   * @param pointer \r\n   */\r\n  public setPointer(pointer: number) {\r\n    this.pointer = pointer\r\n  }\r\n\r\n  /**\r\n   * 返回当前的绝对位置\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 跳过指定 bit 数\r\n   * \r\n   * @param n \r\n   */\r\n  public skip(n: number) {\r\n    const byte = (n - (n % 8)) / 8\r\n\r\n    this.pointer += byte\r\n    this.pos += BigInt(byte)\r\n\r\n    const bitsLeft = n % 8\r\n\r\n    if (this.bitsLeft <= bitsLeft) {\r\n      this.pointer++\r\n      this.pos++\r\n      this.bitsLeft = 8 - (bitsLeft - this.bitsLeft)\r\n    }\r\n    else {\r\n      this.bitsLeft -= bitsLeft\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 填充剩余缓冲区\r\n   */\r\n  public flush() {\r\n\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOReader error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.bitsLeft === 0) {\r\n      this.pointer++\r\n      this.pos++\r\n    }\r\n\r\n    if (this.size - this.remainingLength() <= 0) {\r\n      return\r\n    }\r\n\r\n    if (this.pointer < this.endPointer) {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n\r\n      const len = this.onFlush(this.buffer.subarray(this.endPointer - this.pointer, this.size))\r\n\r\n      if (len < 0) {\r\n        this.error = len\r\n        throw Error('IOReader error, flush failed')\r\n      }\r\n\r\n      this.endPointer = this.endPointer - this.pointer + len\r\n      this.pointer = 0\r\n    }\r\n    else {\r\n      const len = this.onFlush(this.buffer)\r\n\r\n      this.endPointer = len\r\n      this.pointer = 0\r\n      this.bitsLeft = 8\r\n\r\n      if (len < 0) {\r\n        this.error = len\r\n        throw Error('IOReader error, flush failed')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer\r\n  }\r\n\r\n  public appendBuffer(buffer: Uint8ArrayInterface) {\r\n    if (this.size - this.endPointer >= buffer.length) {\r\n      this.buffer.set(buffer, this.endPointer)\r\n      this.endPointer += buffer.length\r\n    }\r\n    else {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n      this.pointer = 0\r\n\r\n      if (this.size - this.endPointer >= buffer.length) {\r\n        this.buffer.set(buffer, this.endPointer)\r\n        this.endPointer += buffer.length\r\n      }\r\n      else {\r\n        const len = Math.min(this.size - this.endPointer, buffer.length)\r\n        this.buffer.set(buffer.subarray(0, len), this.endPointer)\r\n        this.endPointer += len\r\n\r\n        logger.warn('BSReader, call appendBuffer but the buffer\\'s size is lagger then the remaining size')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置缓冲区\r\n   */\r\n  public reset() {\r\n    this.pointer = this.endPointer = 0\r\n    this.bitsLeft = 8\r\n    this.error = 0\r\n    this.pos = 0n\r\n  }\r\n\r\n  /**\r\n   * 对齐字节，当处在当前字节的第一个 bit 时不动，否则移动到下一个字节\r\n   */\r\n  public skipPadding() {\r\n    if (this.bitsLeft < 8) {\r\n      this.bitsLeft = 8\r\n      this.pointer++\r\n      this.pos++\r\n    }\r\n  }\r\n}\r\n","/**\r\n * bit 写存器\r\n */\r\n\r\nimport { IOError } from './error'\r\n\r\n/**\r\n * 写字节流工具\r\n */\r\n\r\nexport default class BitWriter {\r\n\r\n  private buffer: Uint8Array\r\n\r\n  private pointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private bitPointer: number\r\n\r\n  private size: number\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array, pos?: number) => number\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024) {\r\n    this.pointer = 0\r\n    this.bitPointer = 0\r\n    this.size = size\r\n    this.error = 0\r\n    this.pos = 0n\r\n\r\n    this.buffer = new Uint8Array(this.size)\r\n  }\r\n\r\n  /**\r\n   * 写一个 bit\r\n   * \r\n   * @param bit \r\n   */\r\n  public writeU1(bit: number) {\r\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitPointer >= 8) {\r\n      this.flush()\r\n    }\r\n\r\n    if (bit & 0x01) {\r\n      this.buffer[this.pointer] |= (1 << (7 - this.bitPointer))\r\n    }\r\n    else {\r\n      this.buffer[this.pointer] &= ~(1 << (7 - this.bitPointer))\r\n    }\r\n\r\n\r\n    this.bitPointer++\r\n\r\n    if (this.bitPointer === 8) {\r\n      this.pointer++\r\n      this.pos++\r\n      this.bitPointer = 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 n 个比特\r\n   * \r\n   * @param n\r\n   */\r\n  public writeU(n: number, v: number) {\r\n    for (let i = 0; i < n; i++) {\r\n      this.writeU1(v >> (n - i - 1 ) & 0x01)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.size - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 写出缓冲区\r\n   */\r\n  public flush() {\r\n\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('BSWriter error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.pointer) {\r\n      if (this.bitPointer && this.pointer > 0) {\r\n        const ret = this.onFlush(this.buffer.subarray(0, this.pointer).slice())\r\n        if (ret !== 0) {\r\n          this.error = ret\r\n          throw Error('BSWriter error, flush failed')\r\n        }\r\n        this.buffer[0] = this.buffer[this.pointer]\r\n      }\r\n      else if (this.bitPointer === 0) {\r\n        const ret = this.onFlush(this.buffer.subarray(0, this.pointer))\r\n        if (ret !== 0) {\r\n          this.error = ret\r\n          throw Error('BSWriter error, flush failed')\r\n        }\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * 对齐字节，当处在当前字节的第一个 bit 时不动，否则写入 0 直到下一个字节\r\n   */\r\n  public padding() {\r\n    while (this.bitPointer !== 0) {\r\n      this.writeU1(0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置缓冲区\r\n   */\r\n  public reset() {\r\n    this.pointer = 0\r\n    this.bitPointer = 0\r\n    this.error = 0\r\n    this.pos = 0n\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针位置\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  /**\r\n   * 获取当前的绝对位置\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n}\r\n","/**\r\n * 读字节流工具\r\n */\r\n\r\nimport concatTypeArray from '../function/concatTypeArray'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesReaderSync } from './interface'\r\n\r\nexport default class BufferReader implements BytesReaderSync {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private byteStart: number\r\n\r\n  private pos: number\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  /**\r\n   * @param data 待读取的字节\r\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(data: Uint8ArrayInterface, bigEndian: boolean = true) {\r\n    this.buffer = data\r\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\r\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\r\n\r\n    this.pos = 0\r\n    this.size = data.byteLength\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint8() {\r\n    return this.data.getUint8(this.pos++ + this.byteStart)\r\n  }\r\n  public peekUint8() {\r\n    return this.data.getUint8(this.pos + this.byteStart)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint16() {\r\n    const value = this.data.getUint16(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 2\r\n    return value\r\n  }\r\n  public peekUint16() {\r\n    const value = this.data.getUint16(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint24() {\r\n    const high = this.readUint16()\r\n    const low = this.readUint8()\r\n    return this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n  }\r\n  public peekUint24() {\r\n    const high = this.readUint16()\r\n    const low = this.readUint8()\r\n    this.pos -= 3\r\n    return this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint32() {\r\n    const value = this.data.getUint32(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 4\r\n    return value\r\n  }\r\n  public peekUint32() {\r\n    const value = this.data.getUint32(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint64() {\r\n    const high = BigInt(this.readUint32())\r\n    const low = BigInt(this.readUint32())\r\n    if (this.littleEndian) {\r\n      return low << 32n | high\r\n    }\r\n    else {\r\n      return high << 32n | low\r\n    }\r\n  }\r\n  public peekUint64() {\r\n    const high = BigInt(this.readUint32())\r\n    const low = BigInt(this.readUint32())\r\n    this.pos -= 8\r\n    if (this.littleEndian) {\r\n      return low << 32n | high\r\n    }\r\n    else {\r\n      return high << 32n | low\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt8() {\r\n    return this.data.getInt8(this.pos++ + this.byteStart)\r\n  }\r\n  public peekInt8() {\r\n    return this.data.getInt8(this.pos + this.byteStart)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt16() {\r\n    const value = this.data.getInt16(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 2\r\n    return value\r\n  }\r\n  public peekInt16() {\r\n    const value = this.data.getInt16(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt24() {\r\n    const value = this.readUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n  public peekInt24() {\r\n    const value = this.peekUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt32() {\r\n    const value = this.data.getInt32(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 4\r\n    return value\r\n  }\r\n  public peekInt32() {\r\n    const value = this.data.getInt32(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt64() {\r\n    const high = BigInt(this.readInt32())\r\n    const low = BigInt(this.readInt32())\r\n    if (this.littleEndian) {\r\n      return low << 32n | high\r\n    }\r\n    else {\r\n      return high << 32n | low\r\n    }\r\n  }\r\n  public peekInt64() {\r\n    const high = BigInt(this.readInt32())\r\n    const low = BigInt(this.readInt32())\r\n    this.pos -= 8\r\n    if (this.littleEndian) {\r\n      return low << 32n | high\r\n    }\r\n    else {\r\n      return high << 32n | low\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public readFloat() {\r\n    const value = this.data.getFloat32(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 4\r\n    return value\r\n  }\r\n  public peekFloat() {\r\n    const value = this.data.getFloat32(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取双精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public readDouble() {\r\n    const value = this.data.getFloat64(this.pos + this.byteStart, this.littleEndian)\r\n    this.pos += 8\r\n    return value\r\n  }\r\n  public peekDouble() {\r\n    const value = this.data.getFloat64(this.pos + this.byteStart, this.littleEndian)\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public readHex(length: number = 1) {\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = this.readUint8().toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n    return hexStr\r\n  }\r\n  public peekHex(length: number = 1) {\r\n    const pos = this.pos\r\n    const str = this.readHex(length)\r\n    this.pos = pos\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字符串\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public readString(length: number = 1) {\r\n    let str: string = ''\r\n    if (length) {\r\n      let start = this.pos\r\n      for (let i = 0; i < length; i++) {\r\n        if (this.buffer[this.pos + i] === 0) {\r\n          start++\r\n        }\r\n        else {\r\n          break\r\n        }\r\n      }\r\n      str = text.decode(this.buffer.subarray(start, start + length))\r\n    }\r\n    this.pos += length\r\n\r\n    return str\r\n  }\r\n  public peekString(length: number = 1) {\r\n    const pos = this.pos\r\n    const str = this.readString(length)\r\n    this.pos = pos\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 读取一行字符\r\n   */\r\n  public readLine() {\r\n    let str = ''\r\n\r\n    for (let i = this.pos; i < this.size; i++) {\r\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n        str += this.readString(i - this.pos)\r\n        break\r\n      }\r\n    }\r\n\r\n\r\n    for (let i = this.pos; i < this.size; i++) {\r\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n        this.readUint8()\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n\r\n    return str\r\n  }\r\n  public peekLine() {\r\n    const pos = this.pos\r\n    const str = this.readLine()\r\n    this.pos = pos\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 获取当前读取指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return BigInt(this.pos)\r\n  }\r\n\r\n  /**\r\n   * seek 读取指针\r\n   * \r\n   * @param pos \r\n   */\r\n  public seek(pos: number) {\r\n    if (pos > this.size) {\r\n      pos = this.size\r\n    }\r\n    this.pos = Math.max(0, pos)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    this.seek(this.pos + length)\r\n  }\r\n\r\n  /**\r\n   * 返回指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    this.seek(this.pos - length)\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可读字节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingSize() {\r\n    return this.size - this.pos\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public readBuffer(length: number) {\r\n    length = Math.min(length, this.remainingSize())\r\n    const buffer = this.buffer.slice(this.pos, this.pos + length)\r\n    this.pos += length\r\n    return buffer\r\n  }\r\n\r\n  /**\r\n   * 追加 buffer\r\n   * \r\n   * @param buffer \r\n   */\r\n  public appendBuffer(buffer: Uint8ArrayInterface) {\r\n    this.buffer = concatTypeArray(Uint8Array, [\r\n      this.buffer.slice(),\r\n      buffer.slice()\r\n    ])\r\n    this.data = new DataView(this.buffer.buffer)\r\n    this.size += buffer.byteLength\r\n    this.byteStart = 0\r\n  }\r\n\r\n  /**\r\n   * 重新装载数据\r\n   * \r\n   * @param data \r\n   * @param bigEndian \r\n   */\r\n  public resetBuffer(data: Uint8ArrayInterface, bigEndian: boolean = true) {\r\n    this.buffer = data\r\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\r\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\r\n\r\n    this.pos = 0\r\n    this.size = data.byteLength\r\n    this.littleEndian = !bigEndian\r\n  }\r\n}\r\n","/**\r\n * 写字节流工具\r\n */\r\n\r\nimport * as logger from '../util/logger'\r\nimport { Uint8ArrayInterface, BytesWriterSync } from './interface'\r\nimport * as text from '../util/text'\r\n\r\nexport default class BufferWriter implements BytesWriterSync {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private byteStart: number\r\n\r\n  private pos: number\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(data: Uint8ArrayInterface, bigEndian: boolean = true) {\r\n    this.buffer = data\r\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\r\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\r\n    this.pos = 0\r\n    this.size = data.byteLength\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 写 8 位无符号整数\r\n   */\r\n  public writeUint8(value: number) {\r\n    this.data.setUint8(this.pos++ + this.byteStart, value)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   */\r\n  public writeUint16(value: number) {\r\n    this.data.setUint16(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 2\r\n  }\r\n\r\n  /**\r\n   * 写 24 位无符号整数\r\n   */\r\n  public writeUint24(value: number) {\r\n    const high = value & 0xf00\r\n    const middle = value & 0x0f0\r\n    const low = value & 0x00f\r\n    if (this.littleEndian) {\r\n      this.writeUint8(low)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(high)\r\n    }\r\n    else {\r\n      this.writeUint8(high)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(low)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 32 位无符号整数\r\n   */\r\n  public writeUint32(value: number) {\r\n    this.data.setUint32(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 4\r\n  }\r\n\r\n  /**\r\n   * 写 64 位无符号整数\r\n   */\r\n  public writeUint64(value: bigint) {\r\n    this.data.setBigUint64(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 8\r\n  }\r\n\r\n  /**\r\n   * 写 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeInt8(value: number) {\r\n    this.data.setInt8(this.pos++ + this.byteStart, value)\r\n  }\r\n\r\n  /**\r\n   * 写 16 位有符号整数\r\n   */\r\n  public writeInt16(value: number) {\r\n    this.data.setInt16(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 2\r\n  }\r\n\r\n  /**\r\n   * 写 24 位有符号整数\r\n   */\r\n  public writeInt24(value: number) {\r\n    this.writeUint24(value < 0 ? (value + 0x1000000) : value)\r\n  }\r\n\r\n  /**\r\n   * 写 32 位有符号整数\r\n   */\r\n  public writeInt32(value: number) {\r\n    this.data.setInt32(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 4\r\n  }\r\n\r\n  /**\r\n   * 写 64 位有符号整数\r\n   */\r\n  public writeInt64(value: bigint) {\r\n    this.data.setBigInt64(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 8\r\n  }\r\n\r\n  /**\r\n   * 写单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeFloat(value: number) {\r\n    this.data.setFloat32(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 4\r\n  }\r\n\r\n  /**\r\n   * 写双精度浮点数\r\n   */\r\n  public writeDouble(value: number) {\r\n    this.data.setFloat64(this.pos + this.byteStart, value, this.littleEndian)\r\n    this.pos += 8\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * seek 写指针\r\n   * \r\n   * @param pos \r\n   */\r\n  public seek(pos: number) {\r\n    if (pos > this.size) {\r\n      pos = this.size\r\n    }\r\n    this.pos = Math.max(0, pos)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    this.seek(this.pos + length)\r\n  }\r\n\r\n  /**\r\n   * 返回指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    this.seek(this.pos - length)\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingSize() {\r\n    return this.size - this.pos\r\n  }\r\n\r\n  /**\r\n   * 写指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public writeBuffer(buffer: Uint8ArrayInterface) {\r\n    let length = buffer.length\r\n    if (this.remainingSize() < length) {\r\n      length = this.remainingSize()\r\n      logger.warn(`the remaining buffer size is smaller then the wrote buffer, hope set ${buffer.length}, but set ${length}`)\r\n    }\r\n    this.buffer.set(buffer, this.pos)\r\n    this.pos += buffer.length\r\n  }\r\n\r\n  /**\r\n   * 写一个字符串\r\n   */\r\n  public writeString(str: string) {\r\n    const buffer = text.encode(str)\r\n    this.writeBuffer(buffer)\r\n    return buffer.length\r\n  }\r\n\r\n  /**\r\n   * 获取已写的数据\r\n   * \r\n   * @returns \r\n   */\r\n  public getWroteBuffer() {\r\n    return this.buffer.subarray(0, this.pos)\r\n  }\r\n\r\n  /**\r\n   * 重新装载数据\r\n   * \r\n   * @param data \r\n   * @param bigEndian \r\n   */\r\n  public resetBuffer(data: Uint8ArrayInterface, bigEndian: boolean = true) {\r\n    this.buffer = data\r\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\r\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\r\n\r\n    this.pos = 0\r\n    this.size = data.byteLength\r\n    this.littleEndian = !bigEndian\r\n  }\r\n}\r\n","\r\nconst RESIZE_CHUNK_SIZE = 1024 * 1024 * 5\r\n\r\n/**\r\n * 文件 IO\r\n */\r\nexport default class FileIO {\r\n\r\n  private handler: FileHandle\r\n\r\n  private file: File\r\n\r\n  private pos: number\r\n\r\n  private writer: FileSystemWritableFileStream\r\n\r\n  private append: boolean\r\n\r\n  private reader: FileReader\r\n\r\n  private size: number\r\n\r\n  private blobSlice: (start?: number, end?: number, contentType?: string) => void\r\n\r\n  private readied: boolean\r\n\r\n  private readHold: {\r\n    resolve: (data?: any) => void,\r\n    reject: (data?: any) => void,\r\n  }\r\n\r\n  constructor(handler: FileHandle, append: boolean = false) {\r\n    this.handler = handler\r\n    this.append = append\r\n    this.readied = false\r\n  }\r\n\r\n  public async ready() {\r\n\r\n    if (this.readied) {\r\n      return\r\n    }\r\n\r\n    this.file = await this.handler.getFile()\r\n    this.writer = await this.handler.createWritable()\r\n    this.pos = this.append ? this.file.size : 0\r\n    this.size = this.pos\r\n\r\n    this.reader = new FileReader()\r\n\r\n    this.blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice\r\n\r\n    this.reader.onloadend = (event) => {\r\n      if (this.readHold) {\r\n        this.readHold.resolve(event.target.result)\r\n        this.readHold = null\r\n      }\r\n    }\r\n\r\n    this.readied = true\r\n  }\r\n\r\n  private async write_(data: ArrayBuffer | ArrayBufferView) {\r\n    await this.writer.write(data)\r\n    this.pos += data.byteLength\r\n    if (this.pos > this.size) {\r\n      this.size += data.byteLength\r\n    }\r\n  }\r\n\r\n  public async write(data: ArrayBuffer | ArrayBufferView) {\r\n    await this.write_(data)\r\n  }\r\n\r\n  private async seek_(position: number) {\r\n    await this.writer.seek(position)\r\n    this.pos = position\r\n  }\r\n\r\n  public async seek(position: number) {\r\n    await this.seek_(position)\r\n  }\r\n\r\n  public async seekToEnd() {\r\n    await this.seek_(this.size)\r\n  }\r\n\r\n  private async resize_(size: number) {\r\n    if (size !== this.file.size) {\r\n      if (size < this.file.size) {\r\n        this.pos = this.file.size\r\n      }\r\n      await this.writer.truncate(size)\r\n      this.size = size\r\n    }\r\n  }\r\n\r\n  public async resize(size: number) {\r\n    await this.resize_(size)\r\n  }\r\n\r\n  public async read_(start: number, end: number): Promise<ArrayBuffer> {\r\n    return new Promise((resolve, reject) => {\r\n      this.readHold = {\r\n        resolve,\r\n        reject\r\n      }\r\n      this.reader.readAsArrayBuffer(this.blobSlice.call(this.file, start, end))\r\n    })\r\n  }\r\n\r\n  public async read(start: number, end: number): Promise<ArrayBuffer> {\r\n    return await this.read_(start, end)\r\n  }\r\n\r\n  public async appendBufferByPosition(buffer: ArrayBuffer | Uint8Array, position: number) {\r\n    await this.writer.close()\r\n    this.file = await this.handler.getFile()\r\n    this.writer = await this.handler.createWritable({\r\n      keepExistingData: true\r\n    })\r\n\r\n    const size = this.file.size\r\n    const length = buffer.byteLength\r\n\r\n    if (position >= this.file.size) {\r\n      await this.resize_(position + length)\r\n      await this.seek_(position)\r\n      await this.write_(buffer)\r\n    }\r\n    else {\r\n      let start = position\r\n      await this.seek_(position)\r\n      await this.write_(buffer)\r\n      while (start < size) {\r\n        const buffer = await this.read_(start, Math.min(start + RESIZE_CHUNK_SIZE, size))\r\n        await this.write_(buffer)\r\n        start += buffer.byteLength\r\n      }\r\n    }\r\n  }\r\n\r\n  private async close_() {\r\n\r\n    if (!this.readied) {\r\n      return\r\n    }\r\n\r\n    await this.writer.close()\r\n    this.file = await this.handler.getFile()\r\n    this.readied = false\r\n  }\r\n\r\n  public async close() {\r\n    await this.close_()\r\n  }\r\n\r\n  public getFile() {\r\n    return this.file\r\n  }\r\n\r\n  public getHandle() {\r\n    return this.handler\r\n  }\r\n\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  public getSize() {\r\n    return this.size\r\n  }\r\n\r\n  public async destroy() {\r\n    await this.close_()\r\n    this.handler = null\r\n    this.file = null\r\n  }\r\n}\r\n","/**\r\n * 读字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as logger from '../util/logger'\r\nimport IOWriter from './IOWriter'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesReader } from './interface'\r\nimport Sleep from '../timer/Sleep'\r\n\r\nexport default class IOReader implements BytesReader {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private endPointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  private fileSize_: bigint\r\n\r\n  public error: number\r\n\r\n  public onFlush: (buffer: Uint8Array) => Promise<number> | number\r\n\r\n  public onSeek: (seek: bigint) => Promise<number> | number\r\n\r\n  public onSize: () => Promise<bigint> | bigint\r\n\r\n  public flags: number\r\n\r\n  private flushResolve: (ret: number) => void\r\n\r\n  /**\r\n   * @param data 待读取的字节\r\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pos = 0n\r\n    this.pointer = 0\r\n    this.error = 0\r\n\r\n    this.endPointer = 0\r\n    this.littleEndian = !bigEndian\r\n    this.flags = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.size = Math.max(size, 100 * 1024)\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    const value = this.data.getUint8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    return this.data.getUint8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    const value = this.data.getUint16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    return this.data.getUint16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush(3)\r\n    }\r\n    const high = await this.readUint16()\r\n    const low = await this.readUint8()\r\n    return this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n  }\r\n  /**\r\n   * 读取 24 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush(3)\r\n    }\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    const high = await this.readUint16()\r\n    const low = await this.readUint8()\r\n    const value = this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getUint32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getUint32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    const value = this.data.getBigUint64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getBigUint64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    const value = this.data.getInt8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush(1)\r\n    }\r\n    return this.data.getInt8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    const value = this.data.getInt16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush(2)\r\n    }\r\n    return this.data.getInt16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt24() {\r\n    const value = await this.readUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n  /**\r\n   * 读取 24 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt24() {\r\n    const value = await this.peekUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getInt32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getInt32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n\r\n    const value = this.data.getBigInt64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getBigInt64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    const value = this.data.getFloat32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取单精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush(4)\r\n    }\r\n    return this.data.getFloat32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取双精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async readDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    const value = this.data.getFloat64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取双精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public async peekDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush(8)\r\n    }\r\n    return this.data.getFloat64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async readHex(length: number = 1) {\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = (await this.readUint8()).toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n    return hexStr\r\n  }\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回（不会移动读取指针位置）\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async peekHex(length: number = 1) {\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekHex, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      await this.flush(length)\r\n    }\r\n\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = (await this.readUint8()).toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return hexStr\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的二进制数据，不够抛错\r\n   * \r\n   * 第二个参数可传入预先分配的 buffer\r\n   * \r\n   * 返回读取的 Uint8Array\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async readBuffer(length: number): Promise<Uint8Array>\r\n  public async readBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): Promise<T>\r\n  public async readBuffer(length: number, buffer?: Uint8ArrayInterface): Promise<Uint8ArrayInterface> {\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        await this.flush()\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n\r\n    return buffer\r\n  }\r\n  /**\r\n   * 读取指定长度的二进制 buffer 数据（不会移动读取指针位置）\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async peekBuffer(length: number): Promise<Uint8Array >\r\n  public async peekBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): Promise<T>\r\n  public async peekBuffer(length: number, buffer?: Uint8ArrayInterface): Promise<Uint8ArrayInterface> {\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekBuffer, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      await this.flush(length)\r\n    }\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n\r\n    return buffer\r\n  }\r\n\r\n  /**\r\n   * 读取最多 length 字节的数据到指定 buffer，返回已写入的字节长度\r\n   * \r\n   * @param length \r\n   * @param buffer \r\n   * @returns \r\n   */\r\n  public async readToBuffer(length: number, buffer: Uint8ArrayInterface): Promise<number> {\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        try {\r\n          await this.flush()\r\n        }\r\n        catch (error) {\r\n          if (this.error === IOError.END && index) {\r\n            return index\r\n          }\r\n          else {\r\n            throw error\r\n          }\r\n        }\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n      return index\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n      return length\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字符串\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async readString(length: number = 1) {\r\n    const buffer = await this.readBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n  /**\r\n   * 读取指定长度的字符串（不会移动读取指针位置）\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public async peekString(length: number = 1) {\r\n    const buffer = await this.peekBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n\r\n  /**\r\n   * 读取一行字符\r\n   */\r\n  public async readLine() {\r\n    let str = ''\r\n\r\n    while (true) {\r\n      let got = false\r\n      for (let i = this.pointer; i < this.endPointer; i++) {\r\n        if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n          if (i !== this.pointer) {\r\n            str += await this.readString(i - this.pointer)\r\n          }\r\n          got = true\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!got) {\r\n        str += await this.readString(this.remainingLength())\r\n        await this.flush()\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n\r\n    let next = await this.peekUint8()\r\n    if (next === 0x0a || next === 0x0d) {\r\n      this.pointer++\r\n      if (next === 0x0d) {\r\n        next = await this.peekUint8()\r\n        // \\r\\n\r\n        if (next === 0x0a) {\r\n          this.pointer++\r\n        }\r\n      }\r\n    }\r\n\r\n    return str\r\n  }\r\n  /**\r\n   * 读取一行字符（不会移动读取指针位置）\r\n   */\r\n  public async peekLine() {\r\n    if (this.remainingLength() < this.size) {\r\n      try {\r\n        await this.flush()\r\n      }\r\n      catch (error) {\r\n        if (this.error !== IOError.END) {\r\n          throw error\r\n        }\r\n      }\r\n    }\r\n\r\n    let str = ''\r\n\r\n    let got = false\r\n    for (let i = this.pointer; i < this.endPointer; i++) {\r\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n        str += await this.peekString(i - this.pointer)\r\n        got = true\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!got) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekLine, out of buffer')\r\n    }\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 获取当前读取指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  /**\r\n   * 获取已读字节偏移\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 跳过指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public async skip(length: number) {\r\n\r\n    const backup = length\r\n\r\n    while (this.remainingLength() < length) {\r\n      length -= this.remainingLength()\r\n      this.pointer = this.endPointer\r\n      await this.flush()\r\n    }\r\n\r\n    if (this.remainingLength() >= length) {\r\n      this.pointer += length\r\n    }\r\n\r\n    this.pos += BigInt(backup)\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可读字节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.endPointer - this.pointer\r\n  }\r\n\r\n  private async flush_(buffer: Uint8Array) {\r\n    return new Promise<number>(async (resolve) => {\r\n      this.flushResolve = resolve\r\n      while (true) {\r\n        const len = await this.onFlush(buffer)\r\n        if (len !== IOError.AGAIN) {\r\n          this.flushResolve = null\r\n          resolve(len)\r\n          break\r\n        }\r\n        await new Sleep(0)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 重新填充剩余缓冲区\r\n   * \r\n   * @param need \r\n   * @returns \r\n   */\r\n  public async flush(need: number = 0) {\r\n\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.size - this.remainingLength() <= 0) {\r\n      return\r\n    }\r\n\r\n    need = Math.min(need, this.size)\r\n\r\n    if (this.pointer < this.endPointer) {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n    }\r\n    else {\r\n      this.endPointer = 0\r\n    }\r\n\r\n    this.pointer = 0\r\n\r\n    if (need) {\r\n      while (this.remainingLength() < need) {\r\n        const len = await this.flush_(this.buffer.subarray(this.endPointer))\r\n        if (len < 0) {\r\n          this.error = len\r\n          throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n        }\r\n        this.endPointer += len\r\n      }\r\n    }\r\n    else {\r\n      const len = await this.flush_(this.buffer.subarray(this.endPointer))\r\n      if (len < 0) {\r\n        this.error = len\r\n        throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n      }\r\n      this.endPointer += len\r\n    }\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * \r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   * @param force false 时可以在目前的缓冲区内 seek，否则丢弃缓冲区内容重新填充指定位置的数据，默认 false\r\n   * @param flush 指定 seek 之后是否马上填充数据，否则只 seek 到目标位置，默认 true\r\n   * @returns \r\n   */\r\n  public async seek(pos: bigint, force: boolean = false, flush: boolean = true) {\r\n    if (!force) {\r\n      const len = Number(pos - this.pos)\r\n      // 可以往回 seek\r\n      if (len < 0 && Math.abs(len) < this.pointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      // 可以直接往后 seek\r\n      else if (len > 0 && this.pointer + len < this.endPointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      else if (len === 0) {\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, seek failed because of no seek callback')\r\n    }\r\n\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = pos\r\n    const ret = await this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      logger.fatal('IOReader error, seek failed')\r\n    }\r\n    if (flush) {\r\n      await this.flush()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   */\r\n  public getBuffer() {\r\n    return this.buffer\r\n  }\r\n\r\n  /**\r\n   * 写入数据到缓冲区\r\n   * \r\n   * @param buffer \r\n   */\r\n  public appendBuffer(buffer: Uint8Array) {\r\n    if (this.size - this.endPointer >= buffer.length) {\r\n      this.buffer.set(buffer, this.endPointer)\r\n      this.endPointer += buffer.length\r\n    }\r\n    else {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n      this.pointer = 0\r\n\r\n      if (this.size - this.endPointer >= buffer.length) {\r\n        this.buffer.set(buffer, this.endPointer)\r\n        this.endPointer += buffer.length\r\n      }\r\n      else {\r\n        const len = Math.min(this.size - this.endPointer, buffer.length)\r\n        this.buffer.set(buffer.subarray(0, len), this.endPointer)\r\n        this.endPointer += len\r\n\r\n        logger.warn('IOReader, call appendBuffer but the buffer\\'s size is lagger then the remaining size')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置 reader\r\n   */\r\n  public reset() {\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 当前读取模式是否是大端\r\n   * \r\n   * @returns \r\n   */\r\n  public isBigEndian() {\r\n    return !this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * 获取源总字节长度\r\n   * \r\n   * @returns \r\n   */\r\n  public async fileSize() {\r\n    if (this.fileSize_) {\r\n      return this.fileSize_\r\n    }\r\n    if (!this.onSize) {\r\n      logger.warn('IOReader error, fileSize failed because of no onSize callback')\r\n      return 0n\r\n    }\r\n    try {\r\n      this.fileSize_ = await this.onSize()\r\n    }\r\n    catch (error) {\r\n      logger.warn(`IOReader error, call fileSize failed: ${error}`)\r\n      this.fileSize_ = 0n\r\n    }\r\n    return this.fileSize_\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n\r\n  /**\r\n   * 连接到 ioWriter\r\n   * \r\n   * @param ioWriter \r\n   * @param length \r\n   */\r\n  public async pipe(ioWriter: IOWriter, length?: number) {\r\n    if (length) {\r\n      if (this.remainingLength() < length) {\r\n        if (this.remainingLength() > 0) {\r\n          const len = this.remainingLength()\r\n          await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n\r\n        while (length > 0) {\r\n          await this.flush()\r\n          const len = Math.min(this.remainingLength(), length)\r\n          await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n      }\r\n      else {\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + length))\r\n        this.pointer += length\r\n        this.pos += BigInt(length)\r\n      }\r\n    }\r\n    else {\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n\r\n      while (await this.flush_(this.buffer.subarray(0)) > 0) {\r\n        const len = this.remainingLength()\r\n        await ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 中断 flush 操作\r\n   */\r\n  public abort() {\r\n    this.error = IOError.ABORT\r\n    if (this.flushResolve) {\r\n      this.flushResolve(IOError.ABORT)\r\n      this.flushResolve = null\r\n    }\r\n  }\r\n}\r\n","/**\r\n * 写字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesWriter } from './interface'\r\n\r\nexport default class IOWriter implements BytesWriter {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array, pos?: bigint) => Promise<number>\r\n  public onSeek: (seek: bigint) =>  Promise<number>\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.size = size\r\n    this.littleEndian = !bigEndian\r\n    this.error = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 8 位无符号整数\r\n   */\r\n  public async writeUint8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   */\r\n  public async writeUint16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位无符号整数\r\n   */\r\n  public async writeUint24(value: number) {\r\n    if (this.remainingLength() < 3) {\r\n      await this.flush()\r\n    }\r\n    const high = (value & 0xff0000) >> 16\r\n    const middle = (value & 0x00ff00) >> 8\r\n    const low = value & 0x0000ff\r\n    if (this.littleEndian) {\r\n      await this.writeUint8(low)\r\n      await this.writeUint8(middle)\r\n      await this.writeUint8(high)\r\n    }\r\n    else {\r\n      await this.writeUint8(high)\r\n      await this.writeUint8(middle)\r\n      await this.writeUint8(low)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 32 位无符号整数\r\n   */\r\n  public async writeUint32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setUint32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位无符号整数\r\n   */\r\n  public async writeUint64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setBigUint64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public async writeInt8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 写 16 位有符号整数\r\n   */\r\n  public async writeInt16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位有符号整数\r\n   */\r\n  public async writeInt24(value: number) {\r\n    await this.writeUint24(value < 0 ? (value + 0x1000000) : value)\r\n  }\r\n\r\n  /**\r\n   * 写 32 位有符号整数\r\n   */\r\n  public async writeInt32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setInt32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位有符号整数\r\n   */\r\n  public async writeInt64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setBigInt64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public async writeFloat(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      await this.flush()\r\n    }\r\n    this.data.setFloat32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写双精度浮点数\r\n   */\r\n  public async writeDouble(value: number) {\r\n    if (this.remainingLength() < 8) {\r\n      await this.flush()\r\n    }\r\n    this.data.setFloat64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.size - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 写指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public async writeBuffer(buffer: Uint8ArrayInterface) {\r\n\r\n    if (!buffer.length) {\r\n      return\r\n    }\r\n\r\n    let length = buffer.length\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n      while (length > 0) {\r\n        await this.flush()\r\n        const len = Math.min(this.size, length)\r\n        this.buffer.set(buffer.subarray(index, index + len), this.pointer)\r\n\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        index += len\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      this.buffer.set(buffer, this.pointer)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写一个字符串\r\n   */\r\n  public async writeString(str: string) {\r\n    const buffer = text.encode(str)\r\n    await this.writeBuffer(buffer)\r\n    return buffer.length\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出\r\n   */\r\n  public async flush() {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.pointer) {\r\n      const ret = await this.onFlush(this.buffer.subarray(0, this.pointer))\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public async flushToPos(pos: bigint) {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n    if (this.pointer) {\r\n      const ret = await this.onFlush(this.buffer.subarray(0, this.pointer), pos)\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public async seek(pos: bigint) {\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, seek failed because of no seek callback')\r\n    }\r\n\r\n    await this.flush()\r\n\r\n    const ret = await this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      throw Error('IOWriter error, seek failed')\r\n    }\r\n\r\n    this.pos = pos\r\n  }\r\n\r\n  /**\r\n   * 在当前缓冲区映射区间内 seek\r\n   * \r\n   * @param pos \r\n   */\r\n  public seekInline(pos: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, Math.min(this.size, pos))\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.min(this.size, this.pointer + length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 回退指定长度，不能大于 pointer 大小\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, this.pointer - length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer.subarray(0, this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 重置 writer\r\n   */\r\n  public reset() {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n}\r\n","/**\r\n * 写字节流工具\r\n */\r\n\r\nimport { IOError } from './error'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesWriterSync } from './interface'\r\n\r\nexport default class IOWriterSync implements BytesWriterSync {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  public error: number\r\n\r\n  public onFlush: (data: Uint8Array, pos?: bigint) => number\r\n  public onSeek: (seek: bigint) => number\r\n\r\n  /**\r\n   * @param data 待写的 Uint8Array\r\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.size = size\r\n    this.littleEndian = !bigEndian\r\n    this.error = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 8 位无符号整数\r\n   */\r\n  public writeUint8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   */\r\n  public writeUint16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位无符号整数\r\n   */\r\n  public writeUint24(value: number) {\r\n    if (this.remainingLength() < 3) {\r\n      this.flush()\r\n    }\r\n    const high = (value & 0xff0000) >> 16\r\n    const middle = (value & 0x00ff00) >> 8\r\n    const low = value & 0x0000ff\r\n    if (this.littleEndian) {\r\n      this.writeUint8(low)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(high)\r\n    }\r\n    else {\r\n      this.writeUint8(high)\r\n      this.writeUint8(middle)\r\n      this.writeUint8(low)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写 32 位无符号整数\r\n   */\r\n  public writeUint32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setUint32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位无符号整数\r\n   */\r\n  public writeUint64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setBigUint64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeInt8(value: number) {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt8(this.pointer, value)\r\n    this.pointer++\r\n    this.pos++\r\n  }\r\n\r\n  /**\r\n   * 写 16 位有符号整数\r\n   */\r\n  public writeInt16(value: number) {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt16(this.pointer, value, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n  }\r\n\r\n  /**\r\n   * 写 24 位有符号整数\r\n   */\r\n  public writeInt24(value: number) {\r\n    this.writeUint24(value < 0 ? (value + 0x1000000) : value)\r\n  }\r\n\r\n  /**\r\n   * 写 32 位有符号整数\r\n   */\r\n  public writeInt32(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setInt32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写 64 位有符号整数\r\n   */\r\n  public writeInt64(value: bigint) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setBigInt64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 写单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public writeFloat(value: number) {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush()\r\n    }\r\n    this.data.setFloat32(this.pointer, value, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n  }\r\n\r\n  /**\r\n   * 写双精度浮点数\r\n   */\r\n  public writeDouble(value: number) {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush()\r\n    }\r\n    this.data.setFloat64(this.pointer, value, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n  }\r\n\r\n  /**\r\n   * 获取当前写指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可写节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.size - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 写指定长度的二进制 buffer 数据\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public writeBuffer(buffer: Uint8ArrayInterface) {\r\n\r\n    if (!buffer.length) {\r\n      return\r\n    }\r\n\r\n    let length = buffer.length\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n      while (length > 0) {\r\n        this.flush()\r\n        const len = Math.min(this.size, length)\r\n        this.buffer.set(buffer.subarray(index, index + len), this.pointer)\r\n\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        index += len\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      this.buffer.set(buffer, this.pointer)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 写一个字符串\r\n   */\r\n  public writeString(str: string) {\r\n    const buffer = text.encode(str)\r\n    this.writeBuffer(buffer)\r\n    return buffer.length\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出\r\n   */\r\n  public flush() {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.pointer) {\r\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer))\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * 将缓冲区中数据写出到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public flushToPos(pos: bigint) {\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, flush failed because of no flush callback')\r\n    }\r\n    if (this.pointer) {\r\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer), pos)\r\n      if (ret !== 0) {\r\n        this.error = ret\r\n        throw Error('IOWriter error, flush failed')\r\n      }\r\n    }\r\n    this.pointer = 0\r\n  }\r\n\r\n  /**\r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   */\r\n  public seek(pos: bigint) {\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      throw Error('IOWriter error, seek failed because of no seek callback')\r\n    }\r\n\r\n    this.flush()\r\n\r\n    const ret = this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      throw Error('IOWriter error, seek failed')\r\n    }\r\n\r\n    this.pos = pos\r\n  }\r\n\r\n  /**\r\n   * 在当前缓冲区映射区间内 seek\r\n   * \r\n   * @param pos \r\n   */\r\n  public seekInline(pos: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, Math.min(this.size, pos))\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 跳过指定长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.min(this.size, this.pointer + length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 回退指定长度，不能大于 pointer 大小\r\n   * \r\n   * @param length \r\n   */\r\n  public back(length: number) {\r\n    const pointer = this.pointer\r\n    this.pointer = Math.max(0, this.pointer - length)\r\n    this.pos += BigInt(this.pointer - pointer)\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   * \r\n   * @returns \r\n   */\r\n  public getBuffer() {\r\n    return this.buffer.subarray(0, this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 重置 writer\r\n   */\r\n  public reset() {\r\n    this.pointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n}\r\n","import FileIO from './FileIO'\r\nimport CommandQueue from '../helper/CommandQueue'\r\n\r\n/**\r\n * 安全的文件 IO 操作\r\n */\r\nexport default class SafeFileIO extends FileIO {\r\n\r\n  private commandQueue: CommandQueue\r\n\r\n  constructor(handler: FileHandle, append: boolean = false) {\r\n    super(handler, append)\r\n    this.commandQueue = new CommandQueue()\r\n  }\r\n\r\n  public async write(data: ArrayBuffer | ArrayBufferView) {\r\n    return this.commandQueue.push(async () => {\r\n      return super.write(data)\r\n    })\r\n  }\r\n\r\n  public async seek(position: number) {\r\n    return this.commandQueue.push(async () => {\r\n      return super.seek(position)\r\n    })\r\n  }\r\n\r\n  public async seekToEnd() {\r\n    return this.commandQueue.push(async () => {\r\n      return super.seekToEnd()\r\n    })\r\n  }\r\n\r\n  public async resize(size: number) {\r\n    return this.commandQueue.push(async () => {\r\n      return super.resize(size)\r\n    })\r\n  }\r\n\r\n  public async read(start: number, end: number): Promise<ArrayBuffer> {\r\n    return this.commandQueue.push(async () => {\r\n      return super.read(start, end)\r\n    })\r\n  }\r\n\r\n  public async appendBufferByPosition(buffer: ArrayBuffer | Uint8Array, position: number) {\r\n    return this.commandQueue.push(async () => {\r\n      return super.appendBufferByPosition(buffer, position)\r\n    })\r\n  }\r\n\r\n  public async close() {\r\n    return this.commandQueue.push(async () => {\r\n      return super.close()\r\n    })\r\n  }\r\n\r\n  public async destroy() {\r\n    await super.destroy()\r\n    this.commandQueue.clear()\r\n    this.commandQueue = null\r\n  }\r\n\r\n  get writeQueueSize() {\r\n    return this.commandQueue?.length ?? 0\r\n  }\r\n}\r\n","export default function align(value: number, alignment: number) {\r\n  return (value + (alignment - 1)) & ~(alignment - 1)\r\n}\r\n","/**\r\n * 计算最大公约数（GCD）\r\n * \r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport default function gcd(a: number, b: number) {\r\n  while (b !== 0) {\r\n    [a, b] = [b, a % b]\r\n  }\r\n  return a\r\n}\r\n","/**\r\n * 返回 比 num 大的最接近 num 的 2 幂次方数\r\n */\r\nexport default function nearestPowerOf2(num: number) {\r\n  if (num <= 0) {\r\n    return 1\r\n  }\r\n  return Math.pow(2, Math.ceil(Math.log2(num)))\r\n}\r\n","class FakeMessageChannelPort extends EventTarget {\r\n\r\n  public peer: FakeMessageChannelPort\r\n\r\n  public postMessage(message: any, transfer?: Transferable[]) {\r\n    if (this.peer?.onmessage) {\r\n      this.peer.onmessage({\r\n        data: message\r\n      } as any)\r\n    }\r\n  }\r\n\r\n  public onmessage: (this: FakeMessageChannelPort, ev: MessageEvent<any>) => any\r\n\r\n  public onmessageerror: (this: FakeMessageChannelPort, ev: MessageEvent<any>) => any\r\n\r\n  public close() {\r\n    this.peer = null\r\n  }\r\n\r\n  public start() {\r\n\r\n  }\r\n}\r\n\r\nexport default class FakeMessageChannel {\r\n\r\n  public port1: FakeMessageChannelPort\r\n  public port2: FakeMessageChannelPort\r\n\r\n  constructor() {\r\n    this.port1 = new FakeMessageChannelPort()\r\n    this.port2 = new FakeMessageChannelPort()\r\n    this.port1.peer = this.port2\r\n    this.port2.peer = this.port1\r\n  }\r\n}\r\n","import { Data } from '../types/type'\r\nimport Emitter from '../event/Emitter'\r\nimport isDef from '../function/isDef'\r\n\r\nexport const NOTIFY = 'notify'\r\n\r\nexport const REQUEST = 'request'\r\n\r\nexport interface RpcMessage {\r\n  id?: number | string\r\n  method?: string\r\n  params?: Data\r\n  error?: Data\r\n  result?: Data\r\n  seq?: number\r\n}\r\n\r\n\r\nexport default class IPCPort extends Emitter {\r\n\r\n  protected port: MessagePort\r\n\r\n  private requestMap: Map<number, {\r\n    resolve: (value: any) => void\r\n    reject: (value: any) => void\r\n  }>\r\n\r\n  private seq: number\r\n\r\n  public closed: boolean\r\n\r\n  constructor(port: MessagePort) {\r\n    super(true)\r\n    this.port = port\r\n\r\n    this.port.onmessage = this.handle.bind(this)\r\n\r\n    this.seq = 0\r\n    this.requestMap = new Map()\r\n\r\n    this.port.start()\r\n\r\n    this.closed = false\r\n  }\r\n\r\n  protected handle(event: MessageEvent<any>) {\r\n    const origin = event.data\r\n    const type = origin.type\r\n    const data = origin.data\r\n\r\n    if (type === 'notify') {\r\n      this.fire(NOTIFY, data)\r\n    }\r\n    else if (type === 'reply') {\r\n      const request = this.requestMap.get(data.seq)\r\n      if (request) {\r\n        if (isDef(data.result)) {\r\n          request.resolve(data.result)\r\n        }\r\n        else if (data.error) {\r\n          request.reject(data.error)\r\n        }\r\n        else {\r\n          request.resolve(undefined)\r\n        }\r\n        this.requestMap.delete(data.seq)\r\n      }\r\n    }\r\n    else if (type === 'request') {\r\n      this.fire(REQUEST, data)\r\n    }\r\n  }\r\n\r\n  public notify(method: string, params: Data = {}, transfer: any[] = []) {\r\n    this.port.postMessage({\r\n      type: 'notify',\r\n      data: {\r\n        method,\r\n        params\r\n      }\r\n    }, transfer)\r\n  }\r\n\r\n  public async request<T>(method: string, params: Data = {}, transfer: any[] = []) {\r\n    return new Promise<T>((resolve, reject) => {\r\n\r\n      const id = this.seq++\r\n\r\n      this.requestMap.set(id, {\r\n        resolve,\r\n        reject\r\n      })\r\n\r\n      this.port.postMessage({\r\n        type: 'request',\r\n        data: {\r\n          seq: id,\r\n          method,\r\n          params\r\n        }\r\n      }, transfer)\r\n    })\r\n  }\r\n\r\n  public reply(request: RpcMessage, result?: any, error?: Data, transfer: any[] = []) {\r\n\r\n    const data: Data = {\r\n      seq: request.seq\r\n    }\r\n\r\n    if (isDef(result)) {\r\n      data.result = result\r\n    }\r\n    else if (error) {\r\n      data.error = error\r\n    }\r\n\r\n    if (transfer?.length) {\r\n      this.port.postMessage({\r\n        type: 'reply',\r\n        data\r\n      }, transfer)\r\n    }\r\n    else {\r\n      this.port.postMessage({\r\n        type: 'reply',\r\n        data\r\n      })\r\n    }\r\n  }\r\n\r\n  public getPort() {\r\n    return this.port\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.requestMap.size) {\r\n      this.requestMap.forEach((req) => {\r\n        req.reject('ipc port close')\r\n      })\r\n      this.requestMap.clear()\r\n    }\r\n    if (this.port) {\r\n      this.port.close()\r\n      this.port = null\r\n    }\r\n    this.closed = true\r\n  }\r\n}\r\n","import IPCPort from './IPCPort'\r\n\r\nexport default class NodeIPCPort extends IPCPort {\r\n  constructor(port: MessagePort) {\r\n    super(port)\r\n    // @ts-ignore\r\n    this.port.on('message', this.handle.bind(this))\r\n  }\r\n}\r\n","import isWorker from '../function/isWorker'\r\nimport getTimestamp from '../function/getTimestamp'\r\nimport WorkerSetTimeout from './WorkerSetTimeout'\r\nimport debounce from '../function/debounce'\r\n\r\n\r\nlet workerSetTimeout: WorkerSetTimeout\r\nlet workerSetTimeoutCounter = 0\r\n\r\nfunction createWorkerSetTimeout() {\r\n  if (workerSetTimeout) {\r\n    workerSetTimeoutCounter++\r\n    return workerSetTimeout\r\n  }\r\n  workerSetTimeout = new WorkerSetTimeout()\r\n  workerSetTimeoutCounter = 1\r\n  return workerSetTimeout\r\n}\r\n\r\nfunction deleteWorkerSetTimeout() {\r\n\r\n  if (workerSetTimeoutCounter === 0) {\r\n    return\r\n  }\r\n\r\n  workerSetTimeoutCounter--\r\n  if (workerSetTimeoutCounter === 0) {\r\n    workerSetTimeout.destroy()\r\n    workerSetTimeout = null\r\n  }\r\n}\r\n\r\nexport default class Clock {\r\n\r\n  private messageChannel: MessageChannel\r\n\r\n  private interval: number\r\n\r\n  private started: boolean\r\n\r\n  private timer: number\r\n  private workerTimer: number\r\n\r\n  private workerSetTimeout: WorkerSetTimeout\r\n\r\n  public onClock: (next: () => void) => void\r\n\r\n  private nextTick: () => void\r\n\r\n  /**\r\n   * messageChannel 执行间隔，默认 0.2\r\n   */\r\n  private a: number\r\n\r\n  /**\r\n   * setTimeout 最小执行间隔，默认 4\r\n   */\r\n  private b: number\r\n\r\n  /**\r\n   * 50 毫秒内  messageChannel 执行次数\r\n   */\r\n  private beta: number\r\n\r\n  /**\r\n   * 50 毫秒内  setTimeout 执行次数\r\n   */\r\n  private alpha: number\r\n\r\n  private count: number\r\n\r\n  /**\r\n   * 等效时间\r\n   */\r\n  private equivalent: number\r\n\r\n  private timestamp: number\r\n\r\n  private onVisibilityChange: (event: any) => void\r\n\r\n  private timeoutNext: Function\r\n\r\n  private running: boolean\r\n\r\n  private highPerformance: boolean\r\n\r\n  private forceWorker: boolean\r\n\r\n  constructor(interval: number, highPerformance = true, forceWorker: boolean = false) {\r\n    this.started = false\r\n    this.interval = interval\r\n    this.highPerformance = highPerformance\r\n    this.forceWorker = forceWorker\r\n\r\n    this.a = 0.2\r\n    this.b = 4\r\n    this.equivalent = 50\r\n    this.timestamp = 0\r\n\r\n    this.nextTick = () => {\r\n      if (!this.started || this.running) {\r\n        return\r\n      }\r\n\r\n      this.running = true\r\n\r\n      if (this.interval >= 4 || !this.highPerformance) {\r\n        this.timeoutTick()\r\n      }\r\n      else if (this.interval <= 0) {\r\n        this.messageChannel.port1.postMessage(null)\r\n      }\r\n      else {\r\n        const now = getTimestamp()\r\n        if (now - this.timestamp > this.equivalent) {\r\n          this.count = 0\r\n          this.timestamp = now\r\n        }\r\n\r\n        if (this.count < this.beta) {\r\n          this.messageChannel.port1.postMessage(null)\r\n        }\r\n        else {\r\n          this.timeoutTick()\r\n        }\r\n      }\r\n    }\r\n\r\n    this.compute()\r\n\r\n    this.messageChannel = new MessageChannel()\r\n    this.handleEvent()\r\n\r\n    this.timeoutNext = (worker: boolean) => {\r\n      if (worker) {\r\n        this.workerTimer = null\r\n      }\r\n      else {\r\n        this.timer = null\r\n      }\r\n      this.running = false\r\n\r\n      this.count++\r\n\r\n      if (this.onClock) {\r\n        this.onClock(this.nextTick)\r\n      }\r\n      else {\r\n        this.nextTick()\r\n      }\r\n    }\r\n\r\n    if (!isWorker() && document.visibilityState === 'hidden') {\r\n      this.workerSetTimeout = createWorkerSetTimeout()\r\n    }\r\n\r\n    this.running = false\r\n  }\r\n\r\n  private compute(clear: boolean = true) {\r\n    if (this.interval > 0) {\r\n      this.beta = Math.ceil(this.equivalent * (1 - this.b / this.interval) / (this.a - this.b))\r\n      this.alpha = Math.floor(this.equivalent / this.interval - this.beta)\r\n\r\n      if (clear) {\r\n        this.count = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  private timeoutTick() {\r\n    if (this.workerSetTimeout\r\n      && document.visibilityState === 'hidden'\r\n      && (this.interval < 1000 || this.forceWorker)\r\n    ) {\r\n      this.workerTimer = this.workerSetTimeout.setTimeout(this.timeoutNext, this.interval)\r\n    }\r\n    else {\r\n      this.timer = setTimeout(this.timeoutNext, this.interval)\r\n    }\r\n  }\r\n\r\n  public start() {\r\n    if (this.started) {\r\n      return\r\n    }\r\n    this.started = true\r\n    this.timestamp = getTimestamp()\r\n\r\n    this.nextTick()\r\n  }\r\n\r\n  public stop() {\r\n    this.started = false\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n    if (this.workerTimer && this.workerSetTimeout) {\r\n      this.workerSetTimeout.clearTimeout(this.workerTimer)\r\n    }\r\n    this.running = false\r\n  }\r\n\r\n  public isStarted() {\r\n    return this.started\r\n  }\r\n\r\n  public setInterval(interval: number) {\r\n    this.interval = Math.max(interval, 0)\r\n    this.compute()\r\n  }\r\n\r\n  public getInterval() {\r\n    return this.interval\r\n  }\r\n\r\n  public isZeroTimeout() {\r\n    return this.interval < 4\r\n  }\r\n\r\n  public destroy() {\r\n    this.stop()\r\n\r\n    if (this.workerSetTimeout) {\r\n      deleteWorkerSetTimeout()\r\n      this.workerSetTimeout = null\r\n    }\r\n\r\n    if (this.onVisibilityChange) {\r\n      document.removeEventListener('visibilitychange', this.onVisibilityChange)\r\n      this.onVisibilityChange = null\r\n    }\r\n  }\r\n\r\n  private handleEvent() {\r\n    this.messageChannel.port2.onmessage = () => {\r\n      if (!this.started) {\r\n        return\r\n      }\r\n      this.running = false\r\n      this.count++\r\n      if (this.onClock) {\r\n        this.onClock(this.nextTick)\r\n      }\r\n      else {\r\n        this.nextTick()\r\n      }\r\n    }\r\n\r\n    if (!isWorker()) {\r\n      this.onVisibilityChange = debounce((event) => {\r\n        if (document.visibilityState === 'hidden') {\r\n\r\n          this.workerSetTimeout = createWorkerSetTimeout()\r\n\r\n          if (this.timer) {\r\n            clearTimeout(this.timer)\r\n            this.timer = null\r\n            this.running = false\r\n          }\r\n\r\n          this.nextTick()\r\n        }\r\n        else {\r\n\r\n          if (this.workerTimer) {\r\n            this.workerSetTimeout.clearTimeout(this.workerTimer)\r\n            this.workerTimer = null\r\n            this.running = false\r\n          }\r\n\r\n          if (this.timer) {\r\n            clearTimeout(this.timer)\r\n            this.timer = null\r\n            this.running = false\r\n          }\r\n\r\n          deleteWorkerSetTimeout()\r\n          this.workerSetTimeout = null\r\n\r\n          this.nextTick()\r\n        }\r\n      }, 20)\r\n      document.addEventListener('visibilitychange', this.onVisibilityChange)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @file 可伸缩循环任务队列\r\n */\r\n\r\nimport Clock from './Clock'\r\nimport getTimestamp from '../function/getTimestamp'\r\nimport { Timeout } from '../types/type'\r\n\r\nexport default class LoopTask {\r\n\r\n  private task: () => any\r\n\r\n  private count: number\r\n\r\n  private emptyCount: number\r\n\r\n  private started: boolean\r\n\r\n  private clock: Clock\r\n\r\n  private timestamp: number\r\n\r\n  private timeout: number\r\n\r\n  private interval: number\r\n\r\n  private startTimer: Timeout\r\n\r\n  private autoInterval: boolean\r\n\r\n  private sync: boolean\r\n\r\n  private tickAfter: () => void\r\n\r\n  private processing: boolean\r\n\r\n  constructor(task: () => any, timeout: number = 0, interval: number = 0, autoInterval: boolean = true, sync: boolean = true) {\r\n    this.task = task\r\n    this.timeout = timeout\r\n    this.interval = interval\r\n    this.autoInterval = autoInterval\r\n    this.sync = sync\r\n\r\n    this.count = 0\r\n    this.emptyCount = 0\r\n    this.timestamp = 0\r\n    this.started = false\r\n    this.processing = false\r\n\r\n    this.clock = new Clock(this.interval)\r\n\r\n    this.clock.onClock = (next) => {\r\n      if (!this.started) {\r\n        return\r\n      }\r\n      this.count++\r\n\r\n      if (this.sync) {\r\n        if (this.tickAfter) {\r\n          this.tickAfter()\r\n          this.tickAfter = null\r\n        }\r\n        if (this.task() === false) {\r\n          this.stop()\r\n        }\r\n        else {\r\n          this.next(next)\r\n        }\r\n      }\r\n      else {\r\n        if (this.processing) {\r\n          return\r\n        }\r\n        this.processing = true\r\n        this.task().then((result: any) => {\r\n          this.processing = false\r\n          if (this.tickAfter) {\r\n            this.tickAfter()\r\n            this.tickAfter = null\r\n          }\r\n          if (result === false) {\r\n            this.stop()\r\n          }\r\n          else {\r\n            this.next(next)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  private next(next: () => void) {\r\n    if (!this.started) {\r\n      return\r\n    }\r\n    const now = getTimestamp()\r\n    if (this.autoInterval && now - this.timestamp > 50) {\r\n      const load = this.emptyCount / this.count\r\n      /**\r\n       * 1000 毫秒被空闲任务调用超过 10%，将间隔减一\r\n       * 没有空闲任务，将间隔重新置为 0\r\n       */\r\n      if (this.emptyCount === 0) {\r\n        this.clock.setInterval(Math.max(this.clock.getInterval() >> 1, this.interval))\r\n      }\r\n      else if (load < 0.1) {\r\n        this.clock.setInterval(this.clock.getInterval() - 1)\r\n      }\r\n      else if (load > 0.2) {\r\n        this.clock.setInterval(Math.min(this.clock.getInterval() + 1, 20))\r\n      }\r\n      else if (load > 0.5) {\r\n        this.clock.setInterval(this.clock.getInterval() << 1)\r\n      }\r\n      this.count = 0\r\n      this.emptyCount = 0\r\n      this.timestamp = now\r\n    }\r\n    next()\r\n  }\r\n\r\n  public start() {\r\n    this.started = true\r\n    if (this.timeout) {\r\n      this.startTimer = setTimeout(() => {\r\n        this.count = 0\r\n        this.emptyCount = 0\r\n        this.timestamp = getTimestamp()\r\n        this.clock.start()\r\n        this.startTimer = null\r\n      }, this.timeout)\r\n    }\r\n    else {\r\n      this.count = 0\r\n      this.emptyCount = 0\r\n      this.timestamp = getTimestamp()\r\n      this.clock.start()\r\n    }\r\n  }\r\n\r\n  public stop() {\r\n    this.started = false\r\n    this.processing = false\r\n    if (this.startTimer) {\r\n      clearTimeout(this.startTimer)\r\n      this.startTimer = null\r\n    }\r\n    this.clock.stop()\r\n  }\r\n\r\n  public async stopBeforeNextTick() {\r\n    if (this.startTimer) {\r\n      clearTimeout(this.startTimer)\r\n      this.startTimer = null\r\n    }\r\n\r\n    if (!this.clock.isStarted()) {\r\n      return\r\n    }\r\n\r\n    if (this.sync) {\r\n      this.started = false\r\n      this.processing = false\r\n      this.clock.stop()\r\n    }\r\n    else {\r\n      return new Promise<void>((resolve) => {\r\n        this.tickAfter = () => {\r\n          this.started = false\r\n          this.processing = false\r\n          this.clock.stop()\r\n          resolve()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  public isStarted() {\r\n    return this.started\r\n  }\r\n\r\n  public emptyTask() {\r\n    this.emptyCount++\r\n  }\r\n\r\n  public isZeroTimeout() {\r\n    return this.clock?.isZeroTimeout()\r\n  }\r\n\r\n  public restart() {\r\n    if (this.clock) {\r\n      this.stop()\r\n      this.clock.setInterval(this.interval)\r\n      this.start()\r\n    }\r\n  }\r\n\r\n  public resetInterval() {\r\n    this.clock.setInterval(Math.max(this.clock.getInterval() >> 1, this.interval))\r\n    this.emptyCount = 0\r\n    this.count = 0\r\n    this.timestamp = getTimestamp()\r\n  }\r\n\r\n  public destroy() {\r\n    this.stop()\r\n    this.task =  null\r\n    this.timeout = null\r\n    this.interval = null\r\n  }\r\n}\r\n","/**\r\n * @file sleep\r\n */\r\n\r\nimport { Timeout } from '../types/type'\r\n\r\nexport default class Sleep {\r\n\r\n  private timeout: number\r\n\r\n  private timer: Timeout\r\n\r\n  private resolve: (value?: number) => void\r\n\r\n  private reject: (value?: number) => void\r\n\r\n  private startTime: number\r\n\r\n  /**\r\n   * \r\n   * @param timeout 时间（秒）\r\n   */\r\n  constructor(timeout: number) {\r\n    this.timeout = timeout\r\n  }\r\n\r\n  public then(res: (value?: number) => void, rej?: (value?: number) => void) {\r\n    this.resolve = res\r\n    this.reject = rej\r\n    this.startTime = Date.now()\r\n    this.timer = setTimeout(() => {\r\n      this.resolve(Date.now() - this.startTime)\r\n      this.timer = null\r\n    }, this.timeout * 1000)\r\n  }\r\n\r\n  public stop(resolve: boolean = true) {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n      if (this.resolve && resolve) {\r\n        this.resolve(Date.now() - this.startTime)\r\n      }\r\n      else if (this.reject && !resolve) {\r\n        this.reject(Date.now() - this.startTime)\r\n      }\r\n    }\r\n  }\r\n\r\n  public reset(timeout?: number) {\r\n\r\n    if (timeout) {\r\n      this.timeout = timeout\r\n    }\r\n\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = setTimeout(() => {\r\n        this.resolve(Date.now() - this.startTime)\r\n        this.timer = null\r\n      }, this.timeout * 1000)\r\n    }\r\n  }\r\n}\r\n\r\n","/**\r\n * @file 定时任务\r\n */\r\n\r\nimport { Timeout } from '../types/type'\r\n\r\nexport default class Timer {\r\n\r\n  private task: Function\r\n\r\n  private timeout: number\r\n\r\n  private interval: number\r\n\r\n  private timer: Timeout\r\n\r\n  /**\r\n   * \r\n   * @param task 定时任务\r\n   * @param timeout 多久之后开始\r\n   * @param interval 执行间隔\r\n   */\r\n  constructor(task: Function, timeout: number, interval: number) {\r\n    this.task = task\r\n    this.timeout = timeout\r\n    this.interval = interval\r\n  }\r\n\r\n  /**\r\n   * 开始执行\r\n   */\r\n  public start() {\r\n    const me = this\r\n    me.stop()\r\n\r\n    let timeout = me.timeout\r\n    const interval = me.interval\r\n\r\n    const next = function () {\r\n      if (me.task() !== false\r\n        && me.timer\r\n      ) {\r\n        me.timer = setTimeout(next, me.interval)\r\n      }\r\n      else {\r\n        me.stop()\r\n      }\r\n    }\r\n    if (timeout == null) {\r\n      timeout = interval\r\n    }\r\n    me.timer = setTimeout(next, timeout)\r\n  }\r\n\r\n  /**\r\n   * 停止执行\r\n   */\r\n  public stop() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n  }\r\n\r\n  public updateInterval(interval: number) {\r\n    this.interval = interval\r\n  }\r\n\r\n  /**\r\n   * 是否正在执行\r\n   */\r\n  public isStarted() {\r\n    return !!this.timer\r\n  }\r\n\r\n  /**\r\n   * 销毁定时任务\r\n   */\r\n  public destroy() {\r\n    this.stop()\r\n    this.task = this.timeout = this.interval = null\r\n  }\r\n}\r\n","function workerTimeout(self: Worker) {\r\n  self.addEventListener('message', (message) => {\r\n    const origin = message.data\r\n    let data = origin.data\r\n    setTimeout(() => {\r\n      self.postMessage({\r\n        type: 'pong',\r\n        id: data.id\r\n      })\r\n    }, Math.max(data.timeout ?? 0, 4))\r\n  })\r\n}\r\n\r\nexport default class WorkerSetTimeout {\r\n\r\n  private worker: Worker\r\n\r\n  private workerUrl: string\r\n\r\n  private taskMap: Map<number, Function>\r\n\r\n  private id: number\r\n\r\n  constructor() {\r\n\r\n    this.id = 0\r\n    this.taskMap = new Map()\r\n\r\n    const workerSource = `\r\n      ${workerTimeout.toString()}\r\n      ${workerTimeout.name}(self)\r\n    `\r\n\r\n    const blob = new Blob([workerSource], { type: 'text/javascript' })\r\n    this.workerUrl = URL.createObjectURL(blob)\r\n\r\n    this.worker = new Worker(this.workerUrl)\r\n\r\n    this.worker.addEventListener('message', (message) => {\r\n      const origin = message.data\r\n      const type = origin.type\r\n      const id = origin.id\r\n      switch (type) {\r\n        case 'pong':\r\n          const task = this.taskMap.get(id)\r\n          if (task) {\r\n            task(true)\r\n          }\r\n          break\r\n      }\r\n    })\r\n  }\r\n\r\n  public setTimeout(task: Function, timeout: number = 0) {\r\n    const id = this.id++\r\n\r\n    this.taskMap.set(id, task)\r\n\r\n    this.worker.postMessage({\r\n      type: 'ping',\r\n      data: {\r\n        timeout,\r\n        id\r\n      }\r\n    })\r\n\r\n    return id\r\n  }\r\n\r\n  public clearTimeout(id: number) {\r\n    this.taskMap.delete(id)\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.worker) {\r\n      this.worker.terminate()\r\n      this.worker = null\r\n    }\r\n\r\n    if (this.workerUrl) {\r\n      URL.revokeObjectURL(this.workerUrl)\r\n      this.workerUrl = null\r\n    }\r\n\r\n    if (this.taskMap) {\r\n      this.taskMap.clear()\r\n      this.taskMap = null\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @file 数组操作\r\n */\r\n\r\nimport * as is from './is'\r\nimport * as constant from './constant'\r\nimport execute from '../function/execute'\r\n\r\n/**\r\n * 遍历数组\r\n *\r\n * @param array\r\n * @param callback 返回 false 可停止遍历\r\n * @param reversed 是否逆序遍历\r\n */\r\nexport function each<T>(\r\n  array: T[],\r\n  callback: (item: T, index: number) => boolean | void,\r\n  reversed?: boolean\r\n): void {\r\n  if (!array) {\r\n    return\r\n  }\r\n  const { length } = array\r\n  if (length) {\r\n    if (reversed) {\r\n      for (let i = length - 1; i >= 0; i--) {\r\n        if (callback(array[i], i) === constant.FALSE) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 0; i < length; i++) {\r\n        if (callback(array[i], i) === constant.FALSE) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction nativePush<T>(array: T[], item: T) {\r\n  array[array.length] = item\r\n}\r\n\r\nfunction nativeUnshift<T>(array: T[], item: T) {\r\n  array.unshift(item)\r\n}\r\n\r\n/**\r\n * 添加\r\n *\r\n * @param array\r\n * @param value\r\n * @param action\r\n */\r\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\r\n  if (is.array(value)) {\r\n    each(\r\n      value as T[],\r\n      function (item: T) {\r\n        action(array, item)\r\n      }\r\n    )\r\n  }\r\n  else {\r\n    action(array, value)\r\n  }\r\n}\r\n\r\n/**\r\n * 往后加\r\n *\r\n * @param array\r\n * @param target\r\n */\r\nexport function push<T>(array: T[], target: T | T[]): void {\r\n  addItem(array, target, nativePush)\r\n}\r\n\r\n/**\r\n * 往前加\r\n *\r\n * @param array\r\n * @param target\r\n */\r\nexport function unshift<T>(array: T[], target: T | T[]): void {\r\n  addItem(array, target, nativeUnshift)\r\n}\r\n\r\n/**\r\n * 数组项在数组中的位置\r\n *\r\n * @param array 数组\r\n * @param target 数组项\r\n * @param strict 是否全等判断，默认是全等\r\n * @return 如果未找到，返回 -1\r\n */\r\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\r\n  let result = constant.MINUS_ONE\r\n  each(\r\n    array,\r\n    function (item: any, index: number) {\r\n      if (strict === constant.FALSE ? item == target : item === target) {\r\n        result = index\r\n        return constant.FALSE\r\n      }\r\n    }\r\n  )\r\n  return result\r\n}\r\n\r\n/**\r\n * 获取数组最后一项\r\n *\r\n * @param array 数组\r\n * @return\r\n */\r\nexport function last<T>(array: T[]): T | void {\r\n  const { length } = array\r\n  if (length > 0) {\r\n    return array[length - 1]\r\n  }\r\n}\r\n\r\n/**\r\n * 弹出数组最后一项\r\n *\r\n * 项目里用的太多，仅用于节省字符\r\n *\r\n * @param array 数组\r\n * @return 弹出的数组项\r\n */\r\nexport function pop<T>(array: T[]): T | void {\r\n  const { length } = array\r\n  if (length > 0) {\r\n    return array.pop()\r\n  }\r\n}\r\n\r\n/**\r\n * 删除数组项\r\n *\r\n * @param array 数组\r\n * @param item 待删除项\r\n * @param strict 是否全等判断，默认是全等\r\n * @return 删除的数量\r\n */\r\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\r\n  let result = 0\r\n  each(\r\n    array,\r\n    function (item: T, index: number) {\r\n      if (strict === constant.FALSE ? item == target : item === target) {\r\n        array.splice(index, 1)\r\n        result++\r\n      }\r\n    },\r\n    constant.TRUE\r\n  )\r\n  return result\r\n}\r\n\r\n/**\r\n * 数组是否包含 item\r\n *\r\n * @param array 数组\r\n * @param target 可能包含的数组项\r\n * @param strict 是否全等判断，默认是全等\r\n * @return\r\n */\r\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\r\n  return indexOf(array, target, strict) >= 0\r\n}\r\n\r\n/**\r\n * 把类数组转成数组\r\n *\r\n * @param array 类数组\r\n * @return\r\n */\r\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\r\n  return is.array(array)\r\n    ? array\r\n    : execute(constant.EMPTY_ARRAY.slice, array)\r\n}\r\n\r\n/**\r\n * 把数组转成对象\r\n *\r\n * @param array 数组\r\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\r\n * @param value\r\n * @return\r\n */\r\nexport function toObject(array: any[], key?: string | null, value?: any): object {\r\n  let result = {}\r\n  each(\r\n    array,\r\n    function (item: any) {\r\n      result[key ? item[key] : item] = value || item\r\n    }\r\n  )\r\n  return result\r\n}\r\n\r\n/**\r\n * 把数组合并成字符串\r\n *\r\n * @param array\r\n * @param separator\r\n * @return\r\n */\r\nexport function join(array: string[], separator: string): string {\r\n  return array.join(separator)\r\n}\r\n\r\n/**\r\n * 用于判断长度大于 0 的数组\r\n *\r\n * @param array\r\n * @return\r\n */\r\nexport function falsy(array: any): boolean {\r\n  return !is.array(array) || !array.length\r\n}\r\n\r\n/**\r\n * 排除数组元素返回新数组\r\n * \r\n * @param source \r\n * @param exc \r\n * @returns \r\n */\r\nexport function exclude(source: any[], exc: any[]) {\r\n  const items = []\r\n\r\n  each(source, (item, index) => {\r\n    if (!has(exc, item)) {\r\n      items.push(item)\r\n    }\r\n  })\r\n\r\n  return items\r\n}\r\n\r\n/**\r\n * 二分查找\r\n * \r\n * @param array \r\n * @param callback 相等返回 0， 往左边查返回 -1， 往右边查返回 1\r\n * @returns \r\n */\r\nexport function binarySearch<T>(array: T[], callback: (item: T) => -1 | 0 | 1) {\r\n  let left = 0\r\n  let right = array.length - 1\r\n  let index = -1\r\n\r\n  while (left <= right) {\r\n    let mid = ((left + right) / 2) >>> 0\r\n\r\n    const ret = callback(array[mid])\r\n\r\n    if (ret === 0) {\r\n      index = mid\r\n      break\r\n    }\r\n    else if (ret === 1) {\r\n      left = mid + 1\r\n    }\r\n    else {\r\n      right = mid - 1\r\n      index = mid\r\n    }\r\n  }\r\n  return index\r\n}\r\n\r\nexport function sortInsert<T>(array: T[], item: T, callback: (item: T) => -1 | 0 | 1) {\r\n  const index = binarySearch(array, callback)\r\n  if (index > -1) {\r\n    array.splice(index, 0, item)\r\n  }\r\n  else {\r\n    array.push(item)\r\n  }\r\n}\r\n\r\nexport function same<T extends ArrayLike<any>>(a: T, b: T): boolean {\r\n  if (a === b) {\r\n    return true\r\n  }\r\n  if (!a || !b) {\r\n    return false\r\n  }\r\n  if (a.length !== b.length) {\r\n    return false\r\n  }\r\n  for (let i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","\r\nconst base32 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'\r\n\r\n\r\n/**\r\n * base32 解密\r\n */\r\nexport function decode(text: string): Uint8Array {\r\n  text = text.toUpperCase().replace(/=+$/, '')\r\n  let bits = 0\r\n  let value = 0\r\n\r\n  let index = 0\r\n  const output = new Uint8Array(((text.length * 5) / 8) | 0)\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    value = (value << 5) | base32.indexOf(text[i])\r\n    bits += 5\r\n\r\n    if (bits >= 8) {\r\n      output[index++] = (value >>> (bits - 8)) & 255\r\n      bits -= 8\r\n    }\r\n  }\r\n\r\n  return output\r\n}\r\n\r\n/**\r\n * base32 加密\r\n */\r\nexport function encode(buffer: Uint8Array, padding: boolean = true): string {\r\n  const length = buffer.length\r\n\r\n  let bits = 0\r\n  let value = 0\r\n  let output = ''\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    value = (value << 8) | buffer[i]\r\n    bits += 8\r\n\r\n    while (bits >= 5) {\r\n      output += base32[(value >>> (bits - 5)) & 31]\r\n      bits -= 5\r\n    }\r\n  }\r\n\r\n  if (bits > 0) {\r\n    output += base32[(value << (5 - bits)) & 31]\r\n  }\r\n\r\n  if (padding) {\r\n    while (output.length % 8 !== 0) {\r\n      output += '='\r\n    }\r\n  }\r\n\r\n  return output\r\n}\r\n\r\n","\r\nimport * as array from './array'\r\n\r\nconst base64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n\r\n/**\r\n * utf8 编码\r\n * @param text \r\n */\r\nfunction utf8Decode(text: string): string {\r\n  let string = '', i = 0, c = 0, c1 = 0, c2 = 0, c3 = 0\r\n  while (i < text.length) {\r\n    c = text.charCodeAt(i)\r\n    if (c < 128) {\r\n      string += String.fromCharCode(c)\r\n      i++\r\n    }\r\n    else if ((c > 191) && (c < 224)) {\r\n      c2 = text.charCodeAt(i + 1)\r\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63))\r\n      i += 2\r\n    }\r\n    else {\r\n      c2 = text.charCodeAt(i + 1)\r\n      c3 = text.charCodeAt(i + 2)\r\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63))\r\n      i += 3\r\n    }\r\n  }\r\n  return string\r\n}\r\n\r\n/**\r\n * base64 解密\r\n */\r\nexport function base64Decode(text: string): string {\r\n  let output: string = ''\r\n  let chr1: number, chr2: number, chr3: number, enc1: number, enc2: number, enc3: number, enc4: number, i = 0\r\n  text = text.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '')\r\n\r\n  // 不是 4 的倍数补齐 =\r\n  while (text.length % 4) {\r\n    text += '='\r\n  }\r\n\r\n  while (i < text.length) {\r\n    enc1 = base64.indexOf(text.charAt(i++))\r\n    enc2 = base64.indexOf(text.charAt(i++))\r\n    enc3 = base64.indexOf(text.charAt(i++))\r\n    enc4 = base64.indexOf(text.charAt(i++))\r\n    chr1 = (enc1 << 2) | (enc2 >> 4)\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\r\n    chr3 = ((enc3 & 3) << 6) | enc4\r\n    output += String.fromCharCode(chr1)\r\n    if (enc3 !== 64) {\r\n      output += String.fromCharCode(chr2)\r\n    }\r\n    if (enc4 !== 64) {\r\n      output += String.fromCharCode(chr3)\r\n    }\r\n  }\r\n  return utf8Decode(output)\r\n}\r\n\r\nfunction atobCustom(encodedString: string) {\r\n  function decodeBase64(char: string) {\r\n    const index = base64.indexOf(char)\r\n    return index === -1 ? 0 : index\r\n  }\r\n\r\n  let decodedString = ''\r\n\r\n  for (let i = 0; i < encodedString.length;) {\r\n    const enc1 = decodeBase64(encodedString[i++])\r\n    const enc2 = decodeBase64(encodedString[i++])\r\n    const enc3 = decodeBase64(encodedString[i++])\r\n    const enc4 = decodeBase64(encodedString[i++])\r\n\r\n    const chr1 = (enc1 << 2) | (enc2 >> 4)\r\n    const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\r\n    const chr3 = ((enc3 & 3) << 6) | enc4\r\n\r\n    decodedString += String.fromCharCode(chr1)\r\n\r\n    if (enc3 !== 64) {\r\n      decodedString += String.fromCharCode(chr2)\r\n    }\r\n    if (enc4 !== 64) {\r\n      decodedString += String.fromCharCode(chr3)\r\n    }\r\n  }\r\n  return decodedString\r\n}\r\n\r\nexport function base64ToUint8Array(string: string) {\r\n  const binaryData = typeof atob === 'function' ? atob(string) : atobCustom(string)\r\n  const uint8Array = new Uint8Array(binaryData.length)\r\n  for (let i = 0; i < binaryData.length; i++) {\r\n    uint8Array[i] = binaryData.charCodeAt(i)\r\n  }\r\n  return uint8Array\r\n}\r\n\r\nexport const list = [\r\n  'A', 'B', 'C', 'D', 'E', 'F',\r\n  'G', 'H', 'I', 'J', 'K', 'L',\r\n  'M', 'N', 'O', 'P', 'Q', 'R',\r\n  'S', 'T', 'U', 'V', 'W', 'X',\r\n  'Y', 'Z', 'a', 'b', 'c', 'd',\r\n  'e', 'f', 'g', 'h', 'i', 'j',\r\n  'k', 'l', 'm', 'n', 'o', 'p',\r\n  'q', 'r', 's', 't', 'u', 'v',\r\n  'w', 'x', 'y', 'z', '0', '1',\r\n  '2', '3', '4', '5', '6', '7',\r\n  '8', '9', '+', '/'\r\n]\r\n\r\nconst _map: Record<string, number> = { }\r\n\r\narray.each(list, (char, index) => {\r\n  _map[char] = index\r\n})\r\n\r\nexport const map = _map\r\n\r\n","export function abs(a: bigint) {\r\n  return a > 0 ? a : -a\r\n}\r\n\r\nexport function max(a: bigint, b: bigint) {\r\n  return a > b ? a : b\r\n}\r\n\r\nexport function min(a: bigint, b: bigint) {\r\n  return a > b ? b : a\r\n}\r\n","/**\r\n * @file browser\r\n */\r\n\r\nimport { each } from '../util/array'\r\nimport { Browser } from '../types/type'\r\nimport * as is from './is'\r\nimport checkVersion from '../function/checkVersion'\r\nimport os from './os'\r\n\r\nexport const enum BrowserType {\r\n  ALIPAY = 'alipay',\r\n  WECHAT = 'wechat',\r\n  DING_TALK = 'dingtalk',\r\n  BAIDU_APP = 'baiduApp',\r\n  BAIDU = 'baidu',\r\n  UC = 'uc',\r\n  QQ = 'qq',\r\n  QQ_APP = 'qqApp',\r\n  IE = 'ie',\r\n  EDGE = 'edge',\r\n  CHROME = 'chrome',\r\n  FIREFOX = 'firefox',\r\n  OPERA = 'opera',\r\n  SAFARI = 'safari',\r\n  NEW_EDGE = 'newEdge'\r\n}\r\n\r\nfunction getMajorVersion(version: string) {\r\n  if (!is.string(version)) {\r\n    return ''\r\n  }\r\n  return version.split('.').shift() || ''\r\n}\r\n\r\n/**\r\n * UA 检测浏览器\r\n *\r\n * 返回结果如下：\r\n *\r\n * {\r\n *    name: 'ie',     // 判断多个浏览器时，便于用 name 去 switch\r\n *    ie: true,       // 判断某一个浏览器时，便于 if (ie) { ... }\r\n *    version: '8.0'  // 版本号，string 类型\r\n * }\r\n *\r\n */\r\n\r\n// http://www.fynas.com/ua/search\r\nconst list = [\r\n  [ BrowserType.ALIPAY, /alipay/ ],\r\n  [ BrowserType.WECHAT, /micromessenger/ ],\r\n  [ BrowserType.DING_TALK, /dingtalk[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.BAIDU_APP, /baiduboxapp/ ],\r\n  [ BrowserType.BAIDU, /baidubrowser/ ],\r\n  [ BrowserType.BAIDU, /bdbrowser/ ],\r\n  [ BrowserType.UC, /ucbrowser/ ],\r\n  [ BrowserType.UC, /ucweb/ ],\r\n  [ BrowserType.QQ, /qqbrowser/ ],\r\n  [ BrowserType.QQ_APP, /qq/ ],\r\n  [ BrowserType.IE, /iemobile[ \\/]([\\d_.]+)/ ],\r\n  // IE10- 所有版本都有的信息是 MSIE x.0\r\n  [ BrowserType.IE, /msie[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.IE, /trident[ \\/]([\\d_.]+)/, 4 ],\r\n  [ BrowserType.EDGE, /edge[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.NEW_EDGE, /edg[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.CHROME, /chrome[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.FIREFOX, /firefox[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.OPERA, /opera(?:.*version)?[ \\/]([\\d_.]+)/ ],\r\n  [ BrowserType.SAFARI, /version[ \\/]([\\d_.]+) safari/ ],\r\n  // 新版 Safari UA\r\n  [ BrowserType.SAFARI, /version[ \\/]([\\d_.]+) \\S* safari/ ],\r\n  [ BrowserType.SAFARI, /safari/ ]\r\n]\r\n\r\nconst getMajorVersionMap = {\r\n\r\n}\r\n\r\nconst checkVersionMap = {\r\n\r\n}\r\n\r\n/**\r\n * 获取 UA 的结构化信息\r\n *\r\n * @inner\r\n * @param {string} ua\r\n * @return {Object}\r\n */\r\nfunction parseUA(ua: string): Browser {\r\n\r\n  let name: string\r\n  let version: string\r\n\r\n  each(\r\n    list,\r\n    (item) => {\r\n      let match = (item[1] as RegExp).exec(ua)\r\n      if (match) {\r\n        name = item[0] as string\r\n        version = match[1]\r\n        if (version) {\r\n          version = version.replace(/_/g, '.')\r\n          if (item[2]) {\r\n            version = (parseInt(version, 10) + (item[2] as number)) + '.0'\r\n          }\r\n        }\r\n        return false\r\n      }\r\n    }\r\n  )\r\n\r\n  // safari 找不到版本号，直接使用 iOS 版本\r\n  // 一般来说 safari 版本号 >= iOS 版本号\r\n  if (name === BrowserType.SAFARI && !version) {\r\n    version = os.version\r\n  }\r\n\r\n  return {\r\n    name: name || '',\r\n    version: version || '',\r\n    majorVersion: (getMajorVersionMap[name] || getMajorVersion)(version),\r\n    checkVersion: checkVersionMap[name] || checkVersion\r\n  }\r\n\r\n}\r\n\r\nconst browser = parseUA((typeof navigator === 'object' && navigator.userAgent || '').toLowerCase())\r\nif (browser.name) {\r\n  browser[browser.name] = true\r\n}\r\n\r\nexport default browser\r\n","/**\r\n * @file 为了压缩，定义的常量\r\n */\r\n\r\nexport const TRUE = true\r\nexport const FALSE = false\r\nexport const NULL = null\r\nexport const UNDEFINED = void 0\r\nexport const MINUS_ONE = -1\r\n\r\nexport const RAW_TRUE = 'true'\r\nexport const RAW_FALSE = 'false'\r\nexport const RAW_NULL = 'null'\r\nexport const RAW_UNDEFINED = 'undefined'\r\n\r\nexport const RAW_THIS = 'this'\r\nexport const RAW_VALUE = 'value'\r\nexport const RAW_LENGTH = 'length'\r\nexport const RAW_FUNCTION = 'function'\r\nexport const RAW_WILDCARD = '*'\r\nexport const RAW_DOT = '.'\r\nexport const RAW_SLASH = '/'\r\nexport const RAW_TAG = 'tag'\r\n\r\nexport const KEYPATH_PARENT = '..'\r\nexport const KEYPATH_CURRENT = RAW_THIS\r\n\r\n/**\r\n * Single instance for window in browser\r\n */\r\nexport const WINDOW: Window = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\r\n\r\n/**\r\n * Single instance for document in browser\r\n */\r\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\r\n\r\n/**\r\n * Single instance for global in nodejs or browser\r\n */\r\n// @ts-ignore\r\nexport const GLOBAL: Window & NodeJS.Global = typeof globalThis !== RAW_UNDEFINED ? globalThis : (typeof global !== RAW_UNDEFINED ? global : WINDOW)\r\n\r\n/**\r\n * Single instance for self in nodejs or browser\r\n */\r\n// @ts-ignore\r\nexport const SELF: Window & NodeJS.Global = typeof self !== RAW_UNDEFINED ? self : GLOBAL\r\n\r\n/**\r\n * Single instance for noop function\r\n */\r\nexport const EMPTY_FUNCTION = function () {\r\n  /** common */\r\n}\r\n\r\n/**\r\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\r\n */\r\nexport const EMPTY_OBJECT = Object.freeze({})\r\n\r\n/**\r\n * 空数组\r\n */\r\nexport const EMPTY_ARRAY = Object.freeze([])\r\n\r\n/**\r\n * 空字符串\r\n */\r\nexport const EMPTY_STRING = ''\r\n\r\n","/**\r\n * @file 判断\r\n */\r\n\r\nimport * as constant from './constant'\r\n\r\n/**\r\n * Check if value is a function.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function func(value: any): value is Function {\r\n  return typeof value === constant.RAW_FUNCTION\r\n}\r\n\r\n/**\r\n * Check if value is an array.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function array<T>(value: any): value is Array<T> {\r\n  return Array.isArray(value)\r\n}\r\n\r\n/**\r\n * Check if value is an object.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function object(value: any): value is Object {\r\n  // 低版本 IE 会把 null 当作 object\r\n  return value !== constant.NULL && typeof value === 'object'\r\n}\r\n\r\n/**\r\n * Check if value is a string.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function string(value: any): value is string {\r\n  return typeof value === 'string'\r\n}\r\n\r\n/**\r\n * Check if value is a number.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function number(value: any): value is number {\r\n  return typeof value === 'number' && !isNaN(value)\r\n}\r\n\r\n/**\r\n * Check if value is a bigint.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function bigint(value: any): value is bigint {\r\n  return typeof value === 'bigint'\r\n}\r\n\r\n/**\r\n * Check if value is boolean.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function boolean(value: any): value is boolean {\r\n  return typeof value === 'boolean'\r\n}\r\n\r\n/**\r\n * Check if value is numeric.\r\n *\r\n * @param value\r\n * @return\r\n */\r\nexport function numeric(value: any): value is (number | string) {\r\n  return number(value)\r\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(+value))\r\n}\r\n\r\nconst hasOwn = {}.hasOwnProperty\r\n\r\n/**\r\n * 判断是不是普通字面量对象\r\n *\r\n * @param {*} target\r\n * @return {boolean}\r\n */\r\nexport function isPlainObject(target: any): target is Object {\r\n  if (!object(target) || target.nodeType || target === target.window) {\r\n    return false\r\n  }\r\n\r\n  if ( target.constructor\r\n    && !hasOwn.call(target, 'constructor')\r\n    && !hasOwn.call(target.constructor.prototype || {}, 'isPrototypeOf')) {\r\n    return false\r\n  }\r\n\r\n  let key: string\r\n  for ( key in target ) {\r\n    /* empty */\r\n  }\r\n  return key === undefined || hasOwn.call(target, key)\r\n}\r\n\r\n/**\r\n * 判断 value 是否在指定范围中\r\n * \r\n * @param value 待判断值\r\n * @param min 范围左区间\r\n * @param max 范围右区间\r\n */\r\nexport function range(value: number, min: number, max: number): boolean {\r\n  return value >= min && value <= max\r\n}\r\n\r\n/**\r\n * Check if value is ArrayBuffer.\r\n * \r\n * @param value \r\n * @returns \r\n */\r\nexport function arrayBuffer(value: any): value is ArrayBuffer {\r\n  return value instanceof ArrayBuffer\r\n}\r\n","/**\r\n * @file 路径操作\r\n */\r\n\r\nimport * as string from './string'\r\nimport * as constant from './constant'\r\n\r\nconst dotPattern = /\\./g,\r\n\r\n    asteriskPattern = /\\*/g,\r\n\r\n    doubleAsteriskPattern = /\\*\\*/g,\r\n\r\n    splitCache: Record<string, string[]> = {},\r\n\r\n    patternCache: Record<string, RegExp> = {}\r\n\r\n/**\r\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\r\n *\r\n * @param keypath\r\n * @param prefix\r\n * @return\r\n */\r\nexport function match(keypath: string, prefix: string): number {\r\n  if (keypath === prefix) {\r\n    return prefix.length\r\n  }\r\n  prefix += constant.RAW_DOT\r\n  return string.startsWith(keypath, prefix)\r\n    ? prefix.length\r\n    : constant.MINUS_ONE\r\n}\r\n\r\n/**\r\n * 遍历 keypath 的每个部分\r\n *\r\n * @param keypath\r\n * @param callback 返回 false 可中断遍历\r\n */\r\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\r\n  /*\r\n   * 如果 keypath 是 toString 之类的原型字段\r\n   * splitCache[keypath] 会取到原型链上的对象\r\n   */\r\n  const list = splitCache.hasOwnProperty(keypath)\r\n    ? splitCache[keypath]\r\n    : (splitCache[keypath] = keypath.split(constant.RAW_DOT))\r\n\r\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\r\n    if (callback(list[i], i === lastIndex) === constant.FALSE) {\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 路径组合\r\n *\r\n * @param keypath1\r\n * @param keypath2\r\n */\r\nexport function join(keypath1: string, keypath2: string): string {\r\n  return keypath1 && keypath2\r\n    ? keypath1 + constant.RAW_DOT + keypath2\r\n    : keypath1 || keypath2\r\n}\r\n\r\n/**\r\n * 是否是模糊匹配\r\n *\r\n * @param keypath\r\n */\r\nexport function isFuzzy(keypath: string): boolean {\r\n  return string.has(keypath, constant.RAW_WILDCARD)\r\n}\r\n\r\n/**\r\n * 模糊匹配 keypath\r\n *\r\n * @param keypath 待匹配路径\r\n * @param pattern 匹配规则\r\n */\r\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\r\n  let cache = patternCache[pattern]\r\n  if (!cache) {\r\n    const str = pattern\r\n      .replace(dotPattern, '\\\\.')\r\n      .replace(asteriskPattern, '(\\\\w+)')\r\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\r\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\r\n  }\r\n  const result = keypath.match(cache)\r\n  if (result) {\r\n    return result[1]\r\n  }\r\n}\r\n\r\n/**\r\n * 返回 keypath 的根路径\r\n *\r\n * @param keypath\r\n */\r\nexport function rootPath(keypath: string): string {\r\n  return keypath && keypath.split(constant.RAW_DOT).shift()\r\n}\r\n","/**\r\n * @file 日志\r\n */\r\n\r\nimport * as constant from './constant'\r\nimport toString from '../function/toString'\r\n\r\nexport const TRACE = 0\r\nexport const DEBUG = 1\r\nexport const INFO = 2\r\nexport const WARN = 3\r\nexport const ERROR = 4\r\nexport const FATAL = 5\r\n\r\ntype defined<T extends string> = `defined(${T})`\r\n\r\nconst nativeConsole: Console | null = typeof console !== constant.RAW_UNDEFINED ? console : constant.NULL,\r\n\r\n    /**\r\n     * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\r\n     */\r\n    defaultLogLevel = /common/.test(toString(constant.EMPTY_FUNCTION)) ? INFO : WARN,\r\n\r\n    /**\r\n     * 日志打印函数\r\n     */\r\n    printLog = nativeConsole\r\n      ? function (tag: string, msg: string) {\r\n        nativeConsole.log(tag, msg)\r\n      }\r\n      : constant.EMPTY_FUNCTION,\r\n    printWarn = nativeConsole\r\n      ? function (tag: string, msg: string) {\r\n        nativeConsole.warn(tag, msg)\r\n      }\r\n      : constant.EMPTY_FUNCTION,\r\n    printError = nativeConsole\r\n      ? function (tag: string, msg: string) {\r\n        nativeConsole.error(tag, msg)\r\n      }\r\n      : constant.EMPTY_FUNCTION\r\n\r\n/**\r\n * 全局调试开关\r\n */\r\nfunction getLogLevel() {\r\n  if (constant.GLOBAL) {\r\n    const logLevel = constant.SELF['COMMON_LOG_LEVEL']\r\n    if (logLevel >= TRACE && logLevel <= FATAL) {\r\n      return logLevel as number\r\n    }\r\n  }\r\n  return defaultLogLevel\r\n}\r\n\r\n/**\r\n * 设置日志输出级别\r\n * \r\n * @param level 日志输出级别\r\n */\r\nexport function setLevel(level: number): void {\r\n  constant.SELF['COMMON_LOG_LEVEL'] = level\r\n}\r\n\r\n/**\r\n * 打印 trace 日志\r\n *\r\n * @param msg\r\n */\r\nexport function trace(msg: string, file: string, line: number): void\r\nexport function trace<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function trace(msg: string, file?: string, line?: number): void {\r\n  if (getLogLevel() <= TRACE) {\r\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [trace]`, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * 打印 debug 日志\r\n *\r\n * @param msg\r\n */\r\nexport function debug(msg: string, file: string, line: number): void\r\nexport function debug<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function debug(msg: string, file?: string, line?: number): void  {\r\n  if (getLogLevel() <= DEBUG) {\r\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [debug]`, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * 打印 info 日志\r\n *\r\n * @param msg\r\n */\r\nexport function info(msg: string, file: string, line: number): void\r\nexport function info<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function info(msg: string, file?: string, line?: number): void {\r\n  if (getLogLevel() <= INFO) {\r\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [info]`, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * 打印 warn 日志\r\n *\r\n * @param msg\r\n */\r\nexport function warn(msg: string, file: string, line: number): void\r\nexport function warn<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function warn(msg: string, file?: string, line?: number): void {\r\n  if (getLogLevel() <= WARN) {\r\n    printWarn(`[${arguments[1]}][line ${arguments[2]}] [warn]`, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * 打印 error 日志\r\n *\r\n * @param msg\r\n */\r\nexport function error(msg: string, file: string, line: number): void\r\nexport function error<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function error(msg: string, file?: string, line?: number): void {\r\n  if (getLogLevel() <= ERROR) {\r\n    printError(`[${arguments[1]}][line ${arguments[2]}] [error]`, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * 致命错误，中断程序\r\n *\r\n * @param msg\r\n */\r\nexport function fatal(msg: string, file: string, line: number): void\r\nexport function fatal<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\r\nexport function fatal(msg: string, file?: string, line?: number): void {\r\n  if (getLogLevel() <= FATAL) {\r\n    error(msg, file, line)\r\n    throw new Error(`[${arguments[1]}][line ${arguments[2]}] [fatal]: ${msg}`)\r\n  }\r\n}\r\n\r\n/**\r\n * 根据日志等级打印\r\n * \r\n * @param level \r\n * @param msg \r\n * @param tag \r\n */\r\nexport function log(level: number, msg: string, file: string, line: number): void\r\nexport function log<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(level: number, msg: string): void\r\nexport function log(level: number, msg: string, file?: string, line?: number): void {\r\n  if (level === TRACE) {\r\n    trace(msg, arguments[2], arguments[3])\r\n  }\r\n  else if (level === DEBUG) {\r\n    debug(msg, arguments[2], arguments[3])\r\n  }\r\n  else if (level === INFO) {\r\n    info(msg, arguments[2], arguments[3])\r\n  }\r\n  else if (level === WARN) {\r\n    warn(msg, arguments[2], arguments[3])\r\n  }\r\n  else if (level === ERROR) {\r\n    error(msg, arguments[2], arguments[3])\r\n  }\r\n  else if (level === FATAL) {\r\n    fatal(msg, arguments[2], arguments[3])\r\n  }\r\n}\r\n\r\n/**\r\n * @hidden\r\n * 是否上传，全局配置\r\n */\r\nlet enableUpload: boolean = true\r\n\r\n/**\r\n * @hidden\r\n * 日志上传等级，全局配置\r\n */\r\nlet uploadLevel: number = WARN\r\n\r\n/**\r\n * 打开日志上传\r\n * \r\n */\r\nexport function enableUploadLog(): void {\r\n  enableUpload = true\r\n}\r\n\r\n/**\r\n * 关闭日志上传\r\n */\r\nexport function disableUploadLog(): void {\r\n  enableUpload = false\r\n}\r\n\r\n/**\r\n * 是否可以上传日志\r\n */\r\nexport function canUploadLog() {\r\n  return enableUpload\r\n}\r\n\r\n/**\r\n * 设置日志上传等级\r\n */\r\nexport function setUploadLevel(level: number) {\r\n  uploadLevel = level\r\n}\r\n\r\n/**\r\n * 获取日志上传等级\r\n */\r\nexport function getUploadLevel() {\r\n  return uploadLevel\r\n}\r\n","/**\r\n * @file 对象操作\r\n */\r\n\r\nimport * as is from './is'\r\nimport * as array from './array'\r\nimport { Data } from '../types/type'\r\nimport * as constant from './constant'\r\nimport * as keypathUtil from './keypath'\r\nimport isDef from '../function/isDef'\r\n\r\n/**\r\n * 获取对象的 key 的数组\r\n *\r\n * @param object\r\n * @return\r\n */\r\nexport function keys<T>(object: T): string[] {\r\n  if (!isDef(object)) {\r\n    return []\r\n  }\r\n  return Object.keys(object)\r\n}\r\n\r\nfunction sortKeyByAsc(a: string, b: string): number {\r\n  return a.length - b.length\r\n}\r\n\r\nfunction sortKeyByDesc(a: string, b: string): number {\r\n  return b.length - a.length\r\n}\r\n\r\n/**\r\n * 排序对象的 key\r\n *\r\n * @param object\r\n * @param desc 是否逆序，默认从小到大排序\r\n * @return\r\n */\r\nexport function sort(object: Data, desc?: boolean): string[] {\r\n  return keys(object).sort(desc ? sortKeyByDesc : sortKeyByAsc)\r\n}\r\n\r\n/**\r\n * 遍历对象\r\n *\r\n * @param object\r\n * @param callback 返回 false 可停止遍历\r\n */\r\nexport function each<T extends Data>(object: T, callback: (value: T[keyof T], key: string) => boolean | void): void {\r\n  for (let key in object) {\r\n    if (callback(object[key], key) === constant.FALSE) {\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 清空对象所有的键值对\r\n *\r\n * @param object\r\n */\r\nexport function clear(object: Data): void {\r\n  each(\r\n    object,\r\n    function (_, key) {\r\n      delete object[key]\r\n    }\r\n  )\r\n}\r\n\r\nfunction _extend<T, U>(original: T, object: U): T & U {\r\n  if (!is.object(original)) {\r\n    return object as any\r\n  }\r\n  else if (!is.object(object)) {\r\n    return original as any\r\n  }\r\n  each(\r\n    object,\r\n    function (value, key) {\r\n      original[key] = value\r\n    }\r\n  )\r\n  return original as any\r\n}\r\n\r\n/**\r\n * 扩展对象\r\n *\r\n * @return\r\n */\r\nexport function extend<T, U, V>(original: T, object: U, object2?: V): T & U & V {\r\n  return _extend(_extend(original, object), object2)\r\n}\r\n\r\n/**\r\n * 合并对象\r\n *\r\n * @return\r\n */\r\nexport function merge(object1: Data | void, object2: Data | void): Data | void {\r\n  return object1 && object2\r\n    ? extend(extend({}, object1), object2)\r\n    : object1 || object2\r\n}\r\n\r\n/**\r\n * 拷贝对象\r\n *\r\n * @param object\r\n * @param deep 是否需要深拷贝\r\n * @return\r\n */\r\nexport function copy(object: any, deep?: boolean): any {\r\n  let result = object\r\n  if (is.array(object)) {\r\n    if (deep) {\r\n      result = []\r\n      array.each(\r\n        object,\r\n        function (item, index) {\r\n          result[index] = copy(item, deep)\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      result = object.slice()\r\n    }\r\n  }\r\n  else if (is.object(object)) {\r\n    result = {}\r\n    each(\r\n      object,\r\n      function (value, key) {\r\n        result[key] = deep ? copy(value, deep) : value\r\n      }\r\n    )\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * 从对象中查找一个 keypath\r\n *\r\n * 返回值是空时，表示没找到值\r\n *\r\n * @param object\r\n * @param keypath\r\n * @return\r\n */\r\nexport function get(object: any, keypath: string, defaultValue?: any): any {\r\n\r\n  let result: any\r\n\r\n  keypathUtil.each(\r\n    keypath,\r\n    function (key, isLast) {\r\n\r\n      if (object != constant.NULL) {\r\n\r\n        // 先直接取值\r\n        let value = object[key],\r\n\r\n            // 紧接着判断值是否存在\r\n            hasValue = value !== constant.UNDEFINED\r\n\r\n        if (isLast) {\r\n          if (hasValue) {\r\n            result = value\r\n          }\r\n          else {\r\n            result = constant.UNDEFINED\r\n          }\r\n        }\r\n        else {\r\n          object = value\r\n        }\r\n      }\r\n      else {\r\n        result = constant.UNDEFINED\r\n        return constant.FALSE\r\n      }\r\n\r\n    }\r\n  )\r\n\r\n  // 没找到使用默认值\r\n  if (result === constant.UNDEFINED) {\r\n    result = defaultValue\r\n  }\r\n\r\n  return result\r\n\r\n}\r\n\r\n/**\r\n * 为对象设置一个键值对\r\n *\r\n * @param object\r\n * @param keypath\r\n * @param value\r\n * @param autofill 是否自动填充不存在的对象，默认自动填充\r\n */\r\nexport function set(object: Data, keypath: string, value: any, autofill?: boolean): void {\r\n  keypathUtil.each(\r\n    keypath,\r\n    function (key, isLast) {\r\n      if (isLast) {\r\n        object[key] = value\r\n      }\r\n      else if (object[key]) {\r\n        object = object[key]\r\n      }\r\n      else if (autofill) {\r\n        object = object[key] = {}\r\n      }\r\n      else {\r\n        return constant.FALSE\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * 对象是否包含某个 key\r\n *\r\n * @param object\r\n * @param key\r\n * @return\r\n */\r\nexport function has<T extends Data>(object: T, key: keyof T): boolean {\r\n  // 不用 hasOwnProperty，性能差\r\n  return object[key] !== constant.UNDEFINED\r\n}\r\n\r\n/**\r\n * 是否是空对象\r\n *\r\n * @param object\r\n * @return\r\n */\r\nexport function falsy(object: any): boolean {\r\n  return !is.object(object)\r\n    || is.array(object)\r\n    || !keys(object).length\r\n}\r\n\r\n/**\r\n * 获取两个对象的 value 不同的 key\r\n * \r\n * @param obj1 \r\n * @param obj2 \r\n */\r\nexport function diff(obj1: Object, obj2: Object): string[] {\r\n  let differences: string[] = []\r\n\r\n  each(obj1, (value, key) => {\r\n    if (is.array(value) || is.isPlainObject(value)) {\r\n      if (obj2[key] == null || diff(value, obj2[key]).length > 0) {\r\n        differences.push(key)\r\n      }\r\n    }\r\n    else if (value !== obj2[key]) {\r\n      differences.push(key)\r\n    }\r\n  })\r\n\r\n  return differences\r\n}\r\n\r\n/**\r\n * 序列化对象\r\n * \r\n * @param data\r\n */\r\nexport function param(data: Object | Array<any>) {\r\n  let result = []\r\n  const add = (key: string | number, value: any) => {\r\n    value = is.func(value) ? value() : (value == null ? '' : value)\r\n    result[result.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value)\r\n  }\r\n  if (is.array(data) || is.isPlainObject(data)) {\r\n    if (is.array(data)) {\r\n      array.each(data, (value, key) => {\r\n        add(key, value)\r\n      })\r\n    }\r\n    else {\r\n      each(data, (value, key) => {\r\n        add(key, value)\r\n      })\r\n    }\r\n  }\r\n  return result.join('&').replace(/%20/g, '+')\r\n}\r\n\r\n/**\r\n * 将 object 的 value 变成数组\r\n */\r\nexport function toArray(data: Object) {\r\n  const result = []\r\n  each(data, (value) => {\r\n    result.push(value)\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * \r\n * 更新两个同一类型的对象\r\n * \r\n * @param obj1 \r\n * @param obj2 \r\n * @returns \r\n */\r\nexport function update(obj1: Object, obj2: Object) {\r\n  if (!is.object(obj1) || !is.object(obj2)) {\r\n    return\r\n  }\r\n\r\n  each(obj2, (value, key) => {\r\n    if (is.object(value) && is.object(obj1[key])) {\r\n      update(obj1[key], value)\r\n    }\r\n    else {\r\n      obj1[key] = obj2[key]\r\n    }\r\n  })\r\n\r\n  return obj1\r\n}\r\n\r\n/**\r\n * 反转 object 的 key value\r\n */\r\nexport function reverse(obj: Record<number | string | symbol, number | string | symbol>) {\r\n  const result = {}\r\n  each(obj, (value, key) => {\r\n    result[value] = key\r\n  })\r\n  return result\r\n}\r\n","/**\r\n * UA 检测操作系统\r\n *\r\n * 返回结果如下：\r\n *\r\n * {\r\n *    name: 'mac',     // 判断多个浏览器时，便于用 name 去 switch\r\n *    mac: true,       // 判断某一个浏览器时，便于 if (mac) { ... }\r\n *    version: '8.0'   // 版本号，string 类型\r\n * }\r\n *\r\n */\r\n\r\nimport { OS } from '../types/type'\r\nimport { each } from '../util/array'\r\n\r\n/**\r\n * linux 发行版太多了，很多是没有版本信息的，只匹配 Linux 标识\r\n */\r\n\r\n// 优先判断移动版，因为移动版通常会带着 PC 的标识，反过来则不会\r\nconst list = [\r\n  [ 'harmony', /harmonyos ([\\d_.]+)/ ],\r\n  [ 'harmony', /openharmony ([\\d_.]+)/ ],\r\n  [ 'iphone', /iphone os ([\\d_.]+)/ ],\r\n  [ 'ipad', /ipad; cpu os ([\\d_.]+)/ ],\r\n  [ 'itouch', /itouch; cpu os ([\\d_.]+)/ ],\r\n  [ 'android', /android ([\\d_.]+)/ ],\r\n  [ 'wp', /windows phone ([\\d_.]+)/ ],\r\n  [ 'windows', /windows nt ([\\d_.]+)/ ],\r\n  [ 'linux', /linux/ ],\r\n  [ 'mac', /mac os x ([\\d_.]+)/ ]\r\n]\r\n\r\nconst iosMap = {\r\n  iphone: 1,\r\n  ipad: 1,\r\n  itouch: 1\r\n}\r\n\r\n/**\r\n * 获取 UA 的结构化信息\r\n *\r\n * @inner\r\n * @param {string} ua\r\n * @return {Object}\r\n */\r\nfunction parseUA(ua: string): OS {\r\n\r\n  let name: string\r\n  let version: string\r\n\r\n  each(\r\n    list,\r\n    (item) => {\r\n      let match = (item[1] as RegExp).exec(ua)\r\n      if (match) {\r\n        name = item[0] as string\r\n        version = match[1]\r\n        if (version) {\r\n          version = version.replace(/_/g, '.')\r\n        }\r\n        return false\r\n      }\r\n    }\r\n  )\r\n\r\n  return {\r\n    name: name || '',\r\n    version: version || '',\r\n    mobile: ua.indexOf('mobile') > -1\r\n  }\r\n}\r\n\r\nconst os = parseUA((typeof navigator === 'object' && navigator.userAgent || '').toLowerCase())\r\nif (os.name) {\r\n  os[os.name] = true\r\n  if (iosMap[os.name]) {\r\n    os.ios = true\r\n  }\r\n}\r\n\r\nexport default os\r\n","/**\r\n * @file string 操作\r\n */\r\n\r\nimport * as is from './is'\r\nimport * as constant from './constant'\r\nimport toString from '../function/toString'\r\n\r\nconst capitalizePattern = /^[a-z]/, capitalizeCache: Record<string, string> = {}\r\n\r\n/**\r\n * 首字母大写\r\n *\r\n * @param str\r\n * @return\r\n */\r\nexport function capitalize(str: string): string {\r\n  if (!capitalizeCache[str]) {\r\n    capitalizeCache[str] = str.replace(\r\n      capitalizePattern,\r\n      upper\r\n    )\r\n  }\r\n  return capitalizeCache[str]\r\n}\r\n\r\n/**\r\n * 清除两侧空白符\r\n *\r\n * @param str\r\n * @return 清除两侧空白符的字符串\r\n */\r\nexport function trim(str: any): string {\r\n  return falsy(str)\r\n    ? constant.EMPTY_STRING\r\n    : str.trim()\r\n}\r\n\r\n/**\r\n * 截取字符串\r\n *\r\n * @param str\r\n * @param start\r\n * @param end\r\n * @return\r\n */\r\nexport function slice(str: string, start: number, end?: number): string {\r\n  return is.number(end)\r\n    ? start === end\r\n      ? constant.EMPTY_STRING\r\n      : str.slice(start, end)\r\n    : str.slice(start)\r\n}\r\n\r\n/**\r\n * 获取子串的起始位置\r\n *\r\n * @param str\r\n * @param part\r\n * @param start\r\n * @return\r\n */\r\nexport function indexOf(str: string, part: string, start?: number): number {\r\n  return str.indexOf(part, start !== constant.UNDEFINED ? start : 0)\r\n}\r\n\r\n/**\r\n * 获取子串的起始位置\r\n *\r\n * @param str\r\n * @param part\r\n * @param end\r\n * @return\r\n */\r\nexport function lastIndexOf(str: string, part: string, end?: number): number {\r\n  return str.lastIndexOf(part, end !== constant.UNDEFINED ? end : str.length)\r\n}\r\n\r\n/**\r\n * str 是否以 part 开头\r\n *\r\n * @param str\r\n * @param part\r\n * @return\r\n */\r\nexport function startsWith(str: string, part: string): boolean {\r\n  return indexOf(str, part) === 0\r\n}\r\n\r\n/**\r\n * str 是否以 part 结束\r\n *\r\n * @param str\r\n * @param part\r\n * @return\r\n */\r\nexport function endsWith(str: string, part: string): boolean {\r\n  const offset = str.length - part.length\r\n  return offset >= 0 && lastIndexOf(str, part) === offset\r\n}\r\n\r\n/**\r\n * 获取某个位置的字符\r\n */\r\nexport function charAt(str: string, index?: number): string {\r\n  return str.charAt(index || 0)\r\n}\r\n\r\n/**\r\n * 获取某个位置的字符编码\r\n */\r\nexport function codeAt(str: string, index?: number): number {\r\n  return str.charCodeAt(index || 0)\r\n}\r\n\r\n/**\r\n * 大写格式\r\n */\r\nexport function upper(str: string): string {\r\n  return str.toUpperCase()\r\n}\r\n\r\n/**\r\n * 小写格式\r\n */\r\nexport function lower(str: string): string {\r\n  return str.toLowerCase()\r\n}\r\n\r\n/**\r\n * str 是否包含 part\r\n *\r\n * @param str\r\n * @param part\r\n * @return 是否包含\r\n */\r\nexport function has(str: string, part: string): boolean {\r\n  return indexOf(str, part) >= 0\r\n}\r\n\r\n/**\r\n * 判断长度大于 0 的字符串\r\n *\r\n * @param str\r\n * @return\r\n */\r\nexport function falsy(str: any): boolean {\r\n  return !is.string(str) || !str.length\r\n}\r\n\r\n/**\r\n * 格式化输出\r\n * \r\n * @param string \r\n * @param args \r\n * @returns \r\n */\r\nexport function format(string: string, ...args: any[]) {\r\n  let i = 0\r\n  const length = args.length\r\n  return string.replace(/(%[sdvx%])|(%0(\\d)+[dx])/g, (str) => {\r\n    if (i >= length) {\r\n      // missing argument\r\n      return str\r\n    }\r\n\r\n    const arg = args[i++]\r\n\r\n    if (/%0(\\d)+[dx]/g.test(str)) {\r\n      const length = parseInt(str.substring(1))\r\n      let result = str[str.length - 1] === 'd' ? toString(Number(arg)) : Number(arg).toString(16)\r\n      if (length > result.length) {\r\n        result = new Array(length - result.length).fill('0').join('') + result\r\n      }\r\n      return result\r\n    }\r\n\r\n    switch (str) {\r\n      case '%%':\r\n        return '%'\r\n      case '%s':\r\n        return String(arg)\r\n      case '%d':\r\n        return toString(Number(arg))\r\n      case '%v':\r\n        return ''\r\n      case '%x':\r\n        return Number(arg).toString(16)\r\n    }\r\n    return str\r\n  })\r\n}\r\n","import isWorker from '../function/isWorker'\r\nimport browser from './browser'\r\nimport os from './os'\r\n\r\n\r\nfunction supportedFeatures() {\r\n\r\n  let blob = typeof Blob === 'function'\r\n  let wasm = typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function'\r\n  let fetchSupported = typeof fetch === 'function'\r\n  let documentSupport = typeof document === 'object'\r\n\r\n  let canvas = documentSupport && document.createElement('canvas')\r\n  let webgl = canvas && !!canvas.getContext('webgl')\r\n  let offscreenCanvas = typeof OffscreenCanvas === 'function'\r\n\r\n  let worker = typeof Worker === 'function'\r\n\r\n  let arrayBuffer = typeof ArrayBuffer === 'function'\r\n\r\n  let atomics = typeof Atomics === 'object' && Atomics[Symbol.toStringTag] === 'Atomics'\r\n\r\n  let audioContext = typeof AudioContext === 'function' || typeof webkitAudioContext === 'function'\r\n  let audioWorklet = typeof AudioWorklet === 'function'\r\n\r\n  let videoDecoder = typeof VideoDecoder === 'function'\r\n  let videoEncoder = typeof VideoEncoder === 'function'\r\n\r\n  let audioDecoder = typeof AudioDecoder === 'function'\r\n  let audioEncoder = typeof AudioEncoder === 'function'\r\n\r\n  let shareArrayBuffer = typeof SharedArrayBuffer === 'function'\r\n\r\n  let mse = typeof MediaSource == 'function' || typeof ManagedMediaSource === 'function'\r\n\r\n  let proxy = typeof Proxy === 'function'\r\n\r\n  let thread = (worker || isWorker()) && shareArrayBuffer && atomics && proxy\r\n\r\n  let jspi = typeof WebAssembly.Suspending === 'function' && typeof WebAssembly.promising === 'function'\r\n\r\n  // safari 低于 11 不支持\r\n  if (browser.safari && !browser.checkVersion(browser.majorVersion, '11', true)\r\n    || os.ios && !browser.checkVersion(os.version, '11', true)\r\n  ) {\r\n    wasm = false\r\n  }\r\n\r\n  // chrome 94 以上才支持 webcodec\r\n  if (browser.chrome && !browser.checkVersion(browser.majorVersion, '94', true)) {\r\n    videoDecoder = false\r\n    audioDecoder = false\r\n  }\r\n\r\n  // safari 17 之前渲染 VideoFrame 有问题\r\n  if (browser.safari && !browser.checkVersion(browser.majorVersion, '17', true)\r\n    || os.ios && !browser.checkVersion(os.version, '17', true)\r\n  ) {\r\n    videoDecoder = false\r\n  }\r\n\r\n  let webgpu = typeof navigator === 'object' && typeof navigator.gpu === 'object'\r\n\r\n  let workerMSE = typeof MediaSourceHandle === 'function'\r\n\r\n  let webAssemblyGlobal = wasm && typeof WebAssembly.Global === 'function'\r\n  let trackGenerator = typeof MediaStreamTrackGenerator === 'function'\r\n\r\n  return {\r\n    browser,\r\n    blob,\r\n    wasm,\r\n    fetch: fetchSupported,\r\n    webgl,\r\n    worker,\r\n    mse,\r\n    arrayBuffer,\r\n    audioContext,\r\n    audioWorklet,\r\n    videoDecoder,\r\n    videoEncoder,\r\n    audioDecoder,\r\n    audioEncoder,\r\n    atomics,\r\n    shareArrayBuffer,\r\n    thread,\r\n    webgpu,\r\n    offscreenCanvas,\r\n    workerMSE,\r\n    webAssemblyGlobal,\r\n    jspi,\r\n    proxy,\r\n    simd: (browser.chrome || browser.newEdge) && browser.checkVersion(browser.majorVersion, '91', true)\r\n      || browser.firefox && browser.checkVersion(browser.majorVersion, '89', true)\r\n      || browser.safari && browser.checkVersion(browser.version, '16.4', true)\r\n      || os.ios && browser.checkVersion(os.version, '16.4', true),\r\n    wasmPlayerSupported: fetchSupported && wasm && webgl && audioContext && arrayBuffer && webAssemblyGlobal,\r\n    wasmBaseSupported: wasm && webAssemblyGlobal && arrayBuffer,\r\n    trackGenerator\r\n  }\r\n}\r\n\r\nconst support = supportedFeatures()\r\n\r\nexport default support\r\n","const encoder = typeof TextEncoder === 'function' ? new TextEncoder() : null\r\nconst decoder = typeof TextDecoder === 'function' ? new TextDecoder() : null\r\n\r\nexport function encode(data: string) {\r\n  if (encoder) {\r\n    return encoder.encode(data)\r\n  }\r\n\r\n  const array = []\r\n\r\n  for (let i = 0; i < data.length; ++i) {\r\n    let u = data.charCodeAt(i)\r\n    if (u >= 55296 && u <= 57343) {\r\n      let u1 = data.charCodeAt(++i)\r\n      u = 65536 + ((u & 1023) << 10) | u1 & 1023\r\n    }\r\n    if (u <= 127) {\r\n      array.push(u)\r\n    }\r\n    else if (u <= 2047) {\r\n      array.push(192 | u >> 6)\r\n      array.push(128 | u & 63)\r\n    }\r\n    else if (u <= 65535) {\r\n      array.push(224 | u >> 12)\r\n      array.push(128 | u >> 6 & 63)\r\n      array.push(128 | u & 63)\r\n    }\r\n    else {\r\n      array.push(240 | u >> 18)\r\n      array.push(128 | u >> 12 & 63)\r\n      array.push(128 | u >> 6 & 63)\r\n      array.push(128 | u & 63)\r\n    }\r\n  }\r\n  return new Uint8Array(array)\r\n}\r\n\r\nfunction decodeJS(data: Uint8Array | number[]) {\r\n  let result = ''\r\n\r\n  for (let i = 0; i < data.length;) {\r\n    let u0 = data[i++ >>> 0]\r\n    if (!(u0 & 128)) {\r\n      result += String.fromCharCode(u0)\r\n      continue\r\n    }\r\n    let u1 = data[i++ >>> 0] & 63\r\n    if ((u0 & 224) == 192) {\r\n      result += String.fromCharCode((u0 & 31) << 6 | u1)\r\n      continue\r\n    }\r\n    let u2 = data[i++ >>> 0] & 63\r\n    if ((u0 & 240) == 224) {\r\n      u0 = (u0 & 15) << 12 | u1 << 6 | u2\r\n    }\r\n    else {\r\n      u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | data[i++ >>> 0] & 63\r\n    }\r\n    if (u0 < 65536) {\r\n      result += String.fromCharCode(u0)\r\n    }\r\n    else {\r\n      let ch = u0 - 65536\r\n      result += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport function decode(data: Uint8Array | number[]) {\r\n  if (data instanceof Uint8Array && decoder && !(typeof SharedArrayBuffer === 'function' && data.buffer instanceof SharedArrayBuffer)) {\r\n    try {\r\n      // chrome 偶现 data.buffer instanceof SharedArrayBuffer 返回 false 但其实是 SharedArrayBuffer 的情况\r\n      return decoder.decode(data)\r\n    }\r\n    catch (error) {\r\n      return decodeJS(data)\r\n    }\r\n  }\r\n  return decodeJS(data)\r\n}\r\n","/**\r\n * @file url 操作\r\n */\r\n\r\nimport * as is from '../util/is'\r\nimport split from '../function/split'\r\nimport * as array from '../util/array'\r\nimport * as object from '../util/object'\r\n\r\n/**\r\n * 把查询字符串解析成对象\r\n * @param queryStr \r\n */\r\nexport function parseQuery(queryStr: string, separator: string = '&'): Record<string, string> {\r\n  const result = {}\r\n  if (is.string(queryStr) && queryStr.indexOf('=') >= 0) {\r\n    let firstChar = queryStr.charAt(0)\r\n    let startIndex = (firstChar === '?' || firstChar === '#') ? 1 : 0\r\n    if (startIndex > 0) {\r\n      queryStr = queryStr.substr(startIndex)\r\n    }\r\n    array.each(split(queryStr, separator), (item) => {\r\n      let terms = item.split('=')\r\n      if (terms.length === 2) {\r\n        let key = terms[0]?.trim()\r\n        if (key) {\r\n          result[key] = decodeURIComponent(terms[1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * 把对象序列化成查询字符串\r\n *\r\n * @param query\r\n * @return\r\n */\r\nexport function stringifyQuery(query: Record<string, string | number | boolean>, separator: string = '&'): string {\r\n  const result = []\r\n  if (is.isPlainObject(query)) {\r\n    object.each<Record<string, string | number | boolean>>(query, (value, key) => {\r\n      result.push(key + '=' + encodeURIComponent(is.object(value) ? JSON.stringify(value) : value))\r\n    })\r\n  }\r\n  return result.join(separator)\r\n}\r\n\r\n/**\r\n * 解析 url，返回格式遵循 location 属性的命名\r\n * \r\n * @param url 如果不传，使用当前地址\r\n */\r\nexport function parse(url: string) {\r\n\r\n  const source = url\r\n\r\n  const key = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor']\r\n  const parser = /^(?:(?![^:@\\/]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@\\/]*)(?::([^:@\\/]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\r\n  const ipv6Reg = /:\\/\\/([^\\/@]*@?)\\[(\\S+)\\]/\r\n  let ipv6Host = ''\r\n  if (ipv6Reg.test(url)) {\r\n    url = url.replace(ipv6Reg, (s0, s1, s2) => {\r\n      ipv6Host = s2\r\n      return `://${s1 || ''}a.b`\r\n    })\r\n  }\r\n\r\n  const result: Partial<any> = {}\r\n  const m = parser.exec(url)\r\n  let i = 14\r\n\r\n  while (i--) {\r\n    result[key[i]] = m[i] ?? ''\r\n  }\r\n  if (ipv6Host) {\r\n    result.host = ipv6Host\r\n    result.source = source\r\n    result.authority = ipv6Host + (result.port ? (':' + result.port) : '')\r\n  }\r\n  return {\r\n    protocol: result.protocol as string,\r\n    file: result.file as string,\r\n    host: result.host as string,\r\n    port: result.port as string,\r\n    user: result.user as string,\r\n    password: result.password as string,\r\n    origin: `${result.protocol}://${result.authority}`,\r\n    pathname: result.path as string,\r\n    search: `?${result.query}`,\r\n    hash: result.anchor ? `#${result.anchor}` : ''\r\n  }\r\n}\r\n\r\n/**\r\n * 把参数混入一个 url\r\n * \r\n * @param query \r\n * @param url \r\n * @param applyHash \r\n */\r\nexport function mixin(query: Record<string, any>, applyHash: boolean, url?: string): string {\r\n  if (url == null) {\r\n    url = document.URL\r\n  }\r\n\r\n  let scheme = parse(url)\r\n  let params = parseQuery(applyHash ? scheme.hash : scheme.search)\r\n  object.extend(params, query)\r\n  let paramStr = object.param(params)\r\n\r\n  url = scheme.origin + scheme.pathname\r\n\r\n  if (applyHash) {\r\n    url += scheme.search\r\n  }\r\n  else if (paramStr) {\r\n    url += '?' + paramStr\r\n  }\r\n\r\n  if (!applyHash) {\r\n    url += scheme.hash\r\n  }\r\n  else if (paramStr) {\r\n    url += '#' + paramStr\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nconst SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g\r\nconst SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g\r\nconst FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/\r\nconst URL_REGEX = /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/\r\n\r\nfunction buildURLFromParts(parts: {\r\n  scheme: string\r\n  netLoc: string\r\n  path: string\r\n  params: string\r\n  query: string\r\n  fragment: string\r\n}) {\r\n  return (\r\n    parts.scheme +\r\n    parts.netLoc +\r\n    parts.path +\r\n    parts.params +\r\n    parts.query +\r\n    parts.fragment\r\n  )\r\n}\r\n\r\nfunction parseURL(url: string) {\r\n  const parts = URL_REGEX.exec(url)\r\n  if (!parts) {\r\n    return null\r\n  }\r\n  return {\r\n    scheme: parts[1] || '',\r\n    netLoc: parts[2] || '',\r\n    path: parts[3] || '',\r\n    params: parts[4] || '',\r\n    query: parts[5] || '',\r\n    fragment: parts[6] || ''\r\n  }\r\n}\r\n\r\nexport function normalizePath(path: string) {\r\n  // The following operations are\r\n  // then applied, in order, to the new path:\r\n  // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n  // segment, are removed.\r\n  // 6b) If the path ends with \".\" as a complete path segment,\r\n  // that \".\" is removed.\r\n  path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '')\r\n  // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n  // complete path segment not equal to \"..\", are removed.\r\n  // Removal of these path segments is performed iteratively,\r\n  // removing the leftmost matching pattern on each iteration,\r\n  // until no matching pattern remains.\r\n  // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n  // complete path segment not equal to \"..\", that\r\n  // \"<segment>/..\" is removed.\r\n  while (\r\n    path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\r\n  ) {}\r\n  return path.split('').reverse().join('')\r\n}\r\n\r\n/**\r\n * from https://github.com/tjenkinson/url-toolkit\r\n * \r\n */\r\nexport function buildAbsoluteURL(baseURL: string, relativeURL: string, opts?: {\r\n  alwaysNormalize?: boolean\r\n}) {\r\n  opts = opts || {}\r\n  // remove any remaining space and CRLF\r\n  baseURL = baseURL.trim()\r\n  relativeURL = relativeURL.trim()\r\n  if (!relativeURL) {\r\n    // 2a) If the embedded URL is entirely empty, it inherits the\r\n    // entire base URL (i.e., is set equal to the base URL)\r\n    // and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return baseURL\r\n    }\r\n    let basePartsForNormalize = parseURL(baseURL)\r\n    if (!basePartsForNormalize) {\r\n      throw new Error('Error trying to parse base URL.')\r\n    }\r\n    basePartsForNormalize.path = normalizePath(basePartsForNormalize.path)\r\n    return buildURLFromParts(basePartsForNormalize)\r\n  }\r\n  let relativeParts = parseURL(relativeURL)\r\n  if (!relativeParts) {\r\n    throw new Error('Error trying to parse relative URL.')\r\n  }\r\n  if (relativeParts.scheme) {\r\n    // 2b) If the embedded URL starts with a scheme name, it is\r\n    // interpreted as an absolute URL and we are done.\r\n    if (!opts.alwaysNormalize) {\r\n      return relativeURL\r\n    }\r\n    relativeParts.path = normalizePath(relativeParts.path)\r\n    return buildURLFromParts(relativeParts)\r\n  }\r\n  let baseParts = parseURL(baseURL)\r\n  if (!baseParts) {\r\n    throw new Error('Error trying to parse base URL.')\r\n  }\r\n  if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n    // If netLoc missing and path doesn't start with '/', assume everything before the first '/' is the netLoc\r\n    // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n    let pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path)\r\n    baseParts.netLoc = pathParts[1]\r\n    baseParts.path = pathParts[2]\r\n  }\r\n  if (baseParts.netLoc && !baseParts.path) {\r\n    baseParts.path = '/'\r\n  }\r\n  const builtParts = {\r\n    // 2c) Otherwise, the embedded URL inherits the scheme of\r\n    // the base URL.\r\n    scheme: baseParts.scheme,\r\n    netLoc: relativeParts.netLoc,\r\n    path: null,\r\n    params: relativeParts.params,\r\n    query: relativeParts.query,\r\n    fragment: relativeParts.fragment,\r\n  }\r\n  if (!relativeParts.netLoc) {\r\n    // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n    // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n    // (if any) of the base URL.\r\n    builtParts.netLoc = baseParts.netLoc\r\n    // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n    // path is not relative and we skip to Step 7.\r\n    if (relativeParts.path[0] !== '/') {\r\n      if (!relativeParts.path) {\r\n        // 5) If the embedded URL path is empty (and not preceded by a\r\n        // slash), then the embedded URL inherits the base URL path\r\n        builtParts.path = baseParts.path\r\n        // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n        // step 7; otherwise, it inherits the <params> of the base\r\n        // URL (if any) and\r\n        if (!relativeParts.params) {\r\n          builtParts.params = baseParts.params\r\n          // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n          // step 7; otherwise, it inherits the <query> of the base\r\n          // URL (if any) and we skip to step 7.\r\n          if (!relativeParts.query) {\r\n            builtParts.query = baseParts.query\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // 6) The last segment of the base URL's path (anything\r\n        // following the rightmost slash \"/\", or the entire path if no\r\n        // slash is present) is removed and the embedded URL's path is\r\n        // appended in its place.\r\n        let baseURLPath = baseParts.path\r\n        let newPath =\r\n          baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\r\n          relativeParts.path\r\n        builtParts.path = normalizePath(newPath)\r\n      }\r\n    }\r\n  }\r\n  if (builtParts.path === null) {\r\n    builtParts.path = opts.alwaysNormalize\r\n      ? normalizePath(relativeParts.path)\r\n      : relativeParts.path\r\n  }\r\n  return buildURLFromParts(builtParts)\r\n}\r\n","import BufferWriter from '../io/BufferWriter'\r\nimport BufferReader from '../io/BufferReader'\r\nimport { BytesReaderSync, BytesReader, BytesWriter, BytesWriterSync } from '../io/interface'\r\nimport browser from './browser'\r\nimport os from './os'\r\n\r\nexport const enum SectionId {\r\n  Custom,\r\n  Type,\r\n  Import,\r\n  Function,\r\n  Table,\r\n  Memory,\r\n  Global,\r\n  Export,\r\n  Start,\r\n  Element,\r\n  Code,\r\n  Data\r\n}\r\n\r\nexport const enum ExternalKind {\r\n  Function,\r\n  Table,\r\n  Memory,\r\n  Global\r\n}\r\n\r\nexport const enum DYlinkType {\r\n  MEMORY = 1\r\n}\r\n\r\nexport function readUleb128(reader: BytesReaderSync) {\r\n  let result = 0\r\n  let shift = 0\r\n  while (true) {\r\n    const byte = reader.readUint8()\r\n\r\n    result |= (byte & 0x7f) << shift\r\n    shift += 7\r\n\r\n    if (!(byte & 0x80)) {\r\n      break\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport async function readUleb128Async(reader: BytesReader) {\r\n  let result = 0\r\n  let shift = 0\r\n  while (true) {\r\n    const byte = await reader.readUint8()\r\n\r\n    result |= (byte & 0x7f) << shift\r\n    shift += 7\r\n\r\n    if (!(byte & 0x80)) {\r\n      break\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport function readSleb128(reader: BytesReaderSync) {\r\n  let result = 0\r\n  let shift = 0\r\n  let byte: number\r\n  while (true) {\r\n    byte = reader.readUint8()\r\n\r\n    result |= (byte & 0x7f) << shift\r\n    shift += 7\r\n\r\n    if (!(byte & 0x80)) {\r\n      break\r\n    }\r\n  }\r\n\r\n  // 符号扩展，将最高有效位的符号位扩展到高位\r\n  if (byte & 0x40) {\r\n    // 如果最高有效位是 1（负数），则将高位全部置为 1\r\n    result |= (~0 << shift)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport async function readSleb128Async(reader: BytesReader) {\r\n  let result = 0\r\n  let shift = 0\r\n  let byte: number\r\n  while (true) {\r\n    byte = await reader.readUint8()\r\n\r\n    result |= (byte & 0x7f) << shift\r\n    shift += 7\r\n\r\n    if (!(byte & 0x80)) {\r\n      break\r\n    }\r\n  }\r\n\r\n  // 符号扩展，将最高有效位的符号位扩展到高位\r\n  if (byte & 0x40) {\r\n    // 如果最高有效位是 1（负数），则将高位全部置为 1\r\n    result |= (~0 << shift)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function writeSleb128(writer: BytesWriterSync, value: number) {\r\n  let more = true\r\n  while (more) {\r\n    let byte = value & 0x7f\r\n    value >>= 7\r\n    // 如果还有未编码的位，设置高位为 1\r\n    if ((value === 0 && (byte & 0x40) === 0) || (value === -1 && (byte & 0x40) !== 0)) {\r\n      more = false\r\n    }\r\n    else {\r\n      byte |= 0x80\r\n    }\r\n    writer.writeUint8(byte)\r\n  }\r\n}\r\n\r\nexport async function writeSleb128Async(writer: BytesWriter, value: number) {\r\n  let more = true\r\n  while (more) {\r\n    let byte = value & 0x7f\r\n    value >>= 7\r\n    // 如果还有未编码的位，设置高位为 1\r\n    if ((value === 0 && (byte & 0x40) === 0) || (value === -1 && (byte & 0x40) !== 0)) {\r\n      more = false\r\n    }\r\n    else {\r\n      byte |= 0x80\r\n    }\r\n    await writer.writeUint8(byte)\r\n  }\r\n}\r\n\r\nexport function writeUleb128(writer: BytesWriterSync, value: number) {\r\n  do {\r\n    let byte = value & 0x7f\r\n    value >>= 7\r\n    // 如果还有未编码的位，设置高位为 1\r\n    if (value !== 0) {\r\n      byte |= 0x80\r\n    }\r\n    writer.writeUint8(byte)\r\n  } while (value !== 0)\r\n}\r\n\r\nexport async function writeUleb128Async(writer: BytesWriter, value: number) {\r\n  do {\r\n    let byte = value & 0x7f\r\n    value >>= 7\r\n    // 如果还有未编码的位，设置高位为 1\r\n    if (value !== 0) {\r\n      byte |= 0x80\r\n    }\r\n    await writer.writeUint8(byte)\r\n  } while (value !== 0)\r\n}\r\n\r\nexport function setMemoryMeta(wasm: Uint8Array, options: {\r\n  shared: boolean\r\n  maximum?: number\r\n  initial?: number\r\n}) {\r\n  const reader = new BufferReader(wasm, true)\r\n  const writer = new BufferWriter(new Uint8Array(wasm.length + 100), true)\r\n\r\n  writer.writeBuffer(reader.readBuffer(8))\r\n\r\n  while (reader.remainingSize()) {\r\n    const sectionId = reader.readUint8()\r\n    writer.writeUint8(sectionId)\r\n\r\n    const size = readUleb128(reader)\r\n\r\n    if (sectionId === SectionId.Import) {\r\n\r\n      const importWriter = new BufferWriter(new Uint8Array(size + 100))\r\n\r\n      let count = readUleb128(reader)\r\n      writeUleb128(importWriter, count)\r\n\r\n      while (count--) {\r\n        const moduleLen = readUleb128(reader)\r\n        writeUleb128(importWriter, moduleLen)\r\n        importWriter.writeBuffer(reader.readBuffer(moduleLen))\r\n        const fieldLen = readUleb128(reader)\r\n        writeUleb128(importWriter, fieldLen)\r\n        importWriter.writeBuffer(reader.readBuffer(fieldLen))\r\n        const externalKind = reader.readUint8()\r\n        importWriter.writeUint8(externalKind)\r\n        switch (externalKind) {\r\n          case ExternalKind.Function: {\r\n            // type index of the function signature\r\n            writeUleb128(importWriter, readUleb128(reader))\r\n            break\r\n          }\r\n          case ExternalKind.Global: {\r\n            // content_type\r\n            writeSleb128(importWriter, readSleb128(reader))\r\n            // mutability\r\n            writeUleb128(importWriter, readUleb128(reader))\r\n            break\r\n          }\r\n          case ExternalKind.Memory: {\r\n            let flags = readUleb128(reader)\r\n            if (options.shared) {\r\n              writeUleb128(importWriter, flags | 2)\r\n            }\r\n            else {\r\n              writeUleb128(importWriter, flags & ~2)\r\n            }\r\n            const initial = readUleb128(reader)\r\n            writeUleb128(importWriter, options.initial || initial)\r\n            if (flags & 0x01) {\r\n              let maximum = readUleb128(reader)\r\n              if (options.maximum && (!(os.ios && !browser.checkVersion(os.version, '17', true)) || !options.shared)) {\r\n                maximum = options.maximum\r\n              }\r\n              writeUleb128(importWriter, maximum)\r\n            }\r\n            break\r\n          }\r\n          case ExternalKind.Table: {\r\n            // elem_type\r\n            writeSleb128(importWriter, readSleb128(reader))\r\n            const flags = readUleb128(reader)\r\n            writeUleb128(importWriter, flags)\r\n            writeUleb128(importWriter, readUleb128(reader))\r\n            if (flags & 0x01) {\r\n              // maximum\r\n              writeUleb128(importWriter, readUleb128(reader))\r\n            }\r\n            break\r\n          }\r\n        }\r\n      }\r\n      const buffer = importWriter.getWroteBuffer()\r\n      writeUleb128(writer, buffer.length)\r\n      writer.writeBuffer(buffer)\r\n    }\r\n    else {\r\n      writeUleb128(writer, size)\r\n      writer.writeBuffer(reader.readBuffer(size))\r\n    }\r\n  }\r\n  return writer.getWroteBuffer()\r\n}\r\n","/*\r\n * libmedia video scaler\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport { AVPixelFormat } from 'avutil/pixfmt'\r\nimport AVFrame from 'avutil/struct/avframe'\r\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\r\nimport WebAssemblyRunner from 'cheap/webassembly/WebAssemblyRunner'\r\nimport * as logger from 'common/util/logger'\r\nimport * as errorType from 'avutil/error'\r\n\r\nexport const enum ScaleAlgorithm {\r\n  FAST_BILINEAR = 1,\r\n  BILINEAR = 2,\r\n  BICUBIC = 4,\r\n  X = 8,\r\n  POINT = 0x10,\r\n  AREA = 0x20,\r\n  BICUBLIN = 0x40,\r\n  GAUSS = 0x80,\r\n  SINC = 0x100,\r\n  LANCZOS = 0x200,\r\n  SPLINE = 0x400\r\n}\r\n\r\nexport interface ScaleParameters {\r\n  width: int32\r\n  height: int32\r\n  format: AVPixelFormat\r\n}\r\n\r\nexport type VideoScalerOptions = {\r\n  resource: WebAssemblyResource\r\n}\r\n\r\nexport default class VideoScaler {\r\n\r\n  private scaler: WebAssemblyRunner\r\n\r\n  private options: VideoScalerOptions\r\n\r\n  private inputParameters: ScaleParameters | undefined\r\n  private outputParameters: ScaleParameters | undefined\r\n\r\n  constructor(options: VideoScalerOptions) {\r\n    this.options = options\r\n    this.scaler = new WebAssemblyRunner(this.options.resource)\r\n  }\r\n\r\n  public async open(input: ScaleParameters, output: ScaleParameters, algorithm: ScaleAlgorithm = ScaleAlgorithm.BILINEAR): Promise<int32> {\r\n\r\n    this.inputParameters = input\r\n    this.outputParameters = output\r\n\r\n    await this.scaler.run()\r\n\r\n    this.scaler.invoke(\r\n      'scale_set_input_parameters',\r\n      input.width,\r\n      input.height,\r\n      input.format\r\n    )\r\n    this.scaler.invoke(\r\n      'scale_set_output_parameters',\r\n      output.width,\r\n      output.height,\r\n      output.format\r\n    )\r\n\r\n    let ret = this.scaler.invoke<int32>('scale_init', algorithm)\r\n    if (ret < 0) {\r\n      logger.error(`open scaler failed, ret: ${ret}`)\r\n      return errorType.INVALID_PARAMETERS\r\n    }\r\n    return 0\r\n  }\r\n\r\n  public scale(src: pointer<AVFrame>, dst: pointer<AVFrame>) {\r\n    return this.scaler.invoke<int32>('scale_process', src, dst)\r\n  }\r\n\r\n  public close() {\r\n    this.scaler.invoke('scale_destroy')\r\n    this.scaler.destroy()\r\n  }\r\n\r\n  public getInputScaleParameters() {\r\n    return this.inputParameters\r\n  }\r\n\r\n  public getOutputScaleParameters() {\r\n    return this.outputParameters\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".avtranscoder.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"AVTranscoder:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkAVTranscoder\"] = self[\"webpackChunkAVTranscoder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// module factories are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./src/avtranscoder/AVTranscoder.ts\");\n",""],"names":[],"sourceRoot":""}