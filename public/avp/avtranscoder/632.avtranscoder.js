"use strict";(self.webpackChunkAVTranscoder=self.webpackChunkAVTranscoder||[]).push([[632],{5632:(e,t,i)=>{i.r(t),i.d(t,{IVFHeader:()=>c,default:()=>u});var r=i(134),s=i(63939),h=(i(9599),i(51597)),o=i(4624),n=i(44328),a=i(71517);const d="src\\avformat\\formats\\OIvfFormat.ts";class c{constructor(){(0,r.A)(this,"version",void 0),(0,r.A)(this,"length",void 0),(0,r.A)(this,"codec",void 0),(0,r.A)(this,"width",void 0),(0,r.A)(this,"height",void 0),(0,r.A)(this,"denominator",void 0),(0,r.A)(this,"numerator",void 0),(0,r.A)(this,"framesCount",void 0),this.version=0,this.length=32,this.codec="VP80",this.width=0,this.height=0,this.framesCount=0,this.denominator=1,this.numerator=0}}class u extends h.A{constructor(){super(),(0,r.A)(this,"type",5),(0,r.A)(this,"header",void 0),this.header=new c}init(e){e.ioWriter.setEndian(!1);const t=e.getStreamByMediaType(0);return t&&(this.header.width=t.codecpar.width,this.header.height=t.codecpar.height,this.header.numerator=t.timeBase.num,this.header.denominator=t.timeBase.den),0}writeHeader(e){return e.ioWriter.writeString("DKIF"),e.ioWriter.writeUint16(this.header.version),e.ioWriter.writeUint16(32),e.ioWriter.writeString(this.header.codec),e.ioWriter.writeUint16(this.header.width),e.ioWriter.writeUint16(this.header.height),e.ioWriter.writeUint32(this.header.denominator),e.ioWriter.writeUint32(this.header.numerator),e.ioWriter.writeUint32(this.header.framesCount),e.ioWriter.writeUint32(0),0}writeAVPacket(e,t){if(!s.f[15](t+28))return void o.R8(`packet's size is 0: ${s.f[15](t+32)}, ignore it`,d,120);const i=e.getStreamByIndex(s.f[15](t+32));if(i){if(0===i.codecpar.codecType){const i=e.getStreamByMediaType(0);i&&(e.ioWriter.writeUint32(s.f[15](t+28)),e.ioWriter.writeUint64((0,n.Mr)(s.f[17](t+8)||s.f[17](t+16),t+72,i.timeBase)),e.ioWriter.writeBuffer((0,a.iI)(t)),this.header.framesCount++)}return 0}o.R8(`can not found the stream width the packet's streamIndex: ${s.f[15](t+32)}, ignore it`,d,127)}writeTrailer(e){return e.ioWriter.seek(BigInt(24)),e.ioWriter.writeUint32(this.header.framesCount),e.ioWriter.flush(),0}flush(e){return e.ioWriter.flush(),0}}}}]);