export declare const accessof = "accessof";
export declare const addressof = "addressof";
export declare const offsetof = "offsetof";
export declare const memcpy = "memcpy";
export declare const sizeof = "sizeof";
export declare const move = "move";
export declare const staticCast = "static_cast";
export declare const assert = "assert";
export declare const indexOf = "indexOf";
export declare const reinterpretCast = "reinterpret_cast";
export declare const sharedPtr = "SharedPtr";
export declare const structAccess = "structAccess";
export declare const writePointer = "writePointer";
export declare const ctypeEnumWrite = "CTypeEnumWrite";
export declare const ctypeEnumRead = "CTypeEnumRead";
export declare const definedMetaProperty = "definedMetaProperty";
export declare const symbolStructAddress = "symbolStructAddress";
export declare const symbolStruct = "symbolStruct";
export declare const symbolStructMaxBaseTypeByteLength = "symbolStructMaxBaseTypeByteLength";
export declare const symbolStructLength = "symbolStructLength";
export declare const symbolStructKeysMeta = "symbolStructKeysMeta";
export declare const createThreadFromClass = "createThreadFromClass";
export declare const createThreadFromFunction = "createThreadFromFunction";
export declare const createThreadFromModule = "createThreadFromModule";
export declare const typeArray = "array";
export declare const typeBit = "bit";
export declare const typePointer = "pointer";
export declare const typeSize = "size";
export declare const typeAnyptr = "anyptr";
export declare const typeNullptr = "nullptr";
export declare const typeMultiPointer = "multiPointer";
export declare const typeUnion = "union";
export declare const typeStruct = "struct";
export declare const defined = "defined";
export declare const args = "args";
export declare const enableArgs = "enableArgs";
export declare const enumPointer = "typeptr";
export declare const tagAsm = "asm";
export declare const tagAsm64 = "asm64";
export declare const prototype = "prototype";
export declare const cstruct = "struct";
export declare const cunion = "union";
export declare const ctype = "type";
export declare const cpointer = "pointer";
export declare const carray = "array";
export declare const cbitField = "bit";
export declare const cignore = "ignore";
export declare const cinline = "inline";
export declare const cdeasync = "deasync";
export declare const make = "make";
export declare const unmake = "unmake";
export declare const malloc = "malloc";
export declare const calloc = "calloc";
export declare const realloc = "realloc";
export declare const alignedAlloc = "aligned_alloc";
export declare const free = "free";
export declare const Allocator = "Allocator";
export declare const makeSharedPtr = "make_shared_ptr";
export declare const makeSharedPtrImportName = "makeSharedPtr";
export declare const smartPointerProperty: string[];
export declare const typeProperty = "zzztype__";
export declare const levelProperty = "zzzlevel__";
export declare const structProperty = "zzzstruct__";
export declare const LINE = "___LINE__";
export declare const LINE_2 = "__LINE__";
export declare const FILE = "___FILE__";
export declare const FILE_2 = "__FILE__";
export declare const MODULE = "___MODULE__";
export declare const MODULE_2 = "__MODULE__";
export declare const importStar = "__importStar";
export declare const importDefault = "__importDefault";
export declare const symbolIsPointer: unique symbol;
export declare let PACKET_NAME: string;
export declare let AllocatorPath: string;
export declare let makePath: string;
export declare let unmakePath: string;
export declare let makeSharedPtrPath: string;
export declare let atomicsPath: string;
export declare let sizeofPath: string;
export declare let definedMetaPropertyPath: string;
export declare let memoryPath: string;
export declare let symbolPath: string;
export declare let structAccessPath: string;
export declare let ctypeEnumReadPath: string;
export declare let ctypeEnumWritePath: string;
export declare let cheapThreadPath: string;
export declare function setPacketName(name: string): void;
